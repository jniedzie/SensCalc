(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    331718,       7199]
NotebookOptionsPosition[    323857,       7054]
NotebookOutlinePosition[    324284,       7071]
CellTagsIndexPosition[    324241,       7068]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Decay acceptance definitions", "Chapter",
 CellChangeTimes->{{3.8913221765123215`*^9, 3.891322205486955*^9}, {
  3.915255633104152*^9, 
  3.915255636481998*^9}},ExpressionUUID->"1eb3b0f6-0e07-4890-a5d1-\
1c90db9dbee7"],

Cell[CellGroupData[{

Cell["A kink in the trajectory due to magnetic field", "Section",
 CellChangeTimes->{{3.889241769668279*^9, 3.889241776377763*^9}, {
  3.889245095340935*^9, 
  3.8892450955208025`*^9}},ExpressionUUID->"96dbd82f-0a35-4aa3-b511-\
15996e84d4aa"],

Cell[CellGroupData[{

Cell["Parameters", "Subsection",
 CellChangeTimes->{{3.916156229020624*^9, 
  3.9161562314142723`*^9}},ExpressionUUID->"44ec6fe0-7a2d-4acd-acdb-\
c238b14dda66"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"electric", " ", "charge", " ", "in", " ", "SI", " ", "units"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"qValSI", "=", 
     RowBox[{"1.6", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "19"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Magnetic", " ", "field", " ", "in", " ", "SI", " ", "units"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BvalFCCee", "=", "1"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Electron", " ", "mass", " ", "in", " ", "SI", " ", "units"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mekG", "=", 
     RowBox[{"9.1", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "31"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"m\[Mu]kG", "=", 
     RowBox[{
      FractionBox["105", 
       RowBox[{"0.5", "*", 
        SuperscriptBox["10", 
         RowBox[{"-", "3"}]]}]], "9.1", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "31"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hbar", "=", 
     RowBox[{"6.58", "*", 
      SuperscriptBox["10", 
       RowBox[{"-", "25"}]]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cval", "=", 
     RowBox[{"3", "*", 
      SuperscriptBox["10", "8"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"1", " ", "kg", " ", "in", " ", "terms", " ", "of", " ", 
     RowBox[{"GeV", ".", " ", "Converted"}], " ", "using", " ", "the", " ", 
     "electron", " ", "mass", " ", "in", " ", "GeV", " ", "and", " ", "in", 
     " ", "kg"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kgToGeVval", "=", 
     FractionBox[
      RowBox[{"0.5", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "3"}]]}], 
      RowBox[{"9.1", "*", 
       SuperscriptBox["10", 
        RowBox[{"-", "31"}]]}]]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GeVTokgVal", "=", 
     SuperscriptBox["kgToGeVval", 
      RowBox[{"-", "1"}]]}], ";"}]}]}]], "Input",
 CellLabel->"In[1]:=",ExpressionUUID->"8a554a8e-8b3d-47e5-8dd9-76789e1ee703"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Constant magnetic field", "Subsection",
 CellChangeTimes->{{3.8891723271521983`*^9, 
  3.88917232970436*^9}},ExpressionUUID->"b18d3506-b902-4912-8700-\
312321f50381"],

Cell[CellGroupData[{

Cell["Exact expressions", "Subsubsection",
 CellChangeTimes->{{3.898699158303877*^9, 
  3.89869916081772*^9}},ExpressionUUID->"b73e8351-1f80-424d-bf0e-\
03e8d597a1e0"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Velocities", " ", "in", " ", "SI", " ", "in", " ", "terms", " ", "of", 
     " ", "p"}], ",", " ", 
    RowBox[{"E", " ", "in", " ", "GeV"}], ",", " ", 
    RowBox[{"and", " ", "speed", " ", "of", " ", "light"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"vxEnergy", "=", 
     RowBox[{"c", "*", 
      FractionBox["pxGeV", "EGeV"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vyEnergy", "=", 
     RowBox[{"c", "*", 
      FractionBox["pyGeV", "EGeV"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vzEnergy", "=", 
     RowBox[{"c", "*", 
      FractionBox["pzGeV", "EGeV"]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Gamma]Energy", "=", 
     FractionBox["EGeV", "mGeV"]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"EOMs", " ", "\[Gamma]", " ", 
       FractionBox[
        RowBox[{"d", 
         OverscriptBox["v", "_"]}], "dt"]}], " ", "=", " ", 
      RowBox[{"q", "[", 
       RowBox[{
        OverscriptBox["v", "_"], "\[Times]", 
        OverscriptBox["B", "_"]}], "]"}]}], ",", " ", 
     RowBox[{"where", " ", 
      OverscriptBox["B", "_"], " ", "is", " ", "assumed", " ", "to", " ", 
      "be", " ", "located", " ", "along", " ", "the", " ", "y", " ", "axis", 
      " ", "in", " ", "the", " ", "positive", " ", 
      RowBox[{"direction", ".", " ", "All"}], " ", "the", " ", "quantities", 
      " ", "entering", " ", "the", " ", "EOM", " ", "are", " ", "in", " ", 
      "SI", " ", "units"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"EQsHelicalTrajectory", "=", 
     RowBox[{
      RowBox[{"DSolve", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"x", "''"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"m", "*", "\[Gamma]"}]], "q", "*", 
            RowBox[{
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"y", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"z", "'"}], "[", "t", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "B", ",", "0"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "''"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["1", 
             RowBox[{"m", "*", "\[Gamma]"}]], "q", "*", 
            RowBox[{
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"y", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"z", "'"}], "[", "t", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "B", ",", "0"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "''"}], "[", "t", "]"}], "\[Equal]", 
           RowBox[{
            FractionBox["q", 
             RowBox[{"m", "*", "\[Gamma]"}]], "*", 
            RowBox[{
             RowBox[{"Cross", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"x", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"y", "'"}], "[", "t", "]"}], ",", 
                 RowBox[{
                  RowBox[{"z", "'"}], "[", "t", "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", "B", ",", "0"}], "}"}]}], "]"}], "[", 
             RowBox[{"[", "3", "]"}], "]"}]}]}], ",", 
          RowBox[{
           RowBox[{"x", "[", "0", "]"}], "\[Equal]", "x0"}], ",", 
          RowBox[{
           RowBox[{"y", "[", "0", "]"}], "\[Equal]", "y0"}], ",", 
          RowBox[{
           RowBox[{"z", "[", "0", "]"}], "\[Equal]", "z0"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"x", "'"}], "[", "0", "]"}], "\[Equal]", "vx"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"y", "'"}], "[", "0", "]"}], "\[Equal]", "vy"}], ",", 
          RowBox[{
           RowBox[{
            RowBox[{"z", "'"}], "[", "0", "]"}], "\[Equal]", "vz"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", "t"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<Helical trajectories - x, y, z. Here, \!\(\*SubscriptBox[\(p\), \
\(i\)]\) in the units of GeV:\>\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"xHelicalTemp1", "[", 
       RowBox[{
       "x0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "EGeV_", ",", "BTl_", ",", 
        "qCoulomb_", ",", "tsecond_", ",", "GeVTokg_"}], "]"}], ",", 
      RowBox[{"yHelicalTemp1", "[", 
       RowBox[{"y0m_", ",", "pyGeV_", ",", "EGeV_", ",", "tsecond_"}], "]"}], 
      ",", 
      RowBox[{"zHelicalTemp1", "[", 
       RowBox[{
       "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "EGeV_", ",", "BTl_", ",", 
        "qCoulomb_", ",", "tsecond_", ",", "GeVTokg_"}], "]"}]}], "}"}], "=", 
    
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"x", "[", "t", "]"}], "/.", "EQsHelicalTrajectory"}], ")"}], 
       ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"y", "[", "t", "]"}], "/.", "EQsHelicalTrajectory"}], ")"}], 
       ",", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"z", "[", "t", "]"}], "/.", "EQsHelicalTrajectory"}], 
        ")"}]}], "}"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"vx", "\[Rule]", "vxEnergy"}], ",", 
       RowBox[{"vy", "\[Rule]", "vyEnergy"}], ",", 
       RowBox[{"vz", "\[Rule]", "vzEnergy"}], ",", 
       RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]Energy"}], ",", 
       RowBox[{"m", "\[Rule]", " ", 
        RowBox[{"mGeV", "*", "GeVTokg"}]}], ",", 
       RowBox[{"B", "\[Rule]", "BTl"}], ",", 
       RowBox[{"q", "\[Rule]", "qCoulomb"}], ",", 
       RowBox[{"x0", "\[Rule]", "x0m"}], ",", 
       RowBox[{"t", "\[Rule]", "tsecond"}]}], "}"}]}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<Velocities dx/dt, dy/dt, dz/dt:\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"vxHelicalTemp1", "[", 
       RowBox[{
       "pxGeV_", ",", "pzGeV_", ",", "EGeV_", ",", "BTl_", ",", "qCoulomb_", 
        ",", "tsecond_", ",", "GeVTokg_"}], "]"}], ",", 
      RowBox[{"vyHelicalTemp1", "[", 
       RowBox[{"pyGeV_", ",", "EGeV_"}], "]"}], ",", 
      RowBox[{"vzHelicalTemp1", "[", 
       RowBox[{
       "pxGeV_", ",", "pzGeV_", ",", "EGeV_", ",", "BTl_", ",", "qCoulomb_", 
        ",", "tsecond_", ",", "GeVTokg_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"xHelicalTemp1", "[", 
          RowBox[{
          "x0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
           "qCoulomb", ",", "tsecond", ",", "GeVTokg"}], "]"}], ",", 
         "tsecond"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"yHelicalTemp1", "[", 
          RowBox[{"y0m", ",", "pyGeV", ",", "EGeV", ",", "tsecond"}], "]"}], 
         ",", "tsecond"}], "]"}], ",", 
       RowBox[{"D", "[", 
        RowBox[{
         RowBox[{"zHelicalTemp1", "[", 
          RowBox[{
          "z0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
           "qCoulomb", ",", "tsecond", ",", "GeVTokg"}], "]"}], ",", 
         "tsecond"}], "]"}]}], "}"}], "//", "Simplify"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<Momenta \!\(\*SubscriptBox[\(p\), \(i\)]\)(t) = E \
\!\(\*SubscriptBox[\(v\), \(i\)]\)(t)/\!\(\*SuperscriptBox[\(c\), \(2\)]\):\>\
\"", "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"pxHelicalTemp1", "[", 
       RowBox[{
       "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qCoulomb_", ",", 
        "tsecond_", ",", "GeVTokg_"}], "]"}], ",", 
      RowBox[{"pyHelicalTemp1", "[", "pyGeV_", "]"}], ",", 
      RowBox[{"pzHelicalTemp1", "[", 
       RowBox[{
       "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qCoulomb_", ",", 
        "tsecond_", ",", "GeVTokg_"}], "]"}]}], "}"}], "=", 
    RowBox[{
     RowBox[{
      FractionBox["EGeV", "c"], 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"vxHelicalTemp1", "[", 
         RowBox[{
         "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", "qCoulomb", ",",
           "tsecond", ",", "GeVTokg"}], "]"}], ",", 
        RowBox[{"vyHelicalTemp1", "[", 
         RowBox[{"pyGeV", ",", "EGeV"}], "]"}], ",", 
        RowBox[{"vzHelicalTemp1", "[", 
         RowBox[{
         "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", "qCoulomb", ",",
           "tsecond", ",", "GeVTokg"}], "]"}]}], "}"}]}], "//", 
     "Simplify"}]}], "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<Cross-check: \!\(\*SuperscriptBox[OverscriptBox[\(v\), \(_\)], \
\(2\)]\)(t) = \!\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \(x\)]\)(t)+\!\
\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \
\(y\)]\)(t)+\!\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \(z\)]\)(t) is \
equal to \!\(\*SuperscriptBox[\(v\), \(2\)]\)(t = 0) = \
\!\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \(x, \
0\)]\)+\!\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \(y, \
0\)]\)+\!\(\*SubscriptBox[SuperscriptBox[\(v\), \(2\)], \(z, 0\)]\) = \
\!\(\*SuperscriptBox[\(c\), \(2\)]\)\!\(\*SuperscriptBox[OverscriptBox[\(p\), \
\(_\)], \(2\)]\)/\!\(\*SuperscriptBox[\(E\), \(2\)]\)\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
      SuperscriptBox[
       RowBox[{"vxHelicalTemp1", "[", 
        RowBox[{
        "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", "qCoulomb", ",", 
         "tsecond", ",", "GeVTokg"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"vyHelicalTemp1", "[", 
        RowBox[{"pyGeV", ",", "EGeV"}], "]"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"vzHelicalTemp1", "[", 
        RowBox[{
        "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", "qCoulomb", ",", 
         "tsecond", ",", "GeVTokg"}], "]"}], "2"]}], "//", "Expand"}], "//", 
    "Simplify"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Therefore", ",", " ", 
     RowBox[{
     "after", " ", "passing", " ", "the", " ", "domain", " ", "with", " ", 
      "the", " ", "magnetic", " ", "field"}], ",", " ", 
     RowBox[{"the", " ", "new", " ", 
      SubscriptBox[
       RowBox[{"p", "'"}], "x"]}], ",", 
     RowBox[{
      RowBox[{
       SubscriptBox[
        RowBox[{"p", "'"}], "z"], " ", "are", " ", 
       SubscriptBox[
        RowBox[{"p", "'"}], "x"]}], " ", "=", " ", 
      RowBox[{
       SubscriptBox["p", 
        RowBox[{"x", ",", "0"}]], "\[Times]", 
       FractionBox[
        RowBox[{
         SubscriptBox["v", "x"], 
         RowBox[{"(", 
          SubscriptBox["t", "passing"], ")"}]}], 
        SubscriptBox["v", 
         RowBox[{"x", ",", "0"}]]]}]}], ",", " ", 
     RowBox[{
      SubscriptBox[
       RowBox[{"p", "'"}], "z"], " ", "=", " ", 
      RowBox[{
       SubscriptBox["p", 
        RowBox[{"z", ",", "0"}]], "\[Times]", 
       FractionBox[
        RowBox[{
         SubscriptBox["v", "z"], 
         RowBox[{"(", 
          SubscriptBox["t", "passing"], ")"}]}], 
        SubscriptBox["v", 
         RowBox[{"z", ",", "0"}]]]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Approximate", " ", "value", " ", "of", " ", "the", " ", "period", " ", 
     "of", " ", "time", " ", "for", " ", "which", " ", "the", " ", "charged", 
     " ", "particle", " ", "passes", " ", "through", " ", "the", " ", 
     "domain", " ", "with", " ", "magnetic", " ", 
     RowBox[{"field", ".", " ", "It"}], " ", "is", " ", "estimated", " ", 
     "roughly", " ", "assuming", " ", "that", " ", "the", " ", "momentum", 
     " ", 
     SubscriptBox["p", "z"], " ", "is", " ", "left", " ", "unchanged"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"tz0", "[", 
      RowBox[{
      "zprojm_", ",", "z0m_", ",", "c_", ",", "pzGeV_", ",", "EGeV_"}], "]"}],
      "=", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"t", "/.", 
        RowBox[{
         RowBox[{"Solve", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"zHelicalTemp1", "[", 
             RowBox[{
             "z0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
              "qCoulomb", ",", "t", ",", "GeVTokg"}], "]"}], "\[Equal]", 
            "zproj"}], ",", "t"}], "]"}], "[", 
         RowBox[{"[", "1", "]"}], "]"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{
         TemplateBox[{"1"},
          "C"], "\[Rule]", "0"}], "}"}]}], "*)"}], 
     RowBox[{"t", "/.", 
      RowBox[{
       RowBox[{"Solve", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"z0m", "+", 
           RowBox[{"vzEnergy", "*", "t"}]}], "==", "zprojm"}], ",", "t"}], 
        "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Helical", " ", "trajectories", " ", 
      RowBox[{"x", "[", 
       SubscriptBox["t", 
        RowBox[{"z", " ", "=", " ", "0"}]], "]"}]}], ",", " ", 
     RowBox[{
      RowBox[{"y", "[", 
       SubscriptBox["t", 
        RowBox[{"z", " ", "=", " ", "0"}]], "]"}], "."}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xHelicalTemp2", "[", 
      RowBox[{
      "x0m_", ",", "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", 
       "qsign_", ",", "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"xHelicalTemp1", "[", 
       RowBox[{
       "x0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
        "qCoulomb", ",", 
        RowBox[{"tz0", "[", 
         RowBox[{"zprojm", ",", "z0m", ",", "c", ",", "pzGeV", ",", "EGeV"}], 
         "]"}], ",", "GeVTokg"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "\[Rule]", "cval"}], ",", 
        RowBox[{"qCoulomb", "\[Rule]", " ", 
         RowBox[{"qValSI", "*", "qsign"}]}], ",", 
        RowBox[{"GeVTokg", "\[Rule]", "GeVTokgVal"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yHelicalTemp2", "[", 
      RowBox[{
      "y0m_", ",", "z0m_", ",", "pyGeV_", ",", "pzGeV_", ",", "zprojm_"}], 
      "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"yHelicalTemp1", "[", 
        RowBox[{"y0m", ",", "pyGeV", ",", "EGeV", ",", 
         RowBox[{"tz0", "[", 
          RowBox[{"zprojm", ",", "z0m", ",", "c", ",", "pzGeV", ",", "EGeV"}],
           "]"}]}], "]"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"m", "\[Rule]", "mlkg"}], ",", 
         RowBox[{"\[Gamma]", "\[Rule]", "\[Gamma]Energy"}], ",", 
         RowBox[{"vz", "\[Rule]", "vzEnergy"}], ",", 
         RowBox[{"vx", "\[Rule]", "vxEnergy"}], ",", 
         RowBox[{"vy", "\[Rule]", "vyEnergy"}]}], "}"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "\[Rule]", "cval"}], ",", 
        RowBox[{"qCoulomb", "\[Rule]", " ", 
         RowBox[{"qValSI", "*", "qsign"}]}], ",", 
        RowBox[{"GeVTokg", "\[Rule]", "GeVTokgVal"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zHelicalTemp2", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"zHelicalTemp1", "[", 
       RowBox[{
       "z0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
        "qCoulomb", ",", 
        RowBox[{"tz0", "[", 
         RowBox[{"zprojm", ",", "z0m", ",", "c", ",", "pzGeV", ",", "EGeV"}], 
         "]"}], ",", "GeVTokg"}], "]"}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"c", "\[Rule]", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", "8"]}]}], ",", 
        RowBox[{"qCoulomb", "\[Rule]", " ", 
         RowBox[{"qValSI", "*", "qsign"}]}], ",", 
        RowBox[{"GeVTokg", "\[Rule]", "GeVTokgVal"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pxHelicalTemp2", "[", 
        RowBox[{
        "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",",
          "zprojm_"}], "]"}], ",", 
       RowBox[{"pyHelicalTemp2", "[", "pyGeV_", "]"}], ",", 
       RowBox[{"pzHelicalTemp2", "[", 
        RowBox[{
        "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",",
          "zprojm_"}], "]"}]}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"pxHelicalTemp1", "[", 
          RowBox[{"pxGeV", ",", "pzGeV", ",", "BTl", ",", "qCoulomb", ",", 
           RowBox[{"tz0", "[", 
            RowBox[{
            "zprojm", ",", "z0m", ",", "c", ",", "pzGeV", ",", "EGeV"}], 
            "]"}], ",", "GeVTokg"}], "]"}], ",", 
         RowBox[{"pyHelicalTemp1", "[", "pyGeV", "]"}], ",", 
         RowBox[{"pzHelicalTemp1", "[", 
          RowBox[{"pxGeV", ",", "pzGeV", ",", "BTl", ",", "qCoulomb", ",", 
           RowBox[{"tz0", "[", 
            RowBox[{
            "zprojm", ",", "z0m", ",", "c", ",", "pzGeV", ",", "EGeV"}], 
            "]"}], ",", "GeVTokg"}], "]"}]}], "}"}], "/.", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"c", "\[Rule]", "cval"}], ",", 
         RowBox[{"qCoulomb", "\[Rule]", " ", 
          RowBox[{"qValSI", "*", "qsign"}]}], ",", 
         RowBox[{"GeVTokg", "\[Rule]", "GeVTokgVal"}]}], "}"}]}], "//", 
      "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"Print", "[", "\"\<Larmor radius (in m):\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"LarmorRadius", "[", 
     RowBox[{"EGeV_", ",", "BTl_"}], "]"}], "=", 
    RowBox[{"cval", "*", 
     FractionBox[
      RowBox[{"EGeV", "*", "GeVTokgVal"}], 
      RowBox[{"qValSI", "*", "BTl"}]]}]}]}]}]], "Input",
 CellChangeTimes->{{3.8891715835639944`*^9, 3.889171607572118*^9}, {
   3.889171670846001*^9, 3.8891716996685534`*^9}, {3.889171730927663*^9, 
   3.889171802565109*^9}, {3.8891718552539015`*^9, 3.889171936952908*^9}, {
   3.8891720111828213`*^9, 3.88917201131074*^9}, {3.8891721699050612`*^9, 
   3.8891721757644434`*^9}, {3.889174147055462*^9, 3.889174160006665*^9}, {
   3.8891958521046643`*^9, 3.889195852246864*^9}, {3.889196202645465*^9, 
   3.889196237599688*^9}, {3.889196312120278*^9, 3.8891963141583824`*^9}, {
   3.88919688391845*^9, 3.889196923198343*^9}, {3.889196971720621*^9, 
   3.889196973527601*^9}, {3.8891970264289846`*^9, 3.889197089936922*^9}, {
   3.889197123724253*^9, 3.88919712488072*^9}, {3.889197347990362*^9, 
   3.889197364329043*^9}, {3.88919926025797*^9, 3.8891992911784053`*^9}, {
   3.8891993830334735`*^9, 3.889199383419773*^9}, {3.8891995274596653`*^9, 
   3.889199527598759*^9}, {3.889199965458976*^9, 3.8892000128043385`*^9}, {
   3.889200051029212*^9, 3.8892001179983997`*^9}, {3.889200558271455*^9, 
   3.8892005655297513`*^9}, {3.889200723395628*^9, 3.8892007266926556`*^9}, {
   3.889201692567236*^9, 3.889201704299495*^9}, {3.889201997677557*^9, 
   3.8892020059634314`*^9}, {3.889203858706788*^9, 3.889204001096776*^9}, {
   3.889204035386567*^9, 3.889204263742028*^9}, {3.889204308183233*^9, 
   3.889204391264265*^9}, {3.889204531648478*^9, 3.889204689106662*^9}, {
   3.889205063491404*^9, 3.889205170202397*^9}, {3.889205767703347*^9, 
   3.889206122210547*^9}, {3.889206164490395*^9, 3.889206164856732*^9}, {
   3.889206222470356*^9, 3.889206222570804*^9}, {3.889206285420225*^9, 
   3.889206490520496*^9}, {3.889206595121992*^9, 3.8892067009458857`*^9}, {
   3.8892067476541643`*^9, 3.889206777321812*^9}, 3.889206968504375*^9, {
   3.8892418443893285`*^9, 3.889241942034682*^9}, {3.889242604413707*^9, 
   3.8892426111403365`*^9}, {3.889242724647041*^9, 3.8892428336617975`*^9}, {
   3.889242935829185*^9, 3.889242951669109*^9}, {3.889242986187631*^9, 
   3.889243028970298*^9}, {3.889244735048849*^9, 3.88924488469344*^9}, 
   3.889244933960964*^9, {3.889244966522671*^9, 3.889245031297429*^9}, {
   3.88924510809839*^9, 3.889245155339543*^9}, {3.889245198863324*^9, 
   3.889245277568147*^9}, {3.889245346682953*^9, 3.889245375548482*^9}, {
   3.889245434706152*^9, 3.8892454400324965`*^9}, {3.889245562969037*^9, 
   3.88924558319756*^9}, {3.8892457231983666`*^9, 3.8892457268208*^9}, {
   3.889246243994595*^9, 3.889246326384137*^9}, {3.889246363667035*^9, 
   3.8892464030715723`*^9}, {3.889255024952756*^9, 3.889255122544706*^9}, {
   3.889263922692747*^9, 3.889263945082261*^9}, {3.889263975644345*^9, 
   3.8892640303101287`*^9}, 3.896928392202255*^9, {3.898699281483991*^9, 
   3.8986992942793465`*^9}, {3.898699337954791*^9, 3.898699338542406*^9}, {
   3.904962336658754*^9, 3.904962336968701*^9}, {3.9112843536969843`*^9, 
   3.911284357714019*^9}, {3.911284636577899*^9, 3.91128481315558*^9}, {
   3.911286451920749*^9, 3.911286452740077*^9}, {3.911287015036559*^9, 
   3.911287021036378*^9}, {3.911287097132141*^9, 3.9112870973086987`*^9}, {
   3.9112872001496377`*^9, 3.911287202871893*^9}, {3.9112872852329645`*^9, 
   3.911287321735216*^9}, {3.9112895845189333`*^9, 3.911289594206548*^9}, {
   3.91128965891726*^9, 3.911289659966033*^9}},
 CellLabel->"In[9]:=",ExpressionUUID->"faf62253-07dc-4cd6-965a-350d54a5650d"],

Cell[BoxData[
 FormBox["\<\"Helical trajectories - x, y, z. Here, \
\\!\\(\\*SubscriptBox[\\(p\\), \\(i\\)]\\) in the units of GeV:\"\>", 
  TraditionalForm]], "Print",
 CellChangeTimes->{3.915638592314489*^9, 3.915639459955377*^9, 
  3.915640301443778*^9, 3.915641482126387*^9, 3.91564169456841*^9, 
  3.915681161169697*^9, 3.915681505948893*^9, 3.915685657983249*^9, 
  3.915769882969709*^9, 3.915770991728034*^9, 3.9157813490046716`*^9, 
  3.915781594422082*^9, 3.915787353587736*^9, 3.915814752427195*^9, 
  3.9158551909562817`*^9, 3.915857386314797*^9, 3.915857652409523*^9, 
  3.9158591308477073`*^9, 3.9158631081490493`*^9, 3.915865421117629*^9, 
  3.9158674312847595`*^9, 3.91587876872263*^9, 3.916126389956264*^9, 
  3.916128229148564*^9, 3.919966116194794*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"f5a530ed-83c0-4ec3-88ad-5ff6f658f85a"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{"c", " ", "GeVTokg", " ", "pxGeV", " ", 
       RowBox[{"sin", "(", 
        FractionBox[
         RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
         RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "+", 
      RowBox[{"c", " ", "GeVTokg", " ", "pzGeV", " ", 
       RowBox[{"cos", "(", 
        FractionBox[
         RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
         RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "+", 
      RowBox[{"BTl", " ", "qCoulomb", " ", "x0m"}], "-", 
      RowBox[{"c", " ", "GeVTokg", " ", "pzGeV"}]}], 
     RowBox[{"BTl", " ", "qCoulomb"}]], ",", 
    RowBox[{
     FractionBox[
      RowBox[{"c", " ", "pyGeV", " ", "tsecond"}], "EGeV"], "+", "y0"}], ",", 
    
    FractionBox[
     RowBox[{
      RowBox[{"-", 
       RowBox[{"c", " ", "GeVTokg", " ", "pxGeV", " ", 
        RowBox[{"cos", "(", 
         FractionBox[
          RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
          RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}]}], "+", 
      RowBox[{"c", " ", "GeVTokg", " ", "pzGeV", " ", 
       RowBox[{"sin", "(", 
        FractionBox[
         RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
         RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "+", 
      RowBox[{"BTl", " ", "qCoulomb", " ", "z0"}], "+", 
      RowBox[{"c", " ", "GeVTokg", " ", "pxGeV"}]}], 
     RowBox[{"BTl", " ", "qCoulomb"}]]}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.915638592354681*^9, 3.915639459996205*^9, 
  3.91564030148531*^9, 3.915641482164633*^9, 3.915641694609391*^9, 
  3.915681161211653*^9, 3.915681505964819*^9, 3.915685657999922*^9, 
  3.915769882981709*^9, 3.915770991744034*^9, 3.915781349016618*^9, 
  3.915781594457988*^9, 3.915787353594746*^9, 3.9158147524590297`*^9, 
  3.9158551909875226`*^9, 3.915857386346075*^9, 3.915857652442351*^9, 
  3.915859130878953*^9, 3.915863108164671*^9, 3.915865421124984*^9, 
  3.915867431316414*^9, 3.915878768769888*^9, 3.916126389974609*^9, 
  3.91612822915064*^9, 3.9199661162063217`*^9},
 CellLabel->
  "Out[1135]=",ExpressionUUID->"66c4df96-9913-49e3-86f5-1b15b5d4f075"],

Cell[BoxData[
 FormBox["\<\"Velocities dx/dt, dy/dt, dz/dt:\"\>", TraditionalForm]], "Print",\

 CellChangeTimes->{3.915638592314489*^9, 3.915639459955377*^9, 
  3.915640301443778*^9, 3.915641482126387*^9, 3.91564169456841*^9, 
  3.915681161169697*^9, 3.915681505948893*^9, 3.915685657983249*^9, 
  3.915769882969709*^9, 3.915770991728034*^9, 3.9157813490046716`*^9, 
  3.915781594422082*^9, 3.915787353587736*^9, 3.915814752427195*^9, 
  3.9158551909562817`*^9, 3.915857386314797*^9, 3.915857652409523*^9, 
  3.9158591308477073`*^9, 3.9158631081490493`*^9, 3.915865421117629*^9, 
  3.9158674312847595`*^9, 3.91587876872263*^9, 3.916126389956264*^9, 
  3.916128229148564*^9, 3.9199661162098246`*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"2fbe2af3-dbf1-4ee4-bc57-fefddc36f493"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pxGeV", " ", 
         RowBox[{"cos", "(", 
          FractionBox[
           RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
           RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "-", 
        RowBox[{"pzGeV", " ", 
         RowBox[{"sin", "(", 
          FractionBox[
           RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
           RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}]}], ")"}]}], "EGeV"], 
    ",", 
    FractionBox[
     RowBox[{"c", " ", "pyGeV"}], "EGeV"], ",", 
    FractionBox[
     RowBox[{"c", " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"pxGeV", " ", 
         RowBox[{"sin", "(", 
          FractionBox[
           RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
           RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "+", 
        RowBox[{"pzGeV", " ", 
         RowBox[{"cos", "(", 
          FractionBox[
           RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
           RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}]}], ")"}]}], "EGeV"]}], 
   "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.915638592354681*^9, 3.915639459996205*^9, 
  3.91564030148531*^9, 3.915641482164633*^9, 3.915641694609391*^9, 
  3.915681161211653*^9, 3.915681505964819*^9, 3.915685657999922*^9, 
  3.915769882981709*^9, 3.915770991744034*^9, 3.915781349016618*^9, 
  3.915781594457988*^9, 3.915787353594746*^9, 3.9158147524590297`*^9, 
  3.9158551909875226`*^9, 3.915857386346075*^9, 3.915857652442351*^9, 
  3.915859130878953*^9, 3.915863108164671*^9, 3.915865421124984*^9, 
  3.915867431316414*^9, 3.915878768769888*^9, 3.916126389974609*^9, 
  3.91612822915064*^9, 3.9199661162359023`*^9},
 CellLabel->
  "Out[1137]=",ExpressionUUID->"6099ad26-0092-4c5f-8d82-976c0109688b"],

Cell[BoxData[
 FormBox["\<\"Momenta \\!\\(\\*SubscriptBox[\\(p\\), \\(i\\)]\\)(t) = E \
\\!\\(\\*SubscriptBox[\\(v\\), \
\\(i\\)]\\)(t)/\\!\\(\\*SuperscriptBox[\\(c\\), \\(2\\)]\\):\"\>", 
  TraditionalForm]], "Print",
 CellChangeTimes->{3.915638592314489*^9, 3.915639459955377*^9, 
  3.915640301443778*^9, 3.915641482126387*^9, 3.91564169456841*^9, 
  3.915681161169697*^9, 3.915681505948893*^9, 3.915685657983249*^9, 
  3.915769882969709*^9, 3.915770991728034*^9, 3.9157813490046716`*^9, 
  3.915781594422082*^9, 3.915787353587736*^9, 3.915814752427195*^9, 
  3.9158551909562817`*^9, 3.915857386314797*^9, 3.915857652409523*^9, 
  3.9158591308477073`*^9, 3.9158631081490493`*^9, 3.915865421117629*^9, 
  3.9158674312847595`*^9, 3.91587876872263*^9, 3.916126389956264*^9, 
  3.916128229148564*^9, 3.919966116240926*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"4f67dd63-be0b-4e01-90d1-630adde6440c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     RowBox[{"pxGeV", " ", 
      RowBox[{"cos", "(", 
       FractionBox[
        RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
        RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "-", 
     RowBox[{"pzGeV", " ", 
      RowBox[{"sin", "(", 
       FractionBox[
        RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
        RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}]}], ",", "pyGeV", ",", 
    RowBox[{
     RowBox[{"pxGeV", " ", 
      RowBox[{"sin", "(", 
       FractionBox[
        RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
        RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}], "+", 
     RowBox[{"pzGeV", " ", 
      RowBox[{"cos", "(", 
       FractionBox[
        RowBox[{"BTl", " ", "qCoulomb", " ", "tsecond"}], 
        RowBox[{"EGeV", " ", "GeVTokg"}]], ")"}]}]}]}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.915638592354681*^9, 3.915639459996205*^9, 
  3.91564030148531*^9, 3.915641482164633*^9, 3.915641694609391*^9, 
  3.915681161211653*^9, 3.915681505964819*^9, 3.915685657999922*^9, 
  3.915769882981709*^9, 3.915770991744034*^9, 3.915781349016618*^9, 
  3.915781594457988*^9, 3.915787353594746*^9, 3.9158147524590297`*^9, 
  3.9158551909875226`*^9, 3.915857386346075*^9, 3.915857652442351*^9, 
  3.915859130878953*^9, 3.915863108164671*^9, 3.915865421124984*^9, 
  3.915867431316414*^9, 3.915878768769888*^9, 3.916126389974609*^9, 
  3.91612822915064*^9, 3.919966116243931*^9},
 CellLabel->
  "Out[1139]=",ExpressionUUID->"7b18f71d-072c-435a-bbf8-aed5ca29462c"],

Cell[BoxData[
 FormBox["\<\"Cross-check: \\!\\(\\*SuperscriptBox[OverscriptBox[\\(v\\), \
\\(_\\)], \\(2\\)]\\)(t) = \\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\
\\)], \\(x\\)]\\)(t)+\\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\\)], \
\\(y\\)]\\)(t)+\\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\\)], \
\\(z\\)]\\)(t) is equal to \\!\\(\\*SuperscriptBox[\\(v\\), \\(2\\)]\\)(t = \
0) = \\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\\)], \\(x, \
0\\)]\\)+\\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\\)], \\(y, \
0\\)]\\)+\\!\\(\\*SubscriptBox[SuperscriptBox[\\(v\\), \\(2\\)], \\(z, \
0\\)]\\) = \\!\\(\\*SuperscriptBox[\\(c\\), \
\\(2\\)]\\)\\!\\(\\*SuperscriptBox[OverscriptBox[\\(p\\), \\(_\\)], \
\\(2\\)]\\)/\\!\\(\\*SuperscriptBox[\\(E\\), \\(2\\)]\\)\"\>", 
  TraditionalForm]], "Print",
 CellChangeTimes->{3.915638592314489*^9, 3.915639459955377*^9, 
  3.915640301443778*^9, 3.915641482126387*^9, 3.91564169456841*^9, 
  3.915681161169697*^9, 3.915681505948893*^9, 3.915685657983249*^9, 
  3.915769882969709*^9, 3.915770991728034*^9, 3.9157813490046716`*^9, 
  3.915781594422082*^9, 3.915787353587736*^9, 3.915814752427195*^9, 
  3.9158551909562817`*^9, 3.915857386314797*^9, 3.915857652409523*^9, 
  3.9158591308477073`*^9, 3.9158631081490493`*^9, 3.915865421117629*^9, 
  3.9158674312847595`*^9, 3.91587876872263*^9, 3.916126389956264*^9, 
  3.916128229148564*^9, 3.919966116245931*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"cb8a91d9-568b-4625-8c53-cfc12eb51630"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{
    SuperscriptBox["c", "2"], " ", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["pxGeV", "2"], "+", 
      SuperscriptBox["pyGeV", "2"], "+", 
      SuperscriptBox["pzGeV", "2"]}], ")"}]}], 
   SuperscriptBox["EGeV", "2"]], TraditionalForm]], "Output",
 CellChangeTimes->{3.915638592354681*^9, 3.915639459996205*^9, 
  3.91564030148531*^9, 3.915641482164633*^9, 3.915641694609391*^9, 
  3.915681161211653*^9, 3.915681505964819*^9, 3.915685657999922*^9, 
  3.915769882981709*^9, 3.915770991744034*^9, 3.915781349016618*^9, 
  3.915781594457988*^9, 3.915787353594746*^9, 3.9158147524590297`*^9, 
  3.9158551909875226`*^9, 3.915857386346075*^9, 3.915857652442351*^9, 
  3.915859130878953*^9, 3.915863108164671*^9, 3.915865421124984*^9, 
  3.915867431316414*^9, 3.915878768769888*^9, 3.916126389974609*^9, 
  3.91612822915064*^9, 3.919966116249436*^9},
 CellLabel->
  "Out[1141]=",ExpressionUUID->"878eeddf-c942-4a2d-8635-396ab196873a"],

Cell[BoxData[
 FormBox["\<\"Larmor radius (in m):\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.915638592314489*^9, 3.915639459955377*^9, 
  3.915640301443778*^9, 3.915641482126387*^9, 3.91564169456841*^9, 
  3.915681161169697*^9, 3.915681505948893*^9, 3.915685657983249*^9, 
  3.915769882969709*^9, 3.915770991728034*^9, 3.9157813490046716`*^9, 
  3.915781594422082*^9, 3.915787353587736*^9, 3.915814752427195*^9, 
  3.9158551909562817`*^9, 3.915857386314797*^9, 3.915857652409523*^9, 
  3.9158591308477073`*^9, 3.9158631081490493`*^9, 3.915865421117629*^9, 
  3.9158674312847595`*^9, 3.91587876872263*^9, 3.916126389956264*^9, 
  3.916128229148564*^9, 3.9199661162614913`*^9},
 CellLabel->
  "During evaluation of \
In[1129]:=",ExpressionUUID->"8041e764-b741-441c-aae0-afaec27f6244"],

Cell[BoxData[
 FormBox[
  FractionBox[
   RowBox[{"3.4124999999999996`", " ", "EGeV"}], "BTl"], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.915638592354681*^9, 3.915639459996205*^9, 
  3.91564030148531*^9, 3.915641482164633*^9, 3.915641694609391*^9, 
  3.915681161211653*^9, 3.915681505964819*^9, 3.915685657999922*^9, 
  3.915769882981709*^9, 3.915770991744034*^9, 3.915781349016618*^9, 
  3.915781594457988*^9, 3.915787353594746*^9, 3.9158147524590297`*^9, 
  3.9158551909875226`*^9, 3.915857386346075*^9, 3.915857652442351*^9, 
  3.915859130878953*^9, 3.915863108164671*^9, 3.915865421124984*^9, 
  3.915867431316414*^9, 3.915878768769888*^9, 3.916126389974609*^9, 
  3.91612822915064*^9, 3.919966116263497*^9},
 CellLabel->
  "Out[1148]=",ExpressionUUID->"5391656b-b885-4183-84ce-d8534280fdde"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Approx expressions", "Subsubsection",
 CellChangeTimes->{{3.898699204110855*^9, 
  3.898699206168812*^9}},ExpressionUUID->"9cc4e6f8-589a-479d-9563-\
a1fc4ab560b9"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "minimal", " ", "value", " ", "of", " ", "momentum", " ", "at",
     " ", "which", " ", "the", " ", "trigonometric", " ", "functions", " ", 
    "may", " ", "be", " ", "replaced", " ", "with", " ", "their", " ", 
    "expansion"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"pzKickApprox", "[", 
      RowBox[{"BTl_", ",", "zprojm_", ",", "z0m_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"pzGeV", "/.", 
       RowBox[{
        RowBox[{"Solve", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            FractionBox[
             RowBox[{"BTl", "*", "qValSI"}], "EGeV"], "*", 
            RowBox[{"tz0", "[", 
             RowBox[{
             "zprojm", ",", "z0m", ",", "cval", ",", "pzGeV", ",", "EGeV"}], 
             "]"}], 
            FractionBox["1", "GeVTokgVal"]}], "==", "0.2"}], ",", "pzGeV"}], 
         "]"}], "[", 
        RowBox[{"[", "1", "]"}], "]"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Expansions", " ", "of", " ", "the", " ", "coordinate", " ", "and", " ", 
     "momenta"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xHelicalApproxTemp2", "[", 
      RowBox[{
      "x0m_", ",", "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", 
       "qsign_", ",", "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{"xHelicalTemp1", "[", 
            RowBox[{
            "x0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
             "qValSI", ",", "tsecond", ",", "GeVTokgVal"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tsecond", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"c", "->", "cval"}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"tsecond", "->", " ", 
         RowBox[{"tz0", "[", 
          RowBox[{
          "zprojm", ",", "z0m", ",", "cval", ",", "pzGeV", ",", "EGeV"}], 
          "]"}]}], "}"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"zHelicalApproxTemp2", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{"zHelicalTemp1", "[", 
            RowBox[{
            "z0m", ",", "pxGeV", ",", "pzGeV", ",", "EGeV", ",", "BTl", ",", 
             RowBox[{"qValSI", "*", "qsign"}], ",", "tsecond", ",", 
             "GeVTokgVal"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tsecond", ",", "0", ",", "2"}], "}"}]}], "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"c", "->", "cval"}], "}"}]}], "/.", 
       RowBox[{"{", 
        RowBox[{"tsecond", "->", " ", 
         RowBox[{"tz0", "[", 
          RowBox[{
          "zprojm", ",", "z0m", ",", "cval", ",", "pzGeV", ",", "EGeV"}], 
          "]"}]}], "}"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pxHelicalApproxTemp2", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{"pxHelicalTemp1", "[", 
            RowBox[{"pxGeV", ",", "pzGeV", ",", "BTl", ",", 
             RowBox[{"qValSI", "*", "qsign"}], ",", "tsecond", ",", 
             "GeVTokgVal"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tsecond", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ")"}], 
       "/.", 
       RowBox[{"{", 
        RowBox[{"tsecond", "->", " ", 
         RowBox[{"tz0", "[", 
          RowBox[{
          "zprojm", ",", "z0m", ",", "cval", ",", "pzGeV", ",", "EGeV"}], 
          "]"}]}], "}"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pzHelicalApproxTemp2", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Normal", "@", 
         RowBox[{"Series", "[", 
          RowBox[{
           RowBox[{"pzHelicalTemp1", "[", 
            RowBox[{"pxGeV", ",", "pzGeV", ",", "BTl", ",", 
             RowBox[{"qValSI", "*", "qsign"}], ",", "tsecond", ",", 
             "GeVTokgVal"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"tsecond", ",", "0", ",", "1"}], "}"}]}], "]"}]}], ")"}], 
       "/.", 
       RowBox[{"{", 
        RowBox[{"tsecond", "->", " ", 
         RowBox[{"tz0", "[", 
          RowBox[{
          "zprojm", ",", "z0m", ",", "cval", ",", "pzGeV", ",", "EGeV"}], 
          "]"}]}], "}"}]}], "//", "Simplify"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pzHelicalApprox", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pzGeV", ">", 
        RowBox[{"pzKickApprox", "[", 
         RowBox[{"BTl", ",", "zprojm", ",", "z0m"}], "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"pzHelicalApproxTemp2", "[", 
         RowBox[{
         "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", "qsign", ",", 
          "zprojm"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"pzHelicalTemp2", "[", 
         RowBox[{
         "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", "qsign", ",", 
          "zprojm"}], "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pxHelicalApprox", "[", 
      RowBox[{
      "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", "qsign_", ",", 
       "zprojm_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pzGeV", ">", 
        RowBox[{"pzKickApprox", "[", 
         RowBox[{"BTl", ",", "zprojm", ",", "z0m"}], "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"pxHelicalApproxTemp2", "[", 
         RowBox[{
         "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", "qsign", ",", 
          "zprojm"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"pxHelicalTemp2", "[", 
         RowBox[{
         "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", "qsign", ",", 
          "zprojm"}], "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xHelicalApprox", "[", 
      RowBox[{
      "x0m_", ",", "z0m_", ",", "pxGeV_", ",", "pzGeV_", ",", "BTl_", ",", 
       "qsign_", ",", "zprojm_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"pzGeV", ">", 
        RowBox[{"pzKickApprox", "[", 
         RowBox[{"BTl", ",", "zprojm", ",", "z0m"}], "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"xHelicalApproxTemp2", "[", 
         RowBox[{
         "x0m", ",", "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", 
          "qsign", ",", "zprojm"}], "]"}], "]"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"xHelicalTemp2", "[", 
         RowBox[{
         "x0m", ",", "z0m", ",", "pxGeV", ",", "pzGeV", ",", "BTl", ",", 
          "qsign", ",", "zprojm"}], "]"}], "]"}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.898699209823668*^9, 3.898699270769168*^9}, {
  3.8986993624704514`*^9, 3.898699753914085*^9}, {3.8986998019339128`*^9, 
  3.898699905581258*^9}, {3.8987000863441525`*^9, 3.8987002575821342`*^9}},
 CellLabel->"In[29]:=",ExpressionUUID->"5365a0fa-eb31-490b-8406-27fa3c913a6f"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Solve", "ratnz", 
    "\"Solve was unable to solve the system with inexact coefficients. The \
answer was obtained by solving a corresponding exact system and numericizing \
the result.\"", 2, 1149, 205, 17559981068477797853, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.9156385925145187`*^9, 3.915639460090775*^9, 
  3.9156403015844803`*^9, 3.915641482264475*^9, 3.915641694708864*^9, 
  3.915681161298642*^9, 3.915681506086967*^9, 3.9156856581090593`*^9, 
  3.9157698830942407`*^9, 3.9157709919160643`*^9, 3.915781349115899*^9, 
  3.91578159455572*^9, 3.915787353685686*^9, 3.9158147525572977`*^9, 
  3.915855191066121*^9, 3.915857386440263*^9, 3.9158576525415697`*^9, 
  3.915859130973073*^9, 3.91586310825887*^9, 3.915865421266268*^9, 
  3.915867431441914*^9, 3.915878768864086*^9, 3.916126390137617*^9, 
  3.9161282292370124`*^9, 3.9199661162797127`*^9},
 CellLabel->
  "During evaluation of \
In[1149]:=",ExpressionUUID->"32583d6a-3ebc-40e2-9d6b-606655850c03"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Pre-definitions", "Section",
 CellChangeTimes->{{3.891323213421201*^9, 
  3.891323215420447*^9}},ExpressionUUID->"cfcdc0bb-9b75-48cc-9dba-\
613a41905bc7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Consider", " ", "the", " ", "table", " ", 
     SubscriptBox["E", "LLP"]}], ",", 
    SubscriptBox["\[Theta]", "LLP"], ",", 
    SubscriptBox["z", "LLP"], ",", 
    SubscriptBox["\[Epsilon]", "az"], ",", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        SubscriptBox["\[Phi]", "LLP"], ".", " ", "The"}], " ", "compiled", 
       " ", "code", " ", "below", " ", "removes", " ", "rows", " ", "for", 
       " ", "which", " ", 
       SubscriptBox["E", "LLP"]}], " ", "<", " ", 
      RowBox[{
       SubscriptBox["m", "LLP"], " ", "or", " ", 
       SubscriptBox["\[Epsilon]", "azimuthal"]}]}], " ", "=", " ", "0"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"TableLLPnonZeroCompiled", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"TableLLPgridWithELLP", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "indexELLP", "]"}], "]"}], ">", "mLLP"}], "&&", 
               
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "indexLLPazAcc", "]"}], "]"}], "\[NotEqual]", 
                "0."}]}], "&"}]}], "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
        "/.", 
        RowBox[{"OwnValues", "@", "indexELLP"}]}], "/.", 
       RowBox[{"OwnValues", "@", "indexLLPazAcc"}]}], "//", "ReleaseHold"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"TableLLPzeroCompiled", "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Select", "[", 
            RowBox[{"TableLLPgridWithELLP", ",", 
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "indexELLP", "]"}], "]"}], "\[LessEqual]", 
                "mLLP"}], "||", 
               RowBox[{
                RowBox[{"#", "[", 
                 RowBox[{"[", "indexLLPazAcc", "]"}], "]"}], "\[Equal]", 
                "0."}]}], "&"}]}], " ", "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
        "/.", 
        RowBox[{"OwnValues", "@", "indexELLP"}]}], "/.", 
       RowBox[{"OwnValues", "@", "indexLLPazAcc"}]}], "//", "ReleaseHold"}]}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Consider", " ", "a", " ", "table", " ", "of", " ", 
      SubscriptBox["\[Epsilon]", "decay"]}], ",", " ", 
     RowBox[{
     "where", " ", "each", " ", "NofPhiVals", " ", "values", " ", 
      "correspond", " ", "to", " ", "the", " ", "same", " ", 
      SubscriptBox["E", "LLP"]}], ",", 
     SubscriptBox["\[Theta]", "LLP"], ",", 
     RowBox[{
      SubscriptBox["z", "LLP"], " ", "but", " ", "to", " ", "different", " ", 
      
      RowBox[{
       SubscriptBox["\[Phi]", "LLP"], ".", " ", "The"}], " ", "compiled", " ",
       "code", " ", "below", " ", "averages", " ", "over", " ", "\[Phi]"}]}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]DecayE\[Theta]zcompiled", "=", 
     RowBox[{
      RowBox[{"Hold", "@", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "DecayAcceptanceE\[Theta]z\[Phi]", ",", "_Real", ",", "2"}], 
            "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"NofPhiVals", ",", "_Integer"}], "}"}]}], "}"}], ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"1", "/", "NofPhiVals"}], ")"}], 
          RowBox[{"Table", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"Sum", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"DecayAcceptanceE\[Theta]z\[Phi]", "[", 
                 RowBox[{"[", "i", "]"}], "]"}], "[", 
                RowBox[{"[", "1", "]"}], "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"i", ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"(", 
                    RowBox[{"i0", "-", "1"}], ")"}], "*", "NofPhiVals"}], "+",
                   "1"}], ",", 
                 RowBox[{"i0", "*", "NofPhiVals"}]}], "}"}]}], "]"}], "}"}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"i0", ",", "1", ",", 
              RowBox[{
               RowBox[{
               "Length", "[", "DecayAcceptanceE\[Theta]z\[Phi]", "]"}], "/", 
               "NofPhiVals"}], ",", "1"}], "}"}]}], "]"}]}], ",", 
         RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
         RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], "//",
       "ReleaseHold"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "This", " ", "code", " ", "averages", " ", "the", " ", "decay", " ", 
     "acceptance", " ", "over", " ", "the", " ", "domains", " ", "where", " ",
      "the", " ", "LLP", " ", 
     RowBox[{"points", "/", "does"}], " ", "not", " ", "point", " ", "to", 
     " ", "the", " ", "detector"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]dec1Compiled", "=", "  ", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tabToDet", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"tabNotToDet", ",", "_Real", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"mLLP", ",", "_Real"}], "}"}]}], "}"}], ",", 
       RowBox[{"Module", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
          "angles", ",", "energies", ",", "zs", ",", "\[Epsilon]azToDet", ",",
            "\[Epsilon]azNotToDet", ",", "\[Epsilon]DecToDet", ",", 
           "\[Epsilon]DecNotToDet", ",", "\[Epsilon]DecAv"}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"angles", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabToDet", ",", "1"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"energies", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabToDet", ",", "2"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"zs", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabToDet", ",", "3"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Epsilon]azToDet", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabToDet", ",", "4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Epsilon]azNotToDet", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabNotToDet", ",", "4"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Epsilon]DecToDet", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabToDet", ",", "5"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Epsilon]DecNotToDet", "=", 
           RowBox[{"Compile`GetElement", "[", 
            RowBox[{"tabNotToDet", ",", "5"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"\[Epsilon]DecAv", "=", 
           RowBox[{
            FractionBox[
             RowBox[{
              RowBox[{"\[Epsilon]azToDet", "*", "\[Epsilon]DecToDet"}], "+", 
              RowBox[{
              "\[Epsilon]azNotToDet", "*", "\[Epsilon]DecNotToDet"}]}], 
             RowBox[{"\[Epsilon]azToDet", "+", "\[Epsilon]azNotToDet", "+", 
              SuperscriptBox["10", 
               RowBox[{"-", "90."}]]}]], "+", 
            SuperscriptBox["10", 
             RowBox[{"-", "90."}]]}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"{", 
           RowBox[{"mLLP", ",", "angles", ",", "energies", ",", "zs", ",", 
            RowBox[{"\[Epsilon]azToDet", "+", "\[Epsilon]azNotToDet"}], ",", 
            "\[Epsilon]DecAv"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", 
       RowBox[{"RuntimeAttributes", "\[Rule]", 
        RowBox[{"{", "Listable", "}"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]dec2Compiled", "=", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"tabToDet", ",", "_Real", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"mLLP", ",", "_Real"}], "}"}]}], "}"}], ",", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"{", "mLLP", "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"i", ",", "1", ",", 
             RowBox[{"Length", "[", "tabToDet", "]"}], ",", "1"}], "}"}]}], 
          "]"}], ",", "tabToDet", ",", "2"}], "]"}], ",", 
       RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
       RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}]}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.891323425613412*^9, 3.891323426240705*^9}, {
   3.8913238399582205`*^9, 3.891323847526287*^9}, {3.8913255785192947`*^9, 
   3.891325578807524*^9}, 3.892400433217348*^9, {3.8924013129987407`*^9, 
   3.8924013721111608`*^9}, {3.892401432446088*^9, 3.892401443805329*^9}, {
   3.8929706737534137`*^9, 3.892970674773162*^9}, {3.893126737081957*^9, 
   3.893126746022231*^9}, {3.8931269128161592`*^9, 3.893126916228994*^9}, {
   3.8931269750473347`*^9, 3.893126975982995*^9}, {3.893127876572696*^9, 
   3.893127943544958*^9}, {3.893170202893709*^9, 3.893170235634016*^9}, {
   3.8931729550715637`*^9, 3.8931729702153053`*^9}, 3.8932167659281693`*^9, {
   3.893238826855266*^9, 3.893238827422778*^9}, {3.893238990503442*^9, 
   3.8932390173268595`*^9}, {3.893307112327159*^9, 3.893307112797879*^9}, {
   3.893349249828478*^9, 3.893349276812344*^9}, 3.8934168965127287`*^9, {
   3.893436765549063*^9, 3.893436765768009*^9}, {3.893492304771756*^9, 
   3.893492304821165*^9}, {3.893514857588662*^9, 3.8935149747260275`*^9}, {
   3.8966856378196073`*^9, 3.8966856403378763`*^9}, {3.897464879906437*^9, 
   3.8974648916145506`*^9}, {3.89849745254428*^9, 3.8984975200755043`*^9}, {
   3.89849783093812*^9, 3.898497832761785*^9}, {3.89849789911205*^9, 
   3.898497905651516*^9}, {3.89849804302676*^9, 3.89849808310581*^9}, {
   3.9028082791832485`*^9, 3.90280831262866*^9}, {3.902808353472077*^9, 
   3.902808403915349*^9}, {3.9028085887704525`*^9, 3.902808594663042*^9}, {
   3.902909485630412*^9, 3.9029095029209332`*^9}, {3.905010040087011*^9, 
   3.905010081639728*^9}, {3.9050598962772403`*^9, 3.9050599381033163`*^9}, {
   3.90505997156346*^9, 3.905059974027147*^9}, {3.9050603739496737`*^9, 
   3.905060395788929*^9}, {3.9053981266474476`*^9, 3.905398127386133*^9}, 
   3.907406782241393*^9, {3.912151266790866*^9, 3.9121512764128575`*^9}, {
   3.9149188969726925`*^9, 3.914918898367293*^9}, {3.914920087490354*^9, 
   3.914920089295472*^9}, {3.91492035491601*^9, 3.914920362850228*^9}, {
   3.9149482459680758`*^9, 3.9149482488357863`*^9}, {3.9154371514767675`*^9, 
   3.915437151611869*^9}},
 CellLabel->"In[37]:=",ExpressionUUID->"be417153-aaa6-4e45-b830-3a5210e865ed"],

Cell[CellGroupData[{

Cell["Kinematic variables used for imposing cuts", "Subsection",
 CellChangeTimes->{{3.893170243213801*^9, 3.893170243590643*^9}, {
  3.8934366714771786`*^9, 3.8934366726381407`*^9}, {3.916126447018665*^9, 
  3.9161264567450504`*^9}},ExpressionUUID->"247cc50a-6550-4877-a185-\
08c8fc3286a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"IP", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Consider", " ", "two", " ", "particles", " ", "originating", " ", "from", 
    " ", "the", " ", "same", " ", "point", " ", 
    RowBox[{
     SubscriptBox["r", "prod"], ".", " ", "Their"}], " ", "trajectory", " ", 
    "is", " ", "given", " ", "by", " ", "the", " ", "formula", " ", "below"}],
    "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"TrajectoryProducts", "[", 
      RowBox[{
      "xprod_", ",", "yprod_", ",", "zprod_", ",", "px1_", ",", "px2_", ",", 
       "py1_", ",", "py2_", ",", "pz1_", ",", "pz2_", ",", "zproj_"}], "]"}], 
     "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"xprod", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zproj", "-", "zprod"}], ")"}], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"px1", "+", "px2"}], ")"}], 
          RowBox[{"pz1", "+", "pz2"}]]}]}], ",", 
       RowBox[{"yprod", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"zproj", "-", "zprod"}], ")"}], "*", 
         FractionBox[
          RowBox[{"(", 
           RowBox[{"py1", "+", "py2"}], ")"}], 
          RowBox[{"pz1", "+", "pz2"}]]}]}], ",", "zproj"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Transverse", " ", "impact", " ", "parameter"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IPproductsSquared", "[", 
      RowBox[{
      "xprod_", ",", "yprod_", ",", "zprod_", ",", "px1_", ",", "px2_", ",", 
       "py1_", ",", "py2_", ",", "pz1_", ",", "pz2_", ",", "zproj_"}], "]"}], 
     "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"TrajectoryProducts", "[", 
            RowBox[{
            "xprod", ",", "yprod", ",", "zprod", ",", "px1", ",", "px2", ",", 
             "py1", ",", "py2", ",", "pz1", ",", "pz2", ",", "zproj"}], "]"}],
            "[", 
           RowBox[{"[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           RowBox[{"TrajectoryProducts", "[", 
            RowBox[{
            "xprod", ",", "yprod", ",", "zprod", ",", "px1", ",", "px2", ",", 
             "py1", ",", "py2", ",", "pz1", ",", "pz2", ",", "zproj"}], "]"}],
            "[", 
           RowBox[{"[", "2", "]"}], "]"}], "2"]}], "//", "Expand"}], "//", 
       "Simplify"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IPproductzTargetSquared", "[", 
      RowBox[{
      "xprod_", ",", "yprod_", ",", "zprod_", ",", "px1_", ",", "px2_", ",", 
       "py1_", ",", "py2_", ",", "pz1_", ",", "pz2_"}], "]"}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"IPproductsSquared", "[", 
        RowBox[{
        "xprod", ",", "yprod", ",", "zprod", ",", "px1", ",", "px2", ",", 
         "py1", ",", "py2", ",", "pz1", ",", "pz2", ",", "0"}], "]"}], "2"], "//",
       "Simplify"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Spatial", " ", "separation", " ", 
     RowBox[{"cut", ":", " ", 
      RowBox[{"for", " ", "photons"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"TrajectoryDifferenceProducts", "[", 
      RowBox[{
      "xprod_", ",", "yprod_", ",", "zprod_", ",", "px1_", ",", "px2_", ",", 
       "py1_", ",", "py2_", ",", "pz1_", ",", "pz2_", ",", "CoordProj_"}], 
      "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CoordProj", "-", "zprod"}], ")"}], "*", 
         FractionBox["px1", "pz1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CoordProj", "-", "zprod"}], ")"}], "*", 
         FractionBox["px2", "pz2"]}]}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CoordProj", "-", "zprod"}], ")"}], "*", 
         FractionBox["py1", "pz1"]}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"CoordProj", "-", "zprod"}], ")"}], "*", 
         FractionBox["py2", "pz2"]}]}], ",", "0."}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "For", " ", "the", " ", "experiments", " ", "for", " ", "which", " ", 
      "the", " ", "decay", " ", "volume", " ", "is", " ", "detector"}], ",", 
     " ", 
     RowBox[{
     "the", " ", "ECAL", " ", "position", " ", "is", " ", "formally", " ", 
      "assumed", " ", "to", " ", "be", " ", "at", " ", "the", " ", "end", " ",
       "of", " ", "the", " ", "decay", " ", "volume"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ecalpos", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
       "DecayVolumeAsDetectorGivenExperiment", "\[Equal]", "\"\<False\>\""}], 
       ",", "ECALpositionGivenExperiment", ",", 
       "xLongMaxDetectorGivenExperiment"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SSproductsSquaredOld", "[", 
      RowBox[{
      "zprod_", ",", "px1_", ",", "px2_", ",", "py1_", ",", "py2_", ",", 
       "pz1_", ",", "pz2_", ",", "CoordProj_"}], "]"}], "=", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{
         SuperscriptBox[
          RowBox[{
           RowBox[{"TrajectoryDifferenceProducts", "[", 
            RowBox[{
            "xprod", ",", "yprod", ",", "zprod", ",", "px1", ",", "px2", ",", 
             "py1", ",", "py2", ",", "pz1", ",", "pz2", ",", "CoordProj"}], 
            "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "2"], "+", 
         SuperscriptBox[
          RowBox[{
           RowBox[{"TrajectoryDifferenceProducts", "[", 
            RowBox[{
            "xprod", ",", "yprod", ",", "zprod", ",", "px1", ",", "px2", ",", 
             "py1", ",", "py2", ",", "pz1", ",", "pz2", ",", "CoordProj"}], 
            "]"}], "[", 
           RowBox[{"[", "2", "]"}], "]"}], "2"]}], "//", "Expand"}], "//", 
       "Simplify"}], ")"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"SSproductsSquared", "[", 
      RowBox[{"xfin1_", ",", "xfin2_", ",", "yfin1_", ",", "yfin2_"}], "]"}], 
     "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"xfin1", "-", "xfin2"}], ")"}], "2"], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"yfin1", "-", "yfin2"}], ")"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"minvProductsSquared", "[", 
      RowBox[{
      "px1_", ",", "py1_", ",", "pz1_", ",", "E1_", ",", "px2_", ",", "py2_", 
       ",", "pz2_", ",", "E2_"}], "]"}], "=", 
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"E1", "+", "E2"}], ")"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"px1", "+", "px2"}], ")"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"py1", "+", "py2"}], ")"}], "2"], "-", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"pz1", "+", "pz2"}], ")"}], "2"]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"CosAngleProducts", "[", 
      RowBox[{
      "px1_", ",", "px2_", ",", "py1_", ",", "py2_", ",", "pz1_", ",", 
       "pz2_"}], "]"}], "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"p1", "=", 
          RowBox[{"{", 
           RowBox[{"px1", ",", "py1", ",", "pz1"}], "}"}]}], ",", 
         RowBox[{"p2", "=", 
          RowBox[{"{", 
           RowBox[{"px2", ",", "py2", ",", "pz2"}], "}"}]}]}], "}"}], ",", 
       FractionBox[
        RowBox[{"p1", ".", "p2"}], 
        RowBox[{
         RowBox[{"Norm", "[", "p1", "]"}], 
         RowBox[{"Norm", "[", "p2", "]"}]}]]}], "]"}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.893307195243831*^9, 3.893307203273463*^9}, {
   3.893307417529541*^9, 3.893307434409528*^9}, {3.893307473098591*^9, 
   3.8933076920095034`*^9}, {3.893307766409576*^9, 3.893307813369112*^9}, {
   3.893307893325773*^9, 3.893307989519503*^9}, {3.893308142483653*^9, 
   3.893308315464196*^9}, {3.893349319738404*^9, 3.8933493199088297`*^9}, {
   3.893351168661603*^9, 3.893351169733703*^9}, {3.893385684282936*^9, 
   3.893385697900014*^9}, {3.893385832620135*^9, 3.893385839988839*^9}, {
   3.8933858732988167`*^9, 3.89338587598905*^9}, 3.893386094920165*^9, {
   3.8933867351629558`*^9, 3.893386774825485*^9}, {3.893386806678708*^9, 
   3.893386808478114*^9}, {3.893386859389034*^9, 3.8933868596480465`*^9}, 
   3.89339137759552*^9, {3.8934020326953444`*^9, 3.893402033553975*^9}, {
   3.893402120805983*^9, 3.8934021209381375`*^9}, {3.893402177740126*^9, 
   3.8934023413799915`*^9}, {3.893403069106703*^9, 3.893403105127819*^9}, {
   3.89342542261907*^9, 3.893425436031149*^9}, {3.8934270687581086`*^9, 
   3.8934271848120565`*^9}, {3.893427836860332*^9, 3.893427884192929*^9}, {
   3.893519495798237*^9, 3.893519590654631*^9}, {3.9055135347919893`*^9, 
   3.905513581143739*^9}, 3.910246320784568*^9, {3.914993659471619*^9, 
   3.914993734330103*^9}, {3.9186632629798784`*^9, 3.918663283329043*^9}, 
   3.9186639744413376`*^9, {3.9191364142624626`*^9, 3.919136434961925*^9}},
 CellLabel->"In[42]:=",ExpressionUUID->"a2da95ae-aa5f-4449-b86e-66c72ae7a3c3"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Routine of calculating the decay acceptance", "Section",
 CellChangeTimes->{{3.891323732291453*^9, 3.89132374118683*^9}, {
   3.891323823354575*^9, 3.8913238234662757`*^9}, {3.893436795887788*^9, 
   3.8934368016086535`*^9}, 
   3.893436831726281*^9},ExpressionUUID->"ed40518c-cb27-4fc6-8fad-\
73f862aa75dd"],

Cell[CellGroupData[{

Cell["Trajectory of the decay products", "Subsection",
 CellChangeTimes->{{3.898614789891785*^9, 3.898614820307907*^9}, 
   3.90553199482168*^9},ExpressionUUID->"ee695d17-f0f5-412f-ba53-\
13df6bc2b219"],

Cell[CellGroupData[{

Cell["No magnetic field", "Subsubsection",
 CellChangeTimes->{{3.8986148284352465`*^9, 
  3.898614831554184*^9}},ExpressionUUID->"b8f61271-2a5c-4ccc-a18d-\
e75689aabb9e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"FinalPlaneSign", "=", 
   RowBox[{"Sign", "[", "xLongMaxDetectorGivenExperiment", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"MomDirection", "[", 
     RowBox[{"py_", ",", "pz_"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
      "DetectorPlaneOrientationGivenExperiment", "\[Equal]", 
       "\"\<Transverse\>\""}], ",", "pz", ",", "py"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"LLP", "'"}], "s", " ", "decay", " ", "poing", " ", "as", " ", 
     "a", " ", "function", " ", "of", " ", "z"}], ",", "\[Theta]", ",", 
    "\[Phi]"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"LLPdecayVertex", "[", 
      RowBox[{"zLLP_", ",", "\[Theta]LLP_", ",", "\[Phi]LLP_"}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"LLPdecVTXatGivenZx", "[", 
        RowBox[{"zLLP", ",", "\[Theta]LLP", ",", "\[Phi]LLP"}], "]"}], ",", 
       RowBox[{"LLPdecVTXatGivenZy", "[", 
        RowBox[{"zLLP", ",", "\[Theta]LLP", ",", "\[Phi]LLP"}], "]"}], ",", 
       "zLLP"}], "}"}]}], ";"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LLPdecayVertexX", "[", 
    RowBox[{"zLLP_", ",", "\[Theta]LLP_", ",", "\[Phi]LLP_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"LLPdecVTXatGivenZx", "[", 
       RowBox[{"zLLP", ",", "\[Theta]LLP", ",", "\[Phi]LLP"}], "]"}], "/.", 
      " ", 
      RowBox[{
       RowBox[{"Cot", "[", "x_", "]"}], ":>", 
       RowBox[{"1", "/", 
        RowBox[{"Tan", "[", "x", "]"}]}]}]}], "/.", " ", 
     RowBox[{
      RowBox[{"Csc", "[", "x_", "]"}], ":>", 
      RowBox[{"1", "/", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "/.", 
    RowBox[{
     RowBox[{"Sec", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"1", "/", 
      RowBox[{"Cos", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LLPdecayVertexY", "[", 
    RowBox[{"zLLP_", ",", "\[Theta]LLP_", ",", "\[Phi]LLP_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"LLPdecVTXatGivenZy", "[", 
       RowBox[{"zLLP", ",", "\[Theta]LLP", ",", "\[Phi]LLP"}], "]"}], "/.", 
      " ", 
      RowBox[{
       RowBox[{"Cot", "[", "x_", "]"}], ":>", 
       RowBox[{"1", "/", 
        RowBox[{"Tan", "[", "x", "]"}]}]}]}], "/.", " ", 
     RowBox[{
      RowBox[{"Csc", "[", "x_", "]"}], ":>", 
      RowBox[{"1", "/", 
       RowBox[{"Sin", "[", "x", "]"}]}]}]}], "/.", 
    RowBox[{
     RowBox[{"Sec", "[", "x_", "]"}], "\[RuleDelayed]", 
     RowBox[{"1", "/", 
      RowBox[{"Cos", "[", "x", "]"}]}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"LLPdecayVertexZ", "[", 
    RowBox[{"zLLP_", ",", "\[Theta]LLP_", ",", "\[Phi]LLP_"}], "]"}], "=", 
   "zLLP"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"GivenExperiment", "!=", "\"\<ANUBIS-ceiling\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Trajectory", " ", "of", " ", "the", " ", 
      RowBox[{"daughter", "'"}], "s", " ", "particles", " ", "given", " ", 
      "the", " ", "LLP", " ", "decay", " ", "position", " ", "and", " ", 
      "the", " ", 
      RowBox[{"daughter", "'"}], "s", " ", "3"}], "-", 
     RowBox[{
     "momenta", " ", "in", " ", "the", " ", "lab", " ", "frame", " ", "of", 
      " ", "the", " ", "decaying", " ", "LLP"}], " ", "-", " ", 
     RowBox[{
     "at", " ", "the", " ", "position", " ", "of", " ", "the", " ", "final", 
      " ", "plane", " ", "of", " ", "the", " ", "detector"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"DaughterTrajectory", "[", 
     RowBox[{
     "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "XlongProj_", 
      ",", "px_", ",", "py_", ",", "pz_"}], "]"}], "=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
      "DetectorPlaneOrientationGivenExperiment", "\[Equal]", 
       "\"\<Transverse\>\""}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"XlongProj", "-", "zLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"px", "/", "pz"}], ")"}]}]}], ",", 
        RowBox[{"yLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"XlongProj", "-", "zLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"py", "/", "pz"}], ")"}]}]}], ",", "XlongProj"}], "}"}], 
      ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"xLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"XlongProj", "-", "yLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"px", "/", "py"}], ")"}]}]}], ",", "XlongProj", ",", 
        RowBox[{"zLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"XlongProj", "-", "yLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"pz", "/", "py"}], ")"}]}]}]}], "}"}]}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
     "___", "___", "___", "___", "_"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
     "Projection", " ", "of", " ", "the", " ", "decay", " ", "products", " ", 
      "trajectory", " ", "onto", " ", "the", " ", "detector", " ", "final", 
      " ", "surface"}], " ", "-", " ", 
     RowBox[{"for", " ", "ANUBIS"}], "-", "ceiling"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
     "___", "___", "___", "___", "_"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xx", "[", 
      RowBox[{"x0_", ",", "vx_", ",", "t_"}], "]"}], "=", 
     RowBox[{"x0", "+", 
      RowBox[{"vx", "*", "t"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"yy", "[", 
      RowBox[{"y0_", ",", "vy_", ",", "t_"}], "]"}], "=", 
     RowBox[{"y0", "+", 
      RowBox[{"vy", "*", "t"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"zz", "[", 
      RowBox[{"z0_", ",", "vz_", ",", "t_"}], "]"}], "=", 
     RowBox[{"z0", "+", 
      RowBox[{"vz", "*", "t"}]}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
      "The", " ", "condition", " ", "that", " ", "the", " ", "trajectory", 
       " ", "intersects", " ", "the", " ", "surface", " ", "of", " ", "the", 
       " ", 
       RowBox[{"cavern", ".", " ", "Here"}]}], ",", " ", "xshift", ",", " ", 
      RowBox[{
      "yshift", " ", "are", " ", "just", " ", "the", " ", "shiftings", " ", 
       "of", " ", "the", " ", "beamline", " ", "from", " ", "the", " ", 
       "center", " ", "of", " ", "the", " ", "cavern", " ", "where", " ", 
       "ATLAS", " ", "is", " ", "located"}]}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"rho2", "[", 
      RowBox[{
      "x0_", ",", "y0_", ",", "vx_", ",", "vy_", ",", "t_", ",", "xshift_", 
       ",", "yshift_"}], "]"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"xx", "[", 
            RowBox[{"x0", ",", "vx", ",", "t"}], "]"}], "+", "xshift"}], 
          ")"}], "2"], "+", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           RowBox[{"yy", "[", 
            RowBox[{"y0", ",", "vy", ",", "t"}], "]"}], "+", "yshift"}], 
          ")"}], "2"]}], "//", "Expand"}], "//", "Simplify"}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "The", " ", "moment", " ", "of", " ", "time", " ", "at", " ", "which", 
      " ", "the", " ", "trajectory", " ", "intersects", " ", "the", " ", 
      "surface", " ", "of", " ", "the", " ", "cavern"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"tsol", "[", 
      RowBox[{
      "x0_", ",", "y0_", ",", "vx_", ",", "vy_", ",", "\[Rho]det_", ",", 
       "xshift_", ",", "yshift_"}], "]"}], "=", 
     RowBox[{"t", "/.", 
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"rho2", "[", 
          RowBox[{
          "x0", ",", "y0", ",", "vx", ",", "vy", ",", "t", ",", "xshift", ",",
            "yshift"}], "]"}], "==", 
         SuperscriptBox["\[Rho]det", "2"]}], ",", "t"}], "]"}]}]}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "The", " ", "values", " ", "of", " ", "the", " ", "coordinates", " ", 
      "of", " ", "the", " ", "decay", " ", "product", " ", "at", " ", "this", 
      " ", "moment", " ", "of", " ", "time"}], "*)"}], "\[IndentingNewLine]", 
    
    RowBox[{
     RowBox[{"DaughterTrajectory", "[", 
      RowBox[{
      "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "XlongProj_", 
       ",", "px_", ",", "py_", ",", "pz_"}], "]"}], "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"xx", "[", 
          RowBox[{"xLLPdecay", ",", "px", ",", 
           RowBox[{
            RowBox[{"tsol", "[", 
             RowBox[{"xLLPdecay", ",", "yLLPdecay", ",", "px", ",", "py", ",", 
              RowBox[{"RouterDecayVolumeGivenExperiment", "[", "z", "]"}], 
              ",", "xshiftval", ",", "yshiftval"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", "Expand"}], "//", 
        "Simplify"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"yy", "[", 
          RowBox[{"yLLPdecay", ",", "py", ",", 
           RowBox[{
            RowBox[{"tsol", "[", 
             RowBox[{"xLLPdecay", ",", "yLLPdecay", ",", "px", ",", "py", ",", 
              RowBox[{"RouterDecayVolumeGivenExperiment", "[", "z", "]"}], 
              ",", "xshiftval", ",", "yshiftval"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", "Expand"}], "//", 
        "Simplify"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"zz", "[", 
          RowBox[{"zLLPdecay", ",", "pz", ",", 
           RowBox[{
            RowBox[{"tsol", "[", 
             RowBox[{"xLLPdecay", ",", "yLLPdecay", ",", "px", ",", "py", ",", 
              RowBox[{"RouterDecayVolumeGivenExperiment", "[", "z", "]"}], 
              ",", "xshiftval", ",", "yshiftval"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "//", "Expand"}], "//", 
        "Simplify"}]}], "}"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DaughterTrajectoryCoord1", "[", 
    RowBox[{
    "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "XlongProj_", 
     ",", "px_", ",", "py_", ",", "pz_"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FinalPlaneSign", "*", 
       RowBox[{"MomDirection", "[", 
        RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"DaughterTrajectory", "[", 
        RowBox[{
        "xLLPdecay", ",", "yLLPdecay", ",", "zLLPdecay", ",", "XlongProj", 
         ",", "px", ",", "py", ",", "pz"}], "]"}], "[", 
       RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", "99999."}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"DaughterTrajectoryCoord2", "[", 
    RowBox[{
    "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "XlongProj_", 
     ",", "px_", ",", "py_", ",", "pz_"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"FinalPlaneSign", "*", 
       RowBox[{"MomDirection", "[", 
        RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
     RowBox[{"Evaluate", "[", 
      RowBox[{
       RowBox[{"DaughterTrajectory", "[", 
        RowBox[{
        "xLLPdecay", ",", "yLLPdecay", ",", "zLLPdecay", ",", "XlongProj", 
         ",", "px", ",", "py", ",", "pz"}], "]"}], "[", 
       RowBox[{"[", "pointSecondCoordinate", "]"}], "]"}], "]"}], ",", 
     "99999."}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.898614978089488*^9, 3.898615077315208*^9}, {
   3.898617522902519*^9, 3.898617584515291*^9}, {3.9050596496106524`*^9, 
   3.9050596506849985`*^9}, {3.905059702637774*^9, 3.905059735953902*^9}, 
   3.905060520070547*^9, {3.905102078975509*^9, 3.905102078986858*^9}, {
   3.9102413157099667`*^9, 3.910241378089466*^9}, 3.910246320789631*^9, {
   3.915263683504957*^9, 3.915263703568968*^9}, {3.915263733878626*^9, 
   3.915263744977492*^9}, {3.915263820606549*^9, 3.915263825224869*^9}, {
   3.915263868838834*^9, 3.915263907593757*^9}, {3.915293991711729*^9, 
   3.915293992007791*^9}, {3.9154371516178536`*^9, 3.9154371519664435`*^9}, {
   3.916128114502988*^9, 3.916128117569877*^9}},
 CellLabel->"In[51]:=",ExpressionUUID->"e7381bce-ced4-40cd-af3c-9f43782143f5"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{
    RowBox[{
     FractionBox[
      RowBox[{"px", " ", 
       RowBox[{"(", 
        RowBox[{"XlongProj", "-", "zLLPdecay"}], ")"}]}], "pz"], "+", 
     "xLLPdecay"}], ",", 
    RowBox[{
     FractionBox[
      RowBox[{"py", " ", 
       RowBox[{"(", 
        RowBox[{"XlongProj", "-", "zLLPdecay"}], ")"}]}], "pz"], "+", 
     "yLLPdecay"}], ",", "XlongProj"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.916128120352095*^9, 3.916128235011429*^9, 
  3.919966124432297*^9},
 CellLabel->
  "Out[1176]=",ExpressionUUID->"0cf69371-b8ce-40a8-8866-49a8998beeff"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["With magnetic field", "Subsubsection",
 CellChangeTimes->{{3.8986148284352465`*^9, 
  3.898614837282953*^9}},ExpressionUUID->"ce945967-fc9c-4958-9102-\
829147f7657e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "magnetic", " ", "field", " ", "is", " ", "assumed", " ", "to",
     " ", "be", " ", "parallel", " ", "to", " ", "the", " ", "y", " ", 
    "axis"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
    "___", "___", "___"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"Trajectory", " ", "of", " ", "the", " ", 
      RowBox[{"daughter", "'"}], "s", " ", "particle", " ", "before", " ", 
      "being", " ", "affected", " ", "by", " ", "the", " ", "magnet", " ", 
      "at", " ", "z"}], " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"zProj", ".", " ", "It"}], " ", "is", " ", "a", " ", 
       "function", " ", "of", " ", "the", " ", "LLP", " ", "decay", " ", 
       "vertex", " ", "and", " ", "the", " ", 
       RowBox[{"daughter", "'"}], "s", " ", "kinematics", " ", "before", " ", 
       "the", " ", "magnet"}], " ", "-", " ", 
      SubscriptBox["p", "x"]}]}], ",", 
    SubscriptBox["p", "y"], ",", 
    SubscriptBox["p", "z"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "x", " ", "coordinate"}], ",", " ", 
    RowBox[{
    "the", " ", "value", " ", "of", " ", "zProj", " ", "is", " ", "taken", 
     " ", "to", " ", "be", " ", "the", " ", "beginning", " ", "of", " ", 
     "the", " ", 
     RowBox[{"magnet", "/", "the"}], " ", 
     RowBox[{"LLP", "'"}], "s", " ", 
     SubscriptBox["z", "decay"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"here", " ", "and", " ", "below"}], ",", " ", 
       RowBox[{
        RowBox[{
        "it", " ", "is", " ", "always", " ", "assumed", " ", "that", " ", 
         SubscriptBox["z", "decay"]}], " ", ">", " ", 
        SubscriptBox["z", 
         RowBox[{"magnet", ",", "max"}]]}]}], ")"}]}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"For", " ", "the", " ", "y", " ", "coordinate"}], ",", " ", 
    RowBox[{
    "the", " ", "value", " ", "is", " ", "taken", " ", "to", " ", "be", " ", 
     "the", " ", "end", " ", "of", " ", "the", " ", 
     RowBox[{"magnet", ".", " ", "This"}], " ", "is", " ", "because", " ", 
     "it", " ", "is", " ", "assumed", " ", "for", " ", "simplicity", " ", 
     "that", " ", "the", " ", "evolution", " ", "of", " ", "the", " ", "y", 
     " ", "coordinate", " ", "up", " ", "to", " ", "the", " ", "end", " ", 
     "of", " ", "the", " ", "magnet", " ", "is", " ", "the", " ", "same", " ",
      "as", " ", "it", " ", "would", " ", "be", " ", "without", " ", "the", 
     " ", "magnet"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LarmorRadiusGivenExperiment", "[", "EGeV_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<False\>\""}], 
       ",", "0", ",", 
       RowBox[{"LarmorRadius", "[", 
        RowBox[{"EGeV", ",", "Bval"}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xAtMagnetStart", "[", 
      RowBox[{
      "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "px_", ",", 
       "py_", ",", "pz_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FinalPlaneSign", "*", 
         RowBox[{"MomDirection", "[", 
          RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"xLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{"zMagnetMinGivenExperiment", ",", "zLLPdecay"}], "]"}], 
            "-", "zLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"px", "/", "pz"}], ")"}]}]}], "]"}], ",", "99999."}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "coordinate", " ", "2", " ", "is", " ", "assumed", " ", "to", 
     " ", "be", " ", "the", " ", "same", " ", "just", " ", "after", " ", 
     "the", " ", "magnet", " ", "as", " ", "if", " ", "there", " ", "would", 
     " ", "not", " ", "be", " ", "any", " ", "magnetic", " ", "field"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yAtMagnetEnd", "[", 
      RowBox[{
      "xLLPdecay_", ",", "yLLPdecay_", ",", "zLLPdecay_", ",", "px_", ",", 
       "py_", ",", "pz_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"FinalPlaneSign", "*", 
         RowBox[{"MomDirection", "[", 
          RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"yLLPdecay", "+", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"zMagnetMaxGivenExperiment", "-", "zLLPdecay"}], ")"}], 
          RowBox[{"(", 
           RowBox[{"py", "/", "pz"}], ")"}]}]}], "]"}], ",", "99999."}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
     "___", "___", "___", "___", "__"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Trajectory", " ", "of", " ", "the", " ", 
     RowBox[{"daughter", "'"}], "s", " ", "particle", " ", "after", " ", 
     "passing", " ", "the", " ", "domain", " ", "with", " ", "magnetic", " ", 
     "field"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
     "___", "___", "___", "___", "__"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"The", " ", "x"}], "-", "coordinate"}], ",", " ", 
     RowBox[{"as", " ", "well", " ", "as", " ", "the", " ", "momenta", " ", 
      SubscriptBox["p", "x"]}], ",", 
     RowBox[{
      SubscriptBox["p", "z"], " ", "get", " ", "changed", " ", "depending", 
      " ", "on", " ", "the", " ", "charge", " ", "sign", " ", "of", " ", 
      "the", " ", 
      RowBox[{"particle", ".", " ", "This"}], " ", "is", " ", "taken", " ", 
      "into", " ", "account", " ", "by", " ", "kinking", " ", "of", " ", 
      "their", " ", "values"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xAtDetectorEndMagnetEffectTemp", "[", 
      RowBox[{
      "zLLPdecay_", ",", "xprojBeforeMagnet_", ",", "pxaftermagnet_", ",", 
       "py_", ",", "pzaftermagnet_", ",", "qval_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{
        RowBox[{
         RowBox[{"xHelicalApprox", "[", 
          RowBox[{"xprojBeforeMagnet", ",", 
           RowBox[{"Max", "[", 
            RowBox[{"zMagnetMinGivenExperiment", ",", "zLLPdecay"}], "]"}], 
           ",", "pxaftermagnet", ",", "pzaftermagnet", ",", "Bval", ",", 
           "qval", ",", "zMagnetMaxGivenExperiment"}], "]"}], "//", 
         "Expand"}], "//", "Simplify"}], ",", "999999."}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yAtDetectorEndMagnetEffectTemp", "[", 
      RowBox[{
      "zLLPdecay_", ",", "yprojAfterMagnet_", ",", "py_", ",", 
       "pzaftermagnet_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{"yprojAfterMagnet", "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
          "xLongMaxDetectorGivenExperiment", "-", 
           "zMagnetMaxGivenExperiment"}], ")"}], 
         RowBox[{"(", 
          RowBox[{"py", "/", "pzaftermagnet"}], ")"}]}]}], ",", "99999."}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pxAfterMagnet", "[", 
      RowBox[{"zLLPdecay_", ",", "px_", ",", "pz_", ",", "qval_"}], "]"}], 
     "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{"pxHelicalApprox", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"zLLPdecay", ",", "zMagnetMinGivenExperiment"}], "]"}], ",",
          "px", ",", "pz", ",", "Bval", ",", "qval", ",", 
         "zMagnetMaxGivenExperiment"}], "]"}], ",", "100000."}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"pzAfterMagnet", "[", 
      RowBox[{"zLLPdecay_", ",", "px_", ",", "pz_", ",", "qval_"}], "]"}], 
     "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{"pzHelicalApprox", "[", 
        RowBox[{
         RowBox[{"Max", "[", 
          RowBox[{"zLLPdecay", ",", "zMagnetMinGivenExperiment"}], "]"}], ",",
          "px", ",", "pz", ",", "Bval", ",", "qval", ",", 
         "zMagnetMaxGivenExperiment"}], "]"}], ",", "0.00001"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"xAtDetectorEndMagnetEffect", "[", 
      RowBox[{
      "zLLPdecay_", ",", "xprojBeforeMagnet_", ",", "px_", ",", "py_", ",", 
       "pz_", ",", "qval_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FinalPlaneSign", "*", 
           RowBox[{"MomDirection", "[", 
            RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"xAtDetectorEndMagnetEffectTemp", "[", 
               RowBox[{"zLLPdecay", ",", "xprojBeforeMagnet", ",", 
                RowBox[{"pxAfterMagnet", "[", 
                 RowBox[{"zLLPdecay", ",", "px", ",", "pz", ",", "qval"}], 
                 "]"}], ",", "py", ",", 
                RowBox[{"pzAfterMagnet", "[", 
                 RowBox[{"zLLPdecay", ",", "px", ",", "pz", ",", "qval"}], 
                 "]"}], ",", "qval"}], "]"}], "//", "Simplify"}], ")"}], "/.",
             " ", 
            RowBox[{
             RowBox[{"Cot", "[", "x_", "]"}], ":>", 
             RowBox[{"1", "/", 
              RowBox[{"Tan", "[", "x", "]"}]}]}]}], "/.", " ", 
           RowBox[{
            RowBox[{"Csc", "[", "x_", "]"}], ":>", 
            RowBox[{"1", "/", 
             RowBox[{"Sin", "[", "x", "]"}]}]}]}], "]"}], ",", "99999."}], 
        "]"}], ",", "999999."}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"yAtDetectorEndMagnetEffect", "[", 
      RowBox[{
      "zLLPdecay_", ",", "yprojAfterMagnet_", ",", "px_", ",", "py_", ",", 
       "pz_", ",", "qval_"}], "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"DipoleMagnetOptionGivenExperiment", "==", "\"\<True\>\""}], 
       ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"FinalPlaneSign", "*", 
           RowBox[{"MomDirection", "[", 
            RowBox[{"py", ",", "pz"}], "]"}]}], ">", "0"}], ",", 
         RowBox[{"Evaluate", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"yAtDetectorEndMagnetEffectTemp", "[", 
              RowBox[{"zLLPdecay", ",", "yprojAfterMagnet", ",", "py", ",", 
               RowBox[{"pzAfterMagnet", "[", 
                RowBox[{"zLLPdecay", ",", "px", ",", "pz", ",", "qval"}], 
                "]"}]}], "]"}], "/.", " ", 
             RowBox[{
              RowBox[{"Cot", "[", "x_", "]"}], ":>", 
              RowBox[{"1", "/", 
               RowBox[{"Tan", "[", "x", "]"}]}]}]}], "/.", " ", 
            RowBox[{
             RowBox[{"Csc", "[", "x_", "]"}], ":>", 
             RowBox[{"1", "/", 
              RowBox[{"Sin", "[", "x", "]"}]}]}]}], "//", "Simplify"}], "]"}],
          ",", "99999."}], "]"}], ",", "999999."}], "]"}]}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8986148998175273`*^9, 3.8986149126960588`*^9}, {
   3.898614950786856*^9, 3.898614978155516*^9}, {3.898615090713854*^9, 
   3.8986150939927764`*^9}, {3.898615129813939*^9, 3.898615137591441*^9}, {
   3.898615177272547*^9, 3.898615187621873*^9}, {3.898615229545967*^9, 
   3.898615278837128*^9}, {3.8986153920715065`*^9, 3.898615395371059*^9}, {
   3.898615432830046*^9, 3.898615656917269*^9}, {3.898615753327162*^9, 
   3.898616101987913*^9}, {3.898616144288506*^9, 3.898616181571365*^9}, {
   3.8986167661397047`*^9, 3.898616831027446*^9}, {3.898616908613021*^9, 
   3.898617030688631*^9}, {3.8986170651961308`*^9, 3.898617376254762*^9}, {
   3.8986174289362993`*^9, 3.89861748850333*^9}, {3.898617562681976*^9, 
   3.898617583440949*^9}, {3.898700270290004*^9, 3.8987002771101446`*^9}, {
   3.898700850668104*^9, 3.8987008635169897`*^9}, {3.898701289861695*^9, 
   3.898701297355203*^9}, {3.902912877611253*^9, 3.9029128848144073`*^9}, {
   3.902915175703423*^9, 3.902915245191349*^9}, {3.905505402555734*^9, 
   3.9055054076948338`*^9}, 3.910246320789631*^9, {3.91543715197209*^9, 
   3.915437152099759*^9}, {3.91612812599009*^9, 3.916128143907205*^9}, {
   3.916130225014806*^9, 3.9161302252290354`*^9}},
 CellLabel->"In[59]:=",ExpressionUUID->"dd6ed487-22ac-4dc8-b2b3-bfa77e61ce2e"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Blocks computing various cuts", "Subsection",
 CellChangeTimes->{{3.905532004482563*^9, 3.9055320148212833`*^9}, {
  3.905532074610394*^9, 3.905532081272827*^9}, {3.90553414762417*^9, 
  3.905534153508107*^9}, {3.9154362650657945`*^9, 
  3.9154362702977705`*^9}},ExpressionUUID->"7f229be0-89a2-409d-b465-\
05beef9164ec"],

Cell[CellGroupData[{

Cell["Particular decay product - geometric part", "Subsubsection",
 CellChangeTimes->{{3.905532022451865*^9, 3.905532027175404*^9}, {
  3.905532083524464*^9, 3.9055320853151717`*^9}, {3.905534086867423*^9, 
  3.905534090497462*^9}},ExpressionUUID->"8782dd60-f254-415d-8b93-\
2eb3b562d51f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionDecayAcceptanceGeometric", "=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Hold", "@", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"charge1", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"xdecayfip", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"ydecayfip", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"zfip", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"E1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"zmagnMzfip", ",", "_Real"}], "}"}]}], "}"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"cond", "=", "0."}], ",", "FirstCoordinateProduct1", ",",
              "SecondCoordinateProduct1", ",", 
             RowBox[{"xAtMagnetStartProduct1", "=", "0."}], ",", 
             RowBox[{"yAfterMagnetProduct1", "=", "0."}], ",", 
             RowBox[{"xFinalPlaneProduct1", "=", "0."}], ",", 
             RowBox[{"yFinalPlaneProduct1", "=", "0."}], ",", 
             RowBox[{"xLongProjVal", "=", "0."}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{"Depending", " ", "on", " ", "pdg", " ", "id"}], ",", 
             " ", 
             RowBox[{
             "the", " ", "final", " ", "plane", " ", "required", " ", "to", 
              " ", "be", " ", "reached", " ", "in", " ", "order", " ", "to", 
              " ", "be", " ", "reconstructed"}]}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"xLongProjVal", "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"Abs", "[", "pdg1", "]"}], "==", "13."}], ",", 
               "xLongMuonPlaneGivenExperiment", ",", 
               "xLongNonMuonPlaneGivenExperiment"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"xLongProjVal", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                 "GivenExperiment", " ", "==", " ", 
                  "\"\<SHIFT_muon_chamber\>\""}], ",", "170", ",", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{"For", " ", "SHIFT"}], ",", 
                   RowBox[{"use", " ", "170", " ", "meters"}]}], "*)"}], 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"Abs", "[", "pdg1", "]"}], "==", "13."}], ",", 
                   "xLongMuonPlaneGivenExperiment", ",", 
                   "xLongNonMuonPlaneGivenExperiment"}], "]"}]}], " ", 
                RowBox[{"(*", 
                 RowBox[{"Otherwise", ",", 
                  RowBox[{"use", " ", "existing", " ", "logic"}]}], "*)"}], 
                "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "If", " ", "product", " ", "is", " ", "uncharged", " ", "OR", 
               " ", "there", " ", "is", " ", "no", " ", "magnet", " ", "OR", 
               " ", "the", " ", "LLP", " ", "decays", " ", "after", " ", 
               "the", " ", "region", " ", "with", " ", "the", " ", "magnetic",
                " ", "field"}], ",", " ", 
              RowBox[{
              "then", " ", "the", " ", "trajectory", " ", "of", " ", "the", 
               " ", "decay", " ", "product", " ", "is", " ", "a", " ", 
               "straight", " ", "line", " ", "and", " ", "the", " ", "decay", 
               " ", "acceptance", " ", "may", " ", "be", " ", "easily", " ", 
               "computed"}]}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Bval", "==", "0"}], "||", 
               RowBox[{"charge1", "==", "0."}], "||", 
               RowBox[{"zmagnMzfip", "<", "0"}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Coordinates", " ", "of", " ", "the", " ", "decay", " ", 
                "products", " ", "at", " ", "the", " ", "detector", " ", 
                "plane"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"xFinalPlaneProduct1", "=", 
                RowBox[{"DaughterTrajectoryCoord1", "[", 
                 RowBox[{
                 "xdecayfip", ",", "ydecayfip", ",", "zfip", ",", 
                  "xLongProjVal", ",", "px1lab", ",", "py1lab", ",", 
                  "pz1lab"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"yFinalPlaneProduct1", "=", 
                RowBox[{"DaughterTrajectoryCoord2", "[", 
                 RowBox[{
                 "xdecayfip", ",", "ydecayfip", ",", "zfip", ",", 
                  "xLongProjVal", ",", "px1lab", ",", "py1lab", ",", 
                  "pz1lab"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{
                "Condition", " ", "whether", " ", "product1", " ", 
                 "intersects", " ", "the", " ", "detector"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"cond", "=", 
                RowBox[{"DecayAcceptanceGeometry", "[", 
                 RowBox[{
                 "xFinalPlaneProduct1", ",", "yFinalPlaneProduct1", ",", 
                  "xLongProjVal"}], "]"}]}]}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                 RowBox[{
                 "If", " ", "the", " ", "magnetic", " ", "field", " ", "and", 
                  " ", "electric", " ", "charge", " ", "of", " ", "the", " ", 
                  "product", " ", "are", " ", "non"}], "-", 
                 RowBox[{
                 "zero", " ", "AND", " ", "the", " ", "LLP", " ", "decays", 
                  " ", "before", " ", "the", " ", "end", " ", "of", " ", 
                  "the", " ", "magnet"}]}], ",", " ", 
                RowBox[{
                "then", " ", "the", " ", "trajectory", " ", "is", " ", 
                 "affected", " ", "by", " ", "the", " ", "magnetic", " ", 
                 RowBox[{"field", ".", " ", "However"}]}], ",", " ", 
                RowBox[{"to", " ", "be", " ", "affected"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "If", " ", "the", " ", "product", " ", "has", " ", "large", 
                 " ", "enough", " ", "energy", " ", 
                 RowBox[{"(", 
                  RowBox[{"==", " ", 
                   RowBox[{
                   "Larmor", " ", "radius", " ", "is", " ", "smaller", " ", 
                    "than", " ", "the", " ", "domain", " ", "with", " ", 
                    "the", " ", "magnetic", " ", "field"}]}], ")"}]}], ",", 
                " ", 
                RowBox[{
                "proceed", " ", "to", " ", "the", " ", "acceptance", " ", 
                 "routine", " ", "calculation"}]}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"LarmorRadiusGivenExperiment", "[", "E1lab", "]"}], 
                  ">", "zmagnMzfip"}], ",", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "x", " ", "coordinate", " ", "of", " ", "the", " ", 
                    "decay", " ", "products", " ", "just", " ", "before", " ",
                     "the", " ", "magnet", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    "or", " ", "at", " ", "the", " ", "LLP", " ", "decay", 
                    " ", "point", " ", "if", " ", "it", " ", "is", " ", 
                    "inside", " ", "the", " ", "magnet"}], ")"}]}], ",", " ", 
                   
                   RowBox[{
                   "and", " ", "y", " ", "coordinate", " ", "at", " ", "the", 
                    " ", "end", " ", "of", " ", "the", " ", 
                    RowBox[{"magnet", ".", " ", "Due"}], " ", "to", " ", 
                    "the", " ", "approximation"}], ",", " ", 
                   RowBox[{
                   "the", " ", "mentioned", " ", "y", " ", "coordinate", " ", 
                    "is", " ", "unaffected", " ", "by", " ", "the", " ", 
                    "magnet"}]}], "*)"}], "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"xAtMagnetStartProduct1", "=", 
                   RowBox[{"xAtMagnetStart", "[", 
                    RowBox[{
                    "xdecayfip", ",", "ydecayfip", ",", "zfip", ",", "px1lab",
                     ",", "py1lab", ",", "pz1lab"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"yAfterMagnetProduct1", "=", 
                   RowBox[{"yAtMagnetEnd", "[", 
                    RowBox[{
                    "xdecayfip", ",", "ydecayfip", ",", "zfip", ",", "px1lab",
                     ",", "py1lab", ",", "pz1lab"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                   "These", " ", "coordinates", " ", "must", " ", "be", " ", 
                    "within", " ", "the", " ", "detector", " ", 
                    RowBox[{"coverage", ".", " ", "Here"}], " ", "it", " ", 
                    "is", " ", "assumed", " ", "that", " ", "the", " ", 
                    "transverse", " ", "size", " ", "of", " ", "the", " ", 
                    "magnet", " ", "does", " ", "not", " ", "change", " ", 
                    "from", " ", 
                    SubscriptBox["z", 
                    RowBox[{"magnet", ",", "min"}]], " ", "to", " ", 
                    SubscriptBox["z", 
                    RowBox[{"magnet", ",", "max"}]]}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"cond", "=", 
                   RowBox[{"DecayAcceptanceGeometry", "[", 
                    RowBox[{
                    "xAtMagnetStartProduct1", ",", "yAfterMagnetProduct1", 
                    ",", "zMagnetMaxGivenExperiment"}], "]"}]}], ";", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{
                    "If", " ", "this", " ", "is", " ", "the", " ", "case"}], 
                    ",", " ", 
                    RowBox[{
                    "then", " ", "the", " ", "routine", " ", "below", " ", 
                    "evaluates", " ", "the", " ", "change", " ", "of", " ", 
                    "the", " ", "trajectory", " ", "due", " ", "to", " ", 
                    "the", " ", "magnetic", " ", "field"}]}], "*)"}], 
                  "\[IndentingNewLine]", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"cond", "==", "1"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Coordinates", " ", "x"}], ",", 
                    RowBox[{"y", " ", "at", " ", "the", " ", "final", " ", 
                    RowBox[{"plane", ".", " ", "Both"}], " ", "of", " ", 
                    "them", " ", "are", " ", "affected", " ", "by", " ", 
                    "magnet"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "The", " ", "x", " ", "coordinate", " ", "gets", " ", 
                    "affected", " ", "by", " ", "a", " ", "kick", " ", "in", 
                    " ", "x"}], ",", 
                    SubscriptBox["p", "x"], ",", 
                    RowBox[{
                    SubscriptBox["p", "z"], " ", "after", " ", "the", " ", 
                    "magnet"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "The", " ", "y", " ", "coordinate", " ", "gets", " ", 
                    "affected", " ", "by", " ", "a", " ", "kick", " ", "in", 
                    " ", 
                    SubscriptBox["p", "z"], " ", "after", " ", "the", " ", 
                    "magnet"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"xFinalPlaneProduct1", "=", 
                    RowBox[{"xAtDetectorEndMagnetEffect", "[", 
                    RowBox[{
                    "zfip", ",", "xAtMagnetStartProduct1", ",", "px1lab", ",",
                     "py1lab", ",", "pz1lab", ",", "charge1"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"yFinalPlaneProduct1", "=", 
                    RowBox[{"yAtDetectorEndMagnetEffect", "[", 
                    RowBox[{
                    "zfip", ",", "yAfterMagnetProduct1", ",", "px1lab", ",", 
                    "py1lab", ",", "pz1lab", ",", "charge1"}], "]"}]}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Condition", " ", "whether", " ", "decay", " ", 
                    "products", " ", "intersect", " ", "the", " ", "detector",
                     " ", "and", " ", "have", " ", "large", " ", "enough", 
                    " ", "energy"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "The", " ", "first", " ", "condition", " ", "corresponds",
                     " ", "to", " ", "the", " ", "requirement", " ", "that", 
                    " ", "x", " ", "before", " ", "the", " ", "magnet", " ", 
                    "and", " ", "y", " ", "after", " ", "the", " ", "magnet", 
                    " ", "are", " ", "within", " ", "the", " ", "detector"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "The", " ", "second", " ", "one", " ", "requires", " ", 
                    "that", " ", "kicked", " ", "x"}], ",", " ", 
                    RowBox[{"y", " ", "at", " ", 
                    SubscriptBox["z", 
                    RowBox[{"final", " "}]], "are", " ", "within", " ", "the",
                     " ", "detector"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"cond", "=", 
                    RowBox[{"DecayAcceptanceGeometry", "[", 
                    RowBox[{
                    "xFinalPlaneProduct1", ",", "yFinalPlaneProduct1", ",", 
                    "xLongProjVal"}], "]"}]}]}]}], "]"}]}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{
                   RowBox[{
                   "If", " ", "the", " ", "product", " ", "has", " ", "too", 
                    " ", "low", " ", "energy", " ", 
                    RowBox[{"(", 
                    RowBox[{"==", " ", 
                    RowBox[{
                    "Larmor", " ", "radius", " ", "is", " ", "smaller", " ", 
                    "than", " ", "the", " ", "domain", " ", "with", " ", 
                    "the", " ", "magnetic", " ", "field"}]}], ")"}]}], ",", 
                   " ", 
                   RowBox[{
                   "it", " ", "would", " ", "be", " ", "trapped", " ", 
                    "inside", " ", "the", " ", "magnetic", " ", 
                    RowBox[{"field", ".", " ", "In"}], " ", "this", " ", 
                    "case"}], ",", " ", 
                   RowBox[{"acceptance", " ", "=", " ", "0"}]}], "*)"}], 
                 "\[IndentingNewLine]", ",", 
                 RowBox[{"cond", "=", "0"}]}], "]"}], ";"}]}], 
             "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
            RowBox[{"{", 
             RowBox[{
             "cond", ",", "xFinalPlaneProduct1", ",", "yFinalPlaneProduct1"}],
              "}"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
         RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
         RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
         RowBox[{"RuntimeAttributes", "->", 
          RowBox[{"{", "Listable", "}"}]}], ",", 
         RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
      RowBox[{"ruleDown", "[", 
       RowBox[{"{", 
        RowBox[{
        "DaughterTrajectoryCoord1", ",", "DaughterTrajectoryCoord2", ",", 
         "DecayAcceptanceGeometry", ",", "xAtDetectorEndMagnetEffect", ",", 
         "yAtDetectorEndMagnetEffect", ",", "xAtMagnetStart", ",", 
         "yAtMagnetEnd", ",", "LarmorRadiusGivenExperiment"}], "}"}], "]"}]}],
      "/.", 
     RowBox[{"ruleOwn", "[", 
      RowBox[{"{", 
       RowBox[{
       "Bval", ",", "xLongMuonPlaneGivenExperiment", ",", 
        "xLongNonMuonPlaneGivenExperiment", ",", 
        "zMagnetMaxGivenExperiment"}], "}"}], "]"}]}], "//", 
    "ReleaseHold"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
    RowBox[{"CompilePrint", "@", "conditionDecayAcceptanceGeometric"}]}], 
   "*)"}]}]}], "Input",
 CellChangeTimes->{
  3.905533887197404*^9, {3.910241569630865*^9, 3.910241603711719*^9}, {
   3.9102416680806513`*^9, 3.9102417664708004`*^9}, {3.91024180291088*^9, 
   3.910241825989779*^9}, {3.910241870019837*^9, 3.910241934411228*^9}, {
   3.910242055549712*^9, 3.9102421769202204`*^9}, {3.9102422302898245`*^9, 
   3.910242320008681*^9}, 3.910249075119757*^9, {3.910249702048479*^9, 
   3.910249708448292*^9}, {3.910249764538303*^9, 3.910249779978406*^9}, {
   3.915437152108829*^9, 3.9154371521185308`*^9}, 3.919010167820494*^9, {
   3.919068487544666*^9, 3.919068516898288*^9}, {3.9314247723818817`*^9, 
   3.93142479660149*^9}, {3.931425772301478*^9, 
   3.9314257888396463`*^9}},ExpressionUUID->"81135581-0f6a-4dee-b965-\
c7dae62607a1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decay products pair - Energy cut", "Subsubsection",
 CellChangeTimes->{{3.9055320949676332`*^9, 3.905532096895308*^9}, {
  3.905532540249052*^9, 3.905532541819287*^9}, {3.9055340991757836`*^9, 
  3.9055341053457465`*^9}},ExpressionUUID->"4c7e325d-bba1-468b-ad4e-\
6a1808e6d18c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"distff", "[", "\[Sigma]_", "]"}], "=", 
   RowBox[{"ProbabilityDistribution", "[", 
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{
        SqrtBox[
         RowBox[{"2", "*", "Pi"}]], "\[Sigma]"}]], 
      RowBox[{"Exp", "[", 
       RowBox[{"-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", "x", ")"}], "2"], 
         RowBox[{"2", 
          SuperscriptBox["\[Sigma]", "2"]}]]}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "Infinity"}], ",", "Infinity"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"InverseCDFffplus", "[", 
    RowBox[{"\[Sigma]_", ",", "u_"}], "]"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"InverseCDF", "[", 
      RowBox[{
       RowBox[{"distff", "[", "\[Sigma]", "]"}], ",", "u"}], "]"}], "[", 
     RowBox[{"[", "1", "]"}], "]"}], "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"enres", "[", "Eval_", "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"GivenExperiment", "==", "\"\<SHiNESS\>\""}], ",", 
     FractionBox["0.15", 
      SqrtBox[
       RowBox[{
        SuperscriptBox["10", "3"], "Eval"}]]]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conditionEnergyCuts", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ecutLowerid", "=", "ecutLowerID"}], ",", 
       RowBox[{"ecutUpperid", "=", "ecutUpperID"}], ",", 
       RowBox[{"EtotCutLowerid", "=", "EtotCutLowerID"}], ",", 
       RowBox[{"EtotCutUpperid", "=", "EtotCutUpperID"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{"Hold", "@", 
        RowBox[{"Compile", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"charge1", ",", "_Real"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"E1lab", ",", "_Real"}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"E2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
          RowBox[{"Module", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
             "ecutlow1", ",", "ecutlow2", ",", "ecutup1", ",", "ecutup2", ",", 
              RowBox[{"ecuttotlow", "=", "eTotCutLowerZero"}], ",", 
              RowBox[{"ecuttotupp", "=", "eTotCutUpperZero"}]}], "}"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"ecutlow1", "=", 
              RowBox[{"ecutLowerid", "[", 
               RowBox[{"pdg1", ",", "charge1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ecutlow2", "=", 
              RowBox[{"ecutLowerid", "[", 
               RowBox[{"pdg2", ",", "charge1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ecutup1", "=", 
              RowBox[{"ecutUpperid", "[", 
               RowBox[{"pdg1", ",", "charge1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"ecutup2", "=", 
              RowBox[{"ecutUpperid", "[", 
               RowBox[{"pdg2", ",", "charge1"}], "]"}]}], ";", 
             "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"IfEtotLowercuts", "==", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"ecuttotlow", "=", 
                RowBox[{"EtotCutLowerid", "[", 
                 RowBox[{"pdg1", ",", "charge1", ",", "pdg2"}], "]"}]}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"IfEtotUppercuts", "==", "1"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"ecuttotupp", "=", 
                RowBox[{"EtotCutUpperid", "[", 
                 RowBox[{"pdg1", ",", "charge1", ",", "pdg2"}], "]"}]}]}], 
              "]"}], ";", "\[IndentingNewLine]", 
             RowBox[{"Boole", "[", 
              RowBox[{
               RowBox[{"ecutlow1", "<=", "E1lab", "<=", "ecutup1"}], "&&", 
               RowBox[{"ecutlow2", "<=", "E2lab", "<=", "ecutup2"}], "&&", 
               RowBox[{"ecuttotlow", "<=", 
                RowBox[{"E1lab", "+", "E2lab"}], "<=", "ecuttotupp"}]}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
          ",", 
          RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
          RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
          RowBox[{"RuntimeAttributes", "->", 
           RowBox[{"{", "Listable", "}"}]}], ",", 
          RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "eTotCutLowerZero", ",", "eTotCutUpperZero", ",", "IfEtotLowercuts", 
          ",", "IfEtotUppercuts"}], "}"}], "]"}]}], "//", "ReleaseHold"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionEnergyCuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9055321545666084`*^9, 3.905532308371714*^9}, {
   3.905532384842624*^9, 3.905532464553622*^9}, {3.9055325115442104`*^9, 
   3.9055325339285145`*^9}, 3.905533847673461*^9, 3.905533884580447*^9, {
   3.9056674361712213`*^9, 3.905667446208528*^9}, {3.9056739258987207`*^9, 
   3.905673937160644*^9}, {3.905841248569303*^9, 3.905841253902861*^9}, {
   3.905841284005067*^9, 3.9058413187161975`*^9}, {3.905841378183223*^9, 
   3.905841410095864*^9}, {3.905846696782211*^9, 3.9058467605940037`*^9}, {
   3.906801176497629*^9, 3.906801179548951*^9}, {3.910176120818011*^9, 
   3.9101761480327454`*^9}, {3.9121512857627974`*^9, 3.9121512904114666`*^9}, 
   3.912501108355491*^9, {3.91250118627825*^9, 3.912501199718468*^9}, {
   3.9125343497610435`*^9, 3.9125345592950416`*^9}, {3.915639238357266*^9, 
   3.915639278156277*^9}, 3.9156393126768823`*^9, 3.915860670024149*^9, {
   3.9168903964478765`*^9, 3.916890409111637*^9}},
 CellLabel->"In[69]:=",ExpressionUUID->"08c2b767-ac28-48e9-ad64-cd2137a88e5a"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Decay products pair - ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["p", "T"], TraditionalForm]],ExpressionUUID->
  "d4448c49-7be3-41d2-a483-01876bba04f3"],
 " cut"
}], "Subsubsection",
 CellChangeTimes->{{3.905532547151104*^9, 3.905532560637675*^9}, 
   3.9055341111798687`*^9},ExpressionUUID->"5dd36f2a-32da-4722-bb4f-\
b88e53350645"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionpTcuts", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"pTcutLowerid", "=", "pTcutLowerID"}], ",", 
       RowBox[{"pTcutUpperid", "=", "pTcutUpperID"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{"Hold", "@", 
       RowBox[{"Compile", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"charge1", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"py2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
         RowBox[{"Module", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
            "pTsquaredCutLow1", ",", "pTsquaredCutLow2", ",", 
             "pTsquaredCutUpp1", ",", "pTsquaredCutUpp2", ",", 
             "pT1squaredlab", ",", "pT2squaredlab"}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"pTsquaredCutLow1", "=", 
             SuperscriptBox[
              RowBox[{"pTcutLowerid", "[", 
               RowBox[{"pdg1", ",", "charge1"}], "]"}], "2"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pTsquaredCutLow2", "=", 
             SuperscriptBox[
              RowBox[{"pTcutLowerid", "[", 
               RowBox[{"pdg2", ",", "charge1"}], "]"}], "2"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pTsquaredCutUpp1", "=", 
             SuperscriptBox[
              RowBox[{"pTcutUpperid", "[", 
               RowBox[{"pdg1", ",", "charge1"}], "]"}], "2"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pTsquaredCutUpp2", "=", 
             SuperscriptBox[
              RowBox[{"pTcutUpperid", "[", 
               RowBox[{"pdg2", ",", "charge1"}], "]"}], "2"]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"pT1squaredlab", "=", 
             RowBox[{
              SuperscriptBox["px1lab", "2"], "+", 
              SuperscriptBox["py1lab", "2"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"pT2squaredlab", "=", 
             RowBox[{
              SuperscriptBox["px2lab", "2"], "+", 
              SuperscriptBox["py2lab", "2"]}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"Boole", "[", 
             RowBox[{
              RowBox[{
              "pTsquaredCutLow1", "<=", "pT1squaredlab", "<=", 
               "pTsquaredCutUpp1"}], "&&", 
              RowBox[{
              "pTsquaredCutLow2", "<=", "pT2squaredlab", "<=", 
               "pTsquaredCutUpp2"}]}], "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", 
         RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
         RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
         RowBox[{"RuntimeAttributes", "->", 
          RowBox[{"{", "Listable", "}"}]}], ",", 
         RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "//", 
      "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionpTcuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9055326298577223`*^9, 3.905532832641948*^9}, {
   3.905533244366785*^9, 3.905533246522518*^9}, 3.905533882230445*^9, {
   3.910176164824113*^9, 3.910176168304602*^9}, {3.912504383534126*^9, 
   3.912504383535257*^9}, {3.912534564608594*^9, 3.912534653708722*^9}},
 CellLabel->"In[75]:=",ExpressionUUID->"669c4c31-eb00-4f92-8d85-302655cf1aa0"]
}, Closed]],

Cell[CellGroupData[{

Cell["Decay products pair - Impact parameter cut", "Subsubsection",
 CellChangeTimes->{{3.905532547151104*^9, 3.905532550125354*^9}, 
   3.9055341132116985`*^9},ExpressionUUID->"f4510095-c2d4-4a90-89ea-\
c9432850361c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionIPcuts", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"IPcutid", "=", "IPcutID"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"xdecayfip", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"ydecayfip", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"zfip", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "1."}], ",", "ipcut", ",", "ip12"}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"ipcut", "=", 
               SuperscriptBox[
                RowBox[{"IPcutid", "[", 
                 RowBox[{"pdg1", ",", "pdg2"}], "]"}], "2"]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"ipcut", "\[NotEqual]", 
                 SuperscriptBox["IPcutZero", "2"]}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"ip12", "=", 
                  RowBox[{"IPproductzTargetSquared", "[", 
                   RowBox[{
                   "xdecayfip", ",", "ydecayfip", ",", "zfip", ",", "px1lab", 
                    ",", "px2lab", ",", "py1lab", ",", "py2lab", ",", 
                    "pz1lab", ",", "pz2lab"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", 
                  RowBox[{"Boole", "[", 
                   RowBox[{"ip12", "<", "ipcut"}], "]"}]}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "cond"}]}], "\[IndentingNewLine]", "]"}],
            ",", 
           RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "->", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", "IPproductzTargetSquared", "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", "IPcutZero", "}"}], "]"}]}], "//", "ReleaseHold"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionIPcuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.905532838134986*^9, 3.905532879137568*^9}, {
   3.905532922473439*^9, 3.90553309818943*^9}, 3.905533880228113*^9, 
   3.90567394704794*^9, {3.912534693358762*^9, 3.912534773251195*^9}},
 CellLabel->"In[78]:=",ExpressionUUID->"cc4df259-16aa-4c24-b073-75153ca7831f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Decay products pair - angular cut ", "Subsubsection",
 CellChangeTimes->{{3.905532547151104*^9, 3.905532582736751*^9}, {
   3.905534116290319*^9, 3.9055341166128693`*^9}, {3.914993624695646*^9, 
   3.9149936347097583`*^9}, 
   3.915189606306554*^9},ExpressionUUID->"2a952f6e-d944-4c1d-843b-\
8859a69cb34d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"angres", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"GivenExperiment", "==", "\"\<SHiNESS\>\""}], ",", 
     RowBox[{"10", "*", 
      FractionBox["Pi", "180."]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"GivenExperiment", "!=", "\"\<SHiNESS\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conditionAngSepCuts", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"AngSepCutid", "=", "AngSepCutID"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Hold", "@", 
           RowBox[{"Compile", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"zfip", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"py2lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pz2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cond", "=", "1."}], ",", "angsepcut", ",", "ss12"}],
                 "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Minimal", " ", "separation", " ", "in", " ", "rad"}],
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"angsepcut", "=", 
                 RowBox[{"AngSepCutid", "[", 
                  RowBox[{"pdg1", ",", "pdg2"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"angsepcut", "\[NotEqual]", "AngSepCutZero"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"cos", 
                    RowBox[{"(", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"between", " ", "decay", " ", "products"}]], 
                    ")"}]}], "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"ss12", "=", 
                    RowBox[{"CosAngleProducts", "[", 
                    RowBox[{
                    "px1lab", ",", "px2lab", ",", "py1lab", ",", "py2lab", 
                    ",", "pz1lab", ",", "pz2lab"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"Boolean", " ", "condition"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"cond", "=", 
                    RowBox[{"Boole", "[", 
                    RowBox[{"ss12", "<", 
                    RowBox[{"Cos", "[", "angsepcut", "]"}]}], "]"}]}]}]}], 
                 "]"}], ";", "\[IndentingNewLine]", "cond"}]}], 
              "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
             RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
             RowBox[{"RuntimeAttributes", "->", 
              RowBox[{"{", "Listable", "}"}]}], ",", 
             RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
          RowBox[{"ruleDown", "[", 
           RowBox[{"{", 
            RowBox[{"AngSepCutID", ",", "CosAngleProducts"}], "}"}], "]"}]}], 
         "/.", 
         RowBox[{"ruleOwn", "[", 
          RowBox[{"{", "AngSepCutZero", "}"}], "]"}]}], "//", 
        "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"conditionAngSepCuts", "=", 
     RowBox[{"With", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"AngSepCutid", "=", "AngSepCutID"}], "}"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Hold", "@", 
           RowBox[{"Compile", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"zfip", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"py2lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"pz2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
             RowBox[{"Module", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"cond", "=", "1."}], ",", "angsepcut", ",", "ss12", 
                 ",", 
                 RowBox[{"u1", "=", "0."}], ",", 
                 RowBox[{"u2", "=", "0."}], ",", 
                 RowBox[{"z", "=", "0."}]}], "}"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Minimal", " ", "separation", " ", "in", " ", "rad"}],
                 "*)"}], "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"angsepcut", "=", 
                 RowBox[{"AngSepCutid", "[", 
                  RowBox[{"pdg1", ",", "pdg2"}], "]"}]}], ";", 
                "\[IndentingNewLine]", 
                RowBox[{"If", "[", 
                 RowBox[{
                  RowBox[{"angsepcut", "\[NotEqual]", "AngSepCutZero"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{
                    RowBox[{"cos", 
                    RowBox[{"(", 
                    SubscriptBox["\[Theta]", 
                    RowBox[{"between", " ", "decay", " ", "products"}]], 
                    ")"}]}], ",", " ", 
                    RowBox[{
                    "including", " ", "the", " ", "gaussian", " ", "smearing",
                     " ", "from", " ", 
                    RowBox[{"detector", "'"}], "s", " ", "resolution"}]}], 
                   "*)"}], "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"u1", "=", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "1."}], "}"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"u2", "=", 
                    RowBox[{"RandomReal", "[", 
                    RowBox[{"{", 
                    RowBox[{"0.", ",", "1."}], "}"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"z", "=", 
                    RowBox[{
                    RowBox[{"Sqrt", "[", 
                    RowBox[{
                    RowBox[{"-", "2."}], " ", 
                    RowBox[{"Log", "[", "u1", "]"}]}], "]"}], " ", 
                    RowBox[{"Cos", "[", 
                    RowBox[{"2.", " ", "Pi", " ", "u2"}], "]"}]}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"ss12", "=", 
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"Cos", "[", 
                    RowBox[{
                    RowBox[{"ArcCos", "[", 
                    RowBox[{"CosAngleProducts", "[", 
                    RowBox[{
                    "px1lab", ",", "px2lab", ",", "py1lab", ",", "py2lab", 
                    ",", "pz1lab", ",", "pz2lab"}], "]"}], "]"}], "+", 
                    RowBox[{"angres", "*", "z"}]}], "]"}], "]"}]}], ";", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{"Boolean", " ", "condition"}], "*)"}], 
                   "\[IndentingNewLine]", 
                   RowBox[{"cond", "=", 
                    RowBox[{"Boole", "[", 
                    RowBox[{"ss12", ">", "angsepcut"}], "]"}]}]}]}], "]"}], 
                ";", "\[IndentingNewLine]", "cond"}]}], "\[IndentingNewLine]",
               "]"}], "\[IndentingNewLine]", ",", 
             RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
             RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
             RowBox[{"RuntimeAttributes", "->", 
              RowBox[{"{", "Listable", "}"}]}], ",", 
             RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
          RowBox[{"ruleDown", "[", 
           RowBox[{"{", 
            RowBox[{
            "AngSepCutID", ",", "CosAngleProducts", ",", "InverseCDFffplus"}],
             "}"}], "]"}]}], "/.", 
         RowBox[{"ruleOwn", "[", 
          RowBox[{"{", 
           RowBox[{"AngSepCutZero", ",", "angres"}], "}"}], "]"}]}], "//", 
        "ReleaseHold"}]}], "]"}]}], ";"}]}], "\[IndentingNewLine]", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "CompiledFunctionTools`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionAngSepCuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9055331880335803`*^9, 3.905533227740013*^9}, {
   3.90553325879588*^9, 3.9055333488766446`*^9}, 3.9055341200082865`*^9, {
   3.912534782962994*^9, 3.912534814263256*^9}, {3.9149934654293003`*^9, 
   3.914993465444955*^9}, {3.914993746928336*^9, 3.914993837683897*^9}, {
   3.915189602563064*^9, 3.9151896261796837`*^9}, {3.915189767092677*^9, 
   3.915189782639663*^9}, {3.915189839065855*^9, 3.915189861619813*^9}, 
   3.91520659484346*^9, 3.915637993764516*^9, {3.9156383983716383`*^9, 
   3.915638561328589*^9}, 3.915638753808144*^9, {3.915639231757437*^9, 
   3.915639232471761*^9}, {3.9158608819722357`*^9, 3.915860929786686*^9}, {
   3.915865289151552*^9, 3.9158653066991997`*^9}, {3.915866504097939*^9, 
   3.9158665061303263`*^9}, 3.918663674871049*^9, 3.9186637565314813`*^9},
 CellLabel->"In[81]:=",ExpressionUUID->"169aa994-e7f1-4026-897c-6fd77b7173b7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decay products pair - spatial separation cut ", "Subsubsection",
 CellChangeTimes->{{3.905532547151104*^9, 3.905532582736751*^9}, {
   3.905534116290319*^9, 3.9055341166128693`*^9}, {3.914993624695646*^9, 
   3.9149936347097583`*^9}, 3.915189606306554*^9, {3.918663151499013*^9, 
   3.918663154004801*^9}},ExpressionUUID->"580693cd-84d3-4994-8653-\
e19292626921"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionSScutsOld", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SScutid", "=", "SScutID"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"zfip", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "1."}], ",", "sscut", ",", 
               RowBox[{"sssquared", "=", "0."}], ",", 
               RowBox[{"coordprojval", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Minimal", " ", "separation", " ", "in", " ", "rad"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"sscut", "=", 
               RowBox[{"SScutID", "[", 
                RowBox[{"pdg1", ",", "pdg2"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"sscut", "\[NotEqual]", "SScutZero"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"coordprojval", "=", 
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"pdg1", "==", "22."}], "||", 
                    RowBox[{"pdg1", "==", "130."}]}], ",", 
                    "ECALpositionGivenExperiment", ",", 
                    "zMaxDecayVolumeGivenExperiment"}], "]"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"sssquared", "=", 
                  RowBox[{"SSproductsSquaredOld", "[", 
                   RowBox[{
                   "zfip", ",", "px1lab", ",", "px2lab", ",", "py1lab", ",", 
                    "py2lab", ",", "pz1lab", ",", "pz2lab", ",", 
                    "coordprojval"}], "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Boolean", " ", "condition"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", 
                  RowBox[{"Boole", "[", 
                   RowBox[{"sssquared", ">", 
                    SuperscriptBox["sscut", "2"]}], "]"}]}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "cond"}]}], "\[IndentingNewLine]", "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "->", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"Parallelization", "->", "True"}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<InlineExternalDefinitions\>\"", "->", "True"}], 
              ",", 
              RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}]}], 
             "}"}]}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{"SScutID", ",", "SSproductsSquaredOld"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "SScutZero", ",", "ECALpositionGivenExperiment", ",", 
          "zMaxDecayVolumeGivenExperiment"}], "}"}], "]"}]}], "//", 
      "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "CompiledFunctionTools`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionSScutsOld"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"conditionSScuts", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"SScutid", "=", "SScutID"}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"xfin1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"xfin2", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"yfin1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"yfin2", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "1."}], ",", "sscut", ",", 
               RowBox[{"sssquared", "=", "0."}], ",", 
               RowBox[{"coordprojval", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{"Minimal", " ", "separation", " ", "in", " ", "rad"}], 
              "*)"}], "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"sscut", "=", 
               RowBox[{"SScutID", "[", 
                RowBox[{"pdg1", ",", "pdg2"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"sscut", "\[NotEqual]", "SScutZero"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"sssquared", "=", 
                  RowBox[{"SSproductsSquared", "[", 
                   RowBox[{
                   "xfin1", ",", "xfin2", ",", "yfin1", ",", "yfin2"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Boolean", " ", "condition"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", 
                  RowBox[{"Boole", "[", 
                   RowBox[{"sssquared", ">", 
                    SuperscriptBox["sscut", "2"]}], "]"}]}]}]}], "]"}], ";", 
              "\[IndentingNewLine]", "cond"}]}], "\[IndentingNewLine]", "]"}],
            "\[IndentingNewLine]", ",", 
           RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "->", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"Parallelization", "->", "True"}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"\"\<InlineExternalDefinitions\>\"", "->", "True"}], 
              ",", 
              RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}]}], 
             "}"}]}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{"SScutID", ",", "SSproductsSquared"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", "SScutZero", "}"}], "]"}]}], "//", "ReleaseHold"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"<<", "CompiledFunctionTools`"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionSScuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.9055331880335803`*^9, 3.905533227740013*^9}, {
   3.90553325879588*^9, 3.9055333488766446`*^9}, 3.9055341200082865`*^9, {
   3.912534782962994*^9, 3.912534814263256*^9}, {3.9149934654293003`*^9, 
   3.914993465444955*^9}, {3.914993746928336*^9, 3.914993837683897*^9}, {
   3.915189602563064*^9, 3.9151896261796837`*^9}, {3.915189767092677*^9, 
   3.915189782639663*^9}, {3.915189839065855*^9, 3.915189861619813*^9}, 
   3.91520659484346*^9, 3.915637993764516*^9, {3.9156383983716383`*^9, 
   3.915638561328589*^9}, 3.915638753808144*^9, {3.915639231757437*^9, 
   3.915639232471761*^9}, {3.9158608819722357`*^9, 3.915860929786686*^9}, {
   3.915865289151552*^9, 3.9158653066991997`*^9}, {3.915866504097939*^9, 
   3.9158665061303263`*^9}, {3.9186631663509665`*^9, 3.918663247631018*^9}, {
   3.918663296047098*^9, 3.918663409748934*^9}, {3.918663446811565*^9, 
   3.9186634797061806`*^9}, {3.918663564722491*^9, 3.9186636074555073`*^9}, {
   3.91866366202991*^9, 3.9186636621893425`*^9}, {3.918663773718376*^9, 
   3.918663786384828*^9}, {3.9186638657049093`*^9, 3.918663877700884*^9}, {
   3.918663920137243*^9, 3.918663941598735*^9}, {3.918664157758288*^9, 
   3.918664170844573*^9}, {3.9187067855546317`*^9, 3.918706804814825*^9}, 
   3.919068719465497*^9},
 CellLabel->"In[85]:=",ExpressionUUID->"9a39c6b2-1ab1-451c-b52c-5e86151cb2e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decay products pair - Invariant mass cut", "Subsubsection",
 CellChangeTimes->{{3.905532547151104*^9, 3.905532582736751*^9}, {
   3.9055326722485633`*^9, 3.905532675159629*^9}, 
   3.905534118019686*^9},ExpressionUUID->"604c2bc3-3fe8-4533-8e82-\
5df33369622d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"conditionminvCuts", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"minvCutLowerid", "=", "minvCutLowerID"}], ",", 
       RowBox[{"minvCutUpperid", "=", "minvCutUpperID"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"pdg1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"charge1", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pdg2", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"E1lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"px2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"py2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"pz2lab", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"E2lab", ",", "_Real"}], "}"}]}], "}"}], ",", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "1."}], ",", 
               RowBox[{"minv2cutlow", "=", 
                SuperscriptBox["minvCutLowerZero", "2"]}], ",", 
               RowBox[{"minv2cutupp", "=", 
                SuperscriptBox["minvCutUpperZero", "2"]}], ",", "minv2val"}], 
              "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"(*", 
              RowBox[{
              "Minimal", " ", "spatial", " ", "separation", " ", "cut", " ", 
               "for", " ", "the", " ", "decay", " ", "products"}], "*)"}], 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"IfminvLowerCuts", "==", "1"}], ",", 
                RowBox[{"minv2cutlow", "=", 
                 SuperscriptBox[
                  RowBox[{"minvCutLowerid", "[", 
                   RowBox[{"pdg1", ",", "charge1", ",", "pdg2"}], "]"}], 
                  "2"]}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"IfminvUpperCuts", "==", "1"}], ",", 
                RowBox[{"minv2cutupp", "=", 
                 SuperscriptBox[
                  RowBox[{"minvCutUpperid", "[", 
                   RowBox[{"pdg1", ",", "charge1", ",", "pdg2"}], "]"}], 
                  "2"]}]}], "]"}], ";", "\[IndentingNewLine]", 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"minv2cutlow", "\[NotEqual]", 
                   SuperscriptBox["minvCutLowerZero", "2"]}], "||", 
                  RowBox[{"minv2cutupp", "\[NotEqual]", 
                   SuperscriptBox["minvCutUpperZero", "2"]}]}], ")"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"minv2val", "=", 
                  RowBox[{"minvProductsSquared", "[", 
                   RowBox[{
                   "px1lab", ",", "py1lab", ",", "pz1lab", ",", "E1lab", ",", 
                    "px2lab", ",", "py2lab", ",", "pz2lab", ",", "E2lab"}], 
                   "]"}]}], ";", "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", 
                  RowBox[{"Boole", "[", 
                   RowBox[{
                   "minv2cutlow", "<=", "minv2val", "<=", "minv2cutupp"}], 
                   "]"}]}]}]}], "]"}], ";", "\[IndentingNewLine]", "cond"}]}],
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
           RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "->", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", "minvProductsSquared", "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "minvCutLowerZero", ",", "minvCutUpperZero", ",", "IfminvLowerCuts", 
          ",", "IfminvUpperCuts"}], "}"}], "]"}]}], "//", "ReleaseHold"}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "conditionminvCuts"}], ";"}]}], "Input",
 CellChangeTimes->{{3.905533232079184*^9, 3.905533238078718*^9}, {
   3.905533366155468*^9, 3.9055335187311*^9}, 3.905533900592004*^9, {
   3.90584680917666*^9, 3.9058468832558546`*^9}, {3.912534819977749*^9, 
   3.912534895817213*^9}},
 CellLabel->"In[91]:=",ExpressionUUID->"3c0cb102-c5b8-4423-8a14-96b69ae6fc8f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Full routine calculating the decay products acceptance", "Subsection",
 CellChangeTimes->{{3.9055341759864006`*^9, 
  3.905534187349038*^9}},ExpressionUUID->"64ef572e-f6a2-454a-9e86-\
c2c91a3c595e"],

Cell[CellGroupData[{

Cell["At least two particles pass the acceptance criteria", "Subsubsection",
 CellChangeTimes->{
  3.9055274151004214`*^9, {3.90553407587924*^9, 3.905534077544625*^9}, {
   3.905534124633428*^9, 3.9055341308552237`*^9}, {3.905534192713667*^9, 
   3.9055342031436033`*^9}},ExpressionUUID->"3c63490c-4043-4632-92dc-\
aa21b0f96b24"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DecayAcceptanceComp", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CondGeom", "=", "conditionDecayAcceptanceGeometric"}], ",", 
       RowBox[{"CondMinv", "=", "conditionminvCuts"}], ",", 
       RowBox[{"CondAS", "=", "conditionAngSepCuts"}], ",", 
       RowBox[{"CondSS", "=", "conditionSScuts"}], ",", 
       RowBox[{"CondIP", "=", "conditionIPcuts"}], ",", 
       RowBox[{"CondPT", "=", "conditionpTcuts"}], ",", 
       RowBox[{"CondE", "=", "conditionEnergyCuts"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "1"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "TablePhaseSpaceDecayProducts", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"eventslengths", ",", "_Integer", ",", "2"}], "}"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "cond", ",", "count", ",", "FirstCoordinateProduct1", ",", 
               "SecondCoordinateProduct1", ",", "FirstCoordinateProduct2", 
               ",", "SecondCoordinateProduct2", ",", "efip", ",", "zfip", ",",
                "\[Theta]fip", ",", "\[Phi]fip", ",", 
               RowBox[{"px1rest", "=", "0."}], ",", 
               RowBox[{"py1rest", "=", "0."}], ",", 
               RowBox[{"pz1rest", "=", "0."}], ",", 
               RowBox[{"E1rest", "=", "0."}], ",", 
               RowBox[{"px2rest", "=", "0."}], ",", 
               RowBox[{"py2rest", "=", "0."}], ",", 
               RowBox[{"pz2rest", "=", "0."}], ",", 
               RowBox[{"E2rest", "=", "0."}], ",", "px1lab", ",", "px2lab", 
               ",", "py1lab", ",", "py2lab", ",", "pz1lab", ",", "pz2lab", 
               ",", "xdecayfip", ",", "ydecayfip", ",", "pdg1", ",", "pdg2", 
               ",", 
               RowBox[{"E1lab", "=", "0."}], ",", 
               RowBox[{"E2lab", "=", "0."}], ",", "charge1", ",", "charge2", 
               ",", 
               RowBox[{"len", "=", 
                RowBox[{"Length", "[", "eventslengths", "]"}]}], ",", 
               RowBox[{"nproducts", "=", "0"}], ",", 
               RowBox[{"f1max", "=", "0"}], ",", "zmagnMzfip", ",", 
               RowBox[{"in1", "=", "0"}], ",", 
               RowBox[{"in2", "=", "0"}], ",", 
               RowBox[{"min", "=", "0"}], ",", "pxfip", ",", "pyfip", ",", 
               "pzfip", ",", "pfip", ",", 
               RowBox[{"Coord1FinProd1", "=", "0."}], ",", 
               RowBox[{"Coord2FinProd1", "=", "0."}], ",", 
               RowBox[{"Coord1FinProd2", "=", "0."}], ",", 
               RowBox[{"Coord2FinProd2", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"count", "=", " ", "0."}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Values", " ", "of", " ", "the", " ", "LLP", " ", 
                 SubscriptBox["\[Epsilon]", "az"]}], ",", " ", "E", ",", " ", 
                "\[Theta]", ",", " ", "\[Phi]", ",", " ", 
                SubscriptBox["x", "long"]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"efip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexELLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"zfip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexzLLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Theta]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Theta]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Phi]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pfip", "=", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["efip", "2"], "-", 
                 SuperscriptBox["mLLP", "2"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pxfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Phi]fip", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pyfip", "=", 
               RowBox[{"pxfip", "*", 
                FractionBox[
                 RowBox[{"Sin", "[", "\[Phi]fip", "]"}], 
                 RowBox[{"Cos", "[", "\[Phi]fip", "]"}]]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pzfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Distance", " ", "between", " ", "the", " ", "end", " ", "of", 
                " ", "the", " ", "dipole", " ", "magnet", " ", "and", " ", 
                "the", " ", "LLP", " ", "decay", " ", "point"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"zmagnMzfip", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"zfip", "<", "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{
                 "zMagnetMaxGivenExperiment", "-", 
                  "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{"zMagnetMaxGivenExperiment", "-", "zfip"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"xdecayfip", "=", 
               RowBox[{"LLPdecayVertexX", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"ydecayfip", "=", 
               RowBox[{"LLPdecayVertexY", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Looping", " ", "over", " ", "simulated", " ", "decays"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"cond", "=", "0."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"min", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "1"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"nproducts", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "2"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"f1max", "=", 
                  RowBox[{"nproducts", "-", "2"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Looping", " ", "over", " ", "product1"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"in1", "=", 
                    RowBox[{"min", "+", "f1"}]}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{
                    "Electric", " ", "charge", " ", "of", " ", "the", " ", 
                    "decay", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{"charge1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexcharge1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "first", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"pdg1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpdg1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "rest", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpx1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpy1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpz1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexE1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1lab", "=", 
                    RowBox[{"pproductLab1Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1lab", "=", 
                    RowBox[{"pproductLab2Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1lab", "=", 
                    RowBox[{"pproductLab3Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1lab", "=", 
                    RowBox[{"EproductLabCart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "cond", ",", "Coord1FinProd1", ",", "Coord2FinProd1"}], 
                    "}"}], "=", 
                    RowBox[{"CondGeom", "[", 
                    RowBox[{
                    "charge1", ",", "pdg1", ",", "xdecayfip", ",", 
                    "ydecayfip", ",", "zfip", ",", "px1lab", ",", "py1lab", 
                    ",", "pz1lab", ",", "E1lab", ",", "zmagnMzfip"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    "If", " ", "geometric", " ", "part", " ", "of", " ", 
                    "the", " ", "decay", " ", "acceptance", " ", "for", " ", 
                    "product1", " ", "is", " ", "non"}], "-", 
                    RowBox[{
                    "zero", " ", "then", " ", "proceeding", " ", "to", " ", 
                    RowBox[{"product2", ".", " ", "If"}], " ", "not"}]}], ",",
                     " ", 
                    RowBox[{
                    "then", " ", "go", " ", "to", " ", "the", " ", "other", 
                    " ", "product1"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cond", "==", "1"}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Do", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"in2", "=", 
                    RowBox[{"in1", "+", "f2"}]}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"charge2", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexcharge1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "If", " ", "the", " ", "total", " ", "electric", " ", 
                    "charge", " ", "of", " ", "the", " ", "pair", " ", "is", 
                    " ", "not", " ", "zero"}], ",", " ", 
                    RowBox[{
                    "then", " ", "the", " ", "acceptance", " ", "is", " ", 
                    "automatically", " ", "0.", " ", "If", " ", "zero"}], ",",
                     " ", 
                    RowBox[{
                    "the", " ", "the", " ", "routine", " ", "below", " ", 
                    "is", " ", "launched"}]}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"charge1", "!=", 
                    RowBox[{"-", "charge2"}]}], ",", " ", 
                    RowBox[{"cond", "=", "0"}], ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"px2rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexpx1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py2rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexpy1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz2rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexpz1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E2rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexE1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"px2lab", "=", 
                    RowBox[{"pproductLab1Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px2rest", ",", "py2rest", ",", "pz2rest", 
                    ",", "E2rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py2lab", "=", 
                    RowBox[{"pproductLab2Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px2rest", ",", "py2rest", ",", "pz2rest", 
                    ",", "E2rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz2lab", "=", 
                    RowBox[{"pproductLab3Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px2rest", ",", "py2rest", ",", "pz2rest", 
                    ",", "E2rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E2lab", "=", 
                    RowBox[{"EproductLabCart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px2rest", ",", "py2rest", ",", "pz2rest", 
                    ",", "E2rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Abs", "[", 
                    RowBox[{"px1rest", "+", "px2rest"}], "]"}], ">", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "5."}]]}], ",", 
                    RowBox[{
                    RowBox[{"cond", "=", "0."}], ";", 
                    RowBox[{"Break", "[", "]"}], ";"}]}], "]"}], ";"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "second", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"pdg2", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in2", ",", 
                    "indexpdg1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "cond", ",", "Coord1FinProd2", ",", "Coord2FinProd2"}], 
                    "}"}], "=", 
                    RowBox[{"CondGeom", "[", 
                    RowBox[{
                    "charge2", ",", "pdg2", ",", "xdecayfip", ",", 
                    "ydecayfip", ",", "zfip", ",", "px2lab", ",", "py2lab", 
                    ",", "pz2lab", ",", "E2lab", ",", "zmagnMzfip"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "If", " ", "other", " ", "cuts", " ", "are", " ", 
                    "required", " ", "and", " ", "the", " ", "geometric", " ",
                     "condition", " ", "for", " ", "product2", " ", "is", " ",
                     "1", " ", "then", " ", "evaluate", " ", "the", " ", 
                    "acceptance", " ", "for", " ", "these", " ", "cuts"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], "&&", 
                    RowBox[{"WhetherCuts", "==", "1"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "PDG", " ", "identifiers", " ", "of", " ", "the", " ", 
                    "decay", " ", "products"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Values", " ", "of", " ", "the", " ", "energy", " ", 
                    "cuts", " ", "for", " ", "the", " ", "decay", " ", 
                    "products"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfEcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "==", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondE", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "E1lab", ",", 
                    "E2lab"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", 
                    SubscriptBox["p", "T"], " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfpTcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondPT", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "px1lab", ",", 
                    "py1lab", ",", "px2lab", ",", "py2lab"}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", "IP", " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfIPcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondIP", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "xdecayfip", ",", "ydecayfip", 
                    ",", "zfip", ",", "px1lab", ",", "px2lab", ",", "py1lab", 
                    ",", "py2lab", ",", "pz1lab", ",", "pz2lab"}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", "spatial", " ", "separation", " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfAngSepCuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondAS", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "zfip", ",", "px1lab", ",", 
                    "px2lab", ",", "py1lab", ",", "py2lab", ",", "pz1lab", 
                    ",", "pz2lab"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "THe", " ", "spatial", " ", "separation", " ", "cut"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfSScuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "==", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondSS", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "Coord1FinProd1", ",", 
                    "Coord2FinProd1", ",", "Coord1FinProd2", ",", 
                    "Coord2FinProd2"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "The", " ", "invariant", " ", "mass", " ", "cut"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfminvCuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1."}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondMinv", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "px1lab", ",", 
                    "py1lab", ",", "pz1lab", ",", "E1lab", ",", "px2lab", ",",
                     "py2lab", ",", "pz2lab", ",", "E2lab"}], "]"}]}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "If", " ", "the", " ", "acceptance", " ", "after", " ", 
                    "all", " ", "cuts", " ", "is", " ", "1"}], ",", " ", 
                    RowBox[{
                    "then", " ", "add", " ", "it", " ", "to", " ", "the", " ",
                     "counter", " ", "and", " ", "break", " ", "the", " ", 
                    "cycle"}]}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], ",", 
                    RowBox[{
                    RowBox[{"count", "+=", "cond"}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}]}], ",", 
                    RowBox[{"{", 
                    RowBox[{"f2", ",", "1", ",", 
                    RowBox[{"nproducts", "-", "f1", "-", "1"}], ",", "1"}], 
                    "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "If", " ", "the", " ", "acceptance", " ", "is", " ", "1", 
                    " ", "then", " ", "exit", " ", "the", " ", "cycle"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}]}], ",", 
                   RowBox[{"{", 
                    RowBox[{"f1", ",", "0", ",", "f1max", ",", "1"}], "}"}]}],
                   "]"}]}], "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Returns", " ", "the", " ", "decay", " ", "acceptance"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"count", "/", "len"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "\[Rule]", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}], 
             "}"}]}], ",", 
           RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{
          "LLPdecayVertexX", ",", "LLPdecayVertexY", ",", "pproductLab1Cart", 
           ",", "pproductLab2Cart", ",", "pproductLab3Cart", ",", 
           "EproductLabCart"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "indexpdg1", ",", "indexELLP", ",", "indexzLLP", ",", 
          "index\[Theta]LLP", ",", "index\[Phi]LLP", ",", "indexLLPazAcc", 
          ",", "indexpx1", ",", "indexpy1", ",", "indexpz1", ",", "indexE1", 
          ",", "LengthDataProduct", ",", "WhetherCuts", ",", "indexcharge1", 
          ",", "zMagnetMinGivenExperiment", ",", "zMagnetMaxGivenExperiment", 
          ",", "IfEcuts", ",", "IfpTcuts", ",", "IfAngSepCuts", ",", 
          "IfIPcuts", ",", "IfminvCuts", ",", "IfSScuts"}], "}"}], "]"}]}], "//",
       "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "DecayAcceptanceComp"}], ";"}]}], "Input",
 CellChangeTimes->{{3.905527491102636*^9, 3.905527492547829*^9}, {
   3.905527536763167*^9, 3.905527569631588*^9}, {3.9055276055004196`*^9, 
   3.905527605761074*^9}, {3.905527694103842*^9, 3.905527696457396*^9}, {
   3.9055277363764334`*^9, 3.90552773889065*^9}, {3.905528025954468*^9, 
   3.905528056926959*^9}, {3.905529540979798*^9, 3.9055296002136154`*^9}, {
   3.9055297847232103`*^9, 3.905529803615557*^9}, {3.905529838296819*^9, 
   3.9055298734305954`*^9}, {3.9055307313628902`*^9, 3.905530734725708*^9}, {
   3.905530781938383*^9, 3.905530794215193*^9}, {3.9055309909607368`*^9, 
   3.905530994046864*^9}, {3.905532103842718*^9, 3.9055321250875483`*^9}, {
   3.9055331339826517`*^9, 3.905533161310554*^9}, 3.905533449660816*^9, {
   3.9055335290841*^9, 3.905533811978432*^9}, {3.905533920716429*^9, 
   3.905534026785475*^9}, 3.9055340649393373`*^9, 3.9058414663253417`*^9, 
   3.90584149743476*^9, {3.905841537758681*^9, 3.905841553296379*^9}, {
   3.905841603180774*^9, 3.905841626248714*^9}, {3.910249099638576*^9, 
   3.9102491049485826`*^9}, {3.910249234568329*^9, 3.91024924532967*^9}, {
   3.9120766737114053`*^9, 3.9120767021412497`*^9}, {3.912093993516212*^9, 
   3.912093999487069*^9}, {3.912151430267984*^9, 3.912151497836737*^9}, {
   3.9121515410967*^9, 3.912151571850938*^9}, 3.912159803347586*^9, {
   3.912534911997435*^9, 3.9125349211150208`*^9}, {3.912535224480055*^9, 
   3.912535252374998*^9}, {3.912671806808025*^9, 3.9126718069600697`*^9}, {
   3.91284286470712*^9, 3.912842864909406*^9}, {3.9128457048961*^9, 
   3.912845705043309*^9}, {3.914088057377745*^9, 3.914088059927469*^9}, {
   3.914088403597372*^9, 3.9140884204948463`*^9}, {3.9140884841874523`*^9, 
   3.914088528679906*^9}, {3.914088688198037*^9, 3.9140887194429235`*^9}, {
   3.914088813299428*^9, 3.914088847921578*^9}, {3.914089073348243*^9, 
   3.914089073598226*^9}, {3.914089104755252*^9, 3.9140891527979937`*^9}, {
   3.914089189837954*^9, 3.914089208170019*^9}, 3.914089243282388*^9, {
   3.914089304270229*^9, 3.9140893059466105`*^9}, {3.914089347866799*^9, 
   3.9140893494122767`*^9}, {3.914089381791878*^9, 3.914089386842063*^9}, {
   3.914089611201625*^9, 3.914089611328216*^9}, {3.914089684869022*^9, 
   3.914089698569595*^9}, {3.914089831622888*^9, 3.9140898348595147`*^9}, {
   3.91408986820553*^9, 3.914089884753129*^9}, {3.9140899654152503`*^9, 
   3.914089975840703*^9}, {3.9140901274169436`*^9, 3.914090148305258*^9}, {
   3.914090218327608*^9, 3.914090221436714*^9}, {3.91409035855694*^9, 
   3.914090374984599*^9}, {3.9140904766967783`*^9, 3.9140904950670033`*^9}, {
   3.914091551295477*^9, 3.91409155441693*^9}, {3.9149934654762*^9, 
   3.914993465491789*^9}, {3.915437152128363*^9, 3.915437152434939*^9}, 
   3.9168904429277716`*^9, {3.916897301095364*^9, 3.91689730205436*^9}, {
   3.918664030319759*^9, 3.918664141683075*^9}, {3.91906855065151*^9, 
   3.919068605189381*^9}, {3.919068749089728*^9, 3.919068810159018*^9}, {
   3.919069021691289*^9, 3.919069026072765*^9}},
 CellLabel->"In[94]:=",ExpressionUUID->"71c90f15-fcf2-4d70-af48-3088e4a46916"]
}, Open  ]],

Cell[CellGroupData[{

Cell["At least n decay products pass the acceptance criteria", "Subsubsection",
 CellChangeTimes->{
  3.9055274151004214`*^9, {3.90553407587924*^9, 3.905534077544625*^9}, {
   3.905534124633428*^9, 3.9055341308552237`*^9}, {3.905534192713667*^9, 
   3.9055342031436033`*^9}, {3.911964910814978*^9, 3.911964944062765*^9}, {
   3.9119659375534263`*^9, 3.911965940704163*^9}, {3.911967165193519*^9, 
   3.911967181006828*^9}, {3.9200129227428865`*^9, 
   3.920012924357358*^9}},ExpressionUUID->"2936bf45-8472-499f-bced-\
227eae216e5a"],

Cell[CellGroupData[{

Cell[BoxData["IfEcuts"], "Input",
 CellLabel->
  "In[663]:=",ExpressionUUID->"01221aba-6147-4b30-b07b-3bd90231b6a4"],

Cell[BoxData[
 FormBox["0", TraditionalForm]], "Output",
 CellChangeTimes->{3.927607770437063*^9},
 CellLabel->
  "Out[663]=",ExpressionUUID->"fc305b3e-7c32-4138-88cd-09c1d87b2826"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DecayAcceptancenProductsComp", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CondGeom", "=", "conditionDecayAcceptanceGeometric"}], ",", 
       RowBox[{"CondMinv", "=", "conditionminvCuts"}], ",", 
       RowBox[{"CondSS", "=", "conditionAngSepCuts"}], ",", 
       RowBox[{"CondIP", "=", "conditionIPcuts"}], ",", 
       RowBox[{"CondPT", "=", "conditionpTcuts"}], ",", 
       RowBox[{"CondE", "=", "conditionEnergyCuts"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "1"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "TablePhaseSpaceDecayProducts", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"eventslengths", ",", "_Integer", ",", "2"}], "}"}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"tracksmin", ",", "_Integer"}], "}"}]}], "}"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "0."}], ",", "count", ",", "efip", ",", 
               "zfip", ",", "\[Theta]fip", ",", "\[Phi]fip", ",", "px1rest", 
               ",", "py1rest", ",", "pz1rest", ",", "E1rest", ",", "px1lab", 
               ",", 
               RowBox[{"px2lab", "=", "0."}], ",", "py1lab", ",", 
               RowBox[{"py2lab", "=", "0."}], ",", "pz1lab", ",", 
               RowBox[{"pz2lab", "=", "0."}], ",", "xdecayfip", ",", 
               "ydecayfip", ",", "condprod1", ",", "condprod2", ",", "pdg1", 
               ",", 
               RowBox[{"pdg2", "=", "0."}], ",", "E1lab", ",", 
               RowBox[{"E2lab", "=", "0."}], ",", "acc", ",", "acc2", ",", 
               "charge1", ",", "charge2", ",", 
               RowBox[{"len", "=", 
                RowBox[{"Length", "[", "eventslengths", "]"}]}], ",", 
               RowBox[{"nproducts", "=", "0"}], ",", 
               RowBox[{"f1max", "=", "0"}], ",", "zmagnMzfip", ",", 
               RowBox[{"conde", "=", "0."}], ",", "pfip", ",", "pxfip", ",", 
               "pyfip", ",", "pzfip", ",", 
               RowBox[{"in1", "=", "0"}], ",", 
               RowBox[{"min", "=", "0"}], ",", 
               RowBox[{"trackcounter", "=", "0"}], ",", 
               RowBox[{"Coord1FinProd", "=", "0."}], ",", 
               RowBox[{"Coord2FinProd", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"count", "=", " ", "0."}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Values", " ", "of", " ", "the", " ", "LLP", " ", 
                 SubscriptBox["\[Epsilon]", "az"]}], ",", " ", "E", ",", " ", 
                "\[Theta]", ",", " ", "\[Phi]", ",", " ", 
                SubscriptBox["x", "long"]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"efip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexELLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"zfip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexzLLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Theta]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Theta]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Phi]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pfip", "=", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["efip", "2"], "-", 
                 SuperscriptBox["mLLP", "2"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pxfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Phi]fip", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pyfip", "=", 
               RowBox[{"pxfip", "*", 
                FractionBox[
                 RowBox[{"Sin", "[", "\[Phi]fip", "]"}], 
                 RowBox[{"Cos", "[", "\[Phi]fip", "]"}]]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pzfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Distance", " ", "between", " ", "the", " ", "end", " ", "of", 
                " ", "the", " ", "dipole", " ", "magnet", " ", "and", " ", 
                "the", " ", "LLP", " ", "decay", " ", "point"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"zmagnMzfip", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"zfip", "<", "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{
                 "zMagnetMaxGivenExperiment", "-", 
                  "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{"zMagnetMaxGivenExperiment", "-", "zfip"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"xdecayfip", "=", 
               RowBox[{"LLPdecayVertexX", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"ydecayfip", "=", 
               RowBox[{"LLPdecayVertexY", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Looping", " ", "over", " ", "simulated", " ", "decays"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"trackcounter", "=", "0"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", 
                  RowBox[{"conde", "=", "1."}]}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"min", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "1"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"nproducts", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "2"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"f1max", "=", 
                  RowBox[{"nproducts", "-", "1"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Looping", " ", "over", " ", "product1"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"in1", "=", 
                    RowBox[{"min", "+", "f1"}]}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{
                    "Electric", " ", "charge", " ", "of", " ", "the", " ", 
                    "decay", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{"charge1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexcharge1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "first", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"pdg1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpdg1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "rest", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpx1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpy1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpz1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexE1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Energy", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"E1lab", "=", 
                    RowBox[{"EproductLabCart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IfEcuts", "==", "1"}], ",", 
                    RowBox[{"conde", "=", 
                    RowBox[{"CondE", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "E1lab", ",", 
                    "E2lab"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "decay", " ", "product", " ",
                     "if", " ", "the", " ", "energy", " ", "is", " ", 
                    "sufficiently", " ", "large"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"conde", "==", "1"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{"3", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"px1lab", "=", 
                    RowBox[{"pproductLab1Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1lab", "=", 
                    RowBox[{"pproductLab2Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1lab", "=", 
                    RowBox[{"pproductLab3Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "cond", ",", "Coord1FinProd", ",", "Coord2FinProd"}], 
                    "}"}], "=", 
                    RowBox[{"CondGeom", "[", 
                    RowBox[{
                    "charge1", ",", "pdg1", ",", "xdecayfip", ",", 
                    "ydecayfip", ",", "zfip", ",", "px1lab", ",", "py1lab", 
                    ",", "pz1lab", ",", "E1lab", ",", "zmagnMzfip"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "If", " ", "other", " ", "cuts", " ", "are", " ", 
                    "required", " ", "and", " ", "the", " ", "geometric", " ",
                     "condition", " ", "for", " ", "product2", " ", "is", " ",
                     "1", " ", "then", " ", "evaluate", " ", "the", " ", 
                    "acceptance", " ", "for", " ", "these", " ", "cuts"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], "&&", 
                    RowBox[{"WhetherCuts", "==", "1"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "PDG", " ", "identifiers", " ", "of", " ", "the", " ", 
                    "decay", " ", "products"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", 
                    SubscriptBox["p", "T"], " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfpTcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondPT", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "px1lab", ",", 
                    "py1lab", ",", "px2lab", ",", "py2lab"}], "]"}]}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"If", " ", "condition", " ", "is", " ", "1"}], 
                    ",", " ", 
                    RowBox[{
                    "then", " ", "increase", " ", "the", " ", "detected", " ",
                     "track", " ", "counter"}]}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], ",", 
                    RowBox[{"trackcounter", "+=", "1"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"trackcounter", ">=", "tracksmin"}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"f1", ",", "0", ",", "f1max", ",", "1"}], "}"}]}],
                   "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"trackcounter", ">=", "tracksmin"}], ",", 
                   RowBox[{"count", "+=", "cond"}]}], "]"}], ";"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Returns", " ", "the", " ", "decay", " ", "acceptance"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"count", "/", "len"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "\[Rule]", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}], 
             "}"}]}], ",", 
           RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{
          "LLPdecayVertexX", ",", "LLPdecayVertexY", ",", "pproductLab1Cart", 
           ",", "pproductLab2Cart", ",", "pproductLab3Cart", ",", 
           "EproductLabCart"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "indexpdg1", ",", "indexELLP", ",", "indexzLLP", ",", 
          "index\[Theta]LLP", ",", "index\[Phi]LLP", ",", "indexLLPazAcc", 
          ",", "indexpx1", ",", "indexpy1", ",", "indexpz1", ",", "indexE1", 
          ",", "LengthDataProduct", ",", "WhetherCuts", ",", "indexcharge1", 
          ",", "zMagnetMaxGivenExperiment", ",", "zMagnetMinGivenExperiment", 
          ",", "IfEcuts", ",", "IfpTcuts", ",", "IfAngSepCuts", ",", 
          "IfIPcuts", ",", "IfminvCuts"}], "}"}], "]"}]}], "//", 
      "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "DecayAcceptanceAllProductsComp"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.905527491102636*^9, 3.905527492547829*^9}, {
   3.905527536763167*^9, 3.905527569631588*^9}, {3.9055276055004196`*^9, 
   3.905527605761074*^9}, {3.905527694103842*^9, 3.905527696457396*^9}, {
   3.9055277363764334`*^9, 3.90552773889065*^9}, {3.905528025954468*^9, 
   3.905528056926959*^9}, {3.905529540979798*^9, 3.9055296002136154`*^9}, {
   3.9055297847232103`*^9, 3.905529803615557*^9}, {3.905529838296819*^9, 
   3.9055298734305954`*^9}, {3.9055307313628902`*^9, 3.905530734725708*^9}, {
   3.905530781938383*^9, 3.905530794215193*^9}, {3.9055309909607368`*^9, 
   3.905530994046864*^9}, {3.905532103842718*^9, 3.9055321250875483`*^9}, {
   3.9055331339826517`*^9, 3.905533161310554*^9}, 3.905533449660816*^9, {
   3.9055335290841*^9, 3.905533811978432*^9}, {3.905533920716429*^9, 
   3.905534026785475*^9}, 3.9055340649393373`*^9, 3.9058414663253417`*^9, 
   3.90584149743476*^9, {3.905841537758681*^9, 3.905841553296379*^9}, {
   3.905841603180774*^9, 3.905841626248714*^9}, {3.910249099638576*^9, 
   3.9102491049485826`*^9}, {3.910249234568329*^9, 3.91024924532967*^9}, {
   3.911965041112008*^9, 3.9119650470628176`*^9}, {3.911965138916882*^9, 
   3.911965161012609*^9}, {3.911965496725523*^9, 3.911965580511321*^9}, {
   3.91196565425823*^9, 3.911965686940561*^9}, {3.911965962303961*^9, 
   3.911965989535017*^9}, {3.911966024029789*^9, 3.911966091305372*^9}, {
   3.911966137840969*^9, 3.9119661838404512`*^9}, {3.9119662284939775`*^9, 
   3.911966237454152*^9}, {3.911966275235891*^9, 3.9119663917156*^9}, 
   3.911966481691195*^9, {3.9119665135971575`*^9, 3.911966525754816*^9}, {
   3.911968777578771*^9, 3.911968855032695*^9}, {3.9121507089597197`*^9, 
   3.912150737103079*^9}, {3.912150806318247*^9, 3.912150809687101*^9}, {
   3.9121508409510684`*^9, 3.912150960751144*^9}, {3.912151005989683*^9, 
   3.912151102657238*^9}, {3.912151354730209*^9, 3.912151403321566*^9}, {
   3.9121515794915357`*^9, 3.9121515805974636`*^9}, {3.912535273306817*^9, 
   3.91253535886907*^9}, {3.9149934655391774`*^9, 3.9149934655391774`*^9}, {
   3.915437152576473*^9, 3.915437152786163*^9}, {3.919962565874504*^9, 
   3.9199625731291084`*^9}, {3.9199626902098465`*^9, 3.919962772319756*^9}, {
   3.919962810889751*^9, 3.919962820652965*^9}, {3.919963031052453*^9, 
   3.9199630354599934`*^9}, {3.919963624670143*^9, 3.919963644327765*^9}, {
   3.9199637747098002`*^9, 3.919963813789984*^9}, {3.9199638638798923`*^9, 
   3.919963922139797*^9}, {3.919964669580201*^9, 3.919964695466121*^9}, {
   3.919964807900162*^9, 3.9199648080318184`*^9}, {3.9199649971301303`*^9, 
   3.91996501066543*^9}, {3.9199650840998683`*^9, 3.9199651261800337`*^9}, {
   3.919965170270086*^9, 3.9199651744424453`*^9}, {3.919965221117121*^9, 
   3.9199652445892773`*^9}, {3.9199653521713552`*^9, 
   3.9199654279213104`*^9}, {3.919965466509991*^9, 3.919965515581992*^9}, {
   3.919965559160005*^9, 3.919965628891943*^9}, {3.9199656623420906`*^9, 
   3.919965664570255*^9}, {3.919965974922825*^9, 3.919966068193695*^9}, {
   3.919966104789198*^9, 3.919966112418111*^9}, {3.9200130033030543`*^9, 
   3.9200130121444654`*^9}, {3.920013166604689*^9, 3.9200131686223574`*^9}, {
   3.920013211298304*^9, 3.920013247198547*^9}, {3.920017268984478*^9, 
   3.920017272860184*^9}, {3.9276105344760637`*^9, 3.927610546613558*^9}},
 CellLabel->
  "In[667]:=",ExpressionUUID->"1de33f6f-d03f-4c7b-8094-e6266e1629c7"]
}, Open  ]],

Cell[CellGroupData[{

Cell["All the target decay products pass the acceptance criteria", \
"Subsubsection",
 CellChangeTimes->{
  3.9055274151004214`*^9, {3.90553407587924*^9, 3.905534077544625*^9}, {
   3.905534124633428*^9, 3.9055341308552237`*^9}, {3.905534192713667*^9, 
   3.9055342031436033`*^9}, {3.911964910814978*^9, 3.911964944062765*^9}, {
   3.9119659375534263`*^9, 3.911965940704163*^9}, {3.911967165193519*^9, 
   3.911967181006828*^9}},ExpressionUUID->"78e8fe27-61fd-4bc1-a26f-\
02a1c511aaad"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DecayAcceptanceAllProductsComp", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CondGeom", "=", "conditionDecayAcceptanceGeometric"}], ",", 
       RowBox[{"CondMinv", "=", "conditionminvCuts"}], ",", 
       RowBox[{"CondSS", "=", "conditionAngSepCuts"}], ",", 
       RowBox[{"CondIP", "=", "conditionIPcuts"}], ",", 
       RowBox[{"CondPT", "=", "conditionpTcuts"}], ",", 
       RowBox[{"CondE", "=", "conditionEnergyCuts"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "1"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "TablePhaseSpaceDecayProducts", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"eventslengths", ",", "_Integer", ",", "2"}], "}"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"cond", "=", "0."}], ",", "count", ",", "efip", ",", 
               "zfip", ",", "\[Theta]fip", ",", "\[Phi]fip", ",", "px1rest", 
               ",", "py1rest", ",", "pz1rest", ",", "E1rest", ",", "px1lab", 
               ",", 
               RowBox[{"px2lab", "=", "0."}], ",", "py1lab", ",", 
               RowBox[{"py2lab", "=", "0."}], ",", "pz1lab", ",", 
               RowBox[{"pz2lab", "=", "0."}], ",", "xdecayfip", ",", 
               "ydecayfip", ",", "condprod1", ",", "condprod2", ",", "pdg1", 
               ",", 
               RowBox[{"pdg2", "=", "0."}], ",", "E1lab", ",", 
               RowBox[{"E2lab", "=", "0."}], ",", "acc", ",", "acc2", ",", 
               "charge1", ",", "charge2", ",", 
               RowBox[{"len", "=", 
                RowBox[{"Length", "[", "eventslengths", "]"}]}], ",", 
               RowBox[{"nproducts", "=", "0"}], ",", 
               RowBox[{"f1max", "=", "0"}], ",", "zmagnMzfip", ",", 
               RowBox[{"conde", "=", "0"}], ",", "pfip", ",", "pxfip", ",", 
               "pyfip", ",", "pzfip", ",", 
               RowBox[{"in1", "=", "0"}], ",", 
               RowBox[{"min", "=", "0"}], ",", 
               RowBox[{"trackcounter", "=", "0"}], ",", 
               RowBox[{"Coord1FinProd", "=", "0."}], ",", 
               RowBox[{"Coord2FinProd", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"count", "=", " ", "0."}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Values", " ", "of", " ", "the", " ", "LLP", " ", 
                 SubscriptBox["\[Epsilon]", "az"]}], ",", " ", "E", ",", " ", 
                "\[Theta]", ",", " ", "\[Phi]", ",", " ", 
                SubscriptBox["x", "long"]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"efip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexELLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"zfip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexzLLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Theta]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Theta]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Phi]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pfip", "=", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["efip", "2"], "-", 
                 SuperscriptBox["mLLP", "2"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pxfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Phi]fip", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pyfip", "=", 
               RowBox[{"pxfip", "*", 
                FractionBox[
                 RowBox[{"Sin", "[", "\[Phi]fip", "]"}], 
                 RowBox[{"Cos", "[", "\[Phi]fip", "]"}]]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pzfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Distance", " ", "between", " ", "the", " ", "end", " ", "of", 
                " ", "the", " ", "dipole", " ", "magnet", " ", "and", " ", 
                "the", " ", "LLP", " ", "decay", " ", "point"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"zmagnMzfip", "=", 
               RowBox[{"If", "[", 
                RowBox[{
                 RowBox[{"zfip", "<", "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{
                 "zMagnetMaxGivenExperiment", "-", 
                  "zMagnetMinGivenExperiment"}], ",", 
                 RowBox[{"zMagnetMaxGivenExperiment", "-", "zfip"}]}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"xdecayfip", "=", 
               RowBox[{"LLPdecayVertexX", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"ydecayfip", "=", 
               RowBox[{"LLPdecayVertexY", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Looping", " ", "over", " ", "simulated", " ", "decays"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"trackcounter", "=", "0"}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", "1."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"min", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "1"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"nproducts", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "2"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"f1max", "=", 
                  RowBox[{"nproducts", "-", "1"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Looping", " ", "over", " ", "product1"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"in1", "=", 
                    RowBox[{"min", "+", "f1"}]}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{
                    "Electric", " ", "charge", " ", "of", " ", "the", " ", 
                    "decay", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{"charge1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexcharge1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "first", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"pdg1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpdg1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "rest", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpx1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpy1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpz1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexE1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Energy", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"E1lab", "=", 
                    RowBox[{"EproductLabCart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IfEcuts", "==", "1"}], ",", 
                    RowBox[{"conde", "=", 
                    RowBox[{"CondE", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "E1lab", ",", 
                    "E2lab"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "decay", " ", "product", " ",
                     "if", " ", "the", " ", "energy", " ", "is", " ", 
                    "sufficiently", " ", "large"}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"conde", "==", "1"}], ",", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{"3", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"px1lab", "=", 
                    RowBox[{"pproductLab1Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1lab", "=", 
                    RowBox[{"pproductLab2Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1lab", "=", 
                    RowBox[{"pproductLab3Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "cond", ",", "Coord1FinProd", ",", "Coord2FinProd"}], 
                    "}"}], "=", 
                    RowBox[{"CondGeom", "[", 
                    RowBox[{
                    "charge1", ",", "pdg1", ",", "xdecayfip", ",", 
                    "ydecayfip", ",", "zfip", ",", "px1lab", ",", "py1lab", 
                    ",", "pz1lab", ",", "E1lab", ",", "zmagnMzfip"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "If", " ", "other", " ", "cuts", " ", "are", " ", 
                    "required", " ", "and", " ", "the", " ", "geometric", " ",
                     "condition", " ", "for", " ", "product2", " ", "is", " ",
                     "1", " ", "then", " ", "evaluate", " ", "the", " ", 
                    "acceptance", " ", "for", " ", "these", " ", "cuts"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cond", "==", "1."}], "&&", 
                    RowBox[{"WhetherCuts", "==", "1"}]}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "PDG", " ", "identifiers", " ", "of", " ", "the", " ", 
                    "decay", " ", "products"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", 
                    SubscriptBox["p", "T"], " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfpTcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondPT", "[", 
                    RowBox[{
                    "pdg1", ",", "charge1", ",", "pdg2", ",", "px1lab", ",", 
                    "py1lab", ",", "px2lab", ",", "py2lab"}], "]"}]}]}], 
                    "]"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{
                    "If", " ", "the", " ", "track", " ", "has", " ", 
                    "sufficiently", " ", "large", " ", "energy", " ", "but", 
                    " ", "did", " ", "not", " ", "reach", " ", "the", " ", 
                    "detector"}], ",", " ", 
                    RowBox[{"then", " ", 
                    RowBox[{"break", ".", " ", "Otherwise"}]}], ",", " ", 
                    RowBox[{"continue", " ", "the", " ", "iterations"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"cond", "==", "0"}], "&&", 
                    RowBox[{"conde", "==", "1"}]}], ",", 
                    RowBox[{"Break", "[", "]"}]}], "]"}], ";"}]}], 
                    "\[IndentingNewLine]", "]"}], ";"}], 
                   "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"f1", ",", "0", ",", "f1max", ",", "1"}], "}"}]}],
                   "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"count", "+=", "cond"}], ";"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Returns", " ", "the", " ", "decay", " ", "acceptance"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"count", "/", "len"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "\[Rule]", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}], 
             "}"}]}], ",", 
           RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{
          "LLPdecayVertexX", ",", "LLPdecayVertexY", ",", "pproductLab1Cart", 
           ",", "pproductLab2Cart", ",", "pproductLab3Cart", ",", 
           "EproductLabCart"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "indexpdg1", ",", "indexELLP", ",", "indexzLLP", ",", 
          "index\[Theta]LLP", ",", "index\[Phi]LLP", ",", "indexLLPazAcc", 
          ",", "indexpx1", ",", "indexpy1", ",", "indexpz1", ",", "indexE1", 
          ",", "LengthDataProduct", ",", "WhetherCuts", ",", "indexcharge1", 
          ",", "zMagnetMaxGivenExperiment", ",", "zMagnetMinGivenExperiment", 
          ",", "IfEcuts", ",", "IfpTcuts", ",", "IfAngSepCuts", ",", 
          "IfIPcuts", ",", "IfminvCuts"}], "}"}], "]"}]}], "//", 
      "ReleaseHold"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "DecayAcceptanceAllProductsComp"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.905527491102636*^9, 3.905527492547829*^9}, {
   3.905527536763167*^9, 3.905527569631588*^9}, {3.9055276055004196`*^9, 
   3.905527605761074*^9}, {3.905527694103842*^9, 3.905527696457396*^9}, {
   3.9055277363764334`*^9, 3.90552773889065*^9}, {3.905528025954468*^9, 
   3.905528056926959*^9}, {3.905529540979798*^9, 3.9055296002136154`*^9}, {
   3.9055297847232103`*^9, 3.905529803615557*^9}, {3.905529838296819*^9, 
   3.9055298734305954`*^9}, {3.9055307313628902`*^9, 3.905530734725708*^9}, {
   3.905530781938383*^9, 3.905530794215193*^9}, {3.9055309909607368`*^9, 
   3.905530994046864*^9}, {3.905532103842718*^9, 3.9055321250875483`*^9}, {
   3.9055331339826517`*^9, 3.905533161310554*^9}, 3.905533449660816*^9, {
   3.9055335290841*^9, 3.905533811978432*^9}, {3.905533920716429*^9, 
   3.905534026785475*^9}, 3.9055340649393373`*^9, 3.9058414663253417`*^9, 
   3.90584149743476*^9, {3.905841537758681*^9, 3.905841553296379*^9}, {
   3.905841603180774*^9, 3.905841626248714*^9}, {3.910249099638576*^9, 
   3.9102491049485826`*^9}, {3.910249234568329*^9, 3.91024924532967*^9}, {
   3.911965041112008*^9, 3.9119650470628176`*^9}, {3.911965138916882*^9, 
   3.911965161012609*^9}, {3.911965496725523*^9, 3.911965580511321*^9}, {
   3.91196565425823*^9, 3.911965686940561*^9}, {3.911965962303961*^9, 
   3.911965989535017*^9}, {3.911966024029789*^9, 3.911966091305372*^9}, {
   3.911966137840969*^9, 3.9119661838404512`*^9}, {3.9119662284939775`*^9, 
   3.911966237454152*^9}, {3.911966275235891*^9, 3.9119663917156*^9}, 
   3.911966481691195*^9, {3.9119665135971575`*^9, 3.911966525754816*^9}, {
   3.911968777578771*^9, 3.911968855032695*^9}, {3.9121507089597197`*^9, 
   3.912150737103079*^9}, {3.912150806318247*^9, 3.912150809687101*^9}, {
   3.9121508409510684`*^9, 3.912150960751144*^9}, {3.912151005989683*^9, 
   3.912151102657238*^9}, {3.912151354730209*^9, 3.912151403321566*^9}, {
   3.9121515794915357`*^9, 3.9121515805974636`*^9}, {3.912535273306817*^9, 
   3.91253535886907*^9}, {3.9149934655391774`*^9, 3.9149934655391774`*^9}, {
   3.915437152576473*^9, 3.915437152786163*^9}, {3.919962565874504*^9, 
   3.9199625731291084`*^9}, {3.9199626902098465`*^9, 3.919962772319756*^9}, {
   3.919962810889751*^9, 3.919962820652965*^9}, {3.919963031052453*^9, 
   3.9199630354599934`*^9}, {3.919963624670143*^9, 3.919963644327765*^9}, {
   3.9199637747098002`*^9, 3.919963813789984*^9}, {3.9199638638798923`*^9, 
   3.919963922139797*^9}, {3.919964669580201*^9, 3.919964695466121*^9}, {
   3.919964807900162*^9, 3.9199648080318184`*^9}, {3.9199649971301303`*^9, 
   3.91996501066543*^9}, {3.9199650840998683`*^9, 3.9199651261800337`*^9}, {
   3.919965170270086*^9, 3.9199651744424453`*^9}, {3.919965221117121*^9, 
   3.9199652445892773`*^9}, {3.9199653521713552`*^9, 
   3.9199654279213104`*^9}, {3.919965466509991*^9, 3.919965515581992*^9}, {
   3.919965559160005*^9, 3.919965628891943*^9}, {3.9199656623420906`*^9, 
   3.919965664570255*^9}, {3.919965974922825*^9, 3.919966068193695*^9}, {
   3.919966104789198*^9, 3.919966112418111*^9}, {3.920013176463878*^9, 
   3.9200131858057175`*^9}, {3.920013415772868*^9, 3.920013415912057*^9}},
 CellLabel->
  "In[101]:=",ExpressionUUID->"1188ed6e-aa75-4802-87bd-02859eae6d2a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
One or two photons (and no other particles) pass the acceptance criteria \
(routine for photons search at CHARM)\
\>", "Subsubsection",
 CellChangeTimes->{{3.905842992856994*^9, 3.9058430104412446`*^9}, {
  3.9058438882889347`*^9, 3.905843896125678*^9}, {3.90584403871439*^9, 
  3.9058440773921304`*^9}, {3.911964898516828*^9, 
  3.911964900845416*^9}},ExpressionUUID->"8fb808d7-8c1f-4580-9481-\
1e5191beb5b7"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"DecayAcceptanceCHARM\[Gamma]Comp", "=", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"CondGeom", "=", "conditionDecayAcceptanceGeometric"}], ",", 
       RowBox[{"CondMinv", "=", "conditionminvCuts"}], ",", 
       RowBox[{"CondSS", "=", "conditionAngSepCuts"}], ",", 
       RowBox[{"CondIP", "=", "conditionIPcuts"}], ",", 
       RowBox[{"CondPT", "=", "conditionpTcuts"}], ",", 
       RowBox[{"CondE", "=", "conditionEnergyCuts"}]}], "}"}], ",", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Hold", "@", 
         RowBox[{"Compile", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"TableLLPgridWithELLP", ",", "_Real", ",", "1"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{
              "TablePhaseSpaceDecayProducts", ",", "_Real", ",", "2"}], "}"}],
              ",", 
             RowBox[{"{", 
              RowBox[{"mLLP", ",", "_Real"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{"eventslengths", ",", "_Integer", ",", "2"}], "}"}]}], 
            "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Module", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
              "cond", ",", "count", ",", "efip", ",", "zfip", ",", 
               "\[Theta]fip", ",", "\[Phi]fip", ",", "px1rest", ",", 
               "py1rest", ",", "pz1rest", ",", "E1rest", ",", "px2rest", ",", 
               "py2rest", ",", "pz2rest", ",", "E2rest", ",", "px1lab", ",", 
               "px2lab", ",", "py1lab", ",", "py2lab", ",", "pz1lab", ",", 
               "pz2lab", ",", "\[Epsilon]Azfip", ",", "xdecayfip", ",", 
               "ydecayfip", ",", "pdg1", ",", "E1lab", ",", "charge1", ",", 
               RowBox[{"len", "=", "0"}], ",", 
               RowBox[{"nproducts", "=", "0"}], ",", 
               RowBox[{"f1max", "=", "0"}], ",", "zmagnMzfip", ",", 
               RowBox[{"condGood", "=", "0."}], ",", 
               RowBox[{"condBad", "=", "0."}], ",", 
               RowBox[{"condg1", "=", "0."}], ",", "e1", ",", "e2", ",", 
               "pfip", ",", "pxfip", ",", "pyfip", ",", "pzfip", ",", 
               RowBox[{"min", "=", "0"}], ",", 
               RowBox[{"in1", "=", "0"}], ",", 
               RowBox[{"Coord1FinProd", "=", "0."}], ",", 
               RowBox[{"Coord2FinProd", "=", "0."}]}], "}"}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"count", "=", " ", "0."}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{"Values", " ", "of", " ", "the", " ", "LLP", " ", 
                 SubscriptBox["\[Epsilon]", "az"]}], ",", " ", "E", ",", " ", 
                "\[Theta]", ",", " ", "\[Phi]", ",", " ", 
                SubscriptBox["x", "long"]}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{"efip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexELLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"zfip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "indexzLLP"}], "]"}]}], 
              ";", "\[IndentingNewLine]", 
              RowBox[{"\[Theta]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Theta]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"\[Phi]fip", "=", 
               RowBox[{"Compile`GetElement", "[", 
                RowBox[{"TableLLPgridWithELLP", ",", "index\[Phi]LLP"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pfip", "=", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["efip", "2"], "-", 
                 SuperscriptBox["mLLP", "2"]}]]}], ";", "\[IndentingNewLine]", 
              RowBox[{"pxfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Phi]fip", "]"}], "*", 
                RowBox[{"Sin", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pyfip", "=", 
               RowBox[{"pxfip", "*", 
                FractionBox[
                 RowBox[{"Sin", "[", "\[Phi]fip", "]"}], 
                 RowBox[{"Cos", "[", "\[Phi]fip", "]"}]]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"pzfip", "=", 
               RowBox[{"pfip", "*", 
                RowBox[{"Cos", "[", "\[Theta]fip", "]"}]}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Distance", " ", "between", " ", "the", " ", "end", " ", "of", 
                " ", "the", " ", "dipole", " ", "magnet", " ", "and", " ", 
                "the", " ", "LLP", " ", "decay", " ", "point"}], "*)"}], 
              "\[IndentingNewLine]", 
              RowBox[{"zmagnMzfip", "=", 
               RowBox[{"zMagnetMaxGivenExperiment", "-", "zfip"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"len", "=", 
               RowBox[{"Length", "[", "TablePhaseSpaceDecayProducts", "]"}]}],
               ";", "\[IndentingNewLine]", 
              RowBox[{"nproducts", "=", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{
                 RowBox[{"Length", "[", 
                  RowBox[{"TablePhaseSpaceDecayProducts", "[", 
                   RowBox[{"[", "1", "]"}], "]"}], "]"}], "/", 
                 "LengthDataProduct"}], "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"f1max", "=", 
               RowBox[{"IntegerPart", "[", 
                RowBox[{"nproducts", "-", "1"}], "]"}]}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"xdecayfip", "=", 
               RowBox[{"LLPdecayVertexX", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"ydecayfip", "=", 
               RowBox[{"LLPdecayVertexY", "[", 
                RowBox[{"zfip", ",", "\[Theta]fip", ",", "\[Phi]fip"}], 
                "]"}]}], ";", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Looping", " ", "over", " ", "simulated", " ", "decays"}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"Do", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{
                 RowBox[{"cond", "=", "1."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"min", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "1"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"nproducts", "=", 
                  RowBox[{"Compile`GetElement", "[", 
                   RowBox[{"eventslengths", ",", "j", ",", "2"}], "]"}]}], 
                 ";", "\[IndentingNewLine]", 
                 RowBox[{"f1max", "=", 
                  RowBox[{"nproducts", "-", "1"}]}], ";", 
                 "\[IndentingNewLine]", 
                 RowBox[{"cond", "=", "0."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"condGood", "=", "0."}], ";", "\[IndentingNewLine]", 
                 
                 RowBox[{"condBad", "=", "0."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"e1", "=", "0."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"e2", "=", "0."}], ";", "\[IndentingNewLine]", 
                 RowBox[{"(*", 
                  RowBox[{"Looping", " ", "over", " ", "product1"}], "*)"}], 
                 "\[IndentingNewLine]", 
                 RowBox[{"Do", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"in1", "=", 
                    RowBox[{"min", "+", "f1"}]}], ";", "\[IndentingNewLine]", 
                    
                    RowBox[{"(*", 
                    RowBox[{
                    "Electric", " ", "charge", " ", "of", " ", "the", " ", 
                    "decay", " ", "product"}], "*)"}], "\[IndentingNewLine]", 
                    
                    RowBox[{"charge1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexcharge1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "first", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"pdg1", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpdg1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "rest", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpx1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpy1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexpz1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1rest", "=", 
                    RowBox[{"Compile`GetElement", "[", 
                    RowBox[{
                    "TablePhaseSpaceDecayProducts", ",", "in1", ",", 
                    "indexE1"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"4", "-", 
                    RowBox[{
                    "momentum", " ", "of", " ", "the", " ", "decay", " ", 
                    "product", " ", "at", " ", "the", " ", 
                    RowBox[{"LLP", "'"}], "s", " ", "lab", " ", "frame"}]}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"px1lab", "=", 
                    RowBox[{"pproductLab1Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"py1lab", "=", 
                    RowBox[{"pproductLab2Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"pz1lab", "=", 
                    RowBox[{"pproductLab3Cart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"E1lab", "=", 
                    RowBox[{"EproductLabCart", "[", 
                    RowBox[{
                    "pxfip", ",", "pyfip", ",", "pzfip", ",", "efip", ",", 
                    "mLLP", ",", "px1rest", ",", "py1rest", ",", "pz1rest", 
                    ",", "E1rest"}], "]"}]}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "Calculating", " ", "the", " ", "geometric", " ", "part", 
                    " ", "of", " ", "the", " ", "decay", " ", "acceptance", 
                    " ", "for", " ", "the", " ", "first", " ", "decay", " ", 
                    "product"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    "condg1", ",", "Coord1FinProd", ",", "Coord2FinProd"}], 
                    "}"}], "=", 
                    RowBox[{"CondGeom", "[", 
                    RowBox[{
                    "charge1", ",", "pdg1", ",", "xdecayfip", ",", 
                    "ydecayfip", ",", "zfip", ",", "px1lab", ",", "py1lab", 
                    ",", "pz1lab", ",", "E1lab", ",", "zmagnMzfip"}], "]"}]}],
                     ";", "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"pdg1", "==", "22."}], ",", 
                    RowBox[{"condGood", "+=", "condg1"}], ",", 
                    RowBox[{"condBad", "+=", "condg1"}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"condBad", ">", "0."}], "||", 
                    RowBox[{"condGood", ">", "2"}]}], ",", 
                    RowBox[{
                    RowBox[{"cond", "=", "0."}], ";", 
                    RowBox[{"Break", "[", "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"condg1", "==", "1"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"condGood", "==", "1"}], ",", 
                    RowBox[{"e1", "=", "E1lab"}], ",", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"condGood", "==", "2"}], ",", 
                    RowBox[{"e2", "=", "E1lab"}]}], "]"}]}], "]"}]}], "]"}], 
                    ";"}], "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "If", " ", "other", " ", "cuts", " ", "are", " ", 
                    "required", " ", "and", " ", "the", " ", "geometric", " ",
                     "condition", " ", "for", " ", "product2", " ", "is", " ",
                     "1", " ", "then", " ", "evaluate", " ", "the", " ", 
                    "acceptance", " ", "for", " ", "these", " ", "cuts"}], 
                    "*)"}], "\[IndentingNewLine]", ",", 
                   RowBox[{"{", 
                    RowBox[{"f1", ",", "0", ",", "f1max", ",", "1"}], "}"}]}],
                   "]"}], ";", "\[IndentingNewLine]", 
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"condGood", ">", "0."}], "&&", 
                    RowBox[{"WhetherCuts", "==", "1"}], "&&", 
                    RowBox[{"condBad", "==", "0."}]}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"(*", 
                    RowBox[{
                    "Values", " ", "of", " ", "the", " ", "energy", " ", 
                    "cuts", " ", "for", " ", "the", " ", "decay", " ", 
                    "products"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"IfEcuts", "==", "1"}], ",", 
                    RowBox[{"count", "+=", 
                    RowBox[{"CondE", "[", 
                    RowBox[{
                    "22.", ",", "0.", ",", "22.", ",", "e1", ",", "e2"}], 
                    "]"}]}]}], "]"}], ";"}]}], "\[IndentingNewLine]", 
                  RowBox[{"(*", 
                   RowBox[{"(*", 
                    RowBox[{"The", " ", 
                    SubscriptBox["p", "T"], " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfpTcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondPT", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "px1lab", ",", "py1lab", ",", 
                    "px2lab", ",", "py2lab"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", "IP", " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfIPcuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondIP", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "xdecayfip", ",", "ydecayfip", 
                    ",", "zfip", ",", "px1lab", ",", "px2lab", ",", "py1lab", 
                    ",", "py2lab", ",", "pz1lab", ",", "pz2lab"}], "]"}]}]}], 
                    "]"}], ";", "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{"The", " ", "spatial", " ", "separation", " ", 
                    RowBox[{"cut", ".", " ", "If"}], " ", "it", " ", "is", 
                    " ", "present", " ", "then", " ", "evaluate", " ", "the", 
                    " ", 
                    RowBox[{"acceptance", ".", " ", "If"}], " ", "not", " ", 
                    "then", " ", "proceeding", " ", "to", " ", "the", " ", 
                    "next", " ", "cut"}], "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfAngSepCuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondSS", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "zfip", ",", "px1lab", ",", 
                    "px2lab", ",", "py1lab", ",", "py2lab", ",", "pz1lab", 
                    ",", "pz2lab"}], "]"}]}]}], "]"}], ";", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    "The", " ", "invariant", " ", "mass", " ", "cut"}], 
                    "*)"}], "\[IndentingNewLine]", 
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"IfminvCuts", "==", "1"}], "&&", 
                    RowBox[{"cond", "\[Equal]", "1"}]}], ",", 
                    RowBox[{"cond", "=", 
                    RowBox[{"CondMinv", "[", 
                    RowBox[{
                    "pdg1", ",", "pdg2", ",", "px1lab", ",", "py1lab", ",", 
                    "pz1lab", ",", "E1lab", ",", "px2lab", ",", "py2lab", ",",
                     "pz2lab", ",", "E2lab"}], "]"}]}]}], "]"}], ";"}], 
                   "*)"}], "\[IndentingNewLine]", "]"}], ";"}], 
                "\[IndentingNewLine]", ",", 
                RowBox[{"{", 
                 RowBox[{"j", ",", "1", ",", "len"}], "}"}]}], "]"}], ";", 
              "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
                RowBox[{
                "Returns", " ", "the", " ", "number", " ", "of", " ", 
                 "simulated", " ", "acceptances", " ", "divided", " ", "by", 
                 " ", "the", " ", "number", " ", "of", " ", "simulated", " ", 
                 
                 RowBox[{"events", ".", " ", "For"}], " ", "the", " ", 
                 "decays", " ", "where", " ", "more", " ", "than", " ", "one",
                  " ", "combination", " ", "of", " ", "decay", " ", 
                 "products", " ", "pair", " ", "exists"}], ",", " ", 
                RowBox[{
                 RowBox[{"this", " ", "value", " ", "may", " ", "be"}], " ", 
                 ">", " ", 
                 RowBox[{
                 "1.", " ", "It", " ", "will", " ", "be", " ", "replaced", 
                  " ", "with"}], " ", "\[Equal]", " ", 
                 RowBox[{
                 "1", " ", "in", " ", "the", " ", "next", " ", "step"}]}]}], 
               "*)"}], "\[IndentingNewLine]", 
              RowBox[{"{", 
               RowBox[{"count", "/", "len"}], "}"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", 
           RowBox[{"CompilationTarget", "\[Rule]", "\"\<C\>\""}], ",", 
           RowBox[{"RuntimeOptions", "\[Rule]", "\"\<Speed\>\""}], ",", 
           RowBox[{"RuntimeAttributes", "\[Rule]", 
            RowBox[{"{", "Listable", "}"}]}], ",", 
           RowBox[{"CompilationOptions", "->", 
            RowBox[{"{", 
             RowBox[{"\"\<InlineCompiledFunctions\>\"", "->", "True"}], 
             "}"}]}], ",", 
           RowBox[{"Parallelization", "\[Rule]", "True"}]}], "]"}]}], "/.", 
        RowBox[{"ruleDown", "[", 
         RowBox[{"{", 
          RowBox[{
          "LLPdecayVertexX", ",", "LLPdecayVertexY", ",", "pproductLab1Cart", 
           ",", "pproductLab2Cart", ",", "pproductLab3Cart", ",", 
           "EproductLabCart"}], "}"}], "]"}]}], "/.", 
       RowBox[{"ruleOwn", "[", 
        RowBox[{"{", 
         RowBox[{
         "indexpdg1", ",", "indexELLP", ",", "indexzLLP", ",", 
          "index\[Theta]LLP", ",", "index\[Phi]LLP", ",", "indexLLPazAcc", 
          ",", "indexpx1", ",", "indexpy1", ",", "indexpz1", ",", "indexE1", 
          ",", "LengthDataProduct", ",", "WhetherCuts", ",", "indexcharge1", 
          ",", "zMagnetMaxGivenExperiment", ",", "IfEcuts", ",", "IfpTcuts", 
          ",", "IfAngSepCuts", ",", "IfIPcuts", ",", "IfminvCuts"}], "}"}], 
        "]"}]}], "//", "ReleaseHold"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"<<", "CompiledFunctionTools`"}], "\n", 
 RowBox[{
  RowBox[{"CompilePrint", "@", "DecayAcceptanceCHARM\[Gamma]Comp"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.905843074387643*^9, 3.9058431334304895`*^9}, {
   3.905843183603532*^9, 3.9058431838739667`*^9}, {3.905843239115927*^9, 
   3.9058432606479034`*^9}, {3.905843517584661*^9, 3.905843584242088*^9}, {
   3.905843694793634*^9, 3.905843719697756*^9}, {3.9058437591516027`*^9, 
   3.905843806246789*^9}, {3.905844087464828*^9, 3.9058443444609203`*^9}, {
   3.9058444069168534`*^9, 3.905844409126068*^9}, {3.90584446024528*^9, 
   3.905844527886752*^9}, {3.9058445712268105`*^9, 3.9058445727744956`*^9}, {
   3.905844679065505*^9, 3.905844683213322*^9}, {3.905844721864481*^9, 
   3.905844723870822*^9}, {3.9058451712090883`*^9, 3.905845186585994*^9}, {
   3.910249122648197*^9, 3.9102491252327805`*^9}, {3.9121515905300064`*^9, 
   3.9121516343170977`*^9}, {3.912152116095096*^9, 3.9121521924824543`*^9}, {
   3.912152230418692*^9, 3.91215225124841*^9}, {3.9121522926081862`*^9, 
   3.9121523979463243`*^9}, 3.912159812363592*^9, {3.9125353647143407`*^9, 
   3.912535406917486*^9}, {3.9149934655704193`*^9, 3.91499346558604*^9}, {
   3.9154371527984834`*^9, 3.9154371530179157`*^9}, {3.9199639303702025`*^9, 
   3.919963950543931*^9}},
 CellLabel->
  "In[104]:=",ExpressionUUID->"b776897e-0c07-4847-92b9-26e378c7f185"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Block computing the acceptance for the specific LLP and its decay channel\
\>", "Subsection",
 CellChangeTimes->{{3.89343683860028*^9, 3.8934368458774242`*^9}, {
   3.905841684939583*^9, 3.9058417056993647`*^9}, 
   3.91543715302625*^9},ExpressionUUID->"bd6a6aa6-6ede-40ac-b625-\
0c1d3cc6e2ad"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"PhaseSpacePerDecayChannel", "[", 
    RowBox[{
    "LLP_", ",", "mLLP_", ",", "SpecificDecay_", ",", "isim_", ",", 
     "HadronizationOption_"}], "]"}], ":=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"HadronizationOption", "==", "\"\<True\>\""}], "&&", 
      RowBox[{
       RowBox[{"JetsPresence", "[", 
        RowBox[{"LLP", ",", "SpecificDecay"}], "]"}], "==", "\"\<Yes\>\""}]}],
      ",", 
     RowBox[{"Take", "[", 
      RowBox[{
       RowBox[{"RandomSample", "[", 
        RowBox[{"PhaseSpaceDecaysRestJets", "[", 
         RowBox[{"LLP", ",", "SpecificDecay", ",", "mLLP"}], "]"}], "]"}], 
       ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "isim"}], "}"}]}], "]"}], ",", 
     RowBox[{"PhaseSpaceDecaysRest", "[", 
      RowBox[{"LLP", ",", "mLLP", ",", "SpecificDecay", ",", "isim"}], 
      "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"detectableproducts", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Hold", "@", 
     RowBox[{"Compile", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"pdglists", ",", "_Real", ",", "2"}], "}"}], "}"}], ",", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"pdglists", "[", 
             RowBox[{"[", "i", "]"}], "]"}], ",", 
            RowBox[{
             RowBox[{"MemberQ", "[", 
              RowBox[{"DetectablePDGsGivenExperiment", ",", "#"}], "]"}], 
             "&"}]}], "]"}], "//", "Length"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "pdglists", "]"}], ",", "1"}], "}"}]}], 
        "]"}], ",", 
       RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
       RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
       RowBox[{"RuntimeAttributes", "->", 
        RowBox[{"{", "Listable", "}"}]}], ",", 
       RowBox[{"Parallelization", "->", "True"}]}], "]"}]}], "/.", 
    RowBox[{"OwnValues", "@", "DetectablePDGsGivenExperiment"}]}], "//", 
   "ReleaseHold"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"CompilePrint", "@", "detectableproducts"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "This", " ", "block", " ", "generates", " ", "the", " ", "phase", " ", 
    "space", " ", "per", " ", "LLP", " ", "decay", " ", "by", " ", 
    "averaging", " ", "over", " ", "various", " ", "decay", " ", "channels"}],
    "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhaseSpacePerDecay", "[", 
    RowBox[{
    "LLP_", ",", "mLLP_", ",", "proclist_", ",", "isimlist_", ",", 
     "HadronizationOption_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"pss0", "=", 
       RowBox[{"Developer`ToPackedArray", "@", 
        RowBox[{"PadRight", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Join", "[", "##", "]"}], "&"}], "@@", 
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"PhaseSpacePerDecayChannel", "[", 
              RowBox[{"LLP", ",", "mLLP", ",", 
               RowBox[{"proclist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", 
               RowBox[{"isimlist", "[", 
                RowBox[{"[", "i", "]"}], "]"}], ",", "HadronizationOption"}], 
              "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"i", ",", "1", ",", 
               RowBox[{"Length", "[", "proclist", "]"}], ",", "1"}], "}"}]}], 
            "]"}]}], ",", "Automatic", ",", 
          RowBox[{"-", "999."}]}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "List", " ", "of", " ", "decay", " ", "products", " ", "pdg", " ", 
        "IDs", " ", "per", " ", "decay"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"pdglists", "=", 
       RowBox[{"pss0", "[", 
        RowBox[{"[", 
         RowBox[{"All", ",", 
          RowBox[{
           RowBox[{"-", "LengthDataProduct"}], "+", "indexpdg1", "+", 
           RowBox[{"LengthDataProduct", "*", 
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              FractionBox[
               RowBox[{"Length", "[", 
                RowBox[{"pss0", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "8"]}], "]"}]}]}]}], 
         "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "amount", " ", "of", " ", "particles", " ", "that", " ", 
        "may", " ", "be", " ", "detected", " ", "per", " ", "given", " ", 
        "experiment"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"numdetectableproducts", "=", 
       RowBox[{"detectableproducts", "[", "pdglists", "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"pss", "=", 
         RowBox[{"Map", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Flatten", "[", 
             RowBox[{"SortBy", "[", 
              RowBox[{
               RowBox[{"Partition", "[", 
                RowBox[{"#", ",", "LengthDataProduct"}], "]"}], ",", 
               RowBox[{
                RowBox[{"-", 
                 RowBox[{"#", "[", 
                  RowBox[{"[", "indexE1", "]"}], "]"}]}], "&"}]}], "]"}], 
             "]"}], "&"}], ",", "pss"}], "]"}]}], ";"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "The", " ", "phase", " ", "space", " ", "sorted", " ", "in", " ", 
        "descending", " ", "order", " ", "by", " ", "the", " ", "number", " ",
         "of", " ", "detectable", " ", "products"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"pss", "=", 
       RowBox[{"pss0", "[", 
        RowBox[{"[", 
         RowBox[{"Ordering", "[", 
          RowBox[{"numdetectableproducts", ",", "All", ",", "Greater"}], 
          "]"}], "]"}], "]"}]}], ";", "\[IndentingNewLine]", "pss"}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "block", " ", "takes", " ", "the", " ", "phase", " ", 
     "space", " ", "generated", " ", "by", " ", "the", " ", "previous", " ", 
     "block", " ", "and", " ", "converts", " ", "it", " ", "in", " ", "the", 
     " ", "form", " ", "or", " ", "rows", " ", "decay", " ", "product", " ", 
     "data"}], ",", 
    RowBox[{"decay", " ", "product", " ", 
     RowBox[{"data", ".", " ", "To"}], " ", "distinguish", " ", "various", 
     " ", "decays"}], ",", " ", 
    RowBox[{"eventlengths", " ", "is", " ", "used"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PhaseSpacePerDecayReshaped", "[", 
    RowBox[{
    "LLP_", ",", "mLLP_", ",", "proclist_", ",", "isimlist_", ",", 
     "HadronizationOption_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ps", "=", 
       RowBox[{"PhaseSpacePerDecay", "[", 
        RowBox[{
        "LLP", ",", "mLLP", ",", "proclist", ",", "isimlist", ",", 
         "HadronizationOption"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps1", "=", 
       RowBox[{
        RowBox[{"ArrayReshape", "[", 
         RowBox[{
          RowBox[{"Flatten", "[", "ps", "]"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{
             RowBox[{"Length", "[", "ps", "]"}], 
             FractionBox[
              RowBox[{"Length", "[", 
               RowBox[{"ps", "[", 
                RowBox[{"[", "1", "]"}], "]"}], "]"}], "LengthDataProduct"]}],
             ",", "LengthDataProduct"}], "}"}]}], "]"}], "//", 
        "Developer`ToPackedArray"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"ps1", "=", 
       RowBox[{
        RowBox[{"Select", "[", 
         RowBox[{"ps1", ",", 
          RowBox[{
           RowBox[{
            RowBox[{"MemberQ", "[", 
             RowBox[{"DetectablePDGsGivenExperiment", ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "indexpdg1", "]"}], "]"}]}], "]"}], "==", 
            "True"}], "&"}]}], "]"}], "//", "Developer`ToPackedArray"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"eventlengths", "=", 
         RowBox[{"nprodscomp", "[", "ps", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"eventlengths", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Drop", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Accumulate", "[", 
                RowBox[{"Prepend", "[", 
                 RowBox[{"eventlengths", ",", "0"}], "]"}], "]"}], "+", "1"}],
               ",", 
              RowBox[{"-", "1"}]}], "]"}], ",", "eventlengths"}], "}"}], "//",
           "Transpose"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"eventlengths", "=", 
       RowBox[{"SortBy", "[", 
        RowBox[{"numdetectableproducts", ",", 
         RowBox[{
          RowBox[{"-", "#"}], "&"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"eventlengths", "=", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Drop", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Accumulate", "[", 
              RowBox[{"Prepend", "[", 
               RowBox[{"eventlengths", ",", "0"}], "]"}], "]"}], "+", "1"}], 
            ",", 
            RowBox[{"-", "1"}]}], "]"}], ",", "eventlengths"}], "}"}], "//", 
        "Transpose"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"eventlengths", "=", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Range", "[", 
             RowBox[{"1", ",", 
              RowBox[{"isimlist", "//", "Total"}]}], "]"}], ",", 
            RowBox[{"SortBy", "[", 
             RowBox[{"numdetectableproducts", ",", 
              RowBox[{
               RowBox[{"-", "#"}], "&"}]}], "]"}]}], "}"}], "//", 
          "Transpose"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"ps1", ",", "eventlengths"}], "}"}]}]}], "\[IndentingNewLine]",
     "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Block", " ", "computing", " ", "decay", " ", "acceptance"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DecayAcceptanceELLP\[Theta]LLPzLLPoverall", "[", 
   RowBox[{
   "LLP_", ",", "mLLP_", ",", "proclist_", ",", "isimlist_", ",", 
    "gridNonZero_", ",", "HadronizationOption_", ",", 
    "AllProductsWithinAcceptance_", ",", "ntracksmin_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"(*", 
      RowBox[{"PhaseSpaceGiven", ","}], "*)"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
      RowBox[{
       RowBox[{
       "Phase", " ", "space", " ", "of", " ", "LLP", " ", "decays", " ", "at",
         " ", "rest"}], " ", "-", " ", 
       RowBox[{"up", " ", "to", " ", "stable", " ", "decay", " ", 
        RowBox[{"products", ":", " ", 
         RowBox[{"charged", " ", "pions"}]}]}]}], ",", " ", 
      RowBox[{"charged", " ", "kaons"}], ",", " ", 
      SubscriptBox["K", "L"], ",", " ", 
      RowBox[{"and", " ", "photons"}]}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"PhaseSpaceGiven", ",", "eventslengths"}], "}"}], "=", 
      RowBox[{"PhaseSpacePerDecayReshaped", "[", 
       RowBox[{
       "LLP", ",", "mLLP", ",", "proclist", ",", "isimlist", ",", 
        "HadronizationOption"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "Averaging", " ", "over", " ", "distinct", " ", "decay", " ", 
       "products", " ", "set", " ", "for", " ", "the", " ", "given", " ", 
       "phase", " ", "space"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Computing", " ", "the", " ", "decay", " ", "products", " ", 
        RowBox[{"acceptance", ":", " ", 
         RowBox[{"at", " ", "this", " ", "step"}]}]}], ",", " ", 
       RowBox[{"no", " ", "averaging", " ", "over", " ", "\[Phi]"}]}], "*)"}],
      "\[IndentingNewLine]", 
     RowBox[{"ifcharm", "=", 
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", "\"\<CHARM-photon\>\"", "}"}], ",", "GivenExperiment"}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"isimvv", "=", 
      RowBox[{"isimlist", "//", "Total"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ifcharm", "==", "True"}], ",", 
       RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", "=", 
        RowBox[{"DecayAcceptanceCHARM\[Gamma]Comp", "[", 
         RowBox[{
         "gridNonZero", ",", "PhaseSpaceGiven", ",", "mLLP", ",", 
          "eventslengths"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AllProductsWithinAcceptance", "==", "\"\<>=2\>\""}], "&&", 
        RowBox[{"ifcharm", "==", "False"}]}], ",", 
       RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", "=", 
        RowBox[{"DecayAcceptanceComp", "[", 
         RowBox[{
         "gridNonZero", ",", "PhaseSpaceGiven", ",", "mLLP", ",", 
          "eventslengths"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"AllProductsWithinAcceptance", "==", "\"\<>=n\>\""}], "&&", 
        RowBox[{"ifcharm", "==", "False"}]}], ",", 
       RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", "=", 
        RowBox[{"DecayAcceptancenProductsComp", "[", 
         RowBox[{
         "gridNonZero", ",", "PhaseSpaceGiven", ",", "mLLP", ",", 
          "eventslengths", ",", "ntracksmin"}], "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
        "AllProductsWithinAcceptance", "==", "\"\<All detectable\>\""}], "&&", 
        RowBox[{"ifcharm", "==", "False"}]}], ",", 
       RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", "=", 
        RowBox[{"DecayAcceptanceAllProductsComp", "[", 
         RowBox[{
         "gridNonZero", ",", "PhaseSpaceGiven", ",", "mLLP", ",", 
          "eventslengths"}], "]"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "And", " ", "then", " ", "averaging", " ", "over", " ", "\[Phi]"}], 
      "*)"}], "\[IndentingNewLine]", 
     RowBox[{"\[Epsilon]av", "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", "\[NotEqual]", 
         RowBox[{"{", "}"}]}], ",", 
        RowBox[{"\[Epsilon]DecayE\[Theta]zcompiled", "[", 
         RowBox[{"\[Epsilon]Decay\[Phi]Unaveraged", ",", "NofPhiVals"}], 
         "]"}], ",", 
        RowBox[{"{", "}"}]}], "]"}]}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.891323957620606*^9, 3.8913240240436583`*^9}, 
   3.891324187747533*^9, {3.891324255034959*^9, 3.8913243536830673`*^9}, {
   3.891325209472799*^9, 3.891325209680338*^9}, {3.891441238151249*^9, 
   3.8914412484442453`*^9}, {3.891449814077171*^9, 3.891449814077171*^9}, {
   3.8915012539731226`*^9, 3.891501286318918*^9}, {3.89239500907771*^9, 
   3.892395051886007*^9}, {3.8923952289032564`*^9, 3.892395233600367*^9}, {
   3.8923953786948557`*^9, 3.892395381991894*^9}, {3.892395506070113*^9, 
   3.8923955272859077`*^9}, {3.892395567355779*^9, 3.892395583936989*^9}, {
   3.892395627786858*^9, 3.892395628996941*^9}, {3.892395695664096*^9, 
   3.8923956965801473`*^9}, 3.892396057639633*^9, {3.892396145533648*^9, 
   3.892396178633185*^9}, {3.892396225841028*^9, 3.89239629904659*^9}, {
   3.8923963485789595`*^9, 3.89239635449782*^9}, {3.8923983525059958`*^9, 
   3.892398416566023*^9}, {3.8923985958061323`*^9, 3.892398721647341*^9}, {
   3.892398762166195*^9, 3.8923988356771135`*^9}, {3.8923994497214513`*^9, 
   3.892399450165831*^9}, {3.892399498478735*^9, 3.8923996169558177`*^9}, {
   3.892399705477058*^9, 3.892399762994342*^9}, {3.892399798435878*^9, 
   3.892399948386163*^9}, {3.892400059252329*^9, 3.892400177945047*^9}, {
   3.8924002084271746`*^9, 3.892400212881799*^9}, {3.892400312810155*^9, 
   3.8924003964646635`*^9}, {3.8924004332258863`*^9, 
   3.8924004332258863`*^9}, {3.8924004667458873`*^9, 3.892400469917051*^9}, {
   3.892400506597813*^9, 3.892400585104961*^9}, {3.892400757831801*^9, 
   3.892400804534991*^9}, {3.892400972367763*^9, 3.892400974040879*^9}, {
   3.89240105384111*^9, 3.892401055407038*^9}, {3.892401389095854*^9, 
   3.892401398475105*^9}, {3.892401514826091*^9, 3.892401517071723*^9}, {
   3.892534245847158*^9, 3.892534248454938*^9}, {3.892872187826863*^9, 
   3.892872190757622*^9}, {3.8933493561890125`*^9, 3.893349368361995*^9}, {
   3.89348742145381*^9, 3.893487436062696*^9}, {3.893492304838162*^9, 
   3.8934923048461585`*^9}, {3.898271949793967*^9, 3.8982719533211184`*^9}, {
   3.898272048167898*^9, 3.898272051505261*^9}, {3.8984167300559325`*^9, 
   3.898416772830679*^9}, {3.898416886512401*^9, 3.898416886659518*^9}, {
   3.898416952418844*^9, 3.898416961230018*^9}, {3.898417447156699*^9, 
   3.8984174716249857`*^9}, {3.898417775584815*^9, 3.898417784009431*^9}, {
   3.89841810767848*^9, 3.898418109777822*^9}, {3.898498149374493*^9, 
   3.898498224375059*^9}, {3.898498258438574*^9, 3.898498288440093*^9}, {
   3.898498338377733*^9, 3.898498486312986*^9}, {3.898612785574182*^9, 
   3.8986128141750174`*^9}, {3.8986197691118207`*^9, 3.898619769261925*^9}, {
   3.8986215206340117`*^9, 3.898621520796695*^9}, {3.901721849485814*^9, 
   3.901721856751726*^9}, {3.90172223001527*^9, 3.901722300642374*^9}, {
   3.901723501170943*^9, 3.90172350181802*^9}, {3.901723903491409*^9, 
   3.901723912587018*^9}, {3.902808450341501*^9, 3.902808462748777*^9}, 
   3.902808568792131*^9, {3.9029088470116005`*^9, 3.902908862792575*^9}, {
   3.9029096004377184`*^9, 3.9029096573879814`*^9}, {3.902909794985092*^9, 
   3.902909880860897*^9}, {3.902909932910005*^9, 3.90290996585912*^9}, {
   3.902910079695611*^9, 3.9029100890246334`*^9}, {3.9029101935812836`*^9, 
   3.90291023303977*^9}, 3.902910402104411*^9, {3.902910733120657*^9, 
   3.902910738529023*^9}, {3.902910852571861*^9, 3.9029108531112223`*^9}, {
   3.902914221207258*^9, 3.902914343188004*^9}, {3.902914381784239*^9, 
   3.902914504438271*^9}, {3.902915086118385*^9, 3.902915086683072*^9}, {
   3.904058884498025*^9, 3.904058894729115*^9}, {3.904066241972974*^9, 
   3.904066242494639*^9}, {3.9058452272510767`*^9, 3.905845250926805*^9}, {
   3.905845376794994*^9, 3.9058454152641788`*^9}, {3.9101652814245453`*^9, 
   3.910165304947756*^9}, {3.910165707852807*^9, 3.910165712481017*^9}, {
   3.911975651225398*^9, 3.911975669983228*^9}, {3.911975702079359*^9, 
   3.911975846257121*^9}, {3.9119760869978914`*^9, 3.9119760961232605`*^9}, {
   3.9120760618500943`*^9, 3.9120761115238705`*^9}, {3.912076540903468*^9, 
   3.9120765549209013`*^9}, {3.912076766787343*^9, 3.912076768785372*^9}, {
   3.912078031451913*^9, 3.912078049594858*^9}, {3.912078883438263*^9, 
   3.912078883558423*^9}, {3.9120790320811267`*^9, 3.9120790322063847`*^9}, {
   3.912079181257861*^9, 3.912079182019356*^9}, 3.9120940119433517`*^9, {
   3.912145667075636*^9, 3.912145670158077*^9}, {3.912150556487838*^9, 
   3.912150630982073*^9}, 3.9121605288988934`*^9, {3.9121611926818237`*^9, 
   3.9121611928477197`*^9}, {3.912677024086327*^9, 3.912677059402796*^9}, {
   3.9126777571494217`*^9, 3.9126777668054447`*^9}, {3.912845896782793*^9, 
   3.912845899255166*^9}, {3.912846043088033*^9, 3.912846047550837*^9}, {
   3.9128464050283995`*^9, 3.9128464084977837`*^9}, 3.912846506738236*^9, {
   3.9128465901162987`*^9, 3.912846598003298*^9}, {3.912848552457214*^9, 
   3.9128485582494507`*^9}, {3.912850104572579*^9, 3.91285012898099*^9}, {
   3.912850558742343*^9, 3.912850564068616*^9}, {3.912875045619702*^9, 
   3.912875052380263*^9}, {3.912875094515668*^9, 3.912875241807813*^9}, {
   3.9128754264692755`*^9, 3.912875432083063*^9}, {3.912875548159252*^9, 
   3.912875550774439*^9}, {3.912875709959192*^9, 3.912875759854226*^9}, 
   3.914090563628383*^9, {3.914091289826815*^9, 3.9140913463068895`*^9}, {
   3.914091420574757*^9, 3.91409151407685*^9}, {3.915437153036351*^9, 
   3.915437153232602*^9}, {3.916157113680105*^9, 3.916157114237549*^9}, {
   3.916157145032995*^9, 3.916157145451127*^9}, {3.916157179670205*^9, 
   3.9161571801917343`*^9}, {3.91996357910014*^9, 3.9199636000091977`*^9}, {
   3.919964346152006*^9, 3.9199643528938217`*^9}, {3.9199651834261084`*^9, 
   3.9199651872602444`*^9}, {3.919965253831457*^9, 3.9199652719000797`*^9}, {
   3.919966081084933*^9, 3.9199660921058803`*^9}, {3.920013360512884*^9, 
   3.92001337637384*^9}},
 CellLabel->
  "In[107]:=",ExpressionUUID->"932d2ae6-9556-44fb-9296-702c8485e265"],

Cell[BoxData[
 FormBox[
  InterpretationBox[
   RowBox[{
    TagBox["CompiledFunction",
     "SummaryHead"], "[", 
    DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
     TemplateBox[{
       PaneSelectorBox[{False -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
               ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
               BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   StyleBox[
                    PaneBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"_Real", "2"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    ContentPadding -> False, FrameMargins -> 0, StripOnInput -> 
                    True, BaselinePosition -> Baseline, 
                    ImageSize -> {{1, 300}, Automatic}], LineBreakWithin -> 
                    False], "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}], True -> GridBox[{{
             PaneBox[
              ButtonBox[
               DynamicBox[
                FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
               ButtonFunction :> (Typeset`open$$ = False), Appearance -> None,
                BaseStyle -> {}, Evaluator -> Automatic, Method -> 
               "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}]], 
             GraphicsBox[{
               Thickness[0.038461538461538464`], {
                FaceForm[{
                  GrayLevel[0.93], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{1, 4, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}, {
                 1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {0, 1, 0}}}, {{{
                 25.499999999999996`, 2.5}, {25.499999999999996`, 
                 1.3953100000000003`}, {24.604699999999998`, 
                 0.49999999999999994`}, {23.5, 0.49999999999999994`}, {2.5, 
                 0.49999999999999994`}, {1.3953100000000003`, 
                 0.49999999999999994`}, {0.49999999999999994`, 
                 1.3953100000000003`}, {0.49999999999999994`, 2.5}, {
                 0.49999999999999994`, 23.5}, {0.49999999999999994`, 
                 24.604699999999998`}, {1.3953100000000003`, 
                 25.499999999999996`}, {2.5, 25.499999999999996`}, {23.5, 
                 25.499999999999996`}, {24.604699999999998`, 
                 25.499999999999996`}, {25.499999999999996`, 
                 24.604699999999998`}, {25.499999999999996`, 23.5}, {
                 25.499999999999996`, 2.5}}}]}, {
                FaceForm[{
                  RGBColor[0.5, 0.5, 0.5], 
                  Opacity[1.]}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{20.5426, 
                 19.116799999999998`}, {16.3832, 21.876199999999997`}, {
                 16.3832, 20.021499999999996`}, {6.930469999999999, 
                 20.021499999999996`}, {6.930469999999999, 
                 18.212100000000003`}, {16.3832, 18.212100000000003`}, {
                 16.3832, 16.357399999999995`}, {20.5426, 
                 19.116799999999998`}}}], 
                
                FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 0}, {
                 0, 1, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{5.30508, 13.8391}, {
                 9.46445, 11.079700000000003`}, {9.46445, 
                 12.933999999999997`}, {18.917199999999998`, 
                 12.933999999999997`}, {18.917199999999998`, 14.7438}, {
                 9.46445, 14.7438}, {9.46445, 16.598}, {5.30508, 13.8391}}}], 
                
                
                FilledCurveBox[{{{1, 4, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {
                 0, 1, 0}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 
                 3}, {1, 3, 3}, {1, 3, 3}, {1, 3, 3}, {0, 1, 0}, {1, 3, 3}, {
                 1, 3, 3}, {1, 3, 3}, {1, 3, 3}}}, CompressedData["
1:eJxTTMoPSmVmYGBgBGJjIGYCYq4u+eR3VWoOxhkv5j+Qk3SA8fu/r5rKOVHM
Yd2vmNyjZ9Qcrt9QXbW9S8RBg59767IidQcPMYPGaHFhB+Nn61SfiGo4xBwp
T7o2V9Dh0Iolfg6/NBxEHv/x1Xgi4FB1XNNqkqQWnP+axUTQjFkbzn+oO2HB
j/3aDg/Xn5T6WiDoYLs3aJpiqI7DrHN+bO6tQg4zfUR7vF7pQOyfIQyRd9d1
WLL0U1kLoyjEPdm6DpoTXfQX7xBzKPjQejLkhDacL5J4+LL2Gm2HtNnSl4Vf
iELM69J2qPZM3tLnJerQX1oozZugDfHPUxGI/4W1HQ5p3TthoyDi4D7lG1v8
Mi2HgqL9zoEHhB1inOxe3BRG8MH62zXhfIbN1Z82CGhC/GMg4nCm3mN/7TYN
iHlCUPdGakDc/1kUEr46GhD/eYnD+d9iBf/kC0vC+TuCrSL+X5Vy2HGR4R5T
uAbEfxYykPBYp+HQqsCuesZAFhL+rJoQ/2rIQdxTpwkJ7yVycPfD+GDzVqLx
xbUd5HYt2JfqBdWfpA2Jj9mykPDpgYaXtaxDy7yzq86vg8qvlIHE5ylY/Eo7
XAt7o787TxfOB5ufqesQ9PbyxxkPZSDhZ6nrMAGU3u7LQtLLEx2HN2253UbX
ofZ76jis/Pay4oynAsT8QG0HKZMv/gW7FCDyTFpwPsz/MD44/Mw1HFjb1uR9
TVVwWKy880/7FHWIexrkIfLX1RzOMDZZVjHIOaDkh3vSDuj5AwCF11Vc
                 "]]}}, Background -> GrayLevel[0.93], Axes -> False, 
              AspectRatio -> 1, ImageSize -> 
              Dynamic[{
                Automatic, 
                 3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                  Magnification])}], Frame -> True, FrameTicks -> None, 
              FrameStyle -> Directive[
                Thickness[Tiny], 
                GrayLevel[0.7]]], 
             GridBox[{{
                RowBox[{
                  TagBox["\"Argument count: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox["1", "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Argument types: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{"(", "\[NoBreak]", 
                    
                    GridBox[{{"_Real", "2"}}, RowSpacings -> 1, 
                    ColumnSpacings -> 1, RowAlignments -> Baseline, 
                    ColumnAlignments -> Center], "\[NoBreak]", ")"}], 
                    ImageSize -> {{1, 500}, Automatic}, BaselinePosition -> 
                    Baseline, ContentPadding -> False, FrameMargins -> 0, 
                    StripOnInput -> True], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Variables: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   RowBox[{"{", "pdglists", "}"}], "SummaryItem"]}]}, {
                RowBox[{
                  TagBox["\"Expression: \"", "SummaryItemAnnotation"], 
                  "\[InvisibleSpace]", 
                  TagBox[
                   PaneBox[
                    RowBox[{"Table", "[", 
                    RowBox[{
                    RowBox[{"Length", "[", 
                    RowBox[{"Select", "[", 
                    RowBox[{
                    
                    RowBox[{"pdglists", "\[LeftDoubleBracket]", "i", 
                    "\[RightDoubleBracket]"}], ",", 
                    RowBox[{
                    RowBox[{"MemberQ", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "2212.`"}], ",", 
                    RowBox[{"-", "2112.`"}], ",", 
                    RowBox[{"-", "321.`"}], ",", 
                    RowBox[{"-", "211.`"}], ",", 
                    RowBox[{"-", "21.`"}], ",", 
                    RowBox[{"-", "13.`"}], ",", 
                    RowBox[{"-", "11.`"}], ",", 
                    RowBox[{"-", "5.`"}], ",", 
                    RowBox[{"-", "4.`"}], ",", 
                    RowBox[{"-", "3.`"}], ",", 
                    RowBox[{"-", "2.`"}], ",", 
                    RowBox[{"-", "1.`"}], ",", "1.`", ",", "2.`", ",", "3.`", 
                    ",", "4.`", ",", "5.`", ",", "11.`", ",", "13.`", ",", 
                    "21.`", ",", "22.`", ",", "130.`", ",", "211.`", ",", 
                    "321.`", ",", "2112.`", ",", "2212.`"}], "}"}], ",", 
                    "#1"}], "]"}], "&"}]}], "]"}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"i", ",", "1", ",", 
                    RowBox[{"Length", "[", "pdglists", "]"}], ",", "1"}], 
                    "}"}]}], "]"}], ImageSize -> {{1, 500}, Automatic}, 
                    BaselinePosition -> Baseline, ContentPadding -> False, 
                    FrameMargins -> 0, StripOnInput -> True], 
                   "SummaryItem"]}]}}, 
              GridBoxAlignment -> {
               "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
              False, GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {
               "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
              BaseStyle -> {
               ShowStringCharacters -> False, NumberMarks -> False, 
                PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
           GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
           AutoDelete -> False, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
           BaselinePosition -> {1, 1}]}, 
        Dynamic[Typeset`open$$], ImageSize -> Automatic]},
      "SummaryPanel"],
     DynamicModuleValues:>{}], "]"}],
   CompiledFunction[{11, 13.2, 5848}, {{
      Blank[Real], 2}}, {{3, 2, 0}, {2, 1, 
    5}}, {{{-2212., -2112., -321., -211., -21., -13., -11., -5., -4., -3., \
-2., -1., 1., 2., 3., 4., 5., 11., 13., 21., 22., 130., 211., 321., 2112., 
      2212.}, {3, 1, 2}}, {0, {2, 0, 4}}, {-1, {2, 0, 10}}, {1, {2, 0, 0}}}, {
    1, 17, 3, 0, 
    7}, {{33, 0, 2}, {6, 4, 3}, {35, 2, 2, 5}, {6, 4, 9}, {3, 38}, {6, 4, 
     14}, {6, 4, 8}, {38, 0, 0, 9, 1, 4}, {33, 4, 13}, {6, 4, 5}, {35, 13, 2, 
     1}, {6, 4, 15}, {3, 11}, {37, 4, 15, 3, 0}, {7, 0, 1}, {
     42, "MemberQ", 3, 1, 2, -3, 0, 1, 1, 0, 0}, {2, 0, 5}, {12, 14, 0, 16}, {
     6, 16, 14}, {6, 15, 16}, {3, 2}, {6, 10, 16}, {36, 5, 16, 2, 1}, {4, 15, 
     13, -10}, {6, 14, 11}, {6, 4, 12}, {35, 11, 3, 6}, {6, 4, 7}, {3, 11}, {
     12, 8, 0, 5}, {6, 5, 8}, {37, 1, 8, 2, 5}, {24, 5, 10, 0}, {2, 0, 4}, {
     12, 8, 0, 5}, {6, 5, 8}, {3, -5}, {37, 4, 8, 3, 2}, {36, 12, 2, 3, 6}, {
     4, 7, 11, -10}, {33, 6, 8}, {36, 3, 8, 2, 5}, {4, 9, 2, -37}, {1}}, 
    Function[{$CellContext`pdglists}, 
     Table[
      Length[
       Select[
        Part[$CellContext`pdglists, $CellContext`i], 
        MemberQ[{-2212., -2112., -321., -211., -21., -13., -11., -5., -4., \
-3., -2., -1., 1., 2., 3., 4., 5., 11., 13., 21., 22., 130., 211., 321., 
         2112., 2212.}, #]& ]], {$CellContext`i, 1, 
       Length[$CellContext`pdglists], 1}], Listable], Evaluate, 
    LibraryFunction[
    "C:\\Users\\miksi\\AppData\\Roaming\\Mathematica\\ApplicationData\\\
CCompilerDriver\\BuildFolder\\iap-nb-109-30376\\compiledFunction131.dll", 
     "compiledFunction131", {{Real, 2, "Constant"}}, {Integer, 1}]],
   Editable->False,
   SelectWithContents->True,
   Selectable->False], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.914994106426088*^9, 3.914994659469517*^9, 3.915002519413777*^9, 
   3.915012850995468*^9, 3.915015248996187*^9, 3.915123752330534*^9, 
   3.9151832690956135`*^9, 3.915183450164019*^9, 3.9151848683991213`*^9, 
   3.915185072731521*^9, 3.915185248529698*^9, 3.915188297120842*^9, 
   3.915206723780719*^9, 3.915294017291902*^9, 3.916128248637062*^9, 
   3.916130255669451*^9, 3.9161571205117006`*^9, 3.91616242278653*^9, 
   3.9191364810294127`*^9, 3.919964252211972*^9, 3.9199648274511504`*^9, 
   3.919965015201246*^9, 3.9199651321792927`*^9, {3.919965180671581*^9, 
   3.919965189353589*^9}, {3.9199652517962084`*^9, 3.919965273836149*^9}, 
   3.9199654330100145`*^9, 3.919965481925294*^9, 3.919965520061562*^9, 
   3.9199656023720803`*^9, 3.91996566834341*^9, 3.919966028691414*^9, 
   3.9199660940873995`*^9, 3.91996614563823*^9},
 CellLabel->
  "Out[1225]=",ExpressionUUID->"132c0f28-9f82-4f02-8c8d-c6d7fd1f4e41"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "If the LLP, its mass, and the grid ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["E", "LLP"], ",", 
    SubscriptBox["\[Theta]", "LLP"], ",", 
    SubscriptBox["z", "LLP"]}], TraditionalForm]],ExpressionUUID->
  "f6b1c385-90f9-42da-bdac-12c385d8d987"],
 " are fixed (uses the routine for the fixed phase space of decay products \
from the previous section)"
}], "Subsection",
 CellChangeTimes->{{3.893436887306979*^9, 3.893436934036857*^9}, {
  3.893437066903433*^9, 3.893437076636647*^9}, {3.9154371532477307`*^9, 
  3.915437153262238*^9}},ExpressionUUID->"4c464067-cc6a-4518-9b88-\
150ded8f1f3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Block", " ", "that", " ", "takes", " ", "the", " ", "table", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["E", "LLP"], ",", 
      SubscriptBox["z", "LLP"], ",", 
      SubscriptBox["\[Theta]", "LLP"], ",", 
      SubscriptBox["z", "LLP"], ",", 
      SubscriptBox["\[Epsilon]", 
       RowBox[{"az", ",", "LLP"}]], ",", 
      SubscriptBox["\[Phi]", "LLP"]}], "}"}], " ", "and", " ", "computes", 
    " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["E", "LLP"], ",", 
      SubscriptBox["z", "LLP"], ",", 
      SubscriptBox["\[Theta]", "LLP"], ",", 
      SubscriptBox["z", "LLP"], ",", 
      SubscriptBox["\[Epsilon]", 
       RowBox[{"az", ",", "LLP"}]], ",", 
      RowBox[{"<", 
       SubscriptBox["\[Epsilon]", 
        RowBox[{"decay", ",", "LLP"}]], 
       SubscriptBox[">", 
        SubscriptBox["\[Phi]", "LLP"]]}]}], "}"}], " ", "for", " ", "the", 
    " ", "given", " ", "LLP", " ", "and", " ", 
    RowBox[{"mass", ".", " ", "It"}], " ", "averages", " ", "over", " ", 
    "dominant", " ", 
    RowBox[{"LLP", "'"}], "s", " ", 
    RowBox[{"decays", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"DecayAcceptanceBlock", "[", 
    RowBox[{
    "LLP_", ",", "mLLP_", ",", "proclist_", ",", "grid_", ",", "gridreduced_",
      ",", "isim_", ",", "HadronizationOption_", ",", 
     "AllProductsWithinAcceptance_", ",", "ntracksmin_"}], "]"}], ":=", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
      "List", " ", "of", " ", "processes", " ", "for", " ", "the", " ", 
       "given", " ", "LLP"}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ProcessesListGivenComputation", "=", "proclist"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Br", " ", "ratios", " ", "associated", " ", "with", " ", "the", " ", 
        "given", " ", "processes"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"ListBrRatiosGivenComputation", "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ListBrRatios", "[", 
          RowBox[{"LLP", ",", "mLLP", ",", "#"}], "]"}], "&"}], "/@", 
        "ProcessesListGivenComputation"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"Total", "[", "ListBrRatiosGivenComputation", "]"}], "!=", 
         "0"}], ",", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
          RowBox[{
          "Number", " ", "of", " ", "decays", " ", "simulated", " ", "for", 
           " ", "each", " ", "particular", " ", "channel"}], ",", " ", 
          RowBox[{
          "joined", " ", "with", " ", "the", " ", "channel", " ", 
           "identifiers"}]}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"isimulvalPerDecayChannelTemp", "=", 
          RowBox[{"Join", "[", 
           RowBox[{
            RowBox[{"Partition", "[", 
             RowBox[{
              RowBox[{"NeventsSplitted", "[", 
               RowBox[{"isim", ",", "ListBrRatiosGivenComputation"}], "]"}], 
              ",", "1"}], "]"}], ",", 
            RowBox[{"Partition", "[", 
             RowBox[{"ProcessesListGivenComputation", ",", "1"}], "]"}], ",", 
            "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "Selecting", " ", "only", " ", "those", " ", "channels", " ", 
            "for", " ", "which", " ", "the", " ", "number", " ", "of", " ", 
            "simulated", " ", "decays", " ", "is"}], " ", ">", " ", 
           RowBox[{
            SuperscriptBox["10", 
             RowBox[{"-", "2"}]], 
            SubscriptBox["N", "ev"]}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"isimulvalPerDecayChannel", "=", 
          RowBox[{"Select", "[", 
           RowBox[{"isimulvalPerDecayChannelTemp", ",", 
            RowBox[{
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], ">=", 
              RowBox[{"IntegerPart", "[", 
               RowBox[{"0.01", "*", "isim"}], "]"}]}], "&"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
            RowBox[{"Removing", " ", "rows", " ", "for", " ", "which", " ", 
             SubscriptBox["E", "LLP"]}], " ", "<", " ", 
            RowBox[{
             SubscriptBox["m", "LLP"], " ", "or", " ", 
             SubscriptBox["\[Epsilon]", "azimuthal"]}]}], " ", "=", " ", 
           "0"}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"gridNonZero", "=", 
          RowBox[{"TableLLPnonZeroCompiled", "[", 
           RowBox[{"grid", ",", "mLLP"}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
          "The", " ", "same", " ", "table", " ", "as", " ", "gridNonZero", 
           " ", "but", " ", "with", " ", "removed", " ", "column", " ", 
           SubscriptBox["\[Phi]", "LLP"], " ", 
           RowBox[{"(", 
            RowBox[{"equivalent", " ", "to", " ", 
             RowBox[{
              RowBox[{"DeleteDuplicatesBy", "[", 
               RowBox[{"gridNonZero", ",", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                   RowBox[{"#", "[", 
                    RowBox[{"[", 
                    RowBox[{"[", "3", "]"}], "]"}]}]}], "}"}], "&"}]}], "]"}],
               "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2", ",", "3", ",", "4"}], "}"}]}], "]"}], 
              "]"}]}], ")"}]}], "*)"}], "\[IndentingNewLine]", 
         RowBox[{"gridReducedNonZero", "=", 
          RowBox[{"TableLLPnonZeroCompiled", "[", 
           RowBox[{"gridreduced", ",", "mLLP"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"(*", 
          RowBox[{
           RowBox[{
           "The", " ", "table", " ", "with", " ", "the", " ", "remaining", 
            " ", "grid", " ", "for", " ", "which", " ", 
            SubscriptBox["\[Epsilon]", "az"]}], " ", "=", " ", "0"}], "*)"}], 
         "\[IndentingNewLine]", 
         RowBox[{"gridReducedZero", "=", 
          RowBox[{"TableLLPzeroCompiled", "[", 
           RowBox[{"gridreduced", ",", "mLLP"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "gridReducedNonZero", "]"}], "\[NotEqual]",
             "0"}], ",", "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "___", "___", "___", "___", "___", "___", "___", "___", "___", 
             "___", "___", "___", "___", "___"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
             RowBox[{
             "Evaluating", " ", "decay", " ", "acceptances", " ", "per", " ", 
              "each", " ", "channel", " ", "and", " ", "averaging", " ", 
              "over", " ", "simulated", " ", 
              RowBox[{"decays", ".", " ", "At"}], " ", "this", " ", "step"}], 
             ",", " ", 
             RowBox[{
              RowBox[{"some", " ", "values", " ", "may", " ", "be"}], " ", 
              ">", " ", 
              RowBox[{
              "1", " ", "if", " ", "the", " ", "number", " ", "of", " ", 
               "combinations", " ", "of", " ", "pairs", " ", "of", " ", "the",
                " ", "decay", " ", "products", " ", "is"}], " ", ">", " ", 
              "1"}]}], "*)"}], "\[IndentingNewLine]", 
           RowBox[{"(*", 
            RowBox[{
            "___", "___", "___", "___", "___", "___", "___", "___", "___", 
             "___", "___", "___", "___", "___"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"proclistgiven", "=", 
             RowBox[{"isimulvalPerDecayChannel", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "2"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"isimlistgiven", "=", 
             RowBox[{"isimulvalPerDecayChannel", "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{"DecayAcceptancesList", "=", 
             RowBox[{"DecayAcceptanceELLP\[Theta]LLPzLLPoverall", "[", 
              RowBox[{
              "LLP", ",", "mLLP", ",", "proclistgiven", ",", "isimlistgiven", 
               ",", "gridNonZero", ",", "HadronizationOption", ",", 
               "AllProductsWithinAcceptance", ",", "ntracksmin"}], "]"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{
              "This", " ", "code", " ", "replaces", " ", "the", " ", 
               "values"}], " ", ">", " ", 
              RowBox[{"1", " ", "with", " ", "1."}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"(*", 
             RowBox[{
              RowBox[{"Table", " ", 
               SubscriptBox["E", "LLP"]}], ",", 
              SubscriptBox["\[Theta]", "LLP"], ",", 
              SubscriptBox["z", "LLP"], ",", 
              SubscriptBox["\[Epsilon]", 
               RowBox[{"az", ",", "LLP"}]], ",", 
              SubscriptBox["\[Epsilon]", "decay"], ",", " ", 
              RowBox[{
              "where", " ", "the", " ", "decay", " ", "acceptance", " ", "is",
                " ", "averaged", " ", "over", " ", "channels"}]}], "*)"}], 
            "\[IndentingNewLine]", 
            RowBox[{"t1", "=", 
             RowBox[{"Join", "[", 
              RowBox[{
              "gridReducedNonZero", ",", "DecayAcceptancesList", ",", "2"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"Length", "[", "gridReducedZero", "]"}], "\[NotEqual]",
                "0"}], ",", "\[IndentingNewLine]", 
              RowBox[{"(*", 
               RowBox[{
               "Merging", " ", "the", " ", "table", " ", "computed", " ", 
                "above", " ", "with", " ", "tables", " ", "with", " ", "zero",
                 " ", "acceptance"}], "*)"}], "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"t2", "=", 
                RowBox[{"Join", "[", 
                 RowBox[{"gridReducedZero", ",", 
                  RowBox[{"Table", "[", 
                   RowBox[{
                    RowBox[{"{", "0.", "}"}], ",", 
                    RowBox[{"Length", "[", "gridReducedZero", "]"}]}], "]"}], 
                  ",", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
               RowBox[{"(*", 
                RowBox[{"Final", " ", "output"}], "*)"}], 
               "\[IndentingNewLine]", 
               RowBox[{"finaldata", "=", 
                RowBox[{"SortBy", "[", 
                 RowBox[{
                  RowBox[{"Join", "[", 
                   RowBox[{"t1", ",", "t2"}], "]"}], ",", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}]}], 
                 "]"}]}]}], ",", 
              RowBox[{"finaldata", "=", 
               RowBox[{"SortBy", "[", 
                RowBox[{"t1", ",", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ",", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}]}], 
                "]"}]}]}], "]"}]}], ",", 
           RowBox[{"finaldata", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"gridreduced", ",", 
              RowBox[{"Table", "[", 
               RowBox[{
                RowBox[{"{", "0.", "}"}], ",", 
                RowBox[{"Length", "[", "gridreduced", "]"}]}], "]"}], ",", 
              "2"}], "]"}]}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}], ";", 
      "\[IndentingNewLine]", "finaldata"}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.893501327987807*^9, 3.893501408818131*^9}, {
   3.893582686026419*^9, 3.893582687582264*^9}, 3.893582777150035*^9, {
   3.893582905854031*^9, 3.893582915525397*^9}, {3.8945318196185684`*^9, 
   3.894531821604297*^9}, {3.894531892812183*^9, 3.894531936889783*^9}, {
   3.8983234026557837`*^9, 3.898323403090487*^9}, {3.898501094837611*^9, 
   3.898501095575096*^9}, 3.898671676642496*^9, 3.898671835880391*^9, 
   3.898673682895881*^9, 3.8986737209966764`*^9, 3.8986738053828163`*^9, 
   3.8986762723594136`*^9, {3.898676325487214*^9, 3.898676345769024*^9}, {
   3.898676866083459*^9, 3.898676868662307*^9}, {3.8986771073659534`*^9, 
   3.898677107538133*^9}, {3.898677169452909*^9, 3.898677204673844*^9}, {
   3.898698343853408*^9, 3.8986983445809174`*^9}, {3.9017231237129755`*^9, 
   3.901723130275805*^9}, {3.904794414756953*^9, 3.904794416105511*^9}, {
   3.904794617236865*^9, 3.9047946209886703`*^9}, {3.904900292495194*^9, 
   3.904900317096446*^9}, {3.905845259870467*^9, 3.905845274650733*^9}, {
   3.905845358308328*^9, 3.9058453615242586`*^9}, {3.911975873309282*^9, 
   3.911975895511446*^9}, {3.912076179915456*^9, 3.912076183918428*^9}, {
   3.912076240025505*^9, 3.912076325679378*^9}, {3.91207782971718*^9, 
   3.912077853900365*^9}, {3.912150211629831*^9, 3.912150236332773*^9}, {
   3.912150325773309*^9, 3.912150419427712*^9}, {3.912150465322407*^9, 
   3.912150467378523*^9}, 3.9121506435034223`*^9, {3.914750761688745*^9, 
   3.914750780878029*^9}, {3.9154371532662325`*^9, 3.9154371536720304`*^9}, {
   3.916157203134308*^9, 3.9161572511085944`*^9}, {3.916157612579924*^9, 
   3.916157613220559*^9}, {3.919963557850192*^9, 3.91996357097154*^9}},
 CellLabel->
  "In[113]:=",ExpressionUUID->"025ca6bd-b097-4309-b69e-bc6c3dafc20a"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{
   RowBox[{"fff", "=", 
    RowBox[{"DecayAcceptanceBlock", "[", 
     RowBox[{"\"\<HNL-mixing-e\>\"", ",", "20.", ",", 
      RowBox[{"ProcessesListRefined", "[", 
       RowBox[{"\"\<HNL-mixing-e\>\"", ",", "\"\<False\>\""}], "]"}], ",", 
      "gridLLPtoDet", ",", "gridReducedLLPtoDet", ",", "100", ",", 
      "\"\<True\>\"", ",", "\"\<>=2\>\"", ",", "4"}], "]"}]}], ";", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"fff", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", 
       RowBox[{"-", "1"}]}], "]"}], "]"}], "//", "MinMax"}]}], 
  "*)"}]], "Input",
 CellChangeTimes->{{3.927606441736076*^9, 3.927606441831887*^9}, {
  3.927606650067691*^9, 3.927606650553445*^9}, {3.9276067763684173`*^9, 
  3.9276067781871233`*^9}},
 CellLabel->
  "In[648]:=",ExpressionUUID->"fa66ed2d-d808-4305-91ae-23f24753994c"]
}, Open  ]],

Cell[CellGroupData[{

Cell["If the LLP and mass only is fixed", "Subsection",
 CellChangeTimes->{{3.893436946297087*^9, 3.893436953008216*^9}, {
   3.89343706296703*^9, 3.893437063858898*^9}, 
   3.915437153680625*^9},ExpressionUUID->"2cc34012-e054-4daa-b223-\
a9bbd4b52294"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FinalBlockMass", "[", 
   RowBox[{
   "LLP_", ",", "mLLP_", ",", "proclist_", ",", "isim_", ",", 
    "HadronizationOption_", ",", "AllProductsWithinAcceptance_", ",", 
    "ntracksmin_"}], "]"}], ":=", "\[IndentingNewLine]", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"(*", 
     RowBox[{
     "Block", " ", "computing", " ", "the", " ", "decay", " ", "acceptance", 
      " ", "for", " ", "LLPs", " ", "that", " ", "point", " ", "or", " ", 
      "not", " ", "point", " ", "to", " ", "the", " ", "detector"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"{", 
       RowBox[{"tabAccToDet", ",", "tabAccNotToDet"}], "}"}], "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "DecayVolumeAsDetectorGivenExperiment", "\[Equal]", 
          "\"\<False\>\""}], "&&", 
         RowBox[{"!", 
          RowBox[{"(", 
           RowBox[{"GivenExperiment", "==", "\"\<ANUBIS-ceiling\>\""}], 
           ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DecayAcceptanceBlock", "[", 
           RowBox[{
           "LLP", ",", "mLLP", ",", "proclist", ",", "gridLLPtoDet", ",", 
            "gridReducedLLPtoDet", ",", "isim", ",", "HadronizationOption", 
            ",", "AllProductsWithinAcceptance", ",", "ntracksmin"}], "]"}], 
          ",", 
          RowBox[{"DecayAcceptanceBlock", "[", 
           RowBox[{
           "LLP", ",", "mLLP", ",", "proclist", ",", "gridLLPnotToDet", ",", 
            "gridReducedLLPnotToDet", ",", "isim", ",", "HadronizationOption",
             ",", "AllProductsWithinAcceptance", ",", "ntracksmin"}], "]"}]}],
          "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"DecayAcceptanceBlock", "[", 
           RowBox[{
           "LLP", ",", "mLLP", ",", "proclist", ",", "gridLLPtoDet", ",", 
            "gridReducedLLPtoDet", ",", "isim", ",", "HadronizationOption", 
            ",", "AllProductsWithinAcceptance", ",", "ntracksmin"}], "]"}], 
          ",", "0"}], "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"Table", " ", 
        SubscriptBox["m", "LLP"]}], ",", " ", 
       SubscriptBox["E", "LLP"], ",", " ", 
       SubscriptBox["\[Theta]", "LLP"], ",", " ", 
       SubscriptBox["z", "LLP"], ",", " ", 
       RowBox[{"<", 
        SubscriptBox["\[Epsilon]", "decay"], 
        SubscriptBox[">", 
         RowBox[{"\[Phi]", ",", " ", 
          RowBox[{
           RowBox[{"to", " ", "det"}], " ", "+", " ", 
           RowBox[{"not", " ", "to", " ", "det"}]}]}]]}], ",", " ", 
       RowBox[{"<", 
        RowBox[{
         SubscriptBox["\[Epsilon]", "decay"], "*", 
         SubscriptBox["\[Epsilon]", 
          RowBox[{"other", " ", "cuts"}]]}], 
        SubscriptBox[">", 
         RowBox[{"\[Phi]", ",", " ", 
          RowBox[{
           RowBox[{"to", " ", "det"}], " ", "+", " ", 
           RowBox[{"not", " ", "to", " ", "det"}]}]}]]}]}], "*)"}], " ", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"By", " ", 
        SubscriptBox["<>", 
         RowBox[{"\[Phi]", ",", " ", 
          RowBox[{
           RowBox[{"to", " ", "det"}], " ", "+", " ", 
           RowBox[{"not", " ", "to", " ", "det"}]}]}]]}], ",", " ", 
       RowBox[{
       "one", " ", "averages", " ", "over", " ", "the", " ", "LLP", " ", 
        "directions", " ", "pointing", " ", "to", " ", "the", " ", "end", " ",
         "of", " ", "detector", " ", "and", " ", "directions", " ", "that", 
        " ", "do", " ", "not", " ", "point", " ", "to", " ", "it"}], ",", " ", 
       RowBox[{
       "with", " ", "the", " ", "weights", " ", "being", " ", "the", " ", 
        "azimuthal", " ", "acceptance"}]}], "*)"}], "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "tabAccToDet", "]"}], "!=", "0"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
          "DecayVolumeAsDetectorGivenExperiment", "\[Equal]", 
           "\"\<False\>\""}], "&&", 
          RowBox[{"!", 
           RowBox[{"(", 
            RowBox[{"GivenExperiment", "==", "\"\<ANUBIS-ceiling\>\""}], 
            ")"}]}]}], ",", 
         RowBox[{"\[Epsilon]dec1Compiled", "[", 
          RowBox[{"tabAccToDet", ",", "tabAccNotToDet", ",", "mLLP"}], "]"}], 
         ",", 
         RowBox[{"\[Epsilon]dec2Compiled", "[", 
          RowBox[{"tabAccToDet", ",", "mLLP"}], "]"}]}], "]"}]}], 
      "\[IndentingNewLine]", "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.893514713453408*^9, 3.893514713949625*^9}, 
   3.893514857430545*^9, {3.893515036345576*^9, 3.8935150427908497`*^9}, {
   3.893519901454827*^9, 3.893519934261715*^9}, {3.893582271707983*^9, 
   3.893582272590813*^9}, {3.898677213452895*^9, 3.898677222028368*^9}, {
   3.901723231444978*^9, 3.901723243690827*^9}, {3.902914677735798*^9, 
   3.902914717209297*^9}, {3.9037193498054957`*^9, 3.90371935238286*^9}, {
   3.904794589614698*^9, 3.904794603178558*^9}, {3.9058452838471*^9, 
   3.9058452920703783`*^9}, {3.905845347664421*^9, 3.9058453666948023`*^9}, {
   3.911975918083952*^9, 3.9119759305152464`*^9}, {3.91214544269784*^9, 
   3.91214544314142*^9}, {3.914750977990998*^9, 3.914750993941861*^9}, {
   3.9154371536860657`*^9, 3.915437153764005*^9}, {3.916157268325691*^9, 
   3.916157328336311*^9}, {3.916161996736026*^9, 3.916162015236701*^9}, {
   3.9161624343967376`*^9, 3.916162435018072*^9}, {3.916897514322591*^9, 
   3.9168975465863476`*^9}, {3.919963525470059*^9, 3.919963549443508*^9}},
 CellLabel->
  "In[116]:=",ExpressionUUID->"fd8181c7-af98-4443-bed1-bbdeb0609ed8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
Magnification:>1. Inherited,
FrontEndVersion->"14.0 para Mac OS X x86 (64-bit) (December 12, 2023)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"98692c92-0668-43ce-aa2a-173cd05d7215"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 224, 4, 69, "Chapter",ExpressionUUID->"1eb3b0f6-0e07-4890-a5d1-1c90db9dbee7"],
Cell[CellGroupData[{
Cell[829, 30, 242, 4, 67, "Section",ExpressionUUID->"96dbd82f-0a35-4aa3-b511-15996e84d4aa"],
Cell[CellGroupData[{
Cell[1096, 38, 160, 3, 54, "Subsection",ExpressionUUID->"44ec6fe0-7a2d-4acd-acdb-c238b14dda66"],
Cell[1259, 43, 2154, 60, 311, "Input",ExpressionUUID->"8a554a8e-8b3d-47e5-8dd9-76789e1ee703"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3450, 108, 172, 3, 54, "Subsection",ExpressionUUID->"b18d3506-b902-4912-8700-312321f50381"],
Cell[CellGroupData[{
Cell[3647, 115, 167, 3, 45, "Subsubsection",ExpressionUUID->"b73e8351-1f80-424d-bf0e-03e8d597a1e0"],
Cell[CellGroupData[{
Cell[3839, 122, 21952, 531, 1307, "Input",ExpressionUUID->"faf62253-07dc-4cd6-965a-350d54a5650d"],
Cell[25794, 655, 877, 15, 22, "Print",ExpressionUUID->"f5a530ed-83c0-4ec3-88ad-5ff6f658f85a"],
Cell[26674, 672, 2176, 49, 130, "Output",ExpressionUUID->"66c4df96-9913-49e3-86f5-1b15b5d4f075"],
Cell[28853, 723, 806, 14, 22, "Print",ExpressionUUID->"2fbe2af3-dbf1-4ee4-bc57-fefddc36f493"],
Cell[29662, 739, 1862, 46, 74, "Output",ExpressionUUID->"6099ad26-0092-4c5f-8d82-976c0109688b"],
Cell[31527, 787, 927, 16, 23, "Print",ExpressionUUID->"4f67dd63-be0b-4e01-90d1-630adde6440c"],
Cell[32457, 805, 1578, 37, 65, "Output",ExpressionUUID->"7b18f71d-072c-435a-bbf8-aed5ca29462c"],
Cell[34038, 844, 1532, 24, 24, "Print",ExpressionUUID->"cb8a91d9-568b-4625-8c53-cfc12eb51630"],
Cell[35573, 870, 992, 21, 68, "Output",ExpressionUUID->"878eeddf-c942-4a2d-8635-396ab196873a"],
Cell[36568, 893, 794, 13, 21, "Print",ExpressionUUID->"8041e764-b741-441c-aae0-afaec27f6244"],
Cell[37365, 908, 807, 15, 62, "Output",ExpressionUUID->"5391656b-b885-4183-84ce-d8534280fdde"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[38221, 929, 169, 3, 45, "Subsubsection",ExpressionUUID->"9cc4e6f8-589a-479d-9563-a1fc4ab560b9"],
Cell[CellGroupData[{
Cell[38415, 936, 7893, 208, 489, "Input",ExpressionUUID->"5365a0fa-eb31-490b-8406-27fa3c913a6f"],
Cell[46311, 1146, 1056, 19, 28, "Message",ExpressionUUID->"32583d6a-3ebc-40e2-9d6b-606655850c03"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[47440, 1173, 160, 3, 53, "Section",ExpressionUUID->"cfcdc0bb-9b75-48cc-9dba-613a41905bc7"],
Cell[47603, 1178, 12155, 276, 778, "Input",ExpressionUUID->"be417153-aaa6-4e45-b830-3a5210e865ed"],
Cell[CellGroupData[{
Cell[59783, 1458, 291, 4, 54, "Subsection",ExpressionUUID->"247cc50a-6550-4877-a185-08c8fc3286a3"],
Cell[60077, 1464, 9337, 235, 551, "Input",ExpressionUUID->"a2da95ae-aa5f-4449-b86e-66c72ae7a3c3"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[69463, 1705, 314, 5, 53, "Section",ExpressionUUID->"ed40518c-cb27-4fc6-8fad-73f862aa75dd"],
Cell[CellGroupData[{
Cell[69802, 1714, 202, 3, 54, "Subsection",ExpressionUUID->"ee695d17-f0f5-412f-ba53-13df6bc2b219"],
Cell[CellGroupData[{
Cell[70029, 1721, 170, 3, 45, "Subsubsection",ExpressionUUID->"b8f61271-2a5c-4ccc-a18d-e75689aabb9e"],
Cell[CellGroupData[{
Cell[70224, 1728, 12805, 325, 923, "Input",ExpressionUUID->"e7381bce-ced4-40cd-af3c-9f43782143f5"],
Cell[83032, 2055, 624, 19, 53, "Output",ExpressionUUID->"0cf69371-b8ce-40a8-8866-49a8998beeff"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[83705, 2080, 172, 3, 45, "Subsubsection",ExpressionUUID->"ce945967-fc9c-4958-9102-829147f7657e"],
Cell[83880, 2085, 13322, 310, 1050, "Input",ExpressionUUID->"dd6ed487-22ac-4dc8-b2b3-bfa77e61ce2e"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[97251, 2401, 326, 5, 38, "Subsection",ExpressionUUID->"7f229be0-89a2-409d-b465-05beef9164ec"],
Cell[CellGroupData[{
Cell[97602, 2410, 289, 4, 45, "Subsubsection",ExpressionUUID->"8782dd60-f254-415d-8b93-2eb3b562d51f"],
Cell[97894, 2416, 18534, 368, 1253, "Input",ExpressionUUID->"81135581-0f6a-4dee-b965-c7dae62607a1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[116465, 2789, 284, 4, 45, "Subsubsection",ExpressionUUID->"4c7e325d-bba1-468b-ad4e-6a1808e6d18c"],
Cell[116752, 2795, 6304, 147, 467, "Input",ExpressionUUID->"08c2b767-ac28-48e9-ad64-cd2137a88e5a"]
}, Closed]],
Cell[CellGroupData[{
Cell[123093, 2947, 353, 10, 37, "Subsubsection",ExpressionUUID->"5dd36f2a-32da-4722-bb4f-b88e53350645"],
Cell[123449, 2959, 3850, 88, 268, "Input",ExpressionUUID->"669c4c31-eb00-4f92-8d85-302655cf1aa0"]
}, Closed]],
Cell[CellGroupData[{
Cell[127336, 3052, 218, 3, 37, "Subsubsection",ExpressionUUID->"f4510095-c2d4-4a90-89ea-c9432850361c"],
Cell[127557, 3057, 3636, 83, 276, "Input",ExpressionUUID->"cc4df259-16aa-4c24-b073-75153ca7831f"]
}, Closed]],
Cell[CellGroupData[{
Cell[131230, 3145, 312, 5, 37, "Subsubsection",ExpressionUUID->"2a952f6e-d944-4c1d-843b-8859a69cb34d"],
Cell[131545, 3152, 10570, 232, 1188, "Input",ExpressionUUID->"169aa994-e7f1-4026-897c-6fd77b7173b7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[142152, 3389, 369, 5, 45, "Subsubsection",ExpressionUUID->"580693cd-84d3-4994-8653-e19292626921"],
Cell[142524, 3396, 9287, 205, 1032, "Input",ExpressionUUID->"9a39c6b2-1ab1-451c-b52c-5e86151cb2e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151848, 3606, 266, 4, 45, "Subsubsection",ExpressionUUID->"604c2bc3-3fe8-4533-8e82-5df33369622d"],
Cell[152117, 3612, 5132, 113, 480, "Input",ExpressionUUID->"3c0cb102-c5b8-4423-8a14-96b69ae6fc8f"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[157298, 3731, 204, 3, 54, "Subsection",ExpressionUUID->"64ef572e-f6a2-454a-9e86-c2c91a3c595e"],
Cell[CellGroupData[{
Cell[157527, 3738, 329, 5, 45, "Subsubsection",ExpressionUUID->"3c63490c-4043-4632-92dc-aa21b0f96b24"],
Cell[157859, 3745, 33075, 621, 2458, "Input",ExpressionUUID->"71c90f15-fcf2-4d70-af48-3088e4a46916"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190971, 4371, 532, 8, 45, "Subsubsection",ExpressionUUID->"2936bf45-8472-499f-bced-227eae216e5a"],
Cell[CellGroupData[{
Cell[191528, 4383, 116, 2, 30, "Input",ExpressionUUID->"01221aba-6147-4b30-b07b-3bd90231b6a4"],
Cell[191647, 4387, 181, 4, 30, "Output",ExpressionUUID->"fc305b3e-7c32-4138-88cd-09c1d87b2826"]
}, Open  ]],
Cell[191843, 4394, 22986, 433, 1858, "Input",ExpressionUUID->"1de33f6f-d03f-4c7b-8094-e6266e1629c7"]
}, Open  ]],
Cell[CellGroupData[{
Cell[214866, 4832, 486, 8, 45, "Subsubsection",ExpressionUUID->"78e8fe27-61fd-4bc1-a26f-02a1c511aaad"],
Cell[215355, 4842, 22578, 423, 1807, "Input",ExpressionUUID->"1188ed6e-aa75-4802-87bd-02859eae6d2a"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237970, 5270, 420, 8, 45, "Subsubsection",ExpressionUUID->"8fb808d7-8c1f-4580-9481-1e5191beb5b7"],
Cell[238393, 5280, 24662, 472, 2053, "Input",ExpressionUUID->"b776897e-0c07-4847-92b9-26e378c7f185"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[263104, 5758, 304, 6, 54, "Subsection",ExpressionUUID->"bd6a6aa6-6ede-40ac-b625-0c1d3cc6e2ad"],
Cell[CellGroupData[{
Cell[263433, 5768, 20816, 450, 1472, "Input",ExpressionUUID->"932d2ae6-9556-44fb-9296-702c8485e265"],
Cell[284252, 6220, 17438, 327, 61, "Output",ExpressionUUID->"132c0f28-9f82-4f02-8c8d-c6d7fd1f4e41"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[301739, 6553, 628, 15, 54, "Subsection",ExpressionUUID->"4c464067-cc6a-4518-9b88-150ded8f1f3b"],
Cell[302370, 6570, 14470, 315, 1026, "Input",ExpressionUUID->"025ca6bd-b097-4309-b69e-bc6c3dafc20a"],
Cell[316843, 6887, 863, 21, 67, "Input",ExpressionUUID->"fa66ed2d-d808-4305-91ae-23f24753994c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[317743, 6913, 253, 4, 54, "Subsection",ExpressionUUID->"2cc34012-e054-4daa-b223-a9bbd4b52294"],
Cell[317999, 6919, 5818, 130, 336, "Input",ExpressionUUID->"fd8181c7-af98-4443-bed1-bbdeb0609ed8"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

