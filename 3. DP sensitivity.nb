(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 12.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[   1611489,      30842]
NotebookOptionsPosition[   1556255,      30081]
NotebookOutlinePosition[   1590721,      30494]
CellTagsIndexPosition[   1590354,      30483]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Just launch the code below to run the notebook (shift+enter)", "Title",
 CellChangeTimes->{{3.8934376452895875`*^9, 
  3.8934376644509068`*^9}},ExpressionUUID->"cc091cd5-168d-44d1-9a83-\
ebb576c10ceb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ParallelEvaluate", "[", 
   RowBox[{"ClearAll", "[", "\"\<Global`*\>\"", "]"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BlockEvaluation", "[", "tag_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nb", "=", 
      RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", "\n", 
     RowBox[{"NotebookFind", "[", 
      RowBox[{"nb", ",", "tag", ",", "All", ",", "CellTags"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SelectionEvaluate", "[", "nb", "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CloseKernels", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LaunchKernels", "[", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropdownDialog", "[", 
   RowBox[{"list_", ",", "phrase_"}], "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"PopupMenu", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "choice", "]"}], ",", "list"}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<OK\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infoDialog", "[", "phrase_", "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Proceed\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"DirectoryQ", "[", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"NotebookDirectory", "[", "]"}], ",", 
           "\"\<Auxiliary data\>\""}], "}"}], "]"}], "]"}], "//", 
       "ToString"}], ")"}], "\[Equal]", "\"\<False\>\""}], ",", 
    RowBox[{"CreateDirectory", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<Auxiliary data\>\""}], "}"}], "]"}], "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"choiceslist", "=", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Tabulated Nevents+sensitivity\>\"", ",", 
     "\"\<Sensitivity only (tabulated Nevents must be produced before)\>\"", 
     ",", "\"\<Acceptance\>\""}], "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"taglist", "[", "\"\<Acceptance\>\"", "]"}], "=", 
   "\"\<Acceptance\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"taglist", "[", "\"\<Tabulated Nevents+sensitivity\>\"", "]"}], 
   "=", "\"\<Number-of-events+sensitivity\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
   "taglist", "[", 
    "\"\<Sensitivity only (tabulated Nevents must be produced before)\>\"", 
    "]"}], "=", "\"\<Sensitivity\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"computationchoice", "=", 
   RowBox[{"dropdownDialog", "[", 
    RowBox[{
    "choiceslist", ",", 
     "\"\<Do you want to compute the tabulated number of events and then \
sensitivity, or just sensitivity (if the tabulated number of events has been \
already produced)?\>\""}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"tagselected", "=", 
  RowBox[{"taglist", "[", "computationchoice", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"BlockEvaluation", "[", "tagselected", "]"}]}], "Input",
 CellChangeTimes->{{3.893437585709897*^9, 3.8934375895369635`*^9}, {
   3.8934376329497385`*^9, 3.893437658846809*^9}, 3.893573113541499*^9, {
   3.89366535580302*^9, 3.8936653565596275`*^9}, {3.895053865536884*^9, 
   3.8950538657696643`*^9}, {3.895127061998116*^9, 3.8951270800527506`*^9}, 
   3.9025629436017327`*^9, 3.9027295382725515`*^9, 3.9028895266343613`*^9, {
   3.9038925204404736`*^9, 3.903892532444302*^9}, {3.914139991725472*^9, 
   3.91413999190073*^9}, 3.9146675649309025`*^9, {3.915682933598644*^9, 
   3.9156829349465213`*^9}, {3.916821955899866*^9, 3.9168219561608887`*^9}, {
   3.9170215754755774`*^9, 3.917021575681873*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"c8a7c6bd-754e-4c81-b344-1b6f8cd06de4"],

Cell[BoxData["\<\"Number-of-events+sensitivity\"\>"], "Output",
 CellChangeTimes->{3.921652838229336*^9},
 CellLabel->"Out[14]=",ExpressionUUID->"214ebb13-b06d-4440-863e-668d2fb07baf"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Definitions", "Title",
 CellChangeTimes->{{3.8765025649423122`*^9, 3.876502598054132*^9}, {
  3.876502741347786*^9, 3.876502742695223*^9}, {3.876503237989088*^9, 
  3.876503241621973*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"294691d8-aa8b-4eec-b72c-\
7eddbed8edd7"],

Cell[CellGroupData[{

Cell["Various directories", "Chapter",
 CellChangeTimes->{{3.913804059957842*^9, 3.913804062327417*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"961be1c9-94c9-4c1d-89d7-\
f8d7b8cbf72d"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"LLPdirName", "=", "\"\<DP\>\""}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Set", " ", "the", " ", "directory", " ", "for", " ", "the", " ", "search",
     " ", "where", " ", "tabulated", " ", "acceptances", " ", "are", " ", 
    "located"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"directory", "[", "\"\<Acceptances\>\"", "]"}], "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Acceptances\>\""}], 
      "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Set", " ", "the", " ", "directory", " ", "for", " ", "the", " ", 
     "search", " ", "where", " ", "tabulated", " ", "angle"}], "-", 
    RowBox[{"energy", " ", "distributions", " ", "are", " ", "located"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"directory", "[", "\"\<Distribution\>\"", "]"}], "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", 
       "\"\<spectra/New physics particles spectra\>\"", ",", "LLPdirName"}], 
      "}"}], "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "The", " ", "directory", " ", "storing", " ", "production", " ", "weights",
     " ", "of", " ", "the", " ", "given", " ", "LLP"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"directory", "[", "\"\<Production weights\>\"", "]"}], "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<phenomenology\>\"", 
       ",", "LLPdirName", ",", "\"\<Production probabilities\>\""}], "}"}], 
     "]"}]}], ";"}], " ", "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Directory", " ", "to", " ", "which", " ", "various", " ", "auxillary", 
    " ", "datasets", " ", "will", " ", "be", " ", "stored"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"directory", "[", "\"\<Auxiliary\>\"", "]"}], "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Auxiliary data\>\"",
        ",", "LLPdirName"}], "}"}], "]"}]}], ";"}], 
  " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", 
      RowBox[{"DirectoryQ", "[", 
       RowBox[{"directory", "[", "\"\<Auxiliary\>\"", "]"}], "]"}]}], ",", 
     RowBox[{"CreateDirectory", "[", 
      RowBox[{"directory", "[", "\"\<Auxiliary\>\"", "]"}], "]"}]}], "]"}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Directory", " ", "containing", " ", "decay", " ", "widths", " ", "of", 
    " ", "the", " ", "LLPs"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"directory", "[", "\"\<Decays\>\"", "]"}], "=", 
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<phenomenology\>\"", 
       ",", "LLPdirName", ",", "\"\<decay widths\>\""}], "}"}], "]"}]}], 
   ";"}], " "}]}], "Input",
 CellChangeTimes->{{3.913804080271287*^9, 3.913804171309696*^9}, {
   3.913804205284999*^9, 3.913804380241178*^9}, {3.9138103204454637`*^9, 
   3.9138103216469903`*^9}, 3.9138295316757774`*^9, {3.9138664030078764`*^9, 
   3.9138664044074554`*^9}, {3.913871718367205*^9, 3.9138717189543257`*^9}, {
   3.9138854890993285`*^9, 3.9138854893084154`*^9}, {3.91564305953752*^9, 
   3.915643059559283*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[650]:=",ExpressionUUID->"7e8395d1-58ed-4ab9-b1bf-c7ebe3e9a552"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Parameters and critical definitions", "Chapter",
 CellChangeTimes->{{3.8765032665997076`*^9, 3.876503268324252*^9}, 
   3.8867405532570024`*^9, {3.913886938897626*^9, 3.91388694220303*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"cf63fabc-7a3b-4498-8bf8-\
f69a301f20dc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"dropdownDialog", "[", 
   RowBox[{"list_", ",", "phrase_"}], "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"PopupMenu", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "choice", "]"}], ",", "list"}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<OK\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infoDialog", "[", "phrase_", "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Proceed\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"selectionDialog", "[", 
    RowBox[{"list_", ",", "phrase_"}], "]"}], ":=", 
   RowBox[{"DialogInput", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"choice", "=", 
       RowBox[{"{", "}"}]}], "}"}], ",", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", "phrase", "}"}], "]"}], ",", 
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"TogglerBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "choice", "]"}], ",", "list", ",", 
            RowBox[{"Appearance", "->", 
             RowBox[{"\"\<Vertical\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "5"}], "}"}]}]}]}], "]"}], ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"Scrollbars", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<OK\>\"", ",", 
          RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
      "]"}]}], "]"}]}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Conversion", " ", "units"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"GeVMinusOneTom", "=", 
   RowBox[{"2", "*", 
    SuperscriptBox["10", 
     RowBox[{"-", "16"}]]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"chbarval", "=", 
    RowBox[{"3", "*", 
     SuperscriptBox["10", "8"], "*", "6.58", "*", 
     SuperscriptBox["10", 
      RowBox[{"-", "25"}]]}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"EM", " ", "coupling"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Alpha]EM", "=", 
    RowBox[{"1", "/", "137"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Mesons", " ", "masses"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"mSM", "[", "\"\<Rho0\>\"", "]"}], ",", 
     RowBox[{"mSM", "[", "\"\<Pi0\>\"", "]"}], ",", 
     RowBox[{"mSM", "[", "\"\<Eta\>\"", "]"}], ",", 
     RowBox[{"mSM", "[", "\"\<EtaPr\>\"", "]"}], ",", 
     RowBox[{"mSM", "[", "\"\<p\>\"", "]"}]}], "}"}], "=", 
   RowBox[{"{", 
    RowBox[{"0.775", ",", "0.135", ",", "0.547", ",", "0.958", ",", "0.939"}],
     "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[CapitalGamma]SM", "[", "\"\<\[Rho]780\>\"", "]"}], "=", 
   "0.149"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Sigma]pNucleonInpb", "[", "Atarget_", "]"}], "=", 
   RowBox[{"51", "*", 
    SuperscriptBox["Atarget", 
     RowBox[{"-", "0.29"}]], "*", 
    SuperscriptBox["10", "9"]}]}], ";"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQfXJKx6frD984TpX/B6aV+ay5bgJpL5cGbhD985VM
V9zXN47lN9X6QHRm1uZdIPqZ9IPdIJp/WS5nPJBWWbAGTH+xU0xIANJZYVPz
QXRi5d5SED3rc3sZiP5RnN8Mom2vHG0B0XeF93WB6ICJzt0gesLXlBnpQHrR
XqGZIFpCbdoWEP0hxXQ7iJariXkGou8djQPTKTLqKzKAtLlo6GoQXcB0oU3p
zxvH91JXwLT37/gER6a3jn4TgnJB9L4puatAdMSmtLUgusZL+NZuIO0Sbw2m
Bcwsn25heeu4I2E1mI663OEQzP7WkYNxDph+16P0TkXzreOWX+5fQfQ25xoP
VSB9+UKSJ4i2jVo2C0SnTWWbDaLjrPR3qQNpvb2mYBoAv3fACw==
  "],
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[657]:=",ExpressionUUID->"2c1cafc9-37d9-434e-bd2d-c0787bc6f55b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["LLP phenomenology: production probabilities, decay widths", "Chapter",
 CellChangeTimes->{{3.835270415198964*^9, 3.8352704154970675`*^9}, {
   3.854441650570236*^9, 3.8544416515373263`*^9}, {3.885016402104937*^9, 
   3.8850164030053596`*^9}, 3.885019196491799*^9, {3.885019273945055*^9, 
   3.88501928458453*^9}, {3.9137189927638807`*^9, 3.9137190046798325`*^9}, {
   3.913885745903579*^9, 3.9138857697080164`*^9}, 3.913954281288325*^9, 
   3.9156430595706387`*^9},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"94b059cc-5312-4be8-9749-\
b24e1b58194e"],

Cell[CellGroupData[{

Cell["Scanning for tabulated distributions", "Section",
 CellChangeTimes->{{3.9137150010274553`*^9, 3.9137150224099426`*^9}, {
  3.913715411520641*^9, 3.913715414252445*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"1caa4f1c-1d68-4c34-a8aa-\
219c84a8ceb7"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Define", " ", "the", " ", "file", " ", "pattern"}], "*)"}], "\n", 
  RowBox[{
   RowBox[{
    RowBox[{"pattern", "=", "\"\<DoubleDistr_*_*_*.m\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "Search", " ", "for", " ", "files", " ", "matching", " ", "the", " ", 
     "pattern", " ", "in", " ", "the", " ", "directory", " ", "and", " ", 
     "its", " ", "subdirectories"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"matchingFiles", "=", 
     RowBox[{"FileNames", "[", 
      RowBox[{"pattern", ",", 
       RowBox[{"{", 
        RowBox[{"directory", "[", "\"\<Distribution\>\"", "]"}], "}"}], ",", 
       "Infinity"}], "]"}]}], ";"}], "\n", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"List", " ", "of", " ", "LLPs"}], ",", " ", 
     RowBox[{"production", " ", "modes"}], ",", " ", 
     RowBox[{
     "and", " ", "facilities", " ", "for", " ", "which", " ", "the", " ", 
      "tabulated", " ", "distributions", " ", "have", " ", "been", " ", 
      "computed", " ", "at", " ", "the", " ", "previous", " ", "stage", " ", 
      "of", " ", "using", " ", "SensCalc"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExtractedProductionParameters", "=", 
     RowBox[{"Function", "[", 
      RowBox[{"filename", ",", 
       RowBox[{
        RowBox[{"parts", "=", 
         RowBox[{"StringSplit", "[", 
          RowBox[{
           RowBox[{"FileNameTake", "[", "filename", "]"}], ",", "\"\<_\>\""}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"parts", "[", 
           RowBox[{"[", "2", "]"}], "]"}], ",", 
          RowBox[{"parts", "[", 
           RowBox[{"[", "3", "]"}], "]"}], ",", 
          RowBox[{"StringDrop", "[", 
           RowBox[{
            RowBox[{"parts", "[", 
             RowBox[{"[", "4", "]"}], "]"}], ",", 
            RowBox[{"-", "2"}]}], "]"}]}], "}"}]}]}], " ", "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"combinations", " ", "selected", " ", "LLP"}], ",", " ", 
     RowBox[{"production", " ", "channel"}], ",", " ", 
     RowBox[{
     "facility", " ", "for", " ", "which", " ", "the", " ", "tabulated", " ", 
      "distributions", " ", "are", " ", "present"}]}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"DistrCombinations", "=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"ExtractedProductionParameters", "/@", "matchingFiles"}], ")"}],
      "//", "Sort"}]}]}]}]], "Input",
 CellChangeTimes->{{3.9137151636915593`*^9, 3.9137152465178137`*^9}, {
   3.9137153053586187`*^9, 3.913715399589816*^9}, {3.913718678447782*^9, 
   3.913718708673525*^9}, {3.913719203960288*^9, 3.9137192388759937`*^9}, {
   3.913804074855399*^9, 3.913804089247952*^9}, 3.9138043135262485`*^9, {
   3.913810357631002*^9, 3.913810363616334*^9}, {3.9138256248481245`*^9, 
   3.9138256471350822`*^9}, 3.9138665659237595`*^9, {3.9156430596090527`*^9, 
   3.9156430596110473`*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[666]:=",ExpressionUUID->"3e580ec6-f8ab-4835-a08c-150bfb38f985"],

Cell[BoxData[
 FormBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"\<\"DP\"\>", "\<\"Bremsstrahlung\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"Bremsstrahlung\"\>", "\<\"Serpukhov\"\>"},
     {"\<\"DP\"\>", "\<\"Bremsstrahlung\"\>", "\<\"SPS\"\>"},
     {"\<\"DP\"\>", "\<\"DrellYan\"\>", "\<\"FermilabBD\"\>"},
     {"\<\"DP\"\>", "\<\"DrellYan\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"DrellYan\"\>", "\<\"SPS\"\>"},
     {"\<\"DP\"\>", "\<\"Eta\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"Eta\"\>", "\<\"Serpukhov\"\>"},
     {"\<\"DP\"\>", "\<\"Eta\"\>", "\<\"SPS\"\>"},
     {"\<\"DP\"\>", "\<\"EtaPr\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"EtaPr\"\>", "\<\"Serpukhov\"\>"},
     {"\<\"DP\"\>", "\<\"EtaPr\"\>", "\<\"SPS\"\>"},
     {"\<\"DP\"\>", "\<\"Pi0\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"Pi0\"\>", "\<\"Serpukhov\"\>"},
     {"\<\"DP\"\>", "\<\"Pi0\"\>", "\<\"SPS\"\>"},
     {"\<\"DP\"\>", "\<\"Rho0\"\>", "\<\"LHC\"\>"},
     {"\<\"DP\"\>", "\<\"Rho0\"\>", "\<\"Serpukhov\"\>"},
     {"\<\"DP\"\>", "\<\"Rho0\"\>", "\<\"SPS\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.921652838540194*^9, 3.9285768375977163`*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[669]=",ExpressionUUID->"d69e6648-66f0-4f32-9cab-7f681b39c40c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Production probabilities", "Section",
 CellChangeTimes->{{3.826713169183443*^9, 3.8267131698544655`*^9}, {
  3.885138658855132*^9, 3.8851386649516826`*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"8f111b29-8491-4838-ab0f-\
75131d945ac9"],

Cell[CellGroupData[{

Cell["\<\
Via decays of mesons and mixing: br ratios and meson multiplicities \
\>", "Subsection",
 CellChangeTimes->{{3.8867412989661756`*^9, 3.8867413212030272`*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"5ab83283-5bb4-4ea2-aaa0-\
a73f4f043e82"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "Production", " ", "from", " ", "decays", " ", "of", " ", "mesons", " ", 
    "and", " ", "mixing", " ", "with", " ", 
    SuperscriptBox["\[Rho]", "0"]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Br\[Pi]To\[Gamma]\[Gamma]", "=", "0.98799"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Br\[Eta]To\[Gamma]\[Gamma]", "=", "0.3931181"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Br\[Omega]To\[Pi]\[Gamma]", "=", "0.0834941"}], ";"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Br\[Eta]prTo\[Gamma]\[Gamma]", "=", "0.0219297"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Br\[Pi]0ToV", "[", "mLLP_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mLLP", "<", 
        RowBox[{"mSM", "[", "\"\<Pi0\>\"", "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"2", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["mLLP", "2"], "/", 
             SuperscriptBox[
              RowBox[{"mSM", "[", "\"\<Pi0\>\"", "]"}], "2"]}]}], ")"}], "3"],
          "*", "Br\[Pi]To\[Gamma]\[Gamma]"}], "]"}], ",", "0"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Br\[Eta]ToV", "[", "mLLP_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mLLP", "<", 
        RowBox[{"mSM", "[", "\"\<Eta\>\"", "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"2", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["mLLP", "2"], "/", 
             SuperscriptBox[
              RowBox[{"mSM", "[", "\"\<Eta\>\"", "]"}], "2"]}]}], ")"}], "3"],
          "*", "Br\[Eta]To\[Gamma]\[Gamma]"}], "]"}], ",", "0"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Br\[Omega]ToV", "[", "mLLP_", "]"}], "=", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"mLLP", "<", 
         RowBox[{"m\[Omega]", "-", "m\[Pi]0"}]}], ",", 
        RowBox[{"Br\[Omega]To\[Pi]\[Gamma]", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{
            SuperscriptBox["m\[Omega]", "2"], "-", 
            SuperscriptBox["mLLP", "2"], "-", 
            SuperscriptBox["m\[Pi]0", "2"]}], ")"}], "2"], "*", 
         RowBox[{
          RowBox[{"Sqrt", "[", 
           RowBox[{
            SuperscriptBox[
             RowBox[{"(", 
              RowBox[{
               SuperscriptBox["m\[Omega]", "2"], "-", 
               SuperscriptBox["mLLP", "2"], "+", 
               SuperscriptBox["m\[Pi]0", "2"]}], ")"}], "2"], "-", 
            RowBox[{"4", "*", 
             SuperscriptBox["m\[Omega]", "2"], "*", 
             SuperscriptBox["m\[Pi]0", "2"]}]}], "]"}], "/", 
          SuperscriptBox[
           RowBox[{"(", 
            RowBox[{
             SuperscriptBox["m\[Omega]", "2"], "-", 
             SuperscriptBox["mLLP", "2"]}], ")"}], "3"]}]}], ",", "0"}], 
       "]"}]}], ";"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Br\[Eta]prToV", "[", "mLLP_", "]"}], "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"mLLP", "<", 
        RowBox[{"mSM", "[", "\"\<EtaPr\>\"", "]"}]}], ",", 
       RowBox[{"Evaluate", "[", 
        RowBox[{"2", "*", 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{
             SuperscriptBox["mLLP", "2"], "/", 
             SuperscriptBox[
              RowBox[{"mSM", "[", "\"\<EtaPr\>\"", "]"}], "2"]}]}], ")"}], 
          "3"], "*", "Br\[Eta]prTo\[Gamma]\[Gamma]"}], "]"}], ",", "0"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"BrDecay", "[", 
        RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "\"\<Pi0\>\""}], "]"}], 
       ",", 
       RowBox[{"BrDecay", "[", 
        RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "\"\<Eta\>\""}], "]"}], 
       ",", 
       RowBox[{"BrDecay", "[", 
        RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "\"\<EtaPr\>\""}], "]"}]}],
       "}"}], "=", 
     RowBox[{"\[Epsilon]2", "*", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Br\[Pi]0ToV", "[", "mLLP", "]"}], ",", 
        RowBox[{"Br\[Eta]ToV", "[", "mLLP", "]"}], ",", 
        RowBox[{"Br\[Eta]prToV", "[", "mLLP", "]"}]}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{
      RowBox[{"Mixing", " ", "angle", " ", 
       SuperscriptBox["\[Rho]", "0"]}], "-", 
      RowBox[{
       RowBox[{"DP", ".", " ", "Following"}], " ", 
       RowBox[{"https", ":"}]}]}], "//", 
     RowBox[{
      RowBox[{
       RowBox[{"arxiv", ".", "org"}], "/", "pdf"}], "/", 
      RowBox[{"1810.01879", ".", "pdf"}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"g\[Rho]0", "=", "5"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Theta]DP\[Rho]02", "[", 
      RowBox[{"mLLP_", ",", "\[Epsilon]2_"}], "]"}], "=", 
     RowBox[{"\[Epsilon]2", "*", 
      FractionBox[
       RowBox[{"4", "Pi", "*", "\[Alpha]EM"}], 
       SuperscriptBox["g\[Rho]0", "2"]], 
      FractionBox[
       SuperscriptBox[
        RowBox[{"mSM", "[", "\"\<Rho0\>\"", "]"}], "4"], 
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["mLLP", "2"], "-", 
           SuperscriptBox[
            RowBox[{"mSM", "[", "\"\<Rho0\>\"", "]"}], "2"]}], ")"}], "2"], 
        "+", 
        RowBox[{
         SuperscriptBox[
          RowBox[{"\[CapitalGamma]SM", "[", "\"\<\[Rho]780\>\"", "]"}], "2"], 
         "*", 
         SuperscriptBox[
          RowBox[{"mSM", "[", "\"\<Rho0\>\"", "]"}], "2"]}]}]]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FacilitiesList", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<SPS\>\"", ",", "\"\<FermilabBD\>\"", ",", "\"\<LHC\>\"", ",", 
       "\"\<FCC-hh\>\"", ",", "\"\<Serpukhov\>\""}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PmotherToLLP", "[", 
        RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "part", ",", "Facility"}], 
        "]"}], "=", 
       RowBox[{"BrDecay", "[", 
        RowBox[{"mLLP", ",", "\[Epsilon]2", ",", "part"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"part", ",", 
       RowBox[{"{", 
        RowBox[{"\"\<Pi0\>\"", ",", "\"\<Eta\>\"", ",", "\"\<EtaPr\>\""}], 
        "}"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"Facility", ",", "FacilitiesList"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"PmotherToLLP", "[", 
        RowBox[{
        "mLLP_", ",", "\[Epsilon]2_", ",", "\"\<Rho0\>\"", ",", "Facility"}], 
        "]"}], "=", 
       RowBox[{"\[Theta]DP\[Rho]02", "[", 
        RowBox[{"mLLP", ",", "\[Epsilon]2"}], "]"}]}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"Facility", ",", "FacilitiesList"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"___", "___", "___", "___", "___", "_"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", "Bremsstrahlung", "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"___", "___", "___", "___", "___", "_"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"bremfacilities", "=", 
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{"DistrCombinations", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "2", "]"}], "]"}], "==", "\"\<Bremsstrahlung\>\""}], 
         "&"}]}], "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "3"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"BremProd", "[", "Facility_", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"MemberQ", "[", 
         RowBox[{"bremfacilities", ",", "Facility"}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"datbrem", "[", 
           RowBox[{"mLLP_", ",", "\[Theta]LLP_"}], "]"}], "=", 
          RowBox[{"Import", "[", 
           RowBox[{
            RowBox[{"FileNameJoin", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"directory", "[", "\"\<Production weights\>\"", "]"}], 
               ",", 
               RowBox[{
               "\"\<Pbrem_\>\"", "<>", "LLPdirName", "<>", "\"\<_\>\"", "<>", 
                "Facility", "<>", "\"\<.m\>\""}]}], "}"}], "]"}], ",", 
            "\"\<MX\>\""}], "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"PmotherToLLP", "[", 
           RowBox[{
           "mLLP_", ",", "\[Epsilon]2_", ",", "\"\<Bremsstrahlung\>\"", ",", 
            "Facility"}], "]"}], "=", 
          RowBox[{
           RowBox[{
            RowBox[{"datbrem", "[", 
             RowBox[{"mLLP", ",", "\[Theta]LLP"}], "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "*", "\[Epsilon]2"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ELLPmin", "[", 
           RowBox[{"\"\<Bremsstrahlung\>\"", ",", "Facility"}], "]"}], "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"datbrem", "[", 
             RowBox[{"mLLP", ",", "\[Theta]LLP"}], "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ELLPmax", "[", 
           RowBox[{
           "mLLP_", ",", "\[Theta]LLP_", ",", "\"\<Bremsstrahlung\>\"", ",", 
            "Facility"}], "]"}], "=", 
          RowBox[{"Evaluate", "[", 
           RowBox[{
            RowBox[{"datbrem", "[", 
             RowBox[{"mLLP", ",", "\[Theta]LLP"}], "]"}], "[", 
            RowBox[{"[", "3", "]"}], "]"}], "]"}]}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BremProd", "[", "Facility", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Facility", ",", "FacilitiesList"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "__"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Production", " ", "from", " ", "Drell"}], "-", 
     RowBox[{"Yan", " ", "process"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "___", "___", "___", "___", "___", "___", "___", "___", "___", "__"}], 
    "*)"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
     RowBox[{"Average", " ", "enhancement", " ", "LO", " ", "vs", " ", "LO"}],
      "+", 
     RowBox[{
     "NLO", " ", "obtained", " ", "for", " ", "SPS", " ", "energies", " ", 
      "in", " ", "2011.05115"}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"kfactorNLO", "=", "1.7"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Sigma]DrellYanData", "[", "Facility_", "]"}], ":=", 
    RowBox[{"Block", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"dat", "=", 
        RowBox[{"Import", "[", 
         RowBox[{
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"directory", "[", "\"\<Production weights\>\"", "]"}], 
             ",", 
             RowBox[{
             "\"\<sigmaDrellYan_DP_\>\"", "<>", "Facility", "<>", 
              "\"\<.txt\>\""}]}], "}"}], "]"}], ",", "\"\<Table\>\""}], 
         "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"MinMaxMassesDrellYan", "[", "Facility", "]"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Min", "[", 
           RowBox[{"dat", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"dat", "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"int", "[", "ma_", "]"}], "=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"MinMaxMassesDrellYan", "[", "Facility", "]"}], "[", 
            RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", "ma", 
           "\[LessEqual]", 
           RowBox[{
            RowBox[{"MinMaxMassesDrellYan", "[", "Facility", "]"}], "[", 
            RowBox[{"[", "2", "]"}], "]"}]}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"10", "^", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Interpolation", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Log10", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "90"}]]}], "]"}]}], "}"}], "&"}], "/@", 
                 "dat"}], ",", 
                RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", 
              RowBox[{"Log10", "[", "ma", "]"}], "]"}], ")"}]}], "]"}], ",", 
          "0"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PmotherToLLP", "[", 
         RowBox[{
         "mLLP_", ",", "\[Epsilon]2_", ",", "\"\<DrellYan\>\"", ",", 
          "Facility"}], "]"}], "=", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"Facility", "==", "\"\<SPS\>\""}], ",", "kfactorNLO", ",", 
           "1"}], "]"}], "*", "\[Epsilon]2", "*", 
         FractionBox[
          RowBox[{"int", "[", "mLLP", "]"}], 
          RowBox[{"\[Sigma]pNucleonInpb", "[", "Atarget", "]"}]]}]}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"\[Sigma]DrellYanData", "[", "Facility", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"Facility", ",", 
       RowBox[{"{", 
        RowBox[{
        "\"\<SPS\>\"", ",", "\"\<FermilabBD\>\"", ",", "\"\<LHC\>\""}], 
        "}"}]}], "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WeightsCombinations", "=", 
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"Keys", "[", 
             RowBox[{"DownValues", "@", "PmotherToLLP"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1", ",", "#"}], "]"}], "]"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"3", ",", "4"}], "}"}]}], "//", "Transpose"}], "//", 
        "Sort"}], ",", 
       RowBox[{"_", "?", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"DistrCombinations", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", 
               RowBox[{"{", 
                RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], ",", "#"}], 
           "]"}], "&"}], ")"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
   "Print", "[", 
    "\"\<If there are production weights to all available distributions:\>\"",
     "]"}], "\[IndentingNewLine]", 
   RowBox[{"IfCondDistrToWeights", "=", 
    RowBox[{
     RowBox[{"DistrCombinations", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], "]"}], "==", 
     "WeightsCombinations"}]}], "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"!", "IfCondDistrToWeights"}], ",", 
     RowBox[{
      RowBox[{
      "infoDialog", "[", 
       "\"\<You have not provided the production probabilities PmotherToLLP \
to all the generated tabulated distributions! Please do this first to avoid \
problems\>\"", "]"}], ";"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.886741324632948*^9, 3.88674133750587*^9}, {
   3.886743349704631*^9, 3.886743469951105*^9}, {3.8867435208363976`*^9, 
   3.886743559442109*^9}, {3.8867436030673923`*^9, 3.8867436380024014`*^9}, {
   3.886743677147029*^9, 3.886743791056388*^9}, {3.886759023397938*^9, 
   3.886759051632529*^9}, {3.886759084894906*^9, 3.886759102806116*^9}, {
   3.886759322833825*^9, 3.886759324091713*^9}, {3.8867597957163935`*^9, 
   3.886760018253701*^9}, {3.8867600560403585`*^9, 3.8867601972064524`*^9}, {
   3.8867608717265434`*^9, 3.886760928433196*^9}, {3.8902877382139034`*^9, 
   3.8902877885168395`*^9}, {3.890287908819491*^9, 3.8902879384574685`*^9}, 
   3.890287972630889*^9, {3.892180139844576*^9, 3.8921801533898745`*^9}, {
   3.895134860239647*^9, 3.8951348618856735`*^9}, {3.913885646039929*^9, 
   3.9138856461076612`*^9}, {3.913886132582429*^9, 3.9138862291902003`*^9}, {
   3.9138862898048983`*^9, 3.913886296467663*^9}, {3.9138863354750943`*^9, 
   3.913886444520909*^9}, {3.913886535421424*^9, 3.9138865559413123`*^9}, {
   3.9138866804744043`*^9, 3.91388669116334*^9}, {3.9138867279182673`*^9, 
   3.913886743667845*^9}, {3.913886776305146*^9, 3.913886808473711*^9}, 
   3.913891300284439*^9, {3.9138914285753727`*^9, 3.9138914308549423`*^9}, {
   3.9140569592224464`*^9, 3.914057049571749*^9}, {3.91405713461141*^9, 
   3.9140573182167463`*^9}, {3.9140575578723235`*^9, 
   3.9140575965440426`*^9}, {3.9140576438565454`*^9, 3.91405766710573*^9}, {
   3.914066702491934*^9, 3.9140667055321317`*^9}, {3.9156430596213613`*^9, 
   3.9156430599242363`*^9}, {3.9168531211335497`*^9, 3.9168531508029346`*^9}, 
   3.916853392897682*^9, {3.9183726881038265`*^9, 3.9183726890585165`*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[670]:=",ExpressionUUID->"70174eea-746d-446e-811b-01df40fa5c0d"],

Cell[BoxData[
 FormBox["\<\"If there are production weights to all available distributions:\
\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.921652838678645*^9, 3.928576837703249*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "During evaluation of \
In[670]:=",ExpressionUUID->"ff83b4f9-fec5-45e1-99cd-d9cb264e498a"],

Cell[BoxData[
 FormBox["True", TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528386873484`*^9, 3.928576837705246*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[690]=",ExpressionUUID->"9590ee69-4295-4215-83d3-ca35fb2c260b"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Decays", "Section",
 CellChangeTimes->{{3.877584114519929*^9, 3.877584115297123*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"04c8f572-467e-4c76-8fac-\
f5585da995c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Decay", " ", "width", " ", "in", " ", "GeV"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"\[CapitalGamma]LLP", "[", 
      RowBox[{"mLLP_", ",", "\[Epsilon]2_"}], "]"}], "=", 
     RowBox[{"\[Epsilon]2", "*", 
      RowBox[{"10", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Interpolation", "[", 
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Log10", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
               RowBox[{"Log10", "[", 
                RowBox[{"#", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], "&"}], "/@", 
            RowBox[{"Import", "[", 
             RowBox[{
              RowBox[{"FileNameJoin", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"directory", "[", "\"\<Decays\>\"", "]"}], ",", 
                 "\"\<GammaDarkPhoton.txt\>\""}], "}"}], "]"}], ",", 
              "\"\<Table\>\""}], "]"}]}], ",", 
           RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", 
         RowBox[{"Log10", "[", "mLLP", "]"}], "]"}], ")"}]}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"\[CapitalGamma]LLP", "[", 
      RowBox[{"mLLP", ",", "1"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"mLLP", ",", "0.05", ",", "5"}], "}"}], ",", 
     RowBox[{"Frame", "\[Rule]", "True"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Decay", " ", "length"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"c\[Tau]LLP", "[", 
      RowBox[{"mLLP_", ",", "\[Epsilon]2_"}], "]"}], "=", 
     FractionBox["chbarval", 
      RowBox[{"\[CapitalGamma]LLP", "[", 
       RowBox[{"mLLP", ",", "\[Epsilon]2"}], "]"}]]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ldecayLLP", "[", 
      RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "ELLP_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"c\[Tau]LLP", "[", 
       RowBox[{"mLLP", ",", "\[Epsilon]2"}], "]"}], "*", 
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["ELLP", "2"], "-", 
         SuperscriptBox["mLLP", "2"]}]], "mLLP"]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.8765027030040936`*^9, 3.876502712230002*^9}, {
   3.8765056490712585`*^9, 3.8765056684143023`*^9}, {3.8775935816940823`*^9, 
   3.877593651036413*^9}, {3.8775936851602736`*^9, 3.877593693594926*^9}, {
   3.8867405804606123`*^9, 3.886740855468573*^9}, {3.886740927115221*^9, 
   3.8867410004506335`*^9}, {3.8867589177998257`*^9, 3.886758933299265*^9}, 
   3.8868371903483343`*^9, {3.892180950096738*^9, 3.892180969099872*^9}, {
   3.8928884714154296`*^9, 3.892888477362914*^9}, {3.904903264799167*^9, 
   3.904903264924593*^9}, {3.9138856219576783`*^9, 3.9138856725915384`*^9}, {
   3.915643059934176*^9, 3.915643059982321*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[692]:=",ExpressionUUID->"bfe2aed5-8f0a-4cad-a1aa-1740c3919a79"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
BoC+
        "]]},
      Annotation[#, "Charting`Private`Tag$94249#1"]& ]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-3.091673319095403, -9.014325454075122},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-9.210340371976182, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "4"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm], {0.01, 0.}}, {-6.907755278982137, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.001\"", ShowStringCharacters -> False], 0.001, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
         0.}}, {-4.605170185988091, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.010\"", ShowStringCharacters -> False], 0.01, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.100\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 3}]& ], TraditionalForm], {0.01, 
         0.}}, {-11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.819778284410283`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.41431317630212, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.126631103850338`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.903487552536127, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.721165995742174, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.567015315914915, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.433483923290392, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.315700887634009, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-8.517193191416238, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-8.111728083308073, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.824046010856292, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.600902459542082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.418580902748128, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.264430222920869, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.1308988302963465`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.013115794639964, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.809142990314028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.521460917862246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-9.210340371976182, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-6.907755278982137, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.819778284410283`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.41431317630212, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-10.126631103850338`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.903487552536127, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.721165995742174, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.567015315914915, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.433483923290392, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-9.315700887634009, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-8.517193191416238, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-8.111728083308073, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.824046010856292, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.600902459542082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.418580902748128, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.264430222920869, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.1308988302963465`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-7.013115794639964, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-6.214608098422191, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.809142990314028, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.521460917862246, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}}, {{{-2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->NCache[{{-2.995732273553991, 
       Log[
       5]}, {-9.014325454075141, -2.097679991722047}}, {{-2.995732273553991, 
     1.6094379124341003`}, {-9.014325454075141, -2.097679991722047}}],
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528389754515`*^9, 3.9285768377721567`*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[693]=",ExpressionUUID->"d8cb6cd9-2f0f-499e-a27f-2d3970fee00a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Loading necessary routines", "Chapter",
 CellChangeTimes->{{3.891315426588935*^9, 3.891315432542842*^9}, {
  3.9165033404709945`*^9, 3.9165033463985844`*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"c2195567-c72b-45b8-82f4-\
a09212ef8e72"],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "inecessary", "]"}], "==", "0"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<codes/generic.nb\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"NotebookEvaluate", "[", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", 
        "\"\<codes/for-sensitivities.nb\>\""}], "}"}], "]"}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"inecessary", "=", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.890711783488103*^9, 3.89071178348964*^9}, {
   3.8907121412539587`*^9, 3.8907121413711557`*^9}, {3.890712694841427*^9, 
   3.8907126950000925`*^9}, {3.890712790376151*^9, 3.8907128219919777`*^9}, {
   3.891018553068019*^9, 3.8910185548862777`*^9}, {3.914141327087761*^9, 
   3.9141413282588053`*^9}, 3.9165033910195627`*^9, {3.916503434997039*^9, 
   3.9165034401725807`*^9}, {3.9165108789774036`*^9, 
   3.9165108974096084`*^9}, {3.9165109290075464`*^9, 3.916510969839264*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[696]:=",ExpressionUUID->"25a5ddb0-4a9b-4ac7-bc67-62ae0c80c611"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Specifying the experiment and run next sections", "Title",
 CellChangeTimes->{{3.8876177939846563`*^9, 3.8876177965376587`*^9}, {
  3.914140539510558*^9, 3.914140544040797*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"6bf41310-9786-4a2d-9c45-\
da72c297facc"],

Cell[CellGroupData[{

Cell["Specifying the experiment", "Chapter",
 CellChangeTimes->{{3.902729140157612*^9, 3.90272914444062*^9}, {
  3.9141405357221785`*^9, 3.9141405362140307`*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"09993897-08e0-4d65-9fda-\
c55a83b4e5d6"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"SetDirectory", "[", 
    RowBox[{"NotebookDirectory", "[", "]"}], "]"}], ";"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Parent", " ", "directory"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"NotebookDirectory", "[", "]"}], "//", "ParentDirectory"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ExperimentDirectoriesList", "=", 
    RowBox[{"Select", "[", 
     RowBox[{
      RowBox[{"FileNames", "[", 
       RowBox[{"\"\<*\>\"", ",", 
        RowBox[{"directory", "[", "\"\<Acceptances\>\"", "]"}], ",", "1"}], 
       "]"}], ",", "DirectoryQ"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"List", " ", "of", " ", "available", " ", "experiments", " ", 
    RowBox[{"(", 
     RowBox[{
     "for", " ", "which", " ", "the", " ", "geometry", " ", "has", " ", 
      "been", " ", "implemented"}], ")"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExperimentsListTemp", "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"FileNameTake", "[", 
      RowBox[{
       RowBox[{"ExperimentDirectoriesList", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ExperimentDirectoriesList", "]"}], ",", "1"}], 
      "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExperimentsListTemp2", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"Partition", "[", 
      RowBox[{"ExperimentsListTemp", ",", "1"}], "]"}], ",", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"TrueQ", "@", 
         RowBox[{"FileExistsQ", "@", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"directory", "[", "\"\<Acceptances\>\"", "]"}], ",", 
             RowBox[{"ExperimentsListTemp", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", 
             RowBox[{"ToString", "@", 
              RowBox[{"StringForm", "[", 
               RowBox[{"\"\<Acceptance_``_for_``.m\>\"", ",", 
                RowBox[{"Sequence", "@@", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"ExperimentsListTemp", "[", 
                    RowBox[{"[", "i", "]"}], "]"}], ",", "LLPdirName"}], 
                  "}"}]}]}], "]"}]}]}], "}"}], "]"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "ExperimentsListTemp", "]"}]}], "}"}]}], 
      "]"}], ",", "2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"ExperimentsList", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"Select", "[", 
     RowBox[{"ExperimentsListTemp2", ",", 
      RowBox[{
       RowBox[{
        RowBox[{"#", "[", 
         RowBox[{"[", "2", "]"}], "]"}], "\[Equal]", "True"}], "&"}]}], "]"}],
     "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", 
   "Sort"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "ExperimentsList", "]"}], "\[Equal]", "0"}], ",", 
   RowBox[{
   "Print", "[", 
    "\"\<No experiment is available, generate first the acceptance for the \
given experiment using module 1\>\"", "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Selected experiments:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SelectedExperimentList", "=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Length", "[", "ExperimentsList", "]"}], "\[NotEqual]", "0"}], 
    ",", 
    RowBox[{"selectionDialog", "[", 
     RowBox[{"ExperimentsList", ",", "\"\<Select the experiments:\>\""}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"icounter", "=", "1"}], ";"}]}], "Input",
 CellChangeTimes->{{3.8851403254718485`*^9, 3.8851403429411273`*^9}, {
   3.8854395484478483`*^9, 3.885439559226637*^9}, {3.8854397351242537`*^9, 
   3.885439739219259*^9}, {3.8858794196350574`*^9, 3.885879423032172*^9}, 
   3.886141121558817*^9, {3.886821665769628*^9, 3.8868216684602585`*^9}, {
   3.887617086304534*^9, 3.8876170990910044`*^9}, 3.889080211074895*^9, {
   3.890287800311657*^9, 3.890287802587648*^9}, {3.892189472726385*^9, 
   3.8921895121150846`*^9}, 3.892705546310735*^9, 3.8932345108531446`*^9, 
   3.902763528561518*^9, {3.902889537778877*^9, 3.9028895446827335`*^9}, {
   3.9138868703932114`*^9, 3.913886928383787*^9}, 3.915643060000375*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[697]:=",ExpressionUUID->"14cf246a-dfe6-4f84-bced-6779a027f776"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"advSNDfar\"\>", ",", "\<\"advSNDfarOld\"\>", 
    ",", "\<\"CHARM-lepton\"\>", ",", "\<\"FACET\"\>", ",", "\<\"FASER2\"\>", 
    ",", "\<\"FASER2-FPF\"\>", ",", "\<\"LHCb-downstream\"\>", 
    ",", "\<\"LHCb-downstream-no-hadronization\"\>", ",", "\<\"NA62-dump\"\>",
     ",", "\<\"NuCal\"\>", ",", "\<\"Pre-FACET\"\>", 
    ",", "\<\"Pre-FACET-1\"\>", ",", "\<\"Pre-FACET-muon\"\>", 
    ",", "\<\"Pre-FACET-standard\"\>", ",", "\<\"SHiP-ECN3\"\>"}], "}"}], 
  TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528483084064`*^9, 3.921653330368347*^9, 
  3.928576846608426*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[702]=",ExpressionUUID->"3e0f81a7-f9c3-4b2e-b76a-bcae9169ee8d"],

Cell[BoxData[
 FormBox["\<\"Selected experiments:\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{3.9216528483124075`*^9, 3.9216533303723717`*^9, 
  3.928576846610435*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "During evaluation of \
In[697]:=",ExpressionUUID->"d6c73a9a-4d07-4011-be7b-4e7e03115bef"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", "\<\"SHiP-ECN3\"\>", "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528483084064`*^9, 3.921653330368347*^9, 
  3.9285768496973248`*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[705]=",ExpressionUUID->"deadec39-f5df-4058-941f-4d25476fe9a9"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Running block for next sections", "Chapter",
 CellChangeTimes->{{3.902729140157612*^9, 3.90272914444062*^9}},
 CellTags->{
  "Acceptance", 
   "Number-of-events+sensitivity"},ExpressionUUID->"bf5cb1ca-586b-421c-9b8f-\
bcdda79a4c7d"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BlockEvaluation", "[", "tag_", "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"nb", "=", 
      RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", "\n", 
     RowBox[{"NotebookFind", "[", 
      RowBox[{"nb", ",", "tag", ",", "All", ",", "CellTags"}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SelectionEvaluate", "[", "nb", "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"tagselected", "==", "\"\<Number-of-events+sensitivity\>\""}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
      "BlockEvaluation", "[", 
       "\"\<Number-of-events-computation+sensitivity\>\"", "]"}], ";"}], 
     "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"icounter", ",", "1", ",", 
       RowBox[{"Length", "[", "SelectedExperimentList", "]"}], ",", "1"}], 
      "}"}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"tagselected", "==", "\"\<Acceptance\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
        "BlockEvaluation", "[", "\"\<Acceptance-computation\>\"", "]"}], 
        ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"icounter", ",", "1", ",", 
         RowBox[{"Length", "[", "SelectedExperimentList", "]"}], ",", "1"}], 
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9027291581950865`*^9, 3.902729215695462*^9}, {
   3.902761777481885*^9, 3.902761802513644*^9}, 3.902889536609843*^9, 
   3.9038925480063467`*^9, 3.914667536575886*^9, {3.915183587630067*^9, 
   3.915183588551358*^9}},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "In[707]:=",ExpressionUUID->"8ccbe0c0-5799-4a13-b89d-58d5d3aa1550"],

Cell[BoxData[
 FormBox[
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
    "tagselected", "\[LongEqual]", "\<\"Number-of-events+sensitivity\"\>"}], 
    ",", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
       "BlockEvaluation", 
        "(", "\<\"Number-of-events-computation+sensitivity\"\>", ")"}], ";"}],
       ",", 
      RowBox[{"{", 
       RowBox[{"icounter", ",", "1", ",", 
        RowBox[{"Length", "[", "SelectedExperimentList", "]"}], ",", "1"}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"tagselected", "\[LongEqual]", "\<\"Acceptance\"\>"}], ",", 
      RowBox[{"Do", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
         "BlockEvaluation", "(", "\<\"Acceptance-computation\"\>", ")"}], 
         ";"}], ",", 
        RowBox[{"{", 
         RowBox[{"icounter", ",", "1", ",", 
          RowBox[{"Length", "[", "SelectedExperimentList", "]"}], ",", "1"}], 
         "}"}]}], "]"}]}], "]"}]}], "]"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.92857684973121*^9},
 CellTags->{"Acceptance", "Number-of-events+sensitivity"},
 CellLabel->
  "Out[708]=",ExpressionUUID->"b5ff23f9-94c1-49d3-89cd-89ff2a752ca5"]
}, Open  ]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Number of events", "Title",
 CellChangeTimes->{{3.885140281753849*^9, 3.8851402836781845`*^9}},
 CellTags->{
  "Number-of-events-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"ec7d1ed4-b833-\
4ca9-b86b-68ef0bdfdc5e"],

Cell[CellGroupData[{

Cell["Particular experiment", "Chapter",
 CellChangeTimes->{{3.9165042001551485`*^9, 3.9165042041207294`*^9}, {
  3.9165090857383037`*^9, 3.916509094318386*^9}},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"90e03790-1066-\
4abb-8908-35a37e0278c1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"SelectedExperiment", "=", 
   RowBox[{"SelectedExperimentList", "[", 
    RowBox[{"[", 
     RowBox[{"icounter", "++"}], "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.916672448691073*^9, 3.9166724492284126`*^9}},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "In[709]:=",ExpressionUUID->"18b4049e-6a0e-4546-98b8-9c919573bc3b"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cross-sections, acceptances", "Chapter",
 CellChangeTimes->{{3.885020695565913*^9, 3.885020698644303*^9}, 
   3.887617827187765*^9, {3.89463726983397*^9, 3.894637273109426*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"ddc91657-c605-\
432a-9fc4-3dde27689d78"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"dataAcceptances", "=", 
    RowBox[{"Import", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"FileNameJoin", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"directory", "[", "\"\<Acceptances\>\"", "]"}], ",", 
           "SelectedExperiment", ",", 
           RowBox[{"ToString", "@", 
            RowBox[{"StringForm", "[", 
             RowBox[{"\"\<Acceptance_``_for_``.m\>\"", ",", 
              RowBox[{"Sequence", "@@", 
               RowBox[{"{", 
                RowBox[{"SelectedExperiment", ",", "LLPdirName"}], "}"}]}]}], 
             "]"}]}]}], "}"}], "]"}], "}"}], "]"}], ",", "\"\<MX\>\""}], 
     "]"}]}], ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FacilityGivenExperiment", ",", "FullAcceptanceData0", ",", 
     RowBox[{"BrVis", "[", "mLLP_", "]"}]}], "}"}], "=", 
   RowBox[{
    RowBox[{
     RowBox[{"dataAcceptances", "[", 
      RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{"1", ",", "3", ",", "5"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"LogLogPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"BrVis", "[", "mLLP", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mLLP", ",", "0.02", ",", "10"}], "}"}], ",", 
    RowBox[{"Frame", "->", "True"}], ",", 
    RowBox[{"ImageSize", "->", "Large"}], ",", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "22"}], "]"}]}], ",", 
    RowBox[{"PlotStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Blue"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Darker", "@", "Red"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
         RowBox[{"Darker", "@", 
          RowBox[{"Darker", "@", "Green"}]}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Black"}], "}"}]}], 
      "}"}]}], ",", 
    RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0.1", ",", "10"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"0.01", ",", "1.2"}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", "True"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<m [GeV]\>\"", ",", 
       "\"\<\!\(\*SubscriptBox[\(Br\), \(vis\)]\)\>\""}], "}"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", 
         RowBox[{"\"\<For \>\"", ",", "SelectedExperiment"}], "}"}], "]"}], 
       ",", " ", "20", ",", " ", "Black"}], "]"}]}]}], "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"___", "___", "___", "___", "___", "___", "___", "___", "___"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Interpolation", " ", "of", " ", "the", " ", "tabulated", " ", 
     "azimuthal", " ", "acceptance"}], ",", " ", 
    RowBox[{"extracting", " ", 
     SubscriptBox["\[Theta]", 
      RowBox[{"min", "/", "max"}]]}], ",", " ", 
    RowBox[{"etc", "."}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"___", "___", "___", "___", "___", "___", "___", "___", "___"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"AzimuthalAcceptanceInt", "[", 
       RowBox[{"\[Theta]LLP_", ",", "zLLP_"}], "]"}], ",", 
      "\[Theta]minExpAll", ",", "\[Theta]maxExpAll", ",", "\[Theta]minExp", 
      ",", "\[Theta]maxExp", ",", "zminExp", ",", "zmaxExp", ",", 
      RowBox[{"zmin\[Theta]", "[", "\[Theta]LLP_", "]"}], ",", 
      RowBox[{"zmax\[Theta]", "[", "\[Theta]LLP_", "]"}]}], "}"}], "=", 
    RowBox[{"Block\[Epsilon]Azimuthal", "[", "FullAcceptanceData0", "]"}]}], 
   ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Logarithmized", " ", "data", " ", "with", " ", "full", " ", 
     "acceptance"}], ",", " ", 
    RowBox[{
    "and", " ", "also", " ", "decay", " ", "acceptance", " ", "and", " ", 
     "full", " ", "acceptance", " ", "interpolations"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"FullAcceptanceData", ",", 
     RowBox[{"DecayAcceptanceInt", "[", 
      RowBox[{"mLLP_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", "zLLP_"}], 
      "]"}], ",", 
     RowBox[{"FullAcceptanceInt", "[", 
      RowBox[{"mLLP_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", "zLLP_"}], 
      "]"}], ",", "InGridm\[Epsilon]", ",", "InGrid\[Theta]\[Epsilon]", ",", 
     "InGridE\[Epsilon]", ",", "InGridz\[Epsilon]", ",", "\[Epsilon]vals", 
     ",", "\[Epsilon]azvals", ",", "mmin\[Epsilon]", ",", "mmax\[Epsilon]"}], 
    "}"}], "=", 
   RowBox[{"Block\[Epsilon]Decay", "[", 
    RowBox[{"FullAcceptanceData0", ",", "zminExp", ",", "BrVis"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CrossSectionData", "=", 
   RowBox[{
    RowBox[{"dataAcceptances", "[", 
     RowBox[{"[", "4", "]"}], "]"}], "//", "Transpose"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"listquantities", "=", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"#", "//", "ToString"}], ")"}], "&"}], "/@", 
     RowBox[{"{", 
      RowBox[{
      "Npot", ",", "PPi0", ",", "PEta", ",", "PEtapr", ",", "PRho0", ",", 
       "Atarget"}], "}"}]}], ")"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"quantityselector", "[", "quantity_", "]"}], ":=", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Select", "[", 
       RowBox[{"CrossSectionData", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"#", "[", 
           RowBox[{"[", "1", "]"}], "]"}], "\[Equal]", "quantity"}], "&"}]}], 
       "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}], "[", 
     RowBox[{"[", "2", "]"}], "]"}], "//", "N"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{"NpotGivenExperiment", ",", 
     RowBox[{"ProbMother", "[", "\"\<Pi0\>\"", "]"}], ",", 
     RowBox[{"ProbMother", "[", "\"\<Eta\>\"", "]"}], ",", 
     RowBox[{"ProbMother", "[", "\"\<EtaPr\>\"", "]"}], ",", 
     RowBox[{"ProbMother", "[", "\"\<Rho0\>\"", "]"}], ",", "AtargetVal"}], 
    "}"}], "=", 
   RowBox[{"Table", "[", 
    RowBox[{
     RowBox[{"quantityselector", "[", "quantity", "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"quantity", ",", "listquantities"}], "}"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ProbMother", "[", "\"\<DrellYan\>\"", "]"}], "=", 
    RowBox[{
     RowBox[{"ProbMother", "[", "\"\<Bremsstrahlung\>\"", "]"}], "=", 
     "1."}]}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"infoDialog", "[", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<The number of proton collisions is \>\"", ",", " ", 
       "NpotGivenExperiment", ",", 
       "\"\<. You may change it at the stage of computing the sensitivities\>\
\""}], "}"}], "]"}], "]"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"Row", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"\"\<Search for \>\"", "<>", "LLPdirName", "<>", "\"\< at \>\""}],
     ",", " ", "SelectedExperiment", ",", " ", "\"\< located at \>\"", ",", 
    "FacilityGivenExperiment", ",", 
    "\"\<. \!\(\*SubscriptBox[\(N\), \(collisions\)]\) = \>\"", ",", 
    "NpotGivenExperiment"}], "}"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<Quantity\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(min\)]\), rad\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\), rad\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(min\)]\)(\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(dec\)]\)), rad\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)(\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(dec\)]\)), rad\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(z\), \(min\)]\), m\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(z\), \(max\)]\), m\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Description\>\"", ",", "\"\<Min angle covered by experiment\>\"", 
      ",", "\"\<Max angle covered by experiment\>\"", ",", 
      "\"\<Min angle where \!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)\
\[NotEqual]0\>\"", ",", 
      "\"\<Max angle where \!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)\
\[NotEqual]0\>\"", ",", "\"\<Min long. displacement of the decay volume\>\"", 
      ",", "\"\<Max long. displacement of the decay volume\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
     "\"\<Value\>\"", ",", "\[Theta]minExpAll", ",", "\[Theta]maxExpAll", ",",
       "\[Theta]minExp", ",", "\[Theta]maxExp", ",", "zminExp", ",", 
      "zmaxExp"}], "}"}]}], "}"}], "//", "TableForm"}]}], "Input",
 CellChangeTimes->{{3.8921748442124033`*^9, 3.892174924863473*^9}, {
   3.892888493615114*^9, 3.892888495922745*^9}, {3.894178999539856*^9, 
   3.8941789997847443`*^9}, 3.894382708283858*^9, {3.8946372752697067`*^9, 
   3.8946372755375957`*^9}, 3.894781717122591*^9, {3.895053884461896*^9, 
   3.895053887613945*^9}, {3.899198252634884*^9, 3.89919827008097*^9}, {
   3.899215227082757*^9, 3.899215228721673*^9}, {3.9027635076975436`*^9, 
   3.902763508122694*^9}, {3.902763783256745*^9, 3.902763785618586*^9}, {
   3.9048896890123234`*^9, 3.9048896904995394`*^9}, {3.9049007877418613`*^9, 
   3.9049008009407682`*^9}, {3.9049010126152215`*^9, 3.904901012646469*^9}, 
   3.9049018234921083`*^9, {3.913885646171348*^9, 3.913885656271843*^9}, {
   3.9138869564213033`*^9, 3.9138870719643497`*^9}, {3.9138871161748323`*^9, 
   3.9138872180306273`*^9}, 3.913887277391947*^9, 3.913887317714735*^9, {
   3.9138874178618784`*^9, 3.9138874521893015`*^9}, 3.9138875140360203`*^9, {
   3.9138907770747414`*^9, 3.9138907840641837`*^9}, {3.9138911582620163`*^9, 
   3.913891163428483*^9}, {3.914062449582265*^9, 3.9140624531783323`*^9}, 
   3.914140029063476*^9, {3.914514981292539*^9, 3.9145149957389956`*^9}, {
   3.9156430600231075`*^9, 3.9156430601427784`*^9}, 3.916672479097767*^9},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "In[710]:=",ExpressionUUID->"c815bc21-895a-435e-aff8-c368c51a223c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.3080093`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528619858866`*^9, 3.9216533357460594`*^9, 
  3.9285768500602603`*^9},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[710]=",ExpressionUUID->"eba4ff10-44f5-4a71-9a25-f92fe8d38c7b"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0, 0, 1], Thickness[0.003], Opacity[1.], 
       LineBox[CompressedData["
1:eJxN0w0w22ccB/AkgnhPNdRrlelcEu1MjVmzRb1EEdbg0hSlVOhQU0YbZVvb
czizbmrxsnYN0045YlpvlYnTtbReeow13ootrRCdlkRdpGzrNc+vz93//ve5
7/d5/s/z/9/fPu7zUC4Og8Gc/+/6/84KuX59JMikG/Nm6OfjIuX+4B5xtAne
F+z6/o4zH9DApqSCgHJn8Oj4Z0tHjcAc7h7XhSFj5GM5t37bYoGpWp8Ekn2M
kNlnNy/4MQyR66LaGg6HGCDf5suZCQf0kSk97IpEhh7MZ3wcyXUnINfvszE6
QtWF55u6ptBddZCHA+54OThqI1elF/W8dMIj/4hnut1x0UJmLedbFznikBP6
VUI/ChbZA7PQobbCIMfTriaG2W+KNbaMnGgpcVEj+1MNlx+Yqd5YIHJ7XH9e
tnMducLbG7v1Son6X8SI9H9WgkNy3En+z5Soj2+lOF2cgjyNvD3YrhPMIErL
6WfAiuk8l69XFMgPVVuejovguh3ZPn1z4GOsVDZxGNz/OztHIARX1zv1daeA
c/uqhuPjwZwn1pOEKLCxHfGfQ0FgXsn69jmyQrz1eghp4cJ02zx7yPcOLL1L
tlSg8+otJLgMEiGXas95niKAxQ6RPmYYcCV9jNnxchXNz4z6lH10eRXlh3j3
Y7Dzq2LsazWJWoMbNt1mILdx+P7KiUcwX/aAM/mwF/ohV2nZWt3Qv5Wxy9Kj
HWx1EN+e1AT+ykbG/qkWLH3erxwWwPqBd4Wl2hWQm6eeHkkpBDeKdUL2J4FJ
pYtLqXHg7BNDRdURsL9ZWjPlz1DIGdv49/WCwNNxu/0kVLChji8t89kKcvqE
02TtkxW0P0mjQfbUNLjm8B9tPkPQ338jbp+pEJzEPEcRpkG/t6TLYmH1BXJy
ZzjvUsMy6t8zJ2TZdcrf8hXXC1PzyK08u7uSG38jB/puWKzkziATIkvCzDGP
kO2yxq1HwwaRQ8tVvcziTuSY7wLntlrK6ej9TMwWbIz2IK/NEwyW7IeRFy/f
u5Z1bhw57XiCvKV2lq45z1kzdUOXVIpyXVxrp1oiQ14O+FbveMcSckaZqFue
9Rz5PSffaq+TK5Brj5VfLlbQNf8Hd1um0LBmDeVlH/2SXMZfR2Y1/0Uj31Qh
M/2bbo7Vq5EVesWB/MpN5EvFnhuNRzBeGg/UKN/ZFY5F5nxDTPqSA5ZmUJum
osAb3rG0Ci6YMjcQbnoanG9bk4evBHvzQ+dlM+Ch3JN7/KUaC0QR3IKMazLI
T7l1bcW+AKutx/26leACLUXRThWYJDceydmE9QQjZItJHM5L8z843/aN9tTF
oX5bVUxNmQHYuzB7UWkCHkr7wSWcBI7gNGU1W+C8NN/jKb1fRLSF/JUxNmBw
N7hgzfoilQImPXYfK9wLdm5IiWV4vLV+kIQnPgh+6roqtg0Gp1sZ6+SwwIUL
PiUfRsB+SMPREn405IJ23k5lnMYCkbOgND4sEfL2fGHdr8ngfwFpVzxu
        "]]},
      Annotation[#, "Charting`Private`Tag$110566#1"]& ]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-2.30258509299404, -4.60517018598808},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       TagBox["\"\\!\\(\\*SubscriptBox[\\(Br\\), \\(vis\\)]\\)\"", HoldForm], 
       TraditionalForm], None}, {
      FormBox[
       TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 22],
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-4.605170185988091, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.01\"", ShowStringCharacters -> False], 0.01, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-5.298317366548036, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-5.115995809754082, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.961845129926823, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.8283137373023015`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-4.710530701645918, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}}, {{{-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.1\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.5\"", ShowStringCharacters -> False], 0.5, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 1}]& ], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.605170185988092, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.605170185988092, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
   GridLines->FrontEndValueCache[{
      Charting`ScaledTickValues[{Log, Exp}], 
      Charting`ScaledTickValues[{Log, Exp}]}, {{{-2.3025850929940455`, 
        Directive[]}, {-0.6931471805599453, 
        Directive[]}, {0., 
        Directive[]}, {1.6094379124341003`, 
        Directive[]}, {2.302585092994046, 
        Directive[]}}, {{-4.605170185988091, 
        Directive[]}, {-2.995732273553991, 
        Directive[]}, {-2.3025850929940455`, 
        Directive[]}, {-0.6931471805599453, 
        Directive[]}, {0., 
        Directive[]}}}],
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotLabel->FormBox[
     StyleBox[
      TemplateBox[{"\"For \"", "\"SHiP-ECN3\""}, "RowDefault"], 20, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm],
   PlotRange->{{-2.3025850929940455`, 2.302585092994046}, {-4.605170185988091,
     0.1823215567939546}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528619858866`*^9, 3.9216533357460594`*^9, 
  3.928576850894289*^9},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[712]=",ExpressionUUID->"e80eab28-5250-43df-a126-041d081a6cd1"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "\"Search for DP at \"", "\"SHiP-ECN3\"", "\" located at \"", "\"SPS\"", 
    "\". \\!\\(\\*SubscriptBox[\\(N\\), \\(collisions\\)]\\) = \"", "6.`*^20"},
   "RowDefault"], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528619858866`*^9, 3.9216533357460594`*^9, 
  3.9285768568188133`*^9},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[720]=",ExpressionUUID->"d44069a0-a118-44d1-8844-6a685899a82d"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"Quantity\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(min\\)]\\), rad\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(max\\)]\\), rad\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(min\\)]\\)(\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(dec\\)]\\)), \
rad\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(\[Theta]\\), \
\\(max\\)]\\)(\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(dec\\)]\\)), \
rad\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(z\\), \\(min\\)]\\), m\"\>", "\<\"\\!\
\\(\\*SubscriptBox[\\(z\\), \\(max\\)]\\), m\"\>"},
     {"\<\"Description\"\>", "\<\"Min angle covered by experiment\"\>", \
"\<\"Max angle covered by experiment\"\>", "\<\"Min angle where \
\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)\[NotEqual]0\"\>", "\<\
\"Max angle where \\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)\
\[NotEqual]0\"\>", "\<\"Min long. displacement of the decay volume\"\>", \
"\<\"Max long. displacement of the decay volume\"\>"},
     {"\<\"Value\"\>", "0.00001`", "0.0449146415115904`", "0.00001`", 
      "0.0449146415115904`", "32.`", "82.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528619858866`*^9, 3.9216533357460594`*^9, 
  3.9285768568258395`*^9},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[721]//TableForm=",ExpressionUUID->"a1113a4c-c0b6-4713-bdfc-\
160856f775b3"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Angle-energy distributions and differential yields  for the given experiment\
\>", "Chapter",
 CellChangeTimes->{{3.885020702966837*^9, 3.885020711525731*^9}, {
   3.8850216924759345`*^9, 3.8850216984444695`*^9}, {3.8851404110391607`*^9, 
   3.8851404117847*^9}, 3.8859669420079484`*^9, {3.887617811213402*^9, 
   3.88761781429661*^9}, {3.896334961873438*^9, 3.8963349667311535`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"2ed58b5e-8fa1-\
4a99-b81c-130884bcdd21"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"ProductionPatternSelected", "=", 
   RowBox[{"Select", "[", 
    RowBox[{"DistrCombinations", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", 
        RowBox[{"[", "3", "]"}], "]"}], "==", "FacilityGivenExperiment"}], 
      "&"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", "\"\<Production list:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ELLPmax", "[", 
    RowBox[{"mLLP_", ",", "\[Theta]LLP_", ",", "\"\<Bremsstrahlung\>\""}], 
    "]"}], "=", 
   RowBox[{"ELLPmax", "[", 
    RowBox[{
    "mLLP", ",", "\[Theta]LLP", ",", "\"\<Bremsstrahlung\>\"", ",", 
     "FacilityGivenExperiment"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ELLPmin", "[", "\"\<Bremsstrahlung\>\"", "]"}], "=", 
   RowBox[{"ELLPmin", "[", 
    RowBox[{"\"\<Bremsstrahlung\>\"", ",", "FacilityGivenExperiment"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ProductionListTemp", "=", 
   RowBox[{
    RowBox[{"ProductionPatternSelected", "[", 
     RowBox[{"[", 
      RowBox[{"All", ",", "2"}], "]"}], "]"}], "//", "DeleteDuplicates"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ProductionList", "=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ELLPmin", "[", "\"\<Bremsstrahlung\>\"", "]"}], "<", 
     RowBox[{"ELLPmax", "[", 
      RowBox[{"0.02", ",", "\[Theta]minExp", ",", "\"\<Bremsstrahlung\>\""}], 
      "]"}]}], ",", "ProductionListTemp", ",", 
    RowBox[{"Select", "[", 
     RowBox[{"ProductionListTemp", ",", 
      RowBox[{
       RowBox[{"#", "!=", "\"\<Bremsstrahlung\>\""}], "&"}]}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Theta]maxBrem", "=", 
   RowBox[{"Abs", "[", 
    RowBox[{"\[Theta]LLP", "/.", 
     RowBox[{
      RowBox[{"Solve", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"ELLPmax", "[", 
           RowBox[{
           "0.02", ",", "\[Theta]LLP", ",", "\"\<Bremsstrahlung\>\""}], "]"}],
           "[", 
          RowBox[{"[", "2", "]"}], "]"}], "==", 
         RowBox[{"ELLPmin", "[", "\"\<Bremsstrahlung\>\"", "]"}]}], ",", 
        "\[Theta]LLP"}], "]"}], "[", 
      RowBox[{"[", "1", "]"}], "]"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "prod", "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"prod", "=", 
       RowBox[{
        RowBox[{"ProductionPatternSelected", "[", 
         RowBox[{"[", "i", "]"}], "]"}], "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Importing", " ", "the", " ", "data", " ", "with", " ", 
        "distribution"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{"dirimp", "=", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"prod", "==", "\"\<DrellYan\>\""}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"directory", "[", "\"\<Distribution\>\"", "]"}], ",", 
            "\"\<Pregenerated\>\""}], "}"}], "]"}], ",", 
         RowBox[{"directory", "[", "\"\<Distribution\>\"", "]"}]}], "]"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DistrDataImport", "[", "prod", "]"}], "=", 
       RowBox[{"Import", "[", 
        RowBox[{
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"dirimp", ",", 
            RowBox[{
            "\"\<DoubleDistr_\>\"", "<>", "LLPdirName", "<>", "\"\<_\>\"", "<>",
              "prod", "<>", "\"\<_\>\"", "<>", "FacilityGivenExperiment", 
             "<>", "\"\<.m\>\""}]}], "}"}], "]"}], ",", "\"\<MX\>\""}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prod", "==", "\"\<DrellYan\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{
          RowBox[{"DistrDataImport", "[", "prod", "]"}], "=", 
          RowBox[{"Select", "[", 
           RowBox[{
            RowBox[{"DistrDataImport", "[", "prod", "]"}], ",", 
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
               "MinMaxMassesDrellYan", "[", "FacilityGivenExperiment", "]"}], 
               "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", 
              RowBox[{"#", "[", 
               RowBox[{"[", "1", "]"}], "]"}], "<=", 
              RowBox[{
               RowBox[{
               "MinMaxMassesDrellYan", "[", "FacilityGivenExperiment", "]"}], 
               "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "&"}]}], "]"}]}], ";"}]}], 
       "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
        RowBox[{"Min", "/", "mass"}], " ", "mass", " ", "of", " ", "the", " ",
         "LLP", " ", "from", " ", "the", " ", "data"}], "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"mlistDistr", "[", "prod", "]"}], "=", 
       RowBox[{"DeleteDuplicates", "[", 
        RowBox[{
         RowBox[{"DistrDataImport", "[", "prod", "]"}], "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"mLLPmin", "[", "prod", "]"}], ",", 
         RowBox[{"mLLPmax", "[", "prod", "]"}]}], "}"}], "=", 
       RowBox[{"MinMax", "[", 
        RowBox[{"mlistDistr", "[", "prod", "]"}], "]"}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{
       "Interpolation", " ", "of", " ", "the", " ", "tabulated", " ", 
        "distribution"}], "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"DoubleDistrLLPint", "[", 
        RowBox[{"mLLP_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", "prod"}], 
        "]"}], "=", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Interpolation", "[", 
           RowBox[{
            RowBox[{"distrlogComp", "[", 
             RowBox[{"DistrDataImport", "[", "prod", "]"}], "]"}], ",", 
            RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", 
          RowBox[{
           RowBox[{"Log10", "[", "mLLP", "]"}], ",", 
           RowBox[{"Log10", "[", "\[Theta]LLP", "]"}], ",", 
           RowBox[{"Log10", "[", "ELLP", "]"}]}], "]"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{"prod", "==", "\"\<Bremsstrahlung\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"DoubleDistrLLPint", "[", 
          RowBox[{"mLLP_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", "prod"}], 
          "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"ELLP", "<=", 
            RowBox[{"ELLPmax", "[", 
             RowBox[{
             "mLLP", ",", "\[Theta]LLP", ",", "\"\<Bremsstrahlung\>\""}], 
             "]"}]}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{"DoubleDistrLLPint", "[", 
             RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "ELLP", ",", "prod"}], 
             "]"}], "]"}], ",", "0."}], "]"}]}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", 
       RowBox[{"Probability", " ", "to", " ", "produce", " ", "LLP"}], "*)"}],
       "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ProbLLP", "[", 
        RowBox[{"mLLP_", ",", "finv_", ",", "prod"}], "]"}], "=", 
       RowBox[{
        RowBox[{
         RowBox[{"ProbMother", "[", "prod", "]"}], "*", 
         RowBox[{"PmotherToLLP", "[", 
          RowBox[{
          "mLLP", ",", "finv", ",", "prod", ",", "FacilityGivenExperiment"}], 
          "]"}]}], "/.", 
        RowBox[{"{", 
         RowBox[{"Atarget", "->", "AtargetVal"}], "}"}]}]}], ";"}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", ",", 
   RowBox[{"{", 
    RowBox[{"i", ",", "1", ",", 
     RowBox[{"Length", "[", "ProductionPatternSelected", "]"}], ",", "1"}], 
    "}"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Auxiliary-experiment\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"directory", "[", "\"\<Auxiliary\>\"", "]"}], ",", 
      "SelectedExperiment"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"DirectoryQ", "[", 
      RowBox[{"directory", "[", "\"\<Auxiliary-experiment\>\"", "]"}], 
      "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", 
     RowBox[{"directory", "[", "\"\<Auxiliary-experiment\>\"", "]"}], "]"}]}],
    "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Export", "[", 
   RowBox[{
    RowBox[{"FileNameJoin", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"directory", "[", "\"\<Auxiliary-experiment\>\"", "]"}], ",", 
       RowBox[{
       "\"\<Double-Distr-Averaged-\>\"", "<>", "LLPdirName", "<>", 
        "\"\<.m\>\""}]}], "}"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"mLLPmin", "[", "prod", "]"}], "<", "mLLP", "<", 
           RowBox[{"mLLPmax", "[", "prod", "]"}]}], ",", 
          RowBox[{"Evaluate", "[", 
           RowBox[{"ProbLLP", "[", 
            RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "]"}], ",", "0"}],
          "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ",", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mLLPmin", "[", "prod", "]"}], "<", "mLLP", "<", 
             RowBox[{"mLLPmax", "[", "prod", "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"ProbLLP", "[", 
              RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "]"}], ",", 
            "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}]], 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"mLLPmin", "[", "prod", "]"}], "<", "mLLP", "<", 
            RowBox[{"mLLPmax", "[", "prod", "]"}]}], ",", 
           RowBox[{"Evaluate", "[", 
            RowBox[{
             RowBox[{"ProbLLP", "[", 
              RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "*", 
             RowBox[{"DoubleDistrLLPint", "[", 
              RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "ELLP", ",", "prod"}], 
              "]"}]}], "]"}], ",", "0"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}]}]}], "}"}], 
    ",", "\"\<MX\>\""}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"GridInFinal", "[", "prod", "]"}], ",", 
         RowBox[{"DistrVals", "[", "prod", "]"}]}], "}"}], "=", 
       RowBox[{"BlockGridsValsDistr", "[", 
        RowBox[{"prod", ",", "DistrDataImport"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ";"}], "//", 
   "AbsoluteTiming"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "_"}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Finding", " ", 
    SubscriptBox["E", "max"], 
    RowBox[{"(", 
     RowBox[{
      SubscriptBox["m", "LLP"], ",", 
      SubscriptBox["\[Theta]", "LLP"]}], ")"}], " ", "for", " ", "the", " ", 
    "angular", " ", "range", " ", "at", " ", "the", " ", "given", " ", 
    "experiment"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "_"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"ELLPmax", "[", 
      RowBox[{"mfip_", ",", "\[Theta]fip_", ",", "prod"}], "]"}], "=", 
     RowBox[{"EmaxBlock", "[", 
      RowBox[{
      "prod", ",", "8", ",", "DistrDataImport", ",", 
       "FacilityGivenExperiment"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"prod", ",", 
      RowBox[{"Select", "[", 
       RowBox[{"ProductionList", ",", 
        RowBox[{
         RowBox[{"#", "!=", "\"\<Bremsstrahlung\>\""}], "&"}]}], "]"}]}], 
     "}"}]}], "]"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptenergies", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ELLPmax", "[", 
         RowBox[{"0.1", ",", "\[Theta]LLP", ",", "prod"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]LLP", ",", "\[Theta]minExp", ",", "\[Theta]maxExp"}], 
      "}"}], ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", "ProductionList"}], 
        ",", "Right"}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ptprodprob", "=", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"Evaluate", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"ProbLLP", "[", 
         RowBox[{"ma", ",", "1", ",", "prod"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"ma", ",", "mmin\[Epsilon]", ",", "mmax\[Epsilon]"}], "}"}], 
     ",", 
     RowBox[{"Frame", "->", "True"}], ",", 
     RowBox[{"ImageSize", "->", "Large"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "16"}], "]"}], "&"}], "/@", "ProductionList"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.28"}], "}"}]}], "]"}]}], ",", " ", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", " ", "25"}], "]"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0.02", ",", "3"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]], ",", "100"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"Darker", "@", "Red"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"Darker", "@", 
           RowBox[{"Darker", "@", "Green"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", 
          RowBox[{"Darker", "@", "Cyan"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Magenta"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"Thick", ",", "Brown"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"AspectRatio", "\[Rule]", "0.66"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(m\), \(LLP\)]\) [GeV]\>\"", ",", 
        "\"\<\!\(\*SubscriptBox[\(P\), \(prod\)]\)/\!\(\*SuperscriptBox[\(\
\[Epsilon]\), \(2\)]\)\>\""}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<Production probabilities of \>\"", ",", "LLPdirName", ",", 
           "\"\< at \>\"", ",", "GivenExperiment"}], "}"}], "]"}], ",", "18", 
        ",", "Black"}], "]"}]}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Style", "[", 
  RowBox[{
   RowBox[{"Row", "[", 
    RowBox[{"{", 
     RowBox[{"ptprodprob", ",", "ptenergies"}], "}"}], "]"}], ",", 
   RowBox[{"ImageSizeMultipliers", "->", 
    RowBox[{"{", 
     RowBox[{"1", ",", " ", "1"}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.9138264426995506`*^9, 3.9138265779867573`*^9}, {
   3.913826965658716*^9, 3.9138270942523136`*^9}, 3.913827173058236*^9, 
   3.9138280725351963`*^9, {3.9138685969328623`*^9, 3.9138686662515535`*^9}, {
   3.9138687097216063`*^9, 3.913868827467691*^9}, {3.9138699081836786`*^9, 
   3.913869908527342*^9}, {3.9138700197640233`*^9, 3.913870024259905*^9}, {
   3.913870742059718*^9, 3.913870786176013*^9}, {3.913871804452815*^9, 
   3.9138718044574027`*^9}, {3.9138882251043167`*^9, 
   3.9138882251093035`*^9}, {3.9140573961516905`*^9, 3.914057451010392*^9}, {
   3.9140667249964046`*^9, 3.9140667374592443`*^9}, {3.9140668849922748`*^9, 
   3.9140668860566907`*^9}, 3.915184627030238*^9, {3.9156430601988077`*^9, 
   3.9156430604241543`*^9}, 3.915727587776414*^9, {3.916672566533353*^9, 
   3.9166725686001234`*^9}, {3.9166726094945087`*^9, 
   3.9166726096747155`*^9}, {3.916679849894617*^9, 3.9166798503945646`*^9}, {
   3.9168533614169364`*^9, 3.916853382014995*^9}, {3.916853454789669*^9, 
   3.9168535530919013`*^9}, {3.91685422632805*^9, 3.9168542271898108`*^9}, 
   3.916856429758537*^9, 3.9168567750740905`*^9, {3.916994194511986*^9, 
   3.916994194639786*^9}, 3.928576878808322*^9, {3.9285769295898595`*^9, 
   3.928577135245227*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "In[849]:=",ExpressionUUID->"480fd17b-5a11-467d-8339-95713cf8a148"],

Cell[BoxData[
 FormBox["\<\"Production list:\"\>", TraditionalForm]], "Print",
 CellChangeTimes->{
  3.9216528720009766`*^9, 3.9216533387751884`*^9, 3.9285768569066286`*^9, {
   3.9285770111950293`*^9, 3.928577028670681*^9}, {3.928577100452402*^9, 
   3.92857713591541*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "During evaluation of \
In[849]:=",ExpressionUUID->"b58d83b6-48cc-41d6-939b-ad652ac08a0f"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"\<\"Bremsstrahlung\"\>", ",", "\<\"DrellYan\"\>", 
    ",", "\<\"Eta\"\>", ",", "\<\"EtaPr\"\>", ",", "\<\"Pi0\"\>", 
    ",", "\<\"Rho0\"\>"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.921652872006278*^9, 3.9216533387782197`*^9, 3.9285768569122972`*^9, {
   3.9285770111984153`*^9, 3.9285770286736617`*^9}, {3.9285771004589567`*^9, 
   3.9285771359183846`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[854]=",ExpressionUUID->"d494d169-3108-4284-b953-8e6e06fc0e82"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "Solve", "ifun", 
    "\"Inverse functions are being used by \\!\\(\\*FormBox[\\\"Solve\\\", \
TraditionalForm]\\), so some solutions may not be found; use Reduce for \
complete solution information.\"", 2, 855, 16, 17616438568294231139, "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.921652872050548*^9, 3.92165333879601*^9, 3.9285768569486723`*^9, {
   3.9285770112167206`*^9, 3.928577028676665*^9}, {3.9285771004629564`*^9, 
   3.928577135922389*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "During evaluation of \
In[849]:=",ExpressionUUID->"77ac2976-6dc1-4ac5-a6a8-e9eef74b714e"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.0854475`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.921652872006278*^9, 3.9216533387782197`*^9, 3.9285768569122972`*^9, {
   3.9285770111984153`*^9, 3.9285770286736617`*^9}, {3.9285771004589567`*^9, 
   3.9285771369033146`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[860]=",ExpressionUUID->"f0d99251-4284-49d8-83a7-be0d46d71aa2"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"1.9200092`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.921652872006278*^9, 3.9216533387782197`*^9, 3.9285768569122972`*^9, {
   3.9285770111984153`*^9, 3.9285770286736617`*^9}, {3.9285771004589567`*^9, 
   3.9285771388246365`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[861]=",ExpressionUUID->"1b75b067-c941-411a-921f-dca0310d83ef"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "InterpolatingFunction", "dmval", 
    "\"Input value \\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"0.1`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"4.99992538693213`\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\) lies outside the range of data in the interpolating \
function. Extrapolation will be used.\"", 2, 862, 17, 17616438568294231139, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{
  3.921652872050548*^9, 3.92165333879601*^9, 3.9285768569486723`*^9, {
   3.9285770112167206`*^9, 3.928577028676665*^9}, {3.9285771004629564`*^9, 
   3.9285771388518133`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "During evaluation of \
In[849]:=",ExpressionUUID->"ceb376f9-d694-4181-964e-cdf8e55f5506"],

Cell[BoxData[
 FormBox[
  StyleBox[
   TemplateBox[{
     TagBox[
      FormBox[
       GraphicsBox[{{{{{}, {}, 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 0, 1]], 
              LineBox[CompressedData["
1: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
netiV2MpURhbka3FWd0u/YdDWdXWIr4I71yqwd2qX4R8hZnV5i6p6578VoO5
H0tpvagkqY3vL/N1CK7B1l1HWHOSGNSGmHWyogxr8A71bzOFNquop7nxNwjV
4MzFF4LvuhdRW6LJhqHBasw8G7DE+G4O1Tl1n+BOr8Y8kzyFNngalR295Kbg
Vo37DOvKbtMnEfAPvzt/pBo7HXQlLaqOorTsOWpqcxUOtbs3e9evHyX7e6g1
xlbh5aoFEdHnPSjOkOSwZFOFWVwbJjeOt6PwWUrziaVKfPx6gMXWq+UosPgx
y61vlTj+unHcs8w85B2xSfFZcCVufRrA/upCGLLfLxrzW6gS64lU7S/g/Iav
Mr+r4hqqwIcj09Y+fa/Cls2ya/LpFfizQ136BLkR6zmpXPQ9UoEnWrSuV7/t
xHLZ+mLCtuX4ksMILnf+jf0P5DrHSJVji8I0U92zg7gtV6hkw2QZdmTXcqkW
/YO9Cv5Y87iV4ZFCiVdjD0dwVanXK8bgUmw7+OtAnOUk3qb1e/LumVL8uuhK
lMvmKXy7SuvwEl8p1mJmsjlQPYU31/P3TL0owT2LF8Lf7pzBNh3vtvZ/LMZn
Zrmlg1/N4Twz3usWjsV4y8rZb7SD85ja7fylS7EYsw94TVkS97isX4dNmwu/
Y8ruIzNrfxYwabQ1sqTxG+bsvM7dzbSMn6+T+d7OF+IBhfxE9ro1PO5zxUr0
SyHe9YSxdk5tHasz1WbEexfiiuK6xwpp6/gPW7RuNHshDs599HNCgwEUaLJh
D7YA1pWVSnjCzwivNHP4ujy/4NGx/U+7npLghI5fZhPrF9x8pmP9zHcSjOvp
6FWH5+NbWQdPK0ySQMWsP6zgVR7OOGH901yTDK03eDjjS3LwweXhqZvTZOB6
Yst4mZqNbcfEd/nKMkMOaTjv7MssbCmZFRqrzwzW9tcdNWWz8NR2hR+mzszw
VcdhUEovExur+3EX5DHDDXaP6umIdHz38XyPGmKB+FUhebJyKha883xspyIr
LHXsSBowe4dJN7s56wxZQS9HfFOFZwo2uV1Uvfs2K5Bvy62HFyVjwUDPQwup
rHBp6GilkFYiXhHvilsQZAP9pPYSx4znuPEdX7PoOBswXfyVqjwXjb1kr5RK
srHDpy2jj0hKUbjIZVbq7zZ22PiQ4UJ4YQRm6dl+VU2PHXLmdcbOxodgvjOK
+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
/gf4cyNn
               "]]}, Annotation[#, "Charting`Private`Tag$134015#1"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[
                NCache[
                 Rational[2, 3], 0.6666666666666666], 0, 0]], 
              LineBox[CompressedData["
1:eJwVxXk41AkfAHC3ImvZaDVj5jdiKrEqZyu+5YjyVpR07FaOkLYcFYVBaURm
V6acIU+XV3IVxtXmm8q1RYdzXMnMKDODXGMcte/7x+f50LyD9vnKycjIhPzP
/1992m/ky1QPcB45nNMKImH7JKusYxkXbhmXhzieJyHb0aSris6FAXeVlOJI
Eu7JeD+f5cAFPYYnZ9UVEq4QhlJivLngd4/TfSmRhC02Onbel7jwsGXFwhc2
CeOTn/o63ubC2Fdv3f2ZJJSzkC9S5XLh3DZ1b4N8EmJC3tsxCRcq/X2ZSSUk
jOrdOf1OqxcWkmrzJBwSzl1Kts5w64Ur/f7C5lckHPtHt0W/uRduRuD5wGES
cr2sRmyq+qC0PCS+kkLGsr/O0ILTBkC4rr1wZyoZJxR9vrk/GYCYq+XOZtlk
NIo+1LuldQBW8lJ4lHtkvB9onyqvNAi2uQfI06VkTNmrszw9dBDYWl2s26/J
WJPgPXfM8CNYynFPTcnrYtauHz7GLR+Cq72D63LO6uLRVt+SD42fgJYkvD+x
l4K8nJOdE52foH+z+YmggxQ8feaPJTXBJ8jsil4zdoyCEStCXJwVhkGTpnlX
eIaC6bsYI0+3DYNyuVWugEXBdw03qHnVwyDqicvsa6SgY13d9YuPeFBpQCQ1
ARVfJ9VzUmt4ENoSsNvJiYrux171P2nmgWlQ2YqGPVT0XmrZIB7hQWHVDtaL
o1SMse5s9NLnQ67LmYRnkVRUUu0Zizblw5EJjpPNFSomcXu1su348HOqjPLT
RCpmhw/5dHrygT1wM646k4rVlaLvu3L4wAypiS2vpOK2+HH6yUI+2Gkr2JnW
UbHJY3J3XC0flmp2yz5poGLnjCSrrocPYQpDMSUdVDz6ar6+7zMfzB4awi/9
VOSlLH2RSvgwsfv8t0IeFadM5a3MtAUQkK4cVTBFxQh5peNuBgJYu9Vt6/oF
Ksp9WHY10EwAs1PGzCIZAq/dVS1i2Qtg7wMHnQ45An88+0N7/j4B5Hv8Vryo
QGD6do2FV14CkF121l5fmUCKxkq94WABHK5O6HZZTqBxqU6w7nUBqJI5cllq
BHrY+GpO5wjAynRLYpU6gZdaSstbCgXgu+upRqcGge08J+mFFgHUXawnNLQJ
ZOiExb5XHIHzHa228RQCW2Lfp8QzRqA/aSTinAmBJw+wqr8GfIZSWZ0pFzcC
780vyjU4jILHSOTwYgqBf976ejln3ygEn6hQnU0jMOxXgUyo5yhcGxozHc8g
0Dmi7dsaxij83evFHMomUCS9M3+5bBT03zoZNNwn0EK6Y9JGTwhTVT/5Xy8n
sEmSPFTxXQjJiY9Gae0EPk6P8/xLTQQFynxNUieBtywjBk+QRPCSSbFe2U3g
6Qs+/T9ZikASzWYp9RGoITHvCQkUwbFzF4yEwwTOpxke2skQwcWJUncen0Ce
BbWLSBTBjTOjjP4RAjlhyzraHoig0f/omzYhgUdmuW+N+0Vg/Lt9YPkUgfZp
bXsVhSJw6mGkFc0QaGTxsrVvTgReHpxneRICv4UWvWatFEOq63r1zAUCR7Tu
uvjoiaH4jbfljSUC31aktfy6UQxNu7KPs74TWHOAtVPTVgyfGjvimbI0vDcT
0/TFRQyLDuqlUfI0/DP1vNPzw2L4LL/7nZoSDcPMAxoy/MXgVRaapLuchs6h
+146XRHDfs3GZTbqNBRN6+ODGjFYvQ1YiiTR0Db/juS/zWIwyWW+fkOhIfs3
iklBtxjogblZVD0aWtSvul08KwbtFR1bXqyjYcx1FUbl5jGYdtoWpmJBQ03D
CcvmgjF4XKc9nuFKQ6vjtSWiW+OwvuTFx4o4Gtbz8tsy/54AcpLuy/FxGkry
vNwXoybh2lL9QSHqYYzuZrsk82nwmzFytcxcg7/IKm6/oDkLLqMLRnLp+tiw
db49sk0Cjz9PO1ekGeB3VTWxbZcEbnM4eRuzDNCql6ooNygBFvOiQmGuAT4K
dzRPGJOAH7FYdzffAJM5yakpanOw+pC8ZXKNAR7ZuNajyGUOCi7LO/kMGeDY
GveugcY5UP6yofuwCR3XTvmN32mbg6gg2+1bzOjoWR+u7Ns1B5MzrgU/b6Hj
B89cS6FgDgblwhhddnSsyhlNlyhKoZKMxAEPOsauunzoRwcp+Lm6B7hG0bFW
cDP4g4sU+jr93pvE0nG6Ii8hbb8U3I6GW6vH09Hf/XUV2UcKNqduq7Um0/E/
7FU662OloM38/NjlPh3jPA03ia5JgaWysHrDQzo+M7HZWcKWgixbjalSTMdN
rd7h5nekIMrZ7NFcScdTOaHsuXwpeOs71uU/peP90wkPa0ul0F1wcF3Cczr2
W2c9j66Swp5Np9j+DXTUVi3u2Y5SeFHJmN/xDx3/BdAkn2E=
               "]]}, Annotation[#, "Charting`Private`Tag$134015#2"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 
                NCache[
                 Rational[4, 9], 0.4444444444444444], 0]], 
              LineBox[CompressedData["
1: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

               "]]}, Annotation[#, "Charting`Private`Tag$134015#3"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 
                NCache[
                 Rational[2, 3], 0.6666666666666666], 
                NCache[
                 Rational[2, 3], 0.6666666666666666]]], 
              LineBox[CompressedData["
1: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
seDqzt2gDLFUrjICrzIRybzoY95VFfgfhgAqmQ==
               "]]}, Annotation[#, "Charting`Private`Tag$134015#4"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[1, 0, 1]], 
              LineBox[CompressedData["
1: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
               "]]}, Annotation[#, "Charting`Private`Tag$134015#5"]& ], 
            TagBox[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0.6, 0.4, 0.2]], 
              LineBox[CompressedData["
1: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
z1lJCihc2T/VYIleTY4cdlCWgv8BvvnE9g==
               "]]}, 
             Annotation[#, "Charting`Private`Tag$134015#6"]& ]}}, {}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox["\"Bremsstrahlung\"", 16, StripOnInput -> False], 
              StyleBox["\"DrellYan\"", 16, StripOnInput -> False], 
              StyleBox["\"Eta\"", 16, StripOnInput -> False], 
              StyleBox["\"EtaPr\"", 16, StripOnInput -> False], 
              StyleBox["\"Pi0\"", 16, StripOnInput -> False], 
              StyleBox["\"Rho0\"", 16, StripOnInput -> False]}, "LineLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[1, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.6, 0.4, 0.2]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0.6, 0.4, 0.2]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"LineLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[1, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0.6, 0.4, 0.2]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                    "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.2, 0.28}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> MachinePrecision, RotateLabel -> 0]}, 
         AxesOrigin -> {-3.912023005428137, -18.420680743952325`}, 
         FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
         ImagePadding -> All, DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "ClippingRange" -> {{{-3.91202289274527, 
            1.6094377997512246`}, {-34.901733402344966`, 
            3.5056681101415825`}}, {{-3.91202289274527, 
            1.6094377997512246`}, {-18.420680743952367`, 
            3.5056681101415825`}}}}, DisplayFunction -> Identity, AspectRatio -> 
         0.66, Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {0, 0}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
            FormBox[
             TagBox[
             "\"\\!\\(\\*SubscriptBox[\\(P\\), \
\\(prod\\)]\\)/\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", 
              HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox[
             "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(LLP\\)]\\) [GeV]\"", 
              HoldForm], TraditionalForm], None}}, FrameStyle -> Directive[
           GrayLevel[0], 25], 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None}, PlotLabel -> FormBox[
           StyleBox[
            
            TemplateBox[{
             "\"Production probabilities of \"", "\"DP\"", "\" at \"", 
              "\"SHiP-ECN3\""}, "RowDefault"], 18, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{-3.912023005428146, 
          1.0986122886681098`}, {-18.420680743952367`, 4.605170185988092}}, 
         PlotRangeClipping -> True, 
         PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}},
          Ticks -> {Automatic, Automatic}}], TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{{{}, {}, 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 0, 1]], 
              Line[CompressedData["
1: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
netiV2MpURhbka3FWd0u/YdDWdXWIr4I71yqwd2qX4R8hZnV5i6p6578VoO5
H0tpvagkqY3vL/N1CK7B1l1HWHOSGNSGmHWyogxr8A71bzOFNquop7nxNwjV
4MzFF4LvuhdRW6LJhqHBasw8G7DE+G4O1Tl1n+BOr8Y8kzyFNngalR295Kbg
Vo37DOvKbtMnEfAPvzt/pBo7HXQlLaqOorTsOWpqcxUOtbs3e9evHyX7e6g1
xlbh5aoFEdHnPSjOkOSwZFOFWVwbJjeOt6PwWUrziaVKfPx6gMXWq+UosPgx
y61vlTj+unHcs8w85B2xSfFZcCVufRrA/upCGLLfLxrzW6gS64lU7S/g/Iav
Mr+r4hqqwIcj09Y+fa/Cls2ya/LpFfizQ136BLkR6zmpXPQ9UoEnWrSuV7/t
xHLZ+mLCtuX4ksMILnf+jf0P5DrHSJVji8I0U92zg7gtV6hkw2QZdmTXcqkW
/YO9Cv5Y87iV4ZFCiVdjD0dwVanXK8bgUmw7+OtAnOUk3qb1e/LumVL8uuhK
lMvmKXy7SuvwEl8p1mJmsjlQPYU31/P3TL0owT2LF8Lf7pzBNh3vtvZ/LMZn
Zrmlg1/N4Twz3usWjsV4y8rZb7SD85ja7fylS7EYsw94TVkS97isX4dNmwu/
Y8ruIzNrfxYwabQ1sqTxG+bsvM7dzbSMn6+T+d7OF+IBhfxE9ro1PO5zxUr0
SyHe9YSxdk5tHasz1WbEexfiiuK6xwpp6/gPW7RuNHshDs599HNCgwEUaLJh
D7YA1pWVSnjCzwivNHP4ujy/4NGx/U+7npLghI5fZhPrF9x8pmP9zHcSjOvp
6FWH5+NbWQdPK0ySQMWsP6zgVR7OOGH901yTDK03eDjjS3LwweXhqZvTZOB6
Yst4mZqNbcfEd/nKMkMOaTjv7MssbCmZFRqrzwzW9tcdNWWz8NR2hR+mzszw
VcdhUEovExur+3EX5DHDDXaP6umIdHz38XyPGmKB+FUhebJyKha883xspyIr
LHXsSBowe4dJN7s56wxZQS9HfFOFZwo2uV1Uvfs2K5Bvy62HFyVjwUDPQwup
rHBp6GilkFYiXhHvilsQZAP9pPYSx4znuPEdX7PoOBswXfyVqjwXjb1kr5RK
srHDpy2jj0hKUbjIZVbq7zZ22PiQ4UJ4YQRm6dl+VU2PHXLmdcbOxodgvjOK
+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
/gf4cyNn
               "]]}, "Charting`Private`Tag$134015#1"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[
                Rational[2, 3], 0, 0]], 
              Line[CompressedData["
1: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
               "]]}, "Charting`Private`Tag$134015#2"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 
                Rational[4, 9], 0]], 
              Line[CompressedData["
1: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

               "]]}, "Charting`Private`Tag$134015#3"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0, 
                Rational[2, 3], 
                Rational[2, 3]]], 
              Line[CompressedData["
1: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
seDqzt2gDLFUrjICrzIRybzoY95VFfgfhgAqmQ==
               "]]}, "Charting`Private`Tag$134015#4"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[1, 0, 1]], 
              Line[CompressedData["
1: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
               "]]}, "Charting`Private`Tag$134015#5"], 
            Annotation[{
              Directive[
               Opacity[1.], 
               AbsoluteThickness[1.6], 
               Thickness[Large], 
               RGBColor[0.6, 0.4, 0.2]], 
              Line[CompressedData["
1:eJwV13c4le8bAPBjnoNjc85pSBrKTIpUOBnJzoiGNAh9RUqoUDKzyYhQiYYR
oRTCc0skZB0rSVZk771+z++vc32u932vZ93Pfd9HzMrJxIaZQCCkMxEI//9N
Phea1qTHCyIdQUJyyzS48Op74zltXlh2HJmQxd46yb7Sq8kLGfmG1TLYT/y9
DWZUeEF5hOIphR2V4zYtKMcLfRGxDHFsX/bLymZCvOCjGWAsgm2bp9DQ1skD
pxK7fTiwpTn/LHQ68gDv7J6AriUa8BktO2+254HQE+yrndizscLjp215wFPq
5o1f2MVi+v1NF3hgu+TgqXZsvcOFDVUneeDXRRlyE7b91ej0D/t54IrOkHwF
dlrlCYvQOW4ovc59OgN7t29O6dF73BA7/OulE/Y5vxfMhXe5oSzYhOGIHe4f
paXoxg0P3fcRHLDnH7rUyTlxA+dLitlV7MpQpa7dl7nh2GnnkUvYto9hjfc4
fr9z63dj7DfpDcr9ZG7YmjCoIo8t0TBZFJpEhlA5+Y9ji3g9L3iTtzwhA3E5
994INtyS9c+IJcMv6RMaQ9jmVIeTVeFkeCOTWdWP7XdhsI/FmwyV/ZLFv7C7
R3+TPWzIYJQZrvkd+zFHzYX/ZMlAzqioS8Fm0XjFrAVcYFNVY3Xy/+PxphwO
LuaCZ58rbPSxBzqf3agr4IIJ5RkbHewqt/gu81wu8LfrstTADs0IKbJL4YLT
aplSh7CFBJydg/y4IHmmQnkbtniPam+tNhd0LrwTG16gga5Xe5lpIycw1jhM
72CHEDPL2n5wQvALmR8u2LUR98osqjlBiaGseRP7ZPKOMutyTngrKChhj32q
zAFu5XPC4pDJDwvsCyxMKPoJJ1TzfLqnin3roUQx4zInEBV07JmwkyLcP5pO
c8CmucEaz3m8XkEpUtg4B7xQYiLfwbZ//Ots5TAHJNc8OXELW+mp8ppSHwc8
KD2U+x92c8a6xrZmDrAhZhuYY5MrfRr/5XNANmvOG1lsz9Xg0Xt3OUDicRD8
mqNBn9dR1U+uHJAoMWXXiq3LMhoxeZMDVP5pcTZi0zgNDljbc8DlhHR6JfYH
Kq+7tgUHXP1Y7pCDPSofTRRU4YCVqOUaX2yL/xJ3pBE4YNBxzl0c+1zJXeGZ
VRIwC8dGbcc+w3+GpLpEgmmdDy83Y58qFBpnTJGAt/p8AQ+2IUd44UYvCTZx
VyTNz9LgWPoDo9MVJFhsPmtWgS0+ZHOfPZgErPGVFy9gT12V67giSIJbmmtP
7s3g9+/0x07wkuBmjuprN+zwh/HG7mQS/OZ0feuELf2a8D2CjQQl1zNfX8a2
7Wv4VLRABNm9GcbHsTssb8bydRKB5/nhe1zYX0zyjIpfEiFi9zxL9DS+/8oH
vwkqEoFtmBocNkUD9hOVzabyROB0FJD2w3Y3PtMbLUuEEhnFCndsa1vPNcE9
RLj9q63TDvtg5NcDQjQiWOrHJatht/adShZaZgfFoQDnmUkabApxvStcyg5D
h9yYjbCTf36Uomqxg4uadtXwOA2uPN/GHKfODg39cp/+YEvYBLRT6OzwWOB0
UjN23qSZP0WJHb5bH9YpxS4nznUJS7LDrN9l6UfYAwoHooR42CFpuy+fArZ0
1LtF/lY2WN3jxec6RoNC3bQKsi0buApqtTFG8P3oUVF5ZsUG4fmlxpXYN24z
Puy7yAab3XygAHvvy/VUkzNsYOT8xf0pdtzaKZ94XTb4fZj1si22aw4Tfdc+
NrBluTEyN0yD/RSLgqOLrBAux5rFhZ3ew51pH8wKP8Yar/H+o4HkLW+X3ABW
KD+cenBtkAZvWedUFn1Y4WH6ydFh7Ow9nQ3+Hqzg8WVxTyX2B8eM+WQHVhAl
Qp0HNixpqbcZskJuaURN3wAN2vgf/NQQZAUGkyrn6780YFOfJooksUC0RErq
RC/e//CjCanxLFCXXrOzAzvtl5+0ZCwLbEkhPfqKre9KNT4UzgKh/nfln2BH
pSknGD9ggR5fiwg1bFHeh9IBV1hA8ylfSngPDQ53bjGekGaBhjWPd5u6aeDo
djyhrIQZZibtzSY68fmVOtxfK2SG3a/8dZuwz7PHWB3+yAxMTi0787F1H/dK
5mYzQ6Jqmo879t6PXp+TnzNDM9o+zoLdO1fY6eXNDDEb8lf4f9HgtKusqOpx
ZngwU8lG+YnvT4kZi7saM6g57daba6eBFtu9wXwVZnhltPNmM/bB2Jp3MorM
cLHb50IUtkD+1WMie/D8Cm5+JmPXzqZcXiUxg+FYptVKKw3UXKgvi2qZoDl4
xA8106Ah1EGC9J0JbjclGiQ2/79+lmWbVTBBcfquWTdsz9ZrhZMlTNBZoNwh
g/1RCerE3zGBAfkfewIDx9va1aWoR0xgql/79VoTDSgBRYbXzJkgI7e1e6Ye
55M4y6Ut3QToDnkbE15Ng5prgSfSOwlgkejLsMbOoL+PVfxJABml6FEl7KuD
JHnjJgJYXWG87f2O85niB/uArwSAe4JWB7E7Wjg7J9MIEDDF7t3wjQbfBAtK
K24SYInsHjv8lQavB3vJptcJwLrwqbUI2+8zt0W3PQEmatLGgrHVra0Xlq3x
fE5zJElil+bxyMmZE+Bke+C8XTmOP2ObFwlHCPDdaNuDjjIapEQI+DmxECB2
R37101IaGJQoal/Z2EBudmkT1tjmFtqBQwsbKPhLa6cE9tW4a6TZfxvoyyUi
b34JDcJ480gcNRtIUuhZbVUxjs8NVY4DERuIn4XX428RDey6z3A+pG4gH0dW
8vRHGq5DoeR9e9eRbMzFK7rZ+Hw/6nQdEFtH7zPq3rBh/65mz1HavI7amMff
QhYN5GYfmKqT15HYIdMVBexWLdcEs8k1dIVTI0XkLQ3ERi33ehasIb4rJ/u7
02lQoLhP87v2GvrWQw9SeEUDK71R4Tq1NeRNqwr995IGXJfSB5uOrKHjhYd1
E7EvBO0M6ZReQyvh9VMbqTRg7aQ2TfCtIV+hW6MVKbg+ehMuUX6uIsqlXac0
k3E+qmn0sP5vFf3042DhSKTBr1bdqabLq8jTKNkvMwHHW0+5rfq5VfTs3MN0
A+yihXxjMb1VVPmn4lfkE7xfOxP2/JFeRfWs19oE4vH6PawY5yZXEOXu9hbW
WBp4S85ImtxeQe3ojNizcBq4KTgklzmtIJJ6vO5BbPtjf4X3X11BUzRDzuow
XI/M2wh8Z1dQmYGV3mwovn8+n1t/HFlBu1oWvmmE0KDup6+Pzvoy2hoUeKLu
Ie4Xg4Q6jvkvo5Q/XpLhD3D9URh6xLi3jKb/+DjTsK17SnRs3ZYRx7KfVooX
jt/DdoUhdstIjD018sN9XL+HC+NbdZZRS8/Ec4YnDcz0Lp524MHf79BWXbmD
6xd3RnNc3BJaLfizMHoD5/fC+6GSkUuoU2+t2g67xcZUsyRwCZ2i/9vU64Tn
U7r6vvfuEmrNWdjbch2Pd/1ktMz5JfTkVdTqBwfc39XPGpdvX0KpBhqr567S
YOMRvX48fRFxrtgbKl/E9e4DojGlLqLgOztS312gQUAb3UowaRHFDPm77MDm
ETk2dyh8EWWSNULYLWmwLe3YFm/nReT7heJedY4GqqVqdoJHF1HxncOD8uY4
HwxrbByqXUBLVxTlnunj/eH+qq1bsYA+ngjiI2CzymlGnS9dQFriMxaX9XB/
5qq52ztnAaUpZO/foUuDRMJxveqYBTTXz1WVdAKfP0Ur7rwlfk5xormq02BR
XXuf9/g82tZi1pt1iAbE835b1wfmkWK19sSoIs4vrsDh8Wcerf9RV5DCVnij
1O/SMI+MBuquvjpIA2cuiSdX8+YRW1C8WeR+GowxOFiM3OZR+ESJJ10K59sr
Na3b1ufQxdH1O6siuN+4R/yaOD+HgmX//NmOTYjTyKVNzKGz69GXNbfievD9
c4hA9xzijryYG7gZ53eZt8fYv8wh/mgnG3Yqvm9zoRlj/nPo+X0r+RZenN8C
DO8Xc8+h02qeGQUE3D9QFNcK2OfQ0eTR+boNKki+FvHM35hFzfqPz/evUyG4
YvRu9tQsOpaV7EReo4I2a4hrcssskkuIizdeokKl9zcHv6ezqCxklv/dFBXA
85iFvswsulWkfuRdDxVukPd2aIvPopprpIzX3VQQTeI9e1x0Fj30+s739A8V
7n/uMlfln0Usn2JKA35TQWXZ00RubgaVjJ12N/hJhaLbhTpCJTNon1OMzZsG
Knxwllfq1J9B5mJ2en6lVIhKdV1aOT6Dxl8qil0oocLN5oKiLfQZdJh2q1Gx
mAqyinQVi/0zaFp4/XN/IRXeLOmpdwjPoKe7HsbI51Mh4YGNfnvXNJpuLhKP
zaSCV3j8peYb2KOS7A5xVLiAfonN/jeNLvR9erDtMRWUJ7f1CVpPo5IX/6XV
x1Bh0fiVjanZNDrKw7EkE0UFZ+E8+6bD00hL6NytjlAqXEmqcWlgnkY/P3TZ
THlTQTdjPbA2Zgo9EVSJ4rpGBZfGtTHzsClUwmDTufEfFZ4trpr0+E8hoeYd
+xl2VJjSWtk67zaFDNrbQ6KvUCG+byFH9OwUCh5v2bNuSYWBrVPtziJT6P1x
lqY7RlTwiejbu+n1JFon7GyaOkCFtx97w1KfTSKmvLgaqjwVWn/3TMvETaLG
XedSjspRQUK6u1g9cBLVWgh1ekpToaGq08jBfhKVFJrL/N1FhW3MrXeQ7CQy
3Ff+VFeYCq5DkY9qrk+g0QuKeiazFODcPXD/z6UJ1DlxItZkmgLPLh11mDGZ
QGf6G9KMJilQ2fZXa8uhCWS07LRda5QClMojq/Yb42g8rm1NuJ8CBSn9tpyR
48i7iYG0GBRYtVBS1skdQ7KxH9+3vKNAZFyYhGXqGOrW3cUZlEWBXYxeys3Y
MXR5/1c4nEkBA92wqfi7Y8jO6jc9+jUeX6n39T+1McR/p3Gr+FMKHBMO5Q9s
GkXh+5fnvgVRwLfuz0DlzAi6Q7D+9ucSBbLn327J6R9BnUVPjNYtKdCxzd3o
ScsImhe0kNhkQQE5J6Gia59GkM2W2lwNMwp08uqE8XmMoC1RTa7XdChw0Djv
wDnmEaQa5mlB2E+BfobfgzG+YZRl89mEf00YeFeN81uZhtHNE13mWUvCcGSX
6DCaHkJdHGVNmvPCEOlSaBrVPITIh8oFbCeEQVl4XPxQ/BDKEqxvvdEjDDHm
p388EB1C/oFE/eSvwqD5U2KzkOw/5N9xjSHxUBhqNbIZGqL/kKWevsohX2Ew
y5YPu8X3D0267VKkewmDre9RAmN6EN31Cs9SvS0MgTIGA48+DSJxpdHEZVth
qPG+kcerNohGfyg4WB4XBhPJT7pcpwbQt50KUt5rQtARc5T16PEBtLCzMKlm
UQisN1CJveIA+iHCLM87KwQuzVVy1bQBdHS2NMp7WAhi73dQgn7/Re+j7uTy
twlBe9NaL7vdXxTI80GIkS0EFz00PZjd+xGhukTqxhkh2MsQPbPfoR9tPyL4
fpepEExLrhy8dKEf/fb4GNVoIAR+HbnjJer9yPX4GVEhDSFIOyxqdZerH/2n
ufT1iIwQTC0saU8m9SFRoTPuBIIQ+Lq8o3ShXvSiNr9z/pkg6NcGz5DzelHO
ZHby43hBoOyybTj6shddtNt4JB0lCGmMrcFPAntR/naDzCP+glArH7x2yrgX
7WxjcfltLwjCU1f6a3p70NOZqDDJg4LwxnFzXiFbDzLa+0ZerVQA2PMcW0vm
u1EaIeZNU74A2M7DctlgNzrtkiNsliUA4l52GtXfu5FEnoyJdJIAvI780NwR
1o1q6BvXtt/Ffm+4sCLcjXQyNMU39gmAzgzbXU/9LvTd9l97YCQ/kDzflvnJ
dqG/C1Ilk/78UMVqyhnG14UschLKNT34QZuSnPi0+Tfy61qPyrHBPnyktPT8
bxRGaKmMOswPWl7XWZgcO5F+OF/Whd98oMnVFuYf1oFsab+bRYT4wP+6lEjo
zQ701Yfd5Q2RDyobvd5GmXWgM5d3NivN84JO/N6a5yId6ETSakpkOS8Y7nYn
FWX9RA/LBSqNzvPCGbqI7/iPduQhbEGSDeABh1vWd07ztKG3YfFrMqVkyGr9
RLww3YoCF3yjMpPJMH6YHHeltRURp/v0BXzJcJOQn3/zWStKZanfmnKCDG5h
7DMhsq2ISs0WY27gggdv0h3BsAVtEgy4NvqHE8o411cr5VtQgkXDFN8XTmC+
bhL6g9KCVmUETXRfcoL/wZWMjq5mtPCL2Y38HycEl+n/m73ejO5c0co5OcsB
sb8mrCQiGOhkaLZDDIUDosrzVopvMVDDlhyu2VUShGe6xhidYSDXVMo96CNB
gMdKxW0xBno/pPGjOI8EPtalF7jYGUjxc1HcSgIJ7ut5LzwbbkLvNj1mr/Al
gdsWokTl+yZkm+dxlnqaBM4s1WVn45uQlKimcY4aCa6PhJ4b82xCZXRu8qw0
CWw/C4QKaTWh3PTJkSQ2EliltuxKk2xCGmOPSwVmiHAhJL7kKG8TIlz8nnKq
h4j7+W0TVu2NaFg1a8wSiGCi0fNwvrgRcZsHMRRyiWAo9XJ78ItGlLsppHA5
hQi6gnaFIgGNaLY3JvpDLBG0ViRMcu0b0WuVTXuvBRFBvW90WPNkI2KTvkgU
v08E1Zp3vu0HGhG7UobP6C0iHHnvvNWB1ohs8s+kVtgTQTFRIX9jtQE9HOba
UWBFBHnfRYPongZEHRu3rLYgguy1zwPilQ0orX7/KWZzIkia3vcqymhA6Sr1
cTbGRBA/qkYzjGhApOo8nSUDIuzYyZrbc6sBfV814/+iR4RtXN90XM80oHcR
Q8JfdYmweSaol6TSgC5piy4y4+fUX/oeSWINqOf2m1pvfSIIlvMKybE3oIMX
b1E1TuLvzV+dfdhSj249rvmmbUoEirhUSPazeuQsekIh5gwReOZzilvs6lGC
YJaI+EUisFcqjq/K1aPgkW+p67ZEWI8tFt21XIe+acmeFLlBhHkbdWO98jrE
M8LE7e1OhAmFKh/n0DoU/SBl/94AIvxjM/zwxKwOvb9m6MEXTYTuFsZf2FaH
ZkXThQ+9IEL7q7PUf4M/0CaXLc/ic4jQ4PpHmzf3B9oY2ti7v4wIVcdt3BXd
f6CXMcEnVpuIAMIjmZYaP5CY2Tmeub9EyMmf53nbUovEnMtTz/KSIM3f8xjj
WS1KirzrVLibBMlmzM7LdrXo7knxcVkVEkTOcbdoL9egwuhronQnEtxU2J34
d1sNErDwtd3xhwT2bJm15H/VaDA6xOHSGo63Frn1A7nVSGUyN9ptKweYuCpf
9tGoRh3pCnMclhwgn2+6R/Tqd/TstJ1j3wAH+B8qdEuU/o7osz+yBHg4ob1w
WyV1qgrNhOg0TClwglfp0BU+9ypkPdr+OO4hJ9R+80phCv2GVD6+POKynwvs
OjJF+t9VIP3fywZ9cWRI2mARSl8oQyqmfvvrvXlhwvs/693FZYhxv7HZMYcX
1Fnr8148KENpVc+Vlrp4YYiUYJzAUYbGxW18BkT4QFFALiJkCyAylUKiufNB
ik6BUOf9YuRJsZDV2McP5JirTLY8+ajHPnEoJUgACphHik4//4BibvF2iD4V
gCs3HV105D4gp1+OjoE5AlBi6DwobfIe8e6NCNzaJgDXOTx/zMTmIv+erPPG
OwXhxdq2AyxH3yKH50fKlj4Jgunrn5UueUnok4/e14EmIQhmmbid3ZxAN/d/
/7yjhQKEj4Mpqh+T6Lc5o0uODVDA9Wr3j7q4Z/Snfj0Dj+cpkDPw79FtmRd0
CeOt44JU3I/qdQzGTb6ks3jPlZw6jftn4ZLodre39IsOn5p4W6gQdqps7m1Z
Pp3VMaLQsBL//3IpF6fafaFvU+5+yRWwGYL6fkQfOdJAL3+13cPPUQSMu+KV
3oi00a2zelbm5kThfZij2I3HXfT3wy6ZTcpiYFln847xrZeuGlO974vZDpDJ
2XRDJGKArrnn4d8dt3dC6vIqc6XmMD2r+MiRzYG7YHR2F7wqGqMHHy12MvXa
DV/60+qflEzSDz4q2KvlLw4Lry+fWr03TfcMECi+6roHvETk1cMVZukTIVr6
SZZ7QZaJTe22wDy9yjfoZKG5BFQqLzd71C/QLwt0mm9WkYQNLu4x1bYFOi+h
UmqLmiQo/RJlY/6zQB9Vc+/ZclwSMu8eVwgcX6B3fyub2GogCZEfI2NjuBfp
y27HE0UsJeGc3B7zLL1F+qZoF51N9yRhfOeptq5vi3Szc6aty8WSsGfGduJF
/SJ9/AA/YREk4dKXu0SbtkV693V8375KAuPS80MjA4v00qH19vFaSSh4Ohy3
wLZE742Jl+jplAQfqvcZPs0lOs1mph5WJeHzQPQNht4S/etrrZPFBCmYzX8d
+Nh0iT4Q0PbhE6sU2J2qLdhqvURvr9p8IJssBfqPqJskfJboOXVr60+2SoH/
Jcn9o0FLdBZN4fcx26WgdJ+KzrtHS3TpNiXDiF1SsL/O6q7CiyX6r0iOI37S
UmD/1PXRYtoSXZ1/KPi+nBS8dAhM/5yzRPeyPlx+56AU/D6aWHa/YIm+flOw
z1lJCihc2T/VYIleTY4cdlCWgv8BvvnE9g==
               "]]}, "Charting`Private`Tag$134015#6"]}}, {}}, {
         DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          Ticks -> {
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0]}, 
          AxesOrigin -> {-3.912023005428137, -18.420680743952325`}, 
          FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}}, 
          GridLines -> {None, None}, DisplayFunction -> Identity, 
          PlotRangePadding -> {{0, 0}, {0, 0}}, PlotRangeClipping -> True, 
          ImagePadding -> All, DisplayFunction -> Identity, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None, "ClippingRange" -> {{{-3.91202289274527, 
             1.6094377997512246`}, {-34.901733402344966`, 
             3.5056681101415825`}}, {{-3.91202289274527, 
             1.6094377997512246`}, {-18.420680743952367`, 
             3.5056681101415825`}}}}, DisplayFunction -> Identity, 
          AspectRatio -> 0.66, Axes -> {True, True}, 
          AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
          CoordinatesToolOptions -> {"DisplayFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& ), "CopiedValueFunction" -> ({
              Exp[
               Part[#, 1]], 
              Exp[
               Part[#, 2]]}& )}, DisplayFunction :> Identity, 
          Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
             HoldForm[
             "\!\(\*SubscriptBox[\(P\), \(prod\)]\)/\!\(\*SuperscriptBox[\(\
\[Epsilon]\), \(2\)]\)"], None}, {
             HoldForm["\!\(\*SubscriptBox[\(m\), \(LLP\)]\) [GeV]"], None}}, 
          FrameStyle -> Directive[
            GrayLevel[0], 25], 
          FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
          GridLines -> {None, None}, GridLinesStyle -> Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "DefaultBoundaryStyle" -> Automatic, 
            "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
            None}, PlotLabel -> Style[
            Row[{"Production probabilities of ", "DP", " at ", "SHiP-ECN3"}], 
            18, 
            GrayLevel[0]], 
          PlotRange -> {{-3.912023005428146, 
           1.0986122886681098`}, {-18.420680743952367`, 4.605170185988092}}, 
          PlotRangeClipping -> True, 
          PlotRangePadding -> {{Automatic, Automatic}, {
            Automatic, Automatic}}, Ticks -> {Automatic, Automatic}}], 
        Placed[
         Unevaluated[
          LineLegend[{
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 0, 1]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0, 
              Rational[2, 3], 
              Rational[2, 3]]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[1, 0, 1]], 
            Directive[
             Opacity[1.], 
             AbsoluteThickness[1.6], 
             Thickness[Large], 
             RGBColor[0.6, 0.4, 0.2]]}, {
            Style["Bremsstrahlung", 16], 
            Style["DrellYan", 16], 
            Style["Eta", 16], 
            Style["EtaPr", 16], 
            Style["Pi0", 16], 
            Style["Rho0", 16]}, LegendMarkers -> None, LabelStyle -> {}, 
           LegendLayout -> "Column"]], {0.2, 0.28}, Identity]]& ], Editable -> 
      True, Selectable -> True, SelectWithContents -> False, AutoDelete -> 
      True], 
     TemplateBox[{
       GraphicsBox[{{{{}, {}, 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0H0s1GEAB3Ado6Tb3Tn3hJMOESsmTEw8XkPm5byTl2PS5OW8s8q6qGFh
eenUiXLXZCfMO2d6yLyEJatkWh0p5+1W3jZbkv75PX98993nv+++rJgUdhxJ
QUHB+TD/WzdCalCrbISirvTD/iEAGz/7ovAvhoQtAgbDNduw7Qpzn+QEYQ/x
WjxWFbD51z8Jjr06Q5jz4MOOGhv7ZaYv0ts3ILwkEJYzn2OntCyrDLthZxc2
btze1CecUes0r83HlueG2kw6Ync7cWxN5HqEM92hc2IFdqv6035kjy3Vfn9p
b5FFOIq6y/lWiB0+Wb07a4ntNUyr6Jg7TbiPp/pMWICtc2uuI+ssdt3ohTm5
QJfwX1azscbWKcKXd2eLFO2wiwP33zIe6hBOLFNi31thErZ27pNJLLD/8G5E
g2JtwmLbiWXbGS3Ce1Nqnb062HDdIzYiU5NwaoEVa3zgJOGaBiYKpWMHjnba
ZR8AwuRl797KVey1LEG2vhR7TFlm1fYRu8ubXJU7jS16ZLkNJ7AFfaNC0Rh2
+dcw/6Mj2MUkOSnxDTbPkNf2DgH0mu1JHUEA5njSYywGAIr2GRw1HgCQm9xA
5UsAmhRY5pVIAIzsmuJGdgE0ZU5ZC+gC0NZNy2xDDBCpXTD8XQzgdly7WJUP
UN5xlewjfACvvfghck0CaGvHbc4uCUDX/O4MbgJA1UizNT4BQANOkYsgHiDT
Dtn98ngAF5jnl35xAAo2umkp4wB4tTJDvyYIoMHOtLKKIAD98xXrNx0A8jNv
dVl1OPyfw6qrox3uy7jbxKcBqKkT8Xivm4Hm7VPTNrsZcER3OnmGzEC8kp6G
STIDRtT89k8P1kDyKp48OVgDbgjJWjZNdMSVee1YNdEh8/4JwzAlOqIEp7mE
KNGh1WKfo7O3OlqRlkmdvNWh+3isvZ+Ihi7OV99hi2jQ1UTiabRORWY5pshk
nQoX4rZrQqypSKPXcSnSmgqzzhlPN5dSkMSnn99TSoFCmcnBfDoFJdSTin6m
U+A/7RXsqw==
              "]]}, Annotation[#, "Charting`Private`Tag$133913#1"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF0ns0lHkYwHGLambwvhLzNgwa65ZNaTOpIf2Icc0trVtTLmu3RckWRdJy
ppYiYk8uIyu0siucbiTx1NpisRundVmkbJQ5oiiNUvbtn/f3x3Oe8znf589H
EB7rF6mspKQUSs+nbSh5bFyy1AwyWGkXCiMoVNXvAyFDpow3+N8J4V3BtktP
LDryFfbd1Fo3uRJ2/t5eGfuyCeOwzIdv1P2wL8X7gNEHY8ZPZeW5/AvYsbXP
lrWKsQ+nV704NvM540MljoN6+dhTiUGbOx2w6x3DRBZTRozjXdG2mDzsuhXn
m8Ae+7Fe95b5UQHjPcvnwkbSsUM6C+b6rLE9W7Xyrg2sYtyYyiktl2LrJw9c
SzDH/vn+lwNTMkPGHwU1q3VmDRi7zPVlqNhhn9r54U/uWX3GMdmqficm+Ixt
tjU+v7UBeyE1OpQ6pcf4N1HHM1GPLuP5LvXrN/Wx0aRbhCSexzhOKhS0N69k
XFzJhyBt7G8ujlU476MY8/QlhfP1XMb3DB/s7yGwJcWvdhwM0GH8opzQ3Vyt
zZh/UsM0WBVbONrosM1rBWPX9gh73wotxs4Wt9zNJpczfhL5ujjQBjthzeoH
NWc0GcsHVpoW1ZKM2zI1p+VS7F+2shpsg7GVN5p1j/lj714jlmd7YzcaRaqI
3EmoTN1YnkxbhyflP3UioSPh8m092gfIcuGZrSS8ijbubwynUOeSu16bRCRQ
YbKZINrSmcUfMteREO6RYVYQRv/bc4OijRYkpCMlRxvadiNbrj42JqFGeHhX
byiFZjuOjlnrkqAwjDyrTTv84lu3YVUSsl+j9zm7KdQs40b8uEjA9Yl6HSva
urnC5PXvCBh+tNbqbwmFulMO1pyYJsC8nR+pQRsFTmut/ZeAlvOKvzJCKGSg
9mwwpZaASXFdWVoghQYP9O5bFUyAuNDQ/ZAfhdQTjMPG/AloPb3FU4e23dHv
/X/1JsApJcTrhi+FSk4QttbOBDhE5PspfCgUWiRmuVoRYGtJhiR7U2j89xtl
sUsJWHfnY7TUk0Iz3Py+5isawJsYzvpJTCHO7QAHiZoGyDcVd18TUUjjg9Da
olQNilyS5S9XUUhlh9oE2s4B3VI33jiLQoFNSUUBLhzYI+toTqJdYyL32O/A
gfJz278mP3VFW41MyAGLLN/aTcsoVH3+5KE5fQ7YJgU5n15CoZ3PP1OqnmLD
Lv/v4qyUKVR5TMGlcthQwspoT3rPRQvj37ZZnmLDExW1WJK2n09fopOUDaaL
mdoV7+hudGMo7ggbLr/J2dM1z0U+bQfLOkPZ0DJa8MZQwUXzWtOWaevZMNJ0
SfDHay7ySt49UvAFG4wbLO4H0a4Y68qpNWHD3qvVMVOzdG+onh3iseFlVV09
RbtMEnXTRpkNi+catke94qK39waivBZY4JQrmv34kos8rdz4kXMsSM9qKsij
PadsfjxXzgJNKfzXNM1FHjH5VlVPWbDzuGOGL+3Sf5aOtjxiQUFS69rxKfre
PiGvt58Fw/Hih0m0PS6NOb3oYYEgri2RpP0/peWhtg==
              "]]}, Annotation[#, "Charting`Private`Tag$133913#2"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, Annotation[#, "Charting`Private`Tag$133913#3"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1:eJxF1Xk41WkbB3ApzTmW8zv8nOckW2RLaRGZZLktEbK8sh0lR6LhFTVFIVmP
srRgWobsUkk0aVpodE/b0CZGllTUkHhDQ1mavL3n/ef8/niu5/pc3/u+nuu6
7z8erW1RniHSUlJSIvH5/60Z0KdTNF8ff9BPVdHO4sOFLg/c/FJP4tVev29W
ucLY4nBs/n4fxneSa52GpRif+qGjgH1JV+Kg7PbP8p6Mz0d7oPasjsT9BeW5
aqWMo2oHv7vnwHjf4QsjCeOLJd5bZNujeorxaKxg7WMbxtdtg8wNR7Uljt4A
dhF5jC/ThbfQinGfaqvlzFstiQMVJ4N6DzPe/Pj0ZKcJ4433lPKudi+SuD5Z
tqQ8jbH6ge6rMQaMi/8w7h4t0JT4v1o1S3gTGhI7TnZmzLVgnOk9+5DkqEsc
cWyep2hITWIzu/r3DasZf03+t5CfqSrxRfNHg+ZtCyWeeSL/6011xvDBKTgg
WkXi3WmmWs2NCyQ+c04NBcqMQ88OVKzfyZdYRT3g55nrROIHms8i2ziMA878
vWmPL0/ikXLOwrXVyhKrpSvo+c9jrP1qOqK9g5bYwKS/zu0C42F28fqRQsYX
ewWdWbmM1U40xdcdo3Hiiqa6XyYfsp3NFvVk0zjP+oN3bIZ4fr8qhxkeolHX
V/RHwyE+LM9q+dIUL+4/dL0K0vhQBFbFH/fTGEen/RWUygdqstpuQQyNWcUe
aqkpfPgozMzesYvGS9eHjtxP4sOVNes15ofQ+HFQdbdzAh9M39bb2LnRuG9D
kplXDB/aRJdiC1zEuWWvS1o0HyKXlPwysUH83mor4dW9fKjcJdKqsKNRoPH1
sPIePiz45j5HZi2N5p/2vWiP4sMX1QF8sJjGf4qjErzD+NDoTYHzjBImTW29
67OFDxuag63+VaGEGZWW7gJbPqw3bHDW/6CImu1PaRlZPrwJ+XTGz0wRNbq2
VV1vIxCzbMmzmqNcHDfN0dUqJrD/ponTn1lcPGe1KtSmiECcA9yZOszFAMfW
yqBCAgeFvlchlYtNfooGZQUE0n8SnW7bx8Wi+BzDxacJnPz6Rjgp5KLT7zkr
dHMIXHuc/7flai4Wb8xduySVwA1BZfi2lVz09jaOc0ohUP/ul7/Sjbgou7Wt
PiyZQKNU8/MWfS5GRylZVCUSeGAydTNIjYsuublWSw8Q6DizKUUkw8Wpzlw7
o2gCw90L9PJrKXQNznNdtYOAwzMza/sqCsOf3w8ThhIoe+DjN1pBYbrjtOhY
CAFB3U+ZtvkU3l4a0DgSTKApmzs2nEah8Se9FVVCAjqpK1gnEil0DxW4dAcS
SIp107KOo3BnV9YOlthmodmb8qIorLz1sTg0gEDulosRluEU3lm++NaJLQRG
PR+KBrdT2Fvi3XVvM4FKa9aNdf4UqojquYv9CUiv0W8d8KLQdOrDMk8Bga3L
HIaPuVPoGabplOwnnod2yFxzZwqDM0rr1vkS4KmkqfXbU1hcrtDa70VgF1Vu
etSawhe/xY4e8STwWOaO2/fmFJKuATkzDwJp49+SsldQeES+0SHDhUDfe438
NYYUNukZbjd2ImDRa1nXp0OhjM3J5B4HAhOP4gdMFlIYHx15y8iWwLazU06v
5onn91rDuO178T4KSPChbxw8O53pHr+GwMJc0wOrvnDwjdJUhI4JgdaDe2pE
YxwUOLaci1lBAPzGlJa/4KDj5UR1VT0CGnKDPQdrOaiT0sfaThPo2dWxc5E/
B3t1y3o/j/BAPkYnaMCLg/dPKt6t+g8PLOJ/9Kpy52DVd8mVgUM8KBJx1pms
52DMUODO5n4eCPMdWBtWclD+kvo/Z3p48O7utbKo+Rw0N/mZ2DfzYJyc6my8
ooCnbI+75lbwQPY3X5sAOQV0CzzYsHwzDxRmTU0MS+RwwZh13ViDMszdJDcE
rrKYuMn9tY++Mvjdisv3dZTFywaB/rd1lKFGd9gl0kYWB2YjO/S1xfl0U02B
qSw6nz/6dFpNGaoL0/dOqssimX3SmK+kDN7v50hVj7KxpnJj8etZGs4lTBP+
cTa+mnEShrbT8PXdjiajTDZSLYKXT1tp8PTojLVPY6NdRZifWYs41772cvd+
Np53y/BgPaTBo2lP2WMhG/eWN0HVbRpmlMaMUlaxUc7VUWu0iga3A1t7Ty9l
i78s30Kf8zRUDDw5XqvLxh+nQlVunxXnN6onXqqwsbM0XfF4CQ1lAeE3zaTZ
WD55f47xSRqmHnSHu31lYeej5wn5eTRsXOmkFjLJQlbpwIx0Dg2T0gaJucMs
jHSRGf8ziwaXiFMrL/SzsHQRL9Iig4aS5/Pf3n7NwvbPOsMV6eJ6q5i8ji5x
/yOTUIU0cf35AfuRNhaal9i/jU6m4X96PHzD
              "]]}, Annotation[#, "Charting`Private`Tag$133913#4"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
Zep48D9BLNGi
              "]]}, Annotation[#, "Charting`Private`Tag$133913#5"]& ], 
           TagBox[{
             Directive[
              Opacity[1.], 
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             LineBox[CompressedData["
1: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
              "]]}, 
            Annotation[#, "Charting`Private`Tag$133913#6"]& ]}}, {}}, {
        DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         Ticks -> {
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> MachinePrecision, RotateLabel -> 0]}, 
         AxesOrigin -> {-11.512925464970204`, 4.11318410948353}, 
         FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}}, 
         GridLines -> {None, None}, DisplayFunction -> Identity, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.05], 
            Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
         DisplayFunction -> Identity, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None, "ClippingRange" -> {{{-11.512925293338922`, \
-3.102991617449367}, {3.1033357156207932`, 
            5.940171252720432}}, {{-11.512925293338922`, -3.102991617449367}, \
{4.113184109483521, 5.940171252720432}}}}, DisplayFunction -> Identity, 
         AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
         Axes -> {True, True}, AxesLabel -> {None, None}, 
         AxesOrigin -> {-11.512925464970229`, 4.113184109483521}, 
         CoordinatesToolOptions -> {"DisplayFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& ), "CopiedValueFunction" -> ({
             Exp[
              Part[#, 1]], 
             Exp[
              Part[#, 2]]}& )}, DisplayFunction :> Identity, 
         Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{None, None}, {None, None}}, 
         FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
         GridLines -> {None, None}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
           None}, PlotRange -> {{-11.512925464970229`, -3.1029914458180605`}, \
{4.113184109483521, 5.940171252720432}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{
            Scaled[0.02], 
            Scaled[0.02]}, {
            Scaled[0.02], 
            Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
       FormBox[
        FormBox[
         TemplateBox[{
           StyleBox["\"Bremsstrahlung\"", 15, StripOnInput -> False], 
           StyleBox["\"DrellYan\"", 15, StripOnInput -> False], 
           StyleBox["\"Eta\"", 15, StripOnInput -> False], 
           StyleBox["\"EtaPr\"", 15, StripOnInput -> False], 
           StyleBox["\"Pi0\"", 15, StripOnInput -> False], 
           StyleBox["\"Rho0\"", 15, StripOnInput -> False]}, "LineLegend", 
          DisplayFunction -> (FormBox[
            StyleBox[
             StyleBox[
              PaneBox[
               TagBox[
                GridBox[{{
                   TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.772079, 0.431554, 0.102387], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                 False, GridBoxItemSize -> {
                  "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                 GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
                "Grid"], Alignment -> Left, AppearanceElements -> None, 
               ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
               "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
             FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
             False], TraditionalForm]& ), 
          InterpretationFunction :> (RowBox[{"LineLegend", "[", 
             RowBox[{
               RowBox[{"{", 
                 RowBox[{
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.368417, 0.506779, 0.709798]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.880722, 0.611041, 0.142051]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.560181, 0.691569, 0.194885]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.922526, 0.385626, 0.209179]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.528488, 0.470624, 0.701351]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                   ",", 
                   RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    
                    TemplateBox[<|
                    "color" -> RGBColor[0.772079, 0.431554, 0.102387]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], 
                    "]"}]}], "}"}], ",", 
               RowBox[{"{", 
                 RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], 
                 "}"}], ",", 
               RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
               RowBox[{"LabelStyle", "\[Rule]", 
                 RowBox[{"{", "}"}]}], ",", 
               RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
          Editable -> True], TraditionalForm], TraditionalForm]}, "Legended", 
      DisplayFunction -> (FormBox[
        GridBox[{{
           TagBox[
            ItemBox[
             PaneBox[
              TagBox[#, "SkipImageSizeLevel"], 
              Alignment -> {Center, Baseline}, BaselinePosition -> Baseline], 
             DefaultBaseStyle -> "Labeled"], "SkipImageSizeLevel"], 
           ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
         GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
         AutoDelete -> False, GridBoxItemSize -> Automatic, 
         BaselinePosition -> {1, 1}], TraditionalForm]& ), 
      InterpretationFunction -> (FormBox[
        RowBox[{"Legended", "(", 
          RowBox[{#, ",", 
            RowBox[{"Placed", "[", 
              RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& ),
       Editable -> True]},
    "RowDefault"],
   StripOnInput->False,
   ImageSizeMultipliers->{1, 1}], TraditionalForm]], "Output",
 CellChangeTimes->{
  3.921652872006278*^9, 3.9216533387782197`*^9, 3.9285768569122972`*^9, {
   3.9285770111984153`*^9, 3.9285770286736617`*^9}, {3.9285771004589567`*^9, 
   3.9285771389826136`*^9}},
 CellTags->{
  "Number-of-events-computation", "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[864]=",ExpressionUUID->"d53b2f5a-1257-4cb8-93ba-301ba62b2cc4"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of events", "Chapter",
 CellChangeTimes->{{3.8935731783578434`*^9, 3.893573180246764*^9}},
 CellTags->{
  "Number-of-events-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"0f308b41-d607-\
4d23-bea6-f98cdbbab013"],

Cell[CellGroupData[{

Cell["Number of events - using the mapping method ", "Section",
 CellChangeTimes->{{3.897198873663946*^9, 3.8971988750678434`*^9}, 
   3.9165065585390453`*^9, 3.9165070655729046`*^9},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"1ee4b6fc-436c-\
44ba-9c25-aac28ca9c035"],

Cell[CellGroupData[{

Cell["Initializing all routines", "Subsection",
 CellChangeTimes->{{3.897199076623907*^9, 3.8971990900052223`*^9}, {
   3.8972009084104066`*^9, 3.897200920680235*^9}, 3.916506561920749*^9, {
   3.9165071319109154`*^9, 3.916507136145134*^9}},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"0a1f8dc1-244c-\
4013-a4f6-a6748a821672"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.916854068819274*^9, 3.91685411400984*^9}, {
  3.9168542416316643`*^9, 3.916854263070265*^9}, {3.9168543880041795`*^9, 
  3.9168544046844325`*^9}, {3.9168544862985992`*^9, 3.916854489554762*^9}},
 CellLabel->
  "In[738]:=",ExpressionUUID->"2bfa388f-f1bd-4f23-866d-cac7503aea34"],

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"OutGrid\[Theta]final", "[", "prod", "]"}], ",", 
      RowBox[{"\[CapitalDelta]\[Theta]vals", "[", "prod", "]"}]}], "}"}], "=", 
    RowBox[{"OutGrid\[Theta]Temp", "[", 
     RowBox[{
     "InGrid\[Theta]\[Epsilon]", ",", "30", ",", "prod", ",", 
      "\[Theta]maxBrem"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"prod", ",", "ProductionList"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"OutGridzfinal", ",", "\[CapitalDelta]zvals"}], "}"}], "=", 
    RowBox[{"OutGridszTemp", "[", 
     RowBox[{"InGridz\[Epsilon]", ",", "30", ",", "zminExp"}], "]"}]}], ";"}],
   "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Final", " ", "energy", " ", 
     RowBox[{"grid", ".", " ", "Mass"}]}], "-", " ", 
    RowBox[{"and", " ", "production", " ", "channel"}], "-", "dependent"}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FacilityGivenExperiment", "!=", "\"\<ESS\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"StepEtemp", "[", "Efip_", "]"}], "=", 
      RowBox[{"Piecewise", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0.3", ",", 
           RowBox[{"Efip", "\[LessEqual]", "2.5"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.5", ",", 
           RowBox[{"2.5", "<", "Efip", "<", "35"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", 
           RowBox[{"35", "\[LessEqual]", "Efip", "\[LessEqual]", "50"}]}], 
          "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"4", ",", 
           RowBox[{"50", "<", "Efip", "<", "160"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"5", ",", 
           RowBox[{"160", "\[LessEqual]", "Efip", "<=", "400"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"25", ",", 
           RowBox[{"400", "<", "Efip", "<", "600"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"50", ",", 
           RowBox[{"600", "<=", "Efip", "<", "2000"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"200", ",", 
           RowBox[{"2000", "\[LessEqual]", "Efip", "<", "4000"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"400", ",", 
           RowBox[{"4000", "\[LessEqual]", "Efip", "<", "7000"}]}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{"500", ",", 
           RowBox[{
           "7000", "\[LessEqual]", "Efip", "\[LessEqual]", "50000"}]}], 
          "}"}]}], "}"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"OutGridEnergy", "[", 
       RowBox[{"m_", ",", "ProdChannel_"}], "]"}], ":=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"emin", "=", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"ProdChannel", "!=", "\"\<Bremsstrahlung\>\""}], ",", 
            RowBox[{"N", "[", "m", "]"}], ",", 
            RowBox[{"ELLPmin", "[", "\"\<Bremsstrahlung\>\"", "]"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"egridtemp", "=", 
          RowBox[{
           RowBox[{"With", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"start", "=", "emin"}], ",", 
               RowBox[{"end", "=", 
                RowBox[{"ELLPmax", "[", 
                 RowBox[{"m", ",", "\[Theta]minExp", ",", "ProdChannel"}], 
                 "]"}]}]}], "}"}], ",", "\[IndentingNewLine]", 
             RowBox[{"Log10", "[", 
              RowBox[{"NestWhileList", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"#", "+", 
                  RowBox[{"StepEtemp", "[", "#", "]"}]}], "&"}], ",", "start",
                 ",", 
                RowBox[{
                 RowBox[{"#", "\[LessEqual]", "end"}], "&"}], ",", "1", ",", 
                "\[Infinity]", ",", 
                RowBox[{"-", "1"}]}], "]"}], "]"}]}], "]"}], "//", "N"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "egridtemp", "]"}], "==", "1"}], ",", 
           RowBox[{"egridtemp", "=", 
            RowBox[{"Join", "[", 
             RowBox[{"egridtemp", ",", 
              RowBox[{"{", 
               RowBox[{"Log10", "[", 
                RowBox[{"2", "*", "emin"}], "]"}], "}"}]}], "]"}]}]}], "]"}], 
         ";", "\[IndentingNewLine]", "egridtemp"}]}], "\[IndentingNewLine]", 
       "]"}]}]}], "\[IndentingNewLine]", ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"StepEtemp", "[", "Efip_", "]"}], "=", "0.001"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"OutGridEnergy", "[", 
       RowBox[{"m_", ",", "ProdChannel_"}], "]"}], ":=", 
      RowBox[{"Block", "[", 
       RowBox[{
        RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"tabt", "=", 
          RowBox[{"Table", "[", 
           RowBox[{"e", ",", 
            RowBox[{"{", 
             RowBox[{"e", ",", 
              RowBox[{"1.0001", "m"}], ",", 
              RowBox[{"ELLPmax", "[", 
               RowBox[{"m", ",", "\[Theta]minExp", ",", "ProdChannel"}], 
               "]"}], ",", "0.001"}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Length", "[", "tabt", "]"}], "==", "1"}], ",", 
           RowBox[{"tabt", "=", 
            RowBox[{
             RowBox[{
              RowBox[{"Join", "[", 
               RowBox[{"tabt", ",", 
                RowBox[{"{", 
                 RowBox[{"ELLPmax", "[", 
                  RowBox[{"m", ",", "\[Theta]minExp", ",", "ProdChannel"}], 
                  "]"}], "}"}]}], "]"}], "//", "Sort"}], "//", 
             "DeleteDuplicates"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Log10", "[", "tabt", "]"}], "//", "N"}]}]}], 
       "\[IndentingNewLine]", "]"}]}]}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
    "___", "___", "___", "___", "___", "___", "___", "_"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Block", " ", "that", " ", "computes", " ", "the", " ", "grid", " ", 
     SubscriptBox["\[Theta]", "S"]}], ",", 
    SubscriptBox["E", "S"], ",", 
    SubscriptBox["z", "S"], ",", " ", 
    RowBox[{
     SubscriptBox["\[Epsilon]", "Full"], "\[Times]", 
     SubscriptBox["f", 
      RowBox[{
       SubscriptBox["\[Theta]", "S"], ",", 
       SubscriptBox["E", "S"]}]]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
    "___", "___", "___", "___", "___", "___", "___", "_"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
     "The", " ", "block", " ", "which", " ", "sets", " ", "all", " ", "the", 
      " ", "values", " ", "of", " ", 
      SubscriptBox["\[Epsilon]", "Full"], "\[Times]", 
      SubscriptBox["f", 
       RowBox[{"\[Theta]", ",", "E"}]], " ", "for", " ", "which", " ", "E"}], 
     " ", "<", " ", 
     RowBox[{
      SubscriptBox["E", "max"], " ", "to", " ", "zero"}]}], ",", " ", 
    RowBox[{"for", " ", "Bremsstrahlung"}]}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"emaxbrem", "[", 
    RowBox[{"mLLP_", ",", "\[Theta]LLP_"}], "]"}], "=", 
   RowBox[{"ELLPmax", "[", 
    RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "\"\<Bremsstrahlung\>\""}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BremCutComp", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Hold", "@", 
      RowBox[{"Compile", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"angleenergy", ",", "_Real", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"mfip", ",", "_Real"}], "}"}]}], "}"}], ",", 
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"angles", ",", "energies", ",", "distrvals", ",", "d"}], 
           "}"}], ",", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"angles", "=", 
            RowBox[{"Compile`GetElement", "[", 
             RowBox[{"angleenergy", ",", "1"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"energies", "=", 
            RowBox[{"Compile`GetElement", "[", 
             RowBox[{"angleenergy", ",", "2"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"distrvals", "=", 
            RowBox[{"Compile`GetElement", "[", 
             RowBox[{"angleenergy", ",", "3"}], "]"}]}], ";", 
           "\[IndentingNewLine]", 
           RowBox[{"d", "=", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"energies", "<", 
               RowBox[{"emaxbrem", "[", 
                RowBox[{"mfip", ",", "angles"}], "]"}]}], ",", "distrvals", 
              ",", 
              SuperscriptBox["10", 
               RowBox[{"-", "90."}]]}], "]"}]}], ";", "\[IndentingNewLine]", 
           "d"}]}], "\[IndentingNewLine]", "]"}], ",", 
        RowBox[{"CompilationTarget", "->", "\"\<C\>\""}], ",", 
        RowBox[{"RuntimeOptions", "->", "\"\<Speed\>\""}], ",", 
        RowBox[{"RuntimeAttributes", "->", 
         RowBox[{"{", "Listable", "}"}]}]}], "]"}]}], "/.", 
     RowBox[{"DownValues", "@", "emaxbrem"}]}], "//", "ReleaseHold"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"BremCut", "[", 
   RowBox[{
   "OutGrid\[Theta]final_", ",", "OutGridEfinal_", ",", "distr_", ",", 
    "mLLP_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"angleenergy", "=", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"10", "^", 
         RowBox[{"Tuples", "[", 
          RowBox[{"{", 
           RowBox[{"OutGrid\[Theta]final", ",", "OutGridEfinal"}], "}"}], 
          "]"}]}], ",", 
        RowBox[{"Partition", "[", 
         RowBox[{"distr", ",", "1"}], "]"}], ",", "2"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"BremCutComp", "[", 
      RowBox[{"angleenergy", ",", "mLLP"}], "]"}]}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TableIntegrandDiscret", "[", 
   RowBox[{"m_", ",", "ProdChannel_", ",", "\[Epsilon]DecOp_"}], "]"}], ":=", 
  RowBox[{"TableIntegrandDiscretTemp", "[", 
   RowBox[{
   "m", ",", "ProdChannel", ",", "\[Epsilon]DecOp", ",", "\[Epsilon]vals", 
    ",", "\[Epsilon]azvals", ",", 
    RowBox[{"OutGrid\[Theta]final", "[", "ProdChannel", "]"}], ",", 
    "OutGridzfinal", ",", "OutGridEnergy", ",", "InGridm\[Epsilon]", ",", 
    "InGrid\[Theta]\[Epsilon]", ",", "InGridE\[Epsilon]", ",", 
    "InGridz\[Epsilon]", ",", 
    RowBox[{"\[CapitalDelta]\[Theta]vals", "[", "ProdChannel", "]"}], ",", 
    "\[CapitalDelta]zvals", ",", "zminExp", ",", "GridInFinal", ",", 
    "DistrVals", ",", "FacilityGivenExperiment"}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.914065400601883*^9, {3.9144955915086913`*^9, 3.914495605102999*^9}, {
   3.9144963994464297`*^9, 3.91449645003281*^9}, 3.9156429961809263`*^9, 
   3.9162514062581673`*^9, {3.916332203281742*^9, 3.9163322040420866`*^9}, {
   3.916332256159724*^9, 3.916332315776701*^9}, {3.916332682855117*^9, 
   3.9163326972784367`*^9}, {3.916332729581109*^9, 3.9163327827424307`*^9}, {
   3.916332995032469*^9, 3.9163330418518543`*^9}, {3.9163330893535175`*^9, 
   3.9163331201157775`*^9}, {3.9163883031455355`*^9, 
   3.9163883099402237`*^9}, {3.91639027241718*^9, 3.9163902725145645`*^9}, {
   3.916390440036625*^9, 3.9163904429286966`*^9}, {3.9163913725242844`*^9, 
   3.9163913900649643`*^9}, {3.9165060112532883`*^9, 
   3.9165060531405983`*^9}, {3.916506386454261*^9, 3.9165063916867723`*^9}, {
   3.9165064378147545`*^9, 3.9165064402046285`*^9}, {3.9165066063487997`*^9, 
   3.9165066068133373`*^9}, {3.916506770781*^9, 3.916506770986845*^9}, {
   3.916506818360832*^9, 3.9165068344941483`*^9}, {3.91650702210918*^9, 
   3.916507055596775*^9}, 3.9165070945532026`*^9, {3.9165072348013864`*^9, 
   3.916507258828418*^9}, {3.9165082243803825`*^9, 3.9165082246202836`*^9}, {
   3.9165089341902933`*^9, 3.9165089344447165`*^9}, {3.916671056709384*^9, 
   3.9166710572925243`*^9}, {3.916671102174552*^9, 3.9166711025636616`*^9}, 
   3.9166780407550383`*^9, 3.916680838094392*^9, {3.9168544917944636`*^9, 
   3.9168545473601933`*^9}, 3.9181398756136556`*^9, {3.918144219656443*^9, 
   3.9181442212459908`*^9}},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "In[739]:=",ExpressionUUID->"6acd5b9d-3d21-4c1b-bfa2-65d6c8a2ce8a"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Generalized acceptances", "Subsection",
 CellChangeTimes->{{3.9165071505021195`*^9, 3.9165071536920986`*^9}},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"e409be1f-14c9-\
48b7-a089-70f654ff54f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{"Tabulated", " ", "acceptance"}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"FactorANUBISceiling", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"SelectedExperiment", "==", "\"\<ANUBIS-ceiling\>\""}], ",", 
       "2", ",", "1"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"AcceptanceDiscret", "[", 
     RowBox[{
     "m_", ",", "ProdChannel_", ",", "\[Epsilon]decOp_", ",", "decProb_"}], 
     "]"}], ":=", 
    RowBox[{"AcceptanceDiscretTemp", "[", 
     RowBox[{
     "m", ",", "ProdChannel", ",", "\[Epsilon]decOp", ",", "decProb", ",", 
      "mLLPmin", ",", "mmin\[Epsilon]", ",", "mLLPmax", ",", "mmax\[Epsilon]",
       ",", "ELLPmax", ",", "\[Theta]minExp", ",", "TableIntegrandDiscret", 
      ",", "BrVis", ",", "zmaxExp", ",", "zminExp", ",", 
      "FactorANUBISceiling", ",", "0."}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"mlistAcceptance", "[", "prod", "]"}], "=", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{"m", ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"1.01", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"mLLPmin", "[", "prod", "]"}], ",", 
                "mmin\[Epsilon]"}], "]"}]}], ",", 
             RowBox[{"0.95", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"mLLPmax", "[", "prod", "]"}], ",", 
                "mmax\[Epsilon]"}], "]"}]}], ",", 
             RowBox[{"Min", "[", 
              RowBox[{
               FractionBox[
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"0.95", 
                   RowBox[{"Min", "[", 
                    RowBox[{
                    RowBox[{"mLLPmax", "[", "prod", "]"}], ",", 
                    "mmax\[Epsilon]"}], "]"}]}], "-", 
                  RowBox[{"1.01", 
                   RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"mLLPmin", "[", "prod", "]"}], ",", 
                    "mmin\[Epsilon]"}], "]"}]}]}], ")"}], "20"], ",", "2"}], 
              "]"}]}], "}"}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.99", 
           RowBox[{"Min", "[", 
            RowBox[{
             RowBox[{"mLLPmax", "[", "prod", "]"}], ",", "mmax\[Epsilon]"}], 
            "]"}]}], "}"}]}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"Do", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "=", 
         RowBox[{"ParallelTable", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"AcceptanceDiscret", "[", 
              RowBox[{"m", ",", "prod", ",", "\"\<False\>\"", ",", "0"}], 
              "]"}], ",", 
             RowBox[{"AcceptanceDiscret", "[", 
              RowBox[{"m", ",", "prod", ",", "\"\<True\>\"", ",", "0"}], 
              "]"}], ",", 
             RowBox[{"AcceptanceDiscret", "[", 
              RowBox[{"m", ",", "prod", ",", "\"\<False\>\"", ",", "1"}], 
              "]"}], ",", 
             RowBox[{"AcceptanceDiscret", "[", 
              RowBox[{"m", ",", "prod", ",", "\"\<True\>\"", ",", "1"}], 
              "]"}]}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"m", ",", 
             RowBox[{"mlistAcceptance", "[", "prod", "]"}]}], "}"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "=", 
         RowBox[{"Join", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Max", "[", 
                RowBox[{
                 RowBox[{"mLLPmin", "[", "prod", "]"}], ",", 
                 "mmin\[Epsilon]"}], "]"}], "}"}], ",", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                 RowBox[{"[", "1", "]"}], "]"}], ",", "1"}], "]"}]}], "]"}], 
            "}"}], ",", 
           RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"Join", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{"Min", "[", 
                RowBox[{
                 RowBox[{"mLLPmax", "[", "prod", "]"}], ",", 
                 "mmax\[Epsilon]"}], "]"}], "}"}], ",", 
              RowBox[{"Drop", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                 RowBox[{"[", 
                  RowBox[{"-", "1"}], "]"}], "]"}], ",", "1"}], "]"}]}], 
             "]"}], "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
       RowBox[{"{", 
        RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ";"}], "//", 
    "AbsoluteTiming"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"PlotAcc", "[", "ProdChannel_", "]"}], ":=", 
    RowBox[{"ListLogPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{
          RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
         RowBox[{
          RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}]}], "}"}], "]"}], 
      ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", " ", "22"}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Blue"}], "}"}], 
         ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
           RowBox[{"Darker", "@", "Red"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"Darker", "@", "Green"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Thickness", "[", "0.003", "]"}], ",", "Black"}], "}"}]}], 
        "}"}]}], ",", 
      RowBox[{"GridLines", "\[Rule]", "Automatic"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"MinMax", "[", 
          RowBox[{
           RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"0.9", 
              RowBox[{"Min", "[", 
               RowBox[{
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}], ",", 
                RowBox[{"Min", "[", 
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], 
                  "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", "3"}], "]"}], "]"}], "]"}]}], "]"}]}], 
             ",", 
             SuperscriptBox["10", 
              RowBox[{"-", "5"}]]}], "]"}], ",", 
           RowBox[{"1.1", 
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"Max", "[", 
               RowBox[{
                RowBox[{"\[Epsilon]GeomTabs", "[", "ProdChannel", "]"}], "[", 
                RowBox[{"[", 
                 RowBox[{"All", ",", "4"}], "]"}], "]"}], "]"}]}], "]"}]}]}], 
          "}"}]}], "}"}]}], ",", 
      RowBox[{"Joined", "\[Rule]", "True"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(m\), \(LLP\)]\) [GeV]\>\"", ",", 
         "\"\<Acceptance\>\""}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", " ", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{"\"\<From \>\"", ",", "ProdChannel"}], "}"}], "]"}], ",", 
         " ", "20", ",", " ", "Black"}], "]"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{"#", ",", " ", "18"}], "]"}], "&"}], "/@", 
           RowBox[{"{", 
            RowBox[{
            "\"\<<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>\>\"", ",", 
             "\"\<<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>\>\"", ",", 
             "\"\<c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>\>\"", ",", 
             "\"\<c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>\>\""}], "}"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"0.75", ",", "0.2"}], "}"}]}], "]"}]}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"Style", "[", 
    RowBox[{
     RowBox[{"Row", "[", 
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"PlotAcc", "[", "prod", "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], "]"}], 
      "]"}], ",", 
     RowBox[{"ImageSizeMultipliers", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"FilenameAcceptance", "[", "prod", "]"}], "=", 
        RowBox[{"ToString", "@", 
         RowBox[{"StringForm", "[", 
          RowBox[{"\"\<Acceptance_ALP-fermion_at_``_From_``.dat\>\"", ",", 
           RowBox[{"Sequence", "@@", 
            RowBox[{"{", 
             RowBox[{"SelectedExperiment", ",", 
              RowBox[{"ExportList", "[", "prod", "]"}]}], "}"}]}]}], 
          "]"}]}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Export", "[", 
        RowBox[{
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"NotebookDirectory", "[", "]"}], ",", 
            "\"\<Auxiliary data/ALPs with fermion coupling\>\"", ",", 
            "SelectedExperiment", ",", 
            RowBox[{"FilenameAcceptance", "[", "prod", "]"}]}], "}"}], "]"}], 
         ",", 
         RowBox[{
          RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", 
             RowBox[{"1", ",", "2", ",", "4", ",", "5"}], "}"}]}], "]"}], 
          "]"}], ",", "\"\<Table\>\""}], "]"}]}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"AccAveraged", "[", 
      RowBox[{"mLLP_", ",", "c\[Tau]_"}], "]"}], "=", 
     RowBox[{"NpotGivenExperiment", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"mLLPmin", "[", "prod", "]"}], "<", "mLLP", "<", 
             RowBox[{"mLLPmax", "[", "prod", "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"ProbLLP", "[", 
              RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "]"}], ",", 
            "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ",", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"mLLPmin", "[", "prod", "]"}], ",", "mmin\[Epsilon]"}],
               "]"}], "<", "mLLP", "<", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"mLLPmax", "[", "prod", "]"}], ",", "mmax\[Epsilon]"}],
               "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              RowBox[{"ProbLLP", "[", 
               RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Interpolation", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[",
                "mLLP", "]"}]}], "]"}], ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ",", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"mLLPmin", "[", "prod", "]"}], ",", "mmin\[Epsilon]"}],
               "]"}], "<", "mLLP", "<", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"mLLPmax", "[", "prod", "]"}], ",", "mmax\[Epsilon]"}],
               "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"ProbLLP", "[", 
                RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "c\[Tau]"], 
              "*", 
              RowBox[{
               RowBox[{"Interpolation", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "4"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[",
                "mLLP", "]"}]}], "]"}], ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ",", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"Max", "[", 
              RowBox[{
               RowBox[{"mLLPmin", "[", "prod", "]"}], ",", "mmin\[Epsilon]"}],
               "]"}], "<", "mLLP", "<", 
             RowBox[{"Min", "[", 
              RowBox[{
               RowBox[{"mLLPmax", "[", "prod", "]"}], ",", "mmax\[Epsilon]"}],
               "]"}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{
              FractionBox[
               RowBox[{"ProbLLP", "[", 
                RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "c\[Tau]"], 
              "*", 
              RowBox[{
               RowBox[{"Interpolation", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[",
                "mLLP", "]"}]}], "]"}], ",", "0"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}]}], 
       "}"}]}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Export", "[", 
     RowBox[{
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"directory", "[", "\"\<Auxiliary-experiment\>\"", "]"}], ",", 
         RowBox[{
         "\"\<AcceptanceAveraged-\>\"", "<>", "LLPdirName", "<>", 
          "\"\<.m\>\""}]}], "}"}], "]"}], ",", 
      RowBox[{"AccAveraged", "[", 
       RowBox[{"mLLP", ",", "c\[Tau]"}], "]"}], ",", "\"\<MX\>\""}], "]"}], 
    ";"}]}]}]], "Input",
 CellChangeTimes->{{3.9165072608467913`*^9, 3.91650727179105*^9}, {
  3.916511834115503*^9, 3.9165119704481926`*^9}, {3.9166711144696927`*^9, 
  3.9166711149830294`*^9}, {3.928577551907442*^9, 3.9285775525898123`*^9}},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"0da87de1-0190-\
4840-a5aa-6c481e91b34e"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"10.6235648`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9285768725789967`*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[749]=",ExpressionUUID->"4ae583ea-cb5f-4272-9fbc-78bd8e140f81"],

Cell[BoxData[
 FormBox[
  StyleBox[
   TemplateBox[{
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7t2v/Jk37t3o/k28Lr/96BH9Kydkn
s3Mv2Fs7X3rzc+vC/eFLDt1wmnDfXrkxUFCnbOF+3lfRz0oin9sX8Xj/Lk2e
vf99Y1jCiVfv7A/yLFvW1jd3/4sejbe8dp/tpQVLksuq5+y/eUN11Xa27/bb
T03Kr9ecs/+UinJ64vlf9n/7GTTCGObu312goMI945+9ZOKujsIDc/aH3esr
iDJgdLj/zHFR0rE5+/1AzhNhdhDRKVGfyTd3v7tWjy7LTxaH8hstEWmP5+y3
v8DFE3mXzSFvlsA/v4Nz9luUdb5ae5DDQSxyo4DX9jn7DWQ4TjIt43LwDz++
pLh/zn7NQ23Lw7t4HGpcQtrC187Zr5jB2rYmj8/Bf8uC35evz9nPy+60qUFT
wIFnu9Sme9/m7OeMalRcLS3ocOvqkVlZznP3s649MOEqr5DDPwOe5xL9c/cz
MoCAsEOPpMAEiStz9587AwLCDvH96Zb2uvOg8iJwPgAWObS3
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7x9uCDI/82ryfybeF1389gj+l5OyT
2bkX7FuzuLacubpqf/iSQzecJty3t9GplwrPWbOf91X0s5LI5/btvNqvDi5a
uf99Y1jCiVfv7E0rM+el+m/f/6JH4y2v3Wf77HPq2Wnie/bfvKG6ajvbd/tr
r+slEhr37T+lopyeeP6XfVbBhC4JqwP7dxcoqHDP+Gcv4z+ptazhyP6we30F
UQaMDiwtwqfLA0/u9wM5T4TZITx96r5StdP73bV6dFl+sjjYaLBmL9E9vd/+
AhdP5F02h1CFzp/Zn07vtyjrfLX2IIcD74yCxc9Lzu43kOE4ybSMy6FUI2P5
3Y/n9msealse3sXjUOGr+mdr4IX9ihmsbWvy+BymJYl5Lrp6YT8vu9OmBk0B
h+9Fp6vrai/s54xqVFwtLehwOvGF3qXQC/tZ1x6YcJVXyOENn7HI+dCL+xkZ
QEDYIWQWj7Wl66X9586AgLAD7/qpsWXsl6HyInA+ANJhs7o=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7d/GsX6a0CB5g8m3h9V+P4E8pOftk
du4Fe12TviQd63/7w5ccuuE04b79NOn7zc/yv+znfRX9rCTyuT3rH9+Uhave
7n/fGJZw4tU7+1fqmzwTeZ/tf9Gj8ZbX7rP9/jr/a6myD/bfvKG6ajvbd/uz
yX4/N829tv+UinJ64vlf9q473z6+wnF2/+4CBRXuGf/sO04Vz9pxbO/+sHt9
BVEGjA5/2U4VdP2ZtN8P5DwRZgfHnP+cCUc22rtr9eiy/GRxkODle+uoetje
/gIXT+RdNgchfsV1jNPP2FuUdb5ae5DDIWm3YH31qkv2BjIcJ5mWcTl0zXdc
/nf3NXvNQ23Lw7t4HE6k3GR413nLXjGDtW1NHp/DdOYq6WzZe/a87E6bGjQF
HIRfvFNt2ffAnjOqUXG1tKBDH1Pip6nhj+xZ1x6YcJVXyGHyq7MTte48tmdk
AAFhh1155e5afk/tz50BAWEHna6/jZZVz6DyInA+ALEZspY=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7tlUTPmxfJHiAybeF1389gj+l5OyT
2bkX7Iv2pVd0LPi3P3zJoRtOE+7bJz1MiUr4/GU/76voZyWRz+1/XciLlGZ4
v/99Y1jCiVfv7CdN+b9qe9nL/S96NN7y2n22XxOdwcy44sn+mzdUV21n+26/
0eJn5JW0B/tPqSinJ57/Zb8z+37y7Kqb+3cXKKhwz/hnf2Pf3Vhl9mv7w+71
FUQZMDockp/yWvv15f1+IOeJMDuULDYxVxS4sN9dq0eX5SeLwwOnKUk2k4/t
t7/AxRN5l83hklDmxarNe/dblHW+WnuQw4Gr3kuee/fG/QYyHCeZlnE5/FPT
Zu//P3u/5qG25eFdPA5TIk9Juk1psFfMYG1bk8fnUODF9mMV50p7XnanTQ2a
Ag5WT8pOmxvvseeMalRcLS3o0GZSeLlD/Kg969oDE67yCjkYvjeZfDbnhD0j
AwgIO6iqzE5lWXza/twZEBB2UJcWkYt3PgeVF4HzAe37ruE=
              "]]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {0.02000000000000005, -4.484834977049311}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"Bremsstrahlung\""}, "RowDefault"], 
            20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0.020000000000000004`, 
          5.000000000000001}, {-4.484834977049321, 0.7977301797733111}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7t2v/Jk37t3o/k28Lr/96BH9Kydkn
s3Mv2Fs7X3rzc+vC/eFLDt1wmnDfXrkxUFCnbOF+3lfRz0oin9sX8Xj/Lk2e
vf99Y1jCiVfv7A/yLFvW1jd3/4sejbe8dp/tpQVLksuq5+y/eUN11Xa27/bb
T03Kr9ecs/+UinJ64vlf9n/7GTTCGObu312goMI945+9ZOKujsIDc/aH3esr
iDJgdLj/zHFR0rE5+/1AzhNhdhDRKVGfyTd3v7tWjy7LTxaH8hstEWmP5+y3
v8DFE3mXzSFvlsA/v4Nz9luUdb5ae5DDQSxyo4DX9jn7DWQ4TjIt43LwDz++
pLh/zn7NQ23Lw7t4HGpcQtrC187Zr5jB2rYmj8/Bf8uC35evz9nPy+60qUFT
wIFnu9Sme9/m7OeMalRcLS3ocOvqkVlZznP3s649MOEqr5DDPwOe5xL9c/cz
MoCAsEOPpMAEiStz9587AwLCDvH96Zb2uvOg8iJwPgAWObS3
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7x9uCDI/82ryfybeF1389gj+l5OyT
2bkX7FuzuLacubpqf/iSQzecJty3t9GplwrPWbOf91X0s5LI5/btvNqvDi5a
uf99Y1jCiVfv7E0rM+el+m/f/6JH4y2v3Wf77HPq2Wnie/bfvKG6ajvbd/tr
r+slEhr37T+lopyeeP6XfVbBhC4JqwP7dxcoqHDP+Gcv4z+ptazhyP6we30F
UQaMDiwtwqfLA0/u9wM5T4TZITx96r5StdP73bV6dFl+sjjYaLBmL9E9vd/+
AhdP5F02h1CFzp/Zn07vtyjrfLX2IIcD74yCxc9Lzu43kOE4ybSMy6FUI2P5
3Y/n9msealse3sXjUOGr+mdr4IX9ihmsbWvy+BymJYl5Lrp6YT8vu9OmBk0B
h+9Fp6vrai/s54xqVFwtLehwOvGF3qXQC/tZ1x6YcJVXyOENn7HI+dCL+xkZ
QEDYIWQWj7Wl66X9586AgLAD7/qpsWXsl6HyInA+ANJhs7o=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7d/GsX6a0CB5g8m3h9V+P4E8pOftk
du4Fe12TviQd63/7w5ccuuE04b79NOn7zc/yv+znfRX9rCTyuT3rH9+Uhave
7n/fGJZw4tU7+1fqmzwTeZ/tf9Gj8ZbX7rP9/jr/a6myD/bfvKG6ajvbd/uz
yX4/N829tv+UinJ64vlf9q473z6+wnF2/+4CBRXuGf/sO04Vz9pxbO/+sHt9
BVEGjA5/2U4VdP2ZtN8P5DwRZgfHnP+cCUc22rtr9eiy/GRxkODle+uoetje
/gIXT+RdNgchfsV1jNPP2FuUdb5ae5DDIWm3YH31qkv2BjIcJ5mWcTl0zXdc
/nf3NXvNQ23Lw7t4HE6k3GR413nLXjGDtW1NHp/DdOYq6WzZe/a87E6bGjQF
HIRfvFNt2ffAnjOqUXG1tKBDH1Pip6nhj+xZ1x6YcJVXyGHyq7MTte48tmdk
AAFhh1155e5afk/tz50BAWEHna6/jZZVz6DyInA+ALEZspY=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7tlUTPmxfJHiAybeF1389gj+l5OyT
2bkX7Iv2pVd0LPi3P3zJoRtOE+7bJz1MiUr4/GU/76voZyWRz+1/XciLlGZ4
v/99Y1jCiVfv7CdN+b9qe9nL/S96NN7y2n22XxOdwcy44sn+mzdUV21n+26/
0eJn5JW0B/tPqSinJ57/Zb8z+37y7Kqb+3cXKKhwz/hnf2Pf3Vhl9mv7w+71
FUQZMDockp/yWvv15f1+IOeJMDuULDYxVxS4sN9dq0eX5SeLwwOnKUk2k4/t
t7/AxRN5l83hklDmxarNe/dblHW+WnuQw4Gr3kuee/fG/QYyHCeZlnE5/FPT
Zu//P3u/5qG25eFdPA5TIk9Juk1psFfMYG1bk8fnUODF9mMV50p7XnanTQ2a
Ag5WT8pOmxvvseeMalRcLS3o0GZSeLlD/Kg969oDE67yCjkYvjeZfDbnhD0j
AwgIO6iqzE5lWXza/twZEBB2UJcWkYt3PgeVF4HzAe37ruE=
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.02000000000000005, -4.484834977049311}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "Bremsstrahlung"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{0.020000000000000004`, 
           5.000000000000001}, {-4.484834977049321, 0.7977301797733111}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True], 
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7J/F5X1v0H2z347r+uICWwS/Q+zmue+Xf9lv
YvD47qn2Zv8lpds/67L+2n8ymrlaCsjvm54n1MzA4PAhlGkPr+Kb/Zvnvl9+
zJvRYd8ro/4l01/vvwE0jWs6k8PG2z1RGz682v935cdLvo+YHRJXPu5ms361
X2lDUcZEXVaHo8899Fase7nffdvnv1cq2By2tjZyr/79Yn/OnpLJEkfYHWqz
N7dru77YP/HQV40Yfk4Hr4+zd7/e/nz/thNl++ZHcTnof/0lzf/j2f7b574H
P17K7RCz743dCcNn+xmuVrxU+8jjIMGzSTH72NP9qiDn2/A5CLRM3aIk/nS/
18MqkXXt/A7zWzXTjWOf7N8Bsj5TwKHh3wdb9UuP958CGi/FL+hQtWRJk5Xy
4/13gNr3bBF0eMD1pOBGzKP972vsTeOihBxMtr0Iqn7xcD8kTIUdGELFmqfG
PNx/7gwICDusvj25Xq3hwX5GsLwInA8A0qrFCw==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7LccnrAs1ubTfjuu64sLbBH8DrGb575f/mWv
Pkfwzm/PT/svKd3+WZf11/7I/Pyl5/d82t83PU+omYHBQSTUfMWazM/7N899
v/yYN6PD4bKe+y92fd5/A2ga13QmB/mIlUIRBz/v/7vy4yXfR8wO/+MSnPdU
ft6vtKEoY6Iuq8Nn1sq6GuXP+923ff57pYLNwba7br3ftU/7c/aUTJY4wu4g
Lsf9/friT/snHvqqEcPP6cC1NPX8p5RP+7edKNs3P4rLwabvyQwjhU/7b5/7
Hvx4KbdDCb/a2nOPP+5nuFrxUu0jj8OSipJ/X1d+3K8Kcr4Nn4PQ/mncPFEf
93s9rBJZ187v8OjF30vWZz7s3wGyPlPAoflcdzunzYf9p4DGS/ELOsyJ1lt6
MPL9/jtA7Xu2CDo0W3p/yT30bv/7GnvTuCghh4CPXxi4Pd7th4SpsIPbRoY5
7Ife7j93BgSEHe41bi5rYXy7nxEsLwLnAwBeMMaY
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7Nduc+3yM3+9347r+uICWwS/Q+zmue+Xf9k/
V2zjzfnyfP8lpds/67L+2kuFfYvs//dkf9/0PKFmBgaHXcmvBL6GPtq/ee77
5ce8GR2Sc7g7WUse7L8BNI1rOpPDSp6zn799ur3/78qPl3wfMTv0Rx/5If3h
2n6lDUUZE3VZHXon7XBdnnplv/u2z3+vVLA58HXOWKPSdmF/zp6SyRJH2B3+
PMl6vVnu5P6Jh75qxPBzOuTWzNd/qX90/7YTZfvmR3E58K086Fm8Zs/+2+e+
Bz9eyu0QLWcZbfppzX6GqxUv1T7yOJj3lkhbmizdrwpyvg2fg+rfU55PFmXa
ez2sElnXzu8QMuvo8TkRK+13gKzPFHAIv5/x8+m+TfangMZL8Qs6qEqVvPq3
bLf9HaD2PVsEHf63La3JZTps/77G3jQuSsghcG+SAuPHI/aQMBV2cDXNqVj4
4bj9uTMgIOygOfe3v7DiWXtGsLwInA8A+xy9GQ==
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGAQB2IQfXnu/PmTf/+0N/2zc8qzgq/7O8Runvt++Zf9PYuH
aQc/ftl/Sen2z7qsv/ZRYpmdMzW/7O+bnifUzMDgkN4yo1H34ef9m+e+X37M
m9Fh4/Tkyw8CPu+/sbjAlms6k0Op1bH8E6mf9v9d+fGS7yNmh1TpwFA7hY/7
lTYUZUzUZXVIFVfS8Xr2fr/7ts9/r1SwOUTs/fDPc+Pb/Tl7SiZLHGF3qIpw
7nM68Xr/xENfNWL4OR30GXJn6XC82r/tRNm++VFcDh/W97LlO73Yf/vc9+DH
S7kd/u3Z2Xtn8bP9DFcrXqp95HHwEWjwW5H2dL8qyPk2fA4/X/BM0b/yeL/X
wyqRde38DoIbbsw8Mu3h/h0g6zMFHK6J/f5z3/r+/lNA46X4BR2ec5dftA+9
vf8OUPueLYIOsiYnEtbsvbH/fY29aVyUkIPG/nCJda+u7QeFIQODsMOlg29v
5f28sv/cGRAQduARucW4V+fSfkawvAicDwCcvcCU
              "]]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {1.5000000000000033`, -1.3400636491421754`}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"DrellYan\""}, "RowDefault"], 20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{1.5, 5.000000000000001}, {-1.3400636491421782`, 
          0.3228820621038762}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7J/F5X1v0H2z347r+uICWwS/Q+zmue+Xf9lv
YvD47qn2Zv8lpds/67L+2n8ymrlaCsjvm54n1MzA4PAhlGkPr+Kb/Zvnvl9+
zJvRYd8ro/4l01/vvwE0jWs6k8PG2z1RGz682v935cdLvo+YHRJXPu5ms361
X2lDUcZEXVaHo8899Fase7nffdvnv1cq2By2tjZyr/79Yn/OnpLJEkfYHWqz
N7dru77YP/HQV40Yfk4Hr4+zd7/e/nz/thNl++ZHcTnof/0lzf/j2f7b574H
P17K7RCz743dCcNn+xmuVrxU+8jjIMGzSTH72NP9qiDn2/A5CLRM3aIk/nS/
18MqkXXt/A7zWzXTjWOf7N8Bsj5TwKHh3wdb9UuP958CGi/FL+hQtWRJk5Xy
4/13gNr3bBF0eMD1pOBGzKP972vsTeOihBxMtr0Iqn7xcD8kTIUdGELFmqfG
PNx/7gwICDusvj25Xq3hwX5GsLwInA8A0qrFCw==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7LccnrAs1ubTfjuu64sLbBH8DrGb575f/mWv
Pkfwzm/PT/svKd3+WZf11/7I/Pyl5/d82t83PU+omYHBQSTUfMWazM/7N899
v/yYN6PD4bKe+y92fd5/A2ga13QmB/mIlUIRBz/v/7vy4yXfR8wO/+MSnPdU
ft6vtKEoY6Iuq8Nn1sq6GuXP+923ff57pYLNwba7br3ftU/7c/aUTJY4wu4g
Lsf9/friT/snHvqqEcPP6cC1NPX8p5RP+7edKNs3P4rLwabvyQwjhU/7b5/7
Hvx4KbdDCb/a2nOPP+5nuFrxUu0jj8OSipJ/X1d+3K8Kcr4Nn4PQ/mncPFEf
93s9rBJZ187v8OjF30vWZz7s3wGyPlPAoflcdzunzYf9p4DGS/ELOsyJ1lt6
MPL9/jtA7Xu2CDo0W3p/yT30bv/7GnvTuCghh4CPXxi4Pd7th4SpsIPbRoY5
7Ife7j93BgSEHe41bi5rYXy7nxEsLwLnAwBeMMaY
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQDQE/7Nduc+3yM3+9347r+uICWwS/Q+zmue+Xf9k/
V2zjzfnyfP8lpds/67L+2kuFfYvs//dkf9/0PKFmBgaHXcmvBL6GPtq/ee77
5ce8GR2Sc7g7WUse7L8BNI1rOpPDSp6zn799ur3/78qPl3wfMTv0Rx/5If3h
2n6lDUUZE3VZHXon7XBdnnplv/u2z3+vVLA58HXOWKPSdmF/zp6SyRJH2B3+
PMl6vVnu5P6Jh75qxPBzOuTWzNd/qX90/7YTZfvmR3E58K086Fm8Zs/+2+e+
Bz9eyu0QLWcZbfppzX6GqxUv1T7yOJj3lkhbmizdrwpyvg2fg+rfU55PFmXa
ez2sElnXzu8QMuvo8TkRK+13gKzPFHAIv5/x8+m+TfangMZL8Qs6qEqVvPq3
bLf9HaD2PVsEHf63La3JZTps/77G3jQuSsghcG+SAuPHI/aQMBV2cDXNqVj4
4bj9uTMgIOygOfe3v7DiWXtGsLwInA8A+xy9GQ==
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGAQB2IQfXnu/PmTf/+0N/2zc8qzgq/7O8Runvt++Zf9PYuH
aQc/ftl/Sen2z7qsv/ZRYpmdMzW/7O+bnifUzMDgkN4yo1H34ef9m+e+X37M
m9Fh4/Tkyw8CPu+/sbjAlms6k0Op1bH8E6mf9v9d+fGS7yNmh1TpwFA7hY/7
lTYUZUzUZXVIFVfS8Xr2fr/7ts9/r1SwOUTs/fDPc+Pb/Tl7SiZLHGF3qIpw
7nM68Xr/xENfNWL4OR30GXJn6XC82r/tRNm++VFcDh/W97LlO73Yf/vc9+DH
S7kd/u3Z2Xtn8bP9DFcrXqp95HHwEWjwW5H2dL8qyPk2fA4/X/BM0b/yeL/X
wyqRde38DoIbbsw8Mu3h/h0g6zMFHK6J/f5z3/r+/lNA46X4BR2ec5dftA+9
vf8OUPueLYIOsiYnEtbsvbH/fY29aVyUkIPG/nCJda+u7QeFIQODsMOlg29v
5f28sv/cGRAQduARucW4V+fSfkawvAicDwCcvcCU
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {1.5000000000000033`, -1.3400636491421754`}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "DrellYan"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{1.5, 5.000000000000001}, {-1.3400636491421782`, 
           0.3228820621038762}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True], 
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7Rr3rJ9zLPu9n8m3h9V+P4LfzzPI5
/W+Z/SnhO5f2OHze7/bTovP7pY32s+56nT1x/dN+rzcqOZ1qO+yf8z88vqvi
036f+wL+0lX77H+GrGlgefpxv0bmvxnX0g7Ztzh42vmGfdy/Mqmka/6Eo/b7
4018J976sF8r5lV1xq4T9le17yz6kPNh/5rQhFzDJ6ftmyxD1NYzfNiv538t
7hfveXtu/uzHgUbv90eoqK14KH3RPnp/aPHOonf7JRQfKhzbcMleenmJV8KB
t/tvys6Zucr1iv0B3ug/tRlv98+SChfqv3XVXkI0P9dB/e3+KHGh7uL86/Z1
ie8OCV97s19a5CxzBMtNe75Jxqc6K97svyPQUWMz85Z97ZUNE58Jvtk/l9f5
q4LeHXvOY+cMhRa/3h/H9S+X9fBd+9sqB5ee6H+9X45957OX4fftBV62vhWf
+Xr/B8Zd+ullD+xbFm3maap7vb/7yxvmW+oP7f+/NE+r9Hm932jjzx1mIQg+
AH2oy2s=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR756+La5Z//LafybeF1389gt/OM8vn
9L9l9vbJTKslBL7vd/tp0fn90kZ7TS72mVs1vu/3eqOS06m2w35/kLLmcavv
+33uC/hLV+2z3/fpPX+o2vf9Gpn/ZlxLO2R/epPQnN3vvu1fmVTSNX/CUfua
SVNqcjd/268V86o6Y9cJ+0gRxgz/im/714Qm5Bo+OW0v6WCUoivzdb+e/7W4
X7zn7T+1NMXff/Nlf4SK2oqH0hftn+5kkuU58WW/hOJDhWMbLtm/s2yPcJ7y
Zf9N2TkzV7lesV/a/thwQtaX/bOkwoX6b121Z3L4czTF+sv+KHGh7uL86/bH
1x/5peP8Zb+0yFnmCJab9qUSDsf4vb7svyPQUWMz85Z9s0hP9jyrL/vn8jp/
VdC7Y9/rxrtcWfrL/jiuf7msh+/aR6kYWS4Q+7Jfjn3ns5fh9+0Fb7F0TRP+
sv8D4y799LIH9kmJDttOCX7Z3/3lDfMt9Yf2nvsyus3Yvuw32vhzh1kIgg8A
DtTDLg==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7zXcnM2o28x1g8m3h9V+P4LfzzPI5
/W+Z/a3F21qPfWU/4PbTovP7pY32Mxf2yF96y3zA641KTqfaDvtH2c/Fz7Iy
HvC5L+AvXbXP/vDCFdJeoX/3a2T+m3Et7ZD91RWJO8zn/9y/Mqmka/6Eo/YG
7qE7ucq+7deKeVWdseuEfaiS4/13Wz7vXxOakGv45LS94MYdf2Yd/bhfz/9a
3C/e8/addtoZlgIf9keoqK14KH3R3kR72984xrf7JRQfKhzbcMlet9DKZovc
q/03ZefMXOV6xX5Dh0lCTe6L/bOkwoX6b121XxnDkpJj8nx/lLhQd3H+dXtP
7i4tjj9P90uLnGWOYLlpz3TobFzBsSf77wh01NjMvGWveuhWyo2pj/fP5XX+
qqB3x/7NvyynB2mP9sdx/ctlPXzXPpDjv9/hpw/3y7HvfPYy/L79YumTLz5P
fbj/A+Mu/fSyB/Zh0SyqBmEP93d/ecN8S/2hvQL/Ut03HA/3G238ucMsBMEH
AGYbxLM=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAOJ9s8+2eoD80QNKpQ4sPwIcMmkzL
/qY/m18rfERtDMBG+TiJ99KxP9mGb6F/CAnASuwkbIkmuD+oyyW0xcMGwEzf
EE8ber4/hHoUSVcrBcAoaf6Y1mbCP9wTq/EktAPAqWJ0ip+QxT9NzLjx+mkC
wCpc6ntousg/72wmwkxEAcCsVWBtMeTLP4OUEizwSv6/Lk/WXvoNzz+AdM1U
CDf9v1gkJqjhG9E/FYEMqns//L8YIeEgxrDSP7s3rhzyLvu/2R2cmapF1D9Y
v7Fz5Wb6v5oaVxKP2tU/EWr+Wui1+b9aFxKLc2/XPytyre2Li/m/GxTNA1gE
2T9Mp6dj+Vz5v9wQiHw8mdo/FWK8eCUL+b+dDUP1IC7cPza0u2O9n/i/Xgr+
bQXD3T8SnIYMUWn4vx4HuebpV98/iWNqp1ZG+L/wAbovZ3bgPzvMMOAlRvi/
i/TsA9on4T/umtZqhj74vzKx+bg2VOE/7prWaoY++L+FRb0N
              "]]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {0.02000000000000005, -3.943000151375614}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"Eta\""}, "RowDefault"], 20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0.020000000000000004`, 
          0.5415300000000001}, {-3.9430001513756228`, -0.4370290012850056}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7Rr3rJ9zLPu9n8m3h9V+P4LfzzPI5
/W+Z/SnhO5f2OHze7/bTovP7pY32s+56nT1x/dN+rzcqOZ1qO+yf8z88vqvi
036f+wL+0lX77H+GrGlgefpxv0bmvxnX0g7Ztzh42vmGfdy/Mqmka/6Eo/b7
4018J976sF8r5lV1xq4T9le17yz6kPNh/5rQhFzDJ6ftmyxD1NYzfNiv538t
7hfveXtu/uzHgUbv90eoqK14KH3RPnp/aPHOonf7JRQfKhzbcMleenmJV8KB
t/tvys6Zucr1iv0B3ug/tRlv98+SChfqv3XVXkI0P9dB/e3+KHGh7uL86/Z1
ie8OCV97s19a5CxzBMtNe75Jxqc6K97svyPQUWMz85Z97ZUNE58Jvtk/l9f5
q4LeHXvOY+cMhRa/3h/H9S+X9fBd+9sqB5ee6H+9X45957OX4fftBV62vhWf
+Xr/B8Zd+ullD+xbFm3maap7vb/7yxvmW+oP7f+/NE+r9Hm932jjzx1mIQg+
AH2oy2s=
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR756+La5Z//LafybeF1389gt/OM8vn
9L9l9vbJTKslBL7vd/tp0fn90kZ7TS72mVs1vu/3eqOS06m2w35/kLLmcavv
+33uC/hLV+2z3/fpPX+o2vf9Gpn/ZlxLO2R/epPQnN3vvu1fmVTSNX/CUfua
SVNqcjd/268V86o6Y9cJ+0gRxgz/im/714Qm5Bo+OW0v6WCUoivzdb+e/7W4
X7zn7T+1NMXff/Nlf4SK2oqH0hftn+5kkuU58WW/hOJDhWMbLtm/s2yPcJ7y
Zf9N2TkzV7lesV/a/thwQtaX/bOkwoX6b121Z3L4czTF+sv+KHGh7uL86/bH
1x/5peP8Zb+0yFnmCJab9qUSDsf4vb7svyPQUWMz85Z9s0hP9jyrL/vn8jp/
VdC7Y9/rxrtcWfrL/jiuf7msh+/aR6kYWS4Q+7Jfjn3ns5fh9+0Fb7F0TRP+
sv8D4y799LIH9kmJDttOCX7Z3/3lDfMt9Yf2nvsyus3Yvuw32vhzh1kIgg8A
DtTDLg==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7zXcnM2o28x1g8m3h9V+P4LfzzPI5
/W+Z/a3F21qPfWU/4PbTovP7pY32Mxf2yF96y3zA641KTqfaDvtH2c/Fz7Iy
HvC5L+AvXbXP/vDCFdJeoX/3a2T+m3Et7ZD91RWJO8zn/9y/Mqmka/6Eo/YG
7qE7ucq+7deKeVWdseuEfaiS4/13Wz7vXxOakGv45LS94MYdf2Yd/bhfz/9a
3C/e8/addtoZlgIf9keoqK14KH3R3kR72984xrf7JRQfKhzbcMlet9DKZovc
q/03ZefMXOV6xX5Dh0lCTe6L/bOkwoX6b121XxnDkpJj8nx/lLhQd3H+dXtP
7i4tjj9P90uLnGWOYLlpz3TobFzBsSf77wh01NjMvGWveuhWyo2pj/fP5XX+
qqB3x/7NvyynB2mP9sdx/ctlPXzXPpDjv9/hpw/3y7HvfPYy/L79YumTLz5P
fbj/A+Mu/fSyB/Zh0SyqBmEP93d/ecN8S/2hvQL/Ut03HA/3G238ucMsBMEH
AGYbxLM=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             Line[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAOJ9s8+2eoD80QNKpQ4sPwIcMmkzL
/qY/m18rfERtDMBG+TiJ99KxP9mGb6F/CAnASuwkbIkmuD+oyyW0xcMGwEzf
EE8ber4/hHoUSVcrBcAoaf6Y1mbCP9wTq/EktAPAqWJ0ip+QxT9NzLjx+mkC
wCpc6ntousg/72wmwkxEAcCsVWBtMeTLP4OUEizwSv6/Lk/WXvoNzz+AdM1U
CDf9v1gkJqjhG9E/FYEMqns//L8YIeEgxrDSP7s3rhzyLvu/2R2cmapF1D9Y
v7Fz5Wb6v5oaVxKP2tU/EWr+Wui1+b9aFxKLc2/XPytyre2Li/m/GxTNA1gE
2T9Mp6dj+Vz5v9wQiHw8mdo/FWK8eCUL+b+dDUP1IC7cPza0u2O9n/i/Xgr+
bQXD3T8SnIYMUWn4vx4HuebpV98/iWNqp1ZG+L/wAbovZ3bgPzvMMOAlRvi/
i/TsA9on4T/umtZqhj74vzKx+bg2VOE/7prWaoY++L+FRb0N
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.02000000000000005, -3.943000151375614}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "Eta"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{0.020000000000000004`, 
           0.5415300000000001}, {-3.9430001513756228`, -0.4370290012850056}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True], 
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAfBSuR+F6lD94V5q/vSj0vwJNhA1P
r5Q/eFeav70o9L+0v1iEB3KwP/ucsqET/PO/KGxQRTu4uz/ea44lS6zzv04M
JIM3f8M/BmUuyMwd87+I4p9jUSLJP1MrzQdirPK/wrgbRGvFzj9+vyEqD/Dx
v37HS5JCNNI/2Pn0Gh9B8b+bsomCzwXVP84sr292gPC/uJ3HclzX1z8rnyVz
D3vvv9WIBWPpqNo/VWN9dpwR7r/yc0NTdnrdP7CXy3gnwOy/iK/AoQEm4D88
rV5rUYjrvxal3xnIjuE/5sAY+QaP6r+kmv6RjvfiP91p7fd/oem/M5AdClVg
5D/08jIWY77ov8KFPIIbyeU/0GPJZErk579Qe1v64THnP+vey+QXbOe/3nB6
cqia6D/mzqG62yrnv21mmepuA+o/SbG/wbbW5r/8W7hiNWzrP1mC+HsRcua/
ilHX2vvU7D88Rv92YgHmvyRlQRfDC+4/pnsO3lD95b8L6lvmdFnuP6Z7Dt5Q
/eW/1djUHQ==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7Pk6eoy23vu1n8m3h9V+P4G/ZH9HC
XrTBnv0+yzZOue/7NXICXK137LZXDVmUK1H0fb8fj0qzef1h++9qy5bPzP++
v+PR/ORApZP2HH8V0hbFfd9/aIe0S/bRc/Yz5C5zc4V821933HuSk8kl++DF
8TOzlL/tn72ps+k861X7U3/SNfLXfN2/Y+7xopjr1+3jssQfzIz/uv9qB2vy
yxW37MV9meS4LL/u/1TsHFxWddf+2tJ7W3f8+bK/Y/2BhYxqD+xTT/97f3DP
l/1iS+9Lnuh7aM/fci7tyaIv+5fM+jex7/sj+//b7prH5n/ZbzxBlis04Yl9
KP+cL3w6X/YfarVpkj751P6soKfBvnuf9wdUR/96aPjc/pgjb1Dtks/77xVU
Fa2Y9cJ+4ZIP/syzPu/PTZv5Ko/5lf3xFb1Pyjd+3v8nekeSac5rex299v2Z
mz7v7wq8fuv3lTf2eqFFuskLP+9XSXUUP8z9zj41Mndn55rP+7lfRT8riUTw
AYgqzps=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7PtkTdopBggeYfFt4/dcj+Fv2R7Sw
F22wv3GQkaVDnfOARk6Aq/WO3fYxfxaLz+5nOeDHo9JsXn/Y3qWU8XanAeOB
jkfzkwOVTtqf1Qx2KPP7u//QDmmX7KPn7JfItW5WfvNjf91x70lOJpfso3fl
sj+W+7p/9qbOpvOsV+3n3Ztvtv3Ox/075h4virl+3V7w8Fde4X9v91/tYE1+
ueKWvZXIEt4v117s/1TsHFxWdde+feYWu2D1J/s71h9YyKj2wH5ph0Tpz9f3
94stvS95ou+hfYWe3N+FP2/uXzLr38S+74/shdjSPwjmXtlvPEGWKzThib1P
/7Fj/DXn9h9qtWmSPvnUPqFgb0j3+iP7A6qjfz00fG5/oXTG7Wb1vfvvFVQV
rZj1wv7oJiWVL8e37s9Nm/kqj/mV/YGv3JLnZq3Z/yd6R5Jpzmv7N3q+jZy3
Zu3vCrx+6/eVN/bXrvwSnDy/3F4l1VH8MPc7+4scLorPzjfbc7+KflYSieAD
AGKrxi4=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAyhquXXzXnT+TRkzfBL4RwLS/WIQH
crA/gl3SXY1ZDMAobFBFO7i7PycdE1RglgjATgwkgzd/wz+ghqb/NfoFwIji
n2NRIsk/k3LtldD2A8DCuBtEa8XOP3/ebkoyegHAfsdLkkI00j/GdiHJgTYA
wJuyiYLPBdU/VHy/Qwnl/b+4ncdyXNfXP1SONXwKFPy/1YgFY+mo2j8ca8OX
lqn6v/JzQ1N2et0/NXmymDAx+b+Ir8ChASbgPxem5F4p2/e/FqXfGciO4T93
W+IjtTD3v6Sa/pGO9+I/lHXau61h9r8zkB0KVWDkP3zlhL8ZgfW/woU8ghvJ
5T8LKMW+HZj0v1B7W/rhMec/uqjYaqnq87/ecHpyqJroP9a9l2rFlfO/bWaZ
6m4D6j+b0sYdjXTzv/xbuGI1bOs/sIZzY+A987+KUdfa+9TsP+af6sGm9vK/
JGVBF8ML7j8qUk+pJenyvwvqW+Z0We4/KlJPqSXp8r8/gcYE
              "]]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {0.02000000000000005, -4.435565461187828}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"EtaPr\""}, "RowDefault"], 20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0.020000000000000004`, 
          0.9484199999999999}, {-4.435565461187838, 0.10498405932301538`}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJwBkQFu/iFib1JlAgAAABgAAAACAAAAfBSuR+F6lD94V5q/vSj0vwJNhA1P
r5Q/eFeav70o9L+0v1iEB3KwP/ucsqET/PO/KGxQRTu4uz/ea44lS6zzv04M
JIM3f8M/BmUuyMwd87+I4p9jUSLJP1MrzQdirPK/wrgbRGvFzj9+vyEqD/Dx
v37HS5JCNNI/2Pn0Gh9B8b+bsomCzwXVP84sr292gPC/uJ3HclzX1z8rnyVz
D3vvv9WIBWPpqNo/VWN9dpwR7r/yc0NTdnrdP7CXy3gnwOy/iK/AoQEm4D88
rV5rUYjrvxal3xnIjuE/5sAY+QaP6r+kmv6RjvfiP91p7fd/oem/M5AdClVg
5D/08jIWY77ov8KFPIIbyeU/0GPJZErk579Qe1v64THnP+vey+QXbOe/3nB6
cqia6D/mzqG62yrnv21mmepuA+o/SbG/wbbW5r/8W7hiNWzrP1mC+HsRcua/
ilHX2vvU7D88Rv92YgHmvyRlQRfDC+4/pnsO3lD95b8L6lvmdFnuP6Z7Dt5Q
/eW/1djUHQ==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7Pk6eoy23vu1n8m3h9V+P4G/ZH9HC
XrTBnv0+yzZOue/7NXICXK137LZXDVmUK1H0fb8fj0qzef1h++9qy5bPzP++
v+PR/ORApZP2HH8V0hbFfd9/aIe0S/bRc/Yz5C5zc4V821933HuSk8kl++DF
8TOzlL/tn72ps+k861X7U3/SNfLXfN2/Y+7xopjr1+3jssQfzIz/uv9qB2vy
yxW37MV9meS4LL/u/1TsHFxWddf+2tJ7W3f8+bK/Y/2BhYxqD+xTT/97f3DP
l/1iS+9Lnuh7aM/fci7tyaIv+5fM+jex7/sj+//b7prH5n/ZbzxBlis04Yl9
KP+cL3w6X/YfarVpkj751P6soKfBvnuf9wdUR/96aPjc/pgjb1Dtks/77xVU
Fa2Y9cJ+4ZIP/syzPu/PTZv5Ko/5lf3xFb1Pyjd+3v8nekeSac5rex299v2Z
mz7v7wq8fuv3lTf2eqFFuskLP+9XSXUUP8z9zj41Mndn55rP+7lfRT8riUTw
AYgqzps=
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7PtkTdopBggeYfFt4/dcj+Fv2R7Sw
F22wv3GQkaVDnfOARk6Aq/WO3fYxfxaLz+5nOeDHo9JsXn/Y3qWU8XanAeOB
jkfzkwOVTtqf1Qx2KPP7u//QDmmX7KPn7JfItW5WfvNjf91x70lOJpfso3fl
sj+W+7p/9qbOpvOsV+3n3Ztvtv3Ox/075h4virl+3V7w8Fde4X9v91/tYE1+
ueKWvZXIEt4v117s/1TsHFxWdde+feYWu2D1J/s71h9YyKj2wH5ph0Tpz9f3
94stvS95ou+hfYWe3N+FP2/uXzLr38S+74/shdjSPwjmXtlvPEGWKzThib1P
/7Fj/DXn9h9qtWmSPvnUPqFgb0j3+iP7A6qjfz00fG5/oXTG7Wb1vfvvFVQV
rZj1wv7oJiWVL8e37s9Nm/kqj/mV/YGv3JLnZq3Z/yd6R5Jpzmv7N3q+jZy3
Zu3vCrx+6/eVN/bXrvwSnDy/3F4l1VH8MPc7+4scLorPzjfbc7+KflYSieAD
AGKrxi4=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             Line[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAyhquXXzXnT+TRkzfBL4RwLS/WIQH
crA/gl3SXY1ZDMAobFBFO7i7PycdE1RglgjATgwkgzd/wz+ghqb/NfoFwIji
n2NRIsk/k3LtldD2A8DCuBtEa8XOP3/ebkoyegHAfsdLkkI00j/GdiHJgTYA
wJuyiYLPBdU/VHy/Qwnl/b+4ncdyXNfXP1SONXwKFPy/1YgFY+mo2j8ca8OX
lqn6v/JzQ1N2et0/NXmymDAx+b+Ir8ChASbgPxem5F4p2/e/FqXfGciO4T93
W+IjtTD3v6Sa/pGO9+I/lHXau61h9r8zkB0KVWDkP3zlhL8ZgfW/woU8ghvJ
5T8LKMW+HZj0v1B7W/rhMec/uqjYaqnq87/ecHpyqJroP9a9l2rFlfO/bWaZ
6m4D6j+b0sYdjXTzv/xbuGI1bOs/sIZzY+A987+KUdfa+9TsP+af6sGm9vK/
JGVBF8ML7j8qUk+pJenyvwvqW+Z0We4/KlJPqSXp8r8/gcYE
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.02000000000000005, -4.435565461187828}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "EtaPr"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{0.020000000000000004`, 
           0.9484199999999999}, {-4.435565461187838, 0.10498405932301538`}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True], 
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7gUb7nC87Pu1n8m3h9V+P4DOwrAnd
rTbLPoTvY9ac1k/7/++6PFd93nz7Z7e/tdpHAPk7/n462bXIfuHCi0e1DT7t
r5siKN7gttReu6DU0ZHn0/6/+arWZkwr7JUWrb+x8fXH/bXelvFv9q6y75L6
OYv56cf9f9R8mxdVrrV/muYSlvH54367xg3Ba6Q22J/46X9p3peP+//m7Upt
r9hob7jkbcAfoP49MUfKk65tsv86xzn8+e2P+2u8znXammyxr5la56h97ON+
G4sbsyUmbbVvMuhKlVkDNF/10drP77fZ2356a729D6hf+M3+c7477NdO3B2z
M+/j/irGbxdXrt5pXxl69eJ3/4/7rd7/f9zCudueN1AsRy/34/5fdzi/xafv
sX+xk/9ARs3H/btOCXNYH91rbycya41xHVD/DlkpMeX99naKy7e6l33cL3NZ
eFqFwwH779vUNiekfNy/6d4K0WXvD9gzf6iuTff8uH+6Yl9pofRBOB8AA2bS
ug==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7as/f9wOv/9zP5NvC678ewWdgWRO6
W22WvfLs/1W9C37u/7/r8lz1efPtPSxm3Q/IBfJ3/P10smuRveyymQVPNX/u
r5siKN7gttSeM/lfYcXHH/v/5qtamzGtsH/YNNfb7OiP/bXelvFv9q6yX8+S
43Rr6o/9f9R8mxdVrrWvMFezV435sd+ucUPwGqkN9nV+q48/tQXqz9uV2l6x
0X7za5bLHEY/9u+JOVKedG2TfeyC213xP7/vr/E612lrssU+yrFvotya7/tt
LG7Mlpi01V757avnXpO/7/+j+mjt5/fb7NOl7hkUtHzfv0f4zf5zvjvs8zL3
m9gmf99fxfjt4srVO+1fuFpse+Lyfb/V+/+PWzh32++ekLDoYOT3/b/ucH6L
T99jr+K844VP+Pf9u04Jc1gf3Wv/b+EV+a1uQP07ZKXElPfbM/+YtYpT6/t+
mcvC0yocDtiHNbz9eIPp+/5N91aILnt/wD5q5e5F/pe+7Z+u2FdaKH0QzgcA
NPfTng==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7YLMNPRdvsR5g8m3h9V+P4DOwrAnd
rTbLXrd0mzJDHMuB/7suz1WfN99+74XYghhe5gP/d/z9dLJrkf120/nzZd8z
HqibIije4LbUPi7k3P57XxkO/M1XtTZjWmH/Y7lH728JhgO13pbxb/ausv9e
93aLK9///X/UfJsXVa61N2lm9Mxq+7ffrnFD8BqpDfYfzn/o6P/zd//fvF2p
7RUb7T3MAmd+LPy7f0/MkfKka5vsD4h8vZrz/M/+Gq9znbYmW+xby8q9dsX+
2W9jcWO2xKSt9gv6bh0Lv/p7/x/VR2s/v99mXxlcO32l3+/9e4Tf7D/nu8M+
WoU7YP7JX/urGL9dXLl6p/27xP6NJT6/9lu9//+4hXO3vb3iBn9pIP/XHc5v
8el77JvVPzDV2fzav+uUMIf10b32cy3Cnlx49XN/1Q5ZKTHl/fb73p42VLnx
c7/MZeFpFQ4H7IXlrO+27f25f9O9FaLL3h+wz+pcln569s/90xX7SgulD8L5
APG+zhg=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             
             LineBox[{{0.07220441193170588, -2.837205512231818}, {
              0.07358375, -2.8220508588449533`}, {
              0.07892212500000001, -2.761435977877145}, {
              0.08426050000000002, -2.7144571251256284`}, {
              0.08959887500000002, -2.6717029203475304`}, {
              0.09493725000000003, -2.635287122057605}, {
              0.10027562500000001`, -2.6057902047945833`}, {
              0.10561400000000001`, -2.6069770451676226`}, {
              0.11095237500000002`, -2.596428151273445}, {
              0.11629075000000003`, -2.5824741750755003`}, {
              0.12162912500000003`, -2.565858005225848}, {
              0.1269675, -2.547043682215163}, {
              0.13231350000000003`, -2.526346594169303}, {
              0.13365000000000002`, -2.526346594169303}}]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {0.02000000000000005, -2.8372055122318116`}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"Pi0\""}, "RowDefault"], 20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0.020000000000000004`, 
          0.13365000000000002`}, {-2.837205512231818, -0.9851107817400808}}, 
         PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
         Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7gUb7nC87Pu1n8m3h9V+P4DOwrAnd
rTbLPoTvY9ac1k/7/++6PFd93nz7Z7e/tdpHAPk7/n462bXIfuHCi0e1DT7t
r5siKN7gttReu6DU0ZHn0/6/+arWZkwr7JUWrb+x8fXH/bXelvFv9q6y75L6
OYv56cf9f9R8mxdVrrV/muYSlvH54367xg3Ba6Q22J/46X9p3peP+//m7Upt
r9hob7jkbcAfoP49MUfKk65tsv86xzn8+e2P+2u8znXammyxr5la56h97ON+
G4sbsyUmbbVvMuhKlVkDNF/10drP77fZ2356a729D6hf+M3+c7477NdO3B2z
M+/j/irGbxdXrt5pXxl69eJ3/4/7rd7/f9zCudueN1AsRy/34/5fdzi/xafv
sX+xk/9ARs3H/btOCXNYH91rbycya41xHVD/DlkpMeX99naKy7e6l33cL3NZ
eFqFwwH779vUNiekfNy/6d4K0WXvD9gzf6iuTff8uH+6Yl9pofRBOB8AA2bS
ug==
              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7as/f9wOv/9zP5NvC678ewWdgWRO6
W22WvfLs/1W9C37u/7/r8lz1efPtPSxm3Q/IBfJ3/P10smuRveyymQVPNX/u
r5siKN7gttSeM/lfYcXHH/v/5qtamzGtsH/YNNfb7OiP/bXelvFv9q6yX8+S
43Rr6o/9f9R8mxdVrrWvMFezV435sd+ucUPwGqkN9nV+q48/tQXqz9uV2l6x
0X7za5bLHEY/9u+JOVKedG2TfeyC213xP7/vr/E612lrssU+yrFvotya7/tt
LG7Mlpi01V757avnXpO/7/+j+mjt5/fb7NOl7hkUtHzfv0f4zf5zvjvs8zL3
m9gmf99fxfjt4srVO+1fuFpse+Lyfb/V+/+PWzh32++ekLDoYOT3/b/ucH6L
T99jr+K844VP+Pf9u04Jc1gf3Wv/b+EV+a1uQP07ZKXElPfbM/+YtYpT6/t+
mcvC0yocDtiHNbz9eIPp+/5N91aILnt/wD5q5e5F/pe+7Z+u2FdaKH0QzgcA
NPfTng==
              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7YLMNPRdvsR5g8m3h9V+P4DOwrAnd
rTbLXrd0mzJDHMuB/7suz1WfN99+74XYghhe5gP/d/z9dLJrkf120/nzZd8z
HqibIije4LbUPi7k3P57XxkO/M1XtTZjWmH/Y7lH728JhgO13pbxb/ausv9e
93aLK9///X/UfJsXVa61N2lm9Mxq+7ffrnFD8BqpDfYfzn/o6P/zd//fvF2p
7RUb7T3MAmd+LPy7f0/MkfKka5vsD4h8vZrz/M/+Gq9znbYmW+xby8q9dsX+
2W9jcWO2xKSt9gv6bh0Lv/p7/x/VR2s/v99mXxlcO32l3+/9e4Tf7D/nu8M+
WoU7YP7JX/urGL9dXLl6p/27xP6NJT6/9lu9//+4hXO3vb3iBn9pIP/XHc5v
8el77JvVPzDV2fzav+uUMIf10b32cy3Cnlx49XN/1Q5ZKTHl/fb73p42VLnx
c7/MZeFpFQ4H7IXlrO+27f25f9O9FaLL3h+wz+pcln569s/90xX7SgulD8L5
APG+zhg=
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             
             Line[{{0.07220441193170588, -2.837205512231818}, {
              0.07358375, -2.8220508588449533`}, {
              0.07892212500000001, -2.761435977877145}, {
              0.08426050000000002, -2.7144571251256284`}, {
              0.08959887500000002, -2.6717029203475304`}, {
              0.09493725000000003, -2.635287122057605}, {
              0.10027562500000001`, -2.6057902047945833`}, {
              0.10561400000000001`, -2.6069770451676226`}, {
              0.11095237500000002`, -2.596428151273445}, {
              0.11629075000000003`, -2.5824741750755003`}, {
              0.12162912500000003`, -2.565858005225848}, {
              0.1269675, -2.547043682215163}, {
              0.13231350000000003`, -2.526346594169303}, {
              0.13365000000000002`, -2.526346594169303}}]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.02000000000000005, -2.8372055122318116`}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "Pi0"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{0.020000000000000004`, 
           0.13365000000000002`}, {-2.837205512231818, -0.9851107817400808}}, 
          PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
          Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True], 
     TagBox[
      FormBox[
       GraphicsBox[{{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7ijnhJu39DAeYfFt4/dcj+Gwp68vr
9xy3fzwlsGX/ot/7zeSvt3UVXrNnvPXO48S3r/tN3V6vyGp6YB/q3WXBIf9x
/7k/WXwCZ57av67nWLhz9ev9GZtfFW8VfW1fIy31e0Hps/2Mpltz1up/sD8m
K3h5a9Kj/b4CpfINVz7Z/y94I2dUcH//rNcml4Iqv9o/vibGlaN3e//zY19a
VOV+2IvXtAi9PXR9v8miLeY/Dv2yf6t28lNEzNX9DbUlr06l/7UvWsS3rLDq
8v50nVnn/NgYHPg0HLs0cy/t55X6pb4jgtFhwck6W5+YS/s3s0c1Kq5mcmi7
kzjj5bpL+6O+7rzV9ZfZweHf1KY4n8v7GR5LmnzxZ3W4Wrpd9afPlf3LLlT2
xi5ic1A/x7cjsfrqft99N58d+8Lu0DRb7T3Xk2v7P6+2dDBw53Q4+MW19U35
jf2zZoIAl4P03zpxMZNb+3fItb4O3MHtwNEQ+CfvxO39DGDAA+cDADEsw8Y=

              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               NCache[
                Rational[2, 3], 0.6666666666666666], 0, 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT765vlf70KYTrA5NvC678ewWdLWV9e
v+e4/Y05kjsnX2A4YCZ/va2r8Jp90vs7y1vC/+w3dXu9IqvpgX13fnXk06Qf
+8/9yeITOPPUfnfxhPZ25a/7Mza/Kt4q+tqeYeYlAckDn/Yzmm7NWav/wf75
/bW1vPc+7PcVKJVvuPLJXnd7+60/yu/2z3ptcimo8qv9+n3s+2P5X+9/fuxL
i6rcD/vqlC2flue+2G+yaIv5j0O/7MWlMmIc4p7tb6gteXUq/a/9zx0u293z
nu5P15l1zo+NwcHt513RV6VP9/NK/VLfEcHoEBz+ZN66K0/3b2aPalRczeTw
UmL2xlPnnu6P+rrzVtdfZoc/ri9uaTY/3c/wWNLkiz+rQ3LpSs6A8qf7l12o
7I1dxOYQfumaQPn6p/t99918duwLu8PEoshD8wye7f+82tLBwJ3TQYvh5ME5
R5/tnzUTBLgcmEXvfaqpf75/h1zr68Ad3A7S7rdeKVu/2M8ABjxwPgBhasmi

              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               NCache[
                Rational[4, 9], 0.4444444444444444], 0]], 
             LineBox[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7Fi2Pv5uWihxg8m3h9V+P4LOlrC+v
33Pc/m2f1dHZyUwHzOSvt3UVXrNfYRb2gin/y35Tt9crspoe2Juyx64olXq+
/9yfLD6BM0/tL03NbGm/fWN/xuZXxVtFX9v/n7S0+Gbjwf2Mpltz1up/sK/o
n7/+ivdKe1+BUvmGK5/su4SO/8tedcx+1muTS0GVX+0fxdn5qqdftH9+7EuL
qtwP+0t9G781SV2zN1m0xfzHoV/2CvMTeN4E3bRvqC15dSr9r72nrsKKwum3
7dN1Zp3zY2NwOPTu9ixJ07v2vFK/1HdEMDrYhPG9+st0z34ze1Sj4momBzO2
6xMYHe/ZR33deavrL7OD2dzD9x+r3LNneCxp8sWf1cGU4xjvzul37ZddqOyN
XcTm8NyOLfTf6Tv2vvtuPjv2hd2hYavJpul7btt/Xm3pYODO6eDKWjVLOuWW
/ayZIMDlsHO11wb/+zfsd8i1vg7cwe2QITo7tq7luj0DGPDA+QDj0bka
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             LineBox[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAloghFq0apT8JU8ydlhEVwAZkr3d/
vMc/qcCUdghYCcA2H9eGinHWP12MfKnNmgHANUbrqGqC4D+kfz7tlu77v878
ag4QzOU/O6QZ5CkP979os+pztRXrP2z2/hqPa/O/ATW1bK0v8D8538qnU67w
v00QdR+A1PI/nDLfK67G67+a6zTSUnn1P8YJmOBfO+e/58b0hCUe+D99njSW
P3zjvzSitDf4wvo//Pwrip544L+AfXTqymf9P+wGniUQhd6/Zyyazk4GAEDx
YFmz5pfevw0a+ie4WAFADDPfeWfP3r+zB1qBIasCQK1CGNeMm92/WvW52or9
A0D10jO+O07bvwDjGTT0TwVAojW5LlF82b+m0HmNXaIGQJXJUygqVdi/Tb7Z
5sb0B0A0ruEl19/Xv/OrOUAwRwlAilE9Zmmv17+amZmZmZkKQBh8Iw7N8te/
uB6F61G4C0A4GsehMYPYvwAAAAAAAAxAOBrHoTGD2L+k+7u4
              "]]}}}, {{}, {}}}, {
          InsetBox[
           FormBox[
            TemplateBox[{
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)>\"", 
               18, StripOnInput -> False], 
              StyleBox[
              "\"<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(LLP\\)]\\)\\!\\(\
\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 18, StripOnInput -> 
               False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \\(decay\\)]\\)>\"", 18, 
               StripOnInput -> False], 
              StyleBox[
              "\"c\[Tau]<\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \
\\(LLP\\)]\\)\\!\\(\\*SubscriptBox[\\(P\\), \
\\(decay\\)]\\)\\!\\(\\*SubscriptBox[\\(\[Epsilon]\\), \\(decay\\)]\\)>\"", 
               18, StripOnInput -> False]}, "PointLegend", 
             DisplayFunction -> (FormBox[
               StyleBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[0.054], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                    "Grid"], Alignment -> Left, AppearanceElements -> None, 
                  ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                  "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
                False], TraditionalForm]& ), 
             InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                RowBox[{
                  RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                    "]"}], ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.011000000000000001`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "0.003`", "]"}], ",", 
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}]}], "}"}], ",", 
                  RowBox[{"{", 
                    RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
                  RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                  ",", 
                  RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True", ",", "True", ",", "True"}], 
                    "}"}]}], ",", 
                  RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                  RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                "]"}]& ), Editable -> True], TraditionalForm], 
           Scaled[{0.75, 0.2}], 
           ImageScaled[{0.5, 0.5}], FormatType -> StandardForm, 
           BaseStyle -> {FontSize -> Larger}]}}, {
        DisplayFunction -> Identity, DisplayFunction -> Identity, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
         Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
         DisplayFunction -> Identity, AspectRatio -> 
         NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
         AxesLabel -> {None, None}, 
         AxesOrigin -> {0.02000000000000005, -5.2671761184653825`}, 
         DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
         FrameLabel -> {{
            FormBox[
             TagBox["\"Acceptance\"", HoldForm], TraditionalForm], None}, {
            FormBox[
             TagBox["\"m [GeV]\"", HoldForm], TraditionalForm], None}}, 
         FrameStyle -> Directive[
           GrayLevel[0], 22], FrameTicks -> {{
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
            Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
         GridLines -> {Automatic, 
           Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]], ImageSize -> Large, 
         Method -> {
          "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
           "DefaultGraphicsInteraction" -> {
            "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
             "Effects" -> {
              "Highlight" -> {"ratio" -> 2}, 
               "HighlightPoint" -> {"ratio" -> 2}, 
               "Droplines" -> {
                "freeformCursorMode" -> True, 
                 "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
           "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
             Directive[
              RGBColor[0.368417, 0.506779, 0.709798], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.880722, 0.611041, 0.142051], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.560181, 0.691569, 0.194885], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.922526, 0.385626, 0.209179], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.528488, 0.470624, 0.701351], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.772079, 0.431554, 0.102387], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.363898, 0.618501, 0.782349], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[1, 0.75, 0], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.647624, 0.37816, 0.614037], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.571589, 0.586483, 0.], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.915, 0.3325, 0.2125], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[
              0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
              AbsoluteThickness[1.6]], 
             Directive[
              RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
              AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
           "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
           Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
           True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& ), "CopiedValueFunction" -> ({
               Identity[
                Part[#, 1]], 
               Exp[
                Part[#, 2]]}& )}}, PlotLabel -> FormBox[
           StyleBox[
            TemplateBox[{"\"From \"", "\"Rho0\""}, "RowDefault"], 20, 
            GrayLevel[0], StripOnInput -> False], TraditionalForm], 
         PlotRange -> {{0.020000000000000004`, 3.5}, {-5.267176118465394, 
          0.5680278382718584}}, PlotRangeClipping -> True, 
         PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
           
           Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
            WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
       TraditionalForm], 
      InterpretTemplate[Legended[
        Graphics[{{}, {{{}, {}, {
             Hue[0.67, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 0, 1]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT7ijnhJu39DAeYfFt4/dcj+Gwp68vr
9xy3fzwlsGX/ot/7zeSvt3UVXrNnvPXO48S3r/tN3V6vyGp6YB/q3WXBIf9x
/7k/WXwCZ57av67nWLhz9ev9GZtfFW8VfW1fIy31e0Hps/2Mpltz1up/sD8m
K3h5a9Kj/b4CpfINVz7Z/y94I2dUcH//rNcml4Iqv9o/vibGlaN3e//zY19a
VOV+2IvXtAi9PXR9v8miLeY/Dv2yf6t28lNEzNX9DbUlr06l/7UvWsS3rLDq
8v50nVnn/NgYHPg0HLs0cy/t55X6pb4jgtFhwck6W5+YS/s3s0c1Kq5mcmi7
kzjj5bpL+6O+7rzV9ZfZweHf1KY4n8v7GR5LmnzxZ3W4Wrpd9afPlf3LLlT2
xi5ic1A/x7cjsfrqft99N58d+8Lu0DRb7T3Xk2v7P6+2dDBw53Q4+MW19U35
jf2zZoIAl4P03zpxMZNb+3fItb4O3MHtwNEQ+CfvxO39DGDAA+cDADEsw8Y=

              "]]}, {
             Hue[0.9060679774997897, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[
               Rational[2, 3], 0, 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RT765vlf70KYTrA5NvC678ewWdLWV9e
v+e4/Y05kjsnX2A4YCZ/va2r8Jp90vs7y1vC/+w3dXu9IqvpgX13fnXk06Qf
+8/9yeITOPPUfnfxhPZ25a/7Mza/Kt4q+tqeYeYlAckDn/Yzmm7NWav/wf75
/bW1vPc+7PcVKJVvuPLJXnd7+60/yu/2z3ptcimo8qv9+n3s+2P5X+9/fuxL
i6rcD/vqlC2flue+2G+yaIv5j0O/7MWlMmIc4p7tb6gteXUq/a/9zx0u293z
nu5P15l1zo+NwcHt513RV6VP9/NK/VLfEcHoEBz+ZN66K0/3b2aPalRczeTw
UmL2xlPnnu6P+rrzVtdfZoc/ri9uaTY/3c/wWNLkiz+rQ3LpSs6A8qf7l12o
7I1dxOYQfumaQPn6p/t99918duwLu8PEoshD8wye7f+82tLBwJ3TQYvh5ME5
R5/tnzUTBLgcmEXvfaqpf75/h1zr68Ad3A7S7rdeKVu/2M8ABjxwPgBhasmi

              "]]}, {
             Hue[0.1421359549995791, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              RGBColor[0, 
               Rational[4, 9], 0]], 
             Line[CompressedData["
1:eJxTTMoPSmViYGCQAGIQXSOyzv1h1RR7Fi2Pv5uWihxg8m3h9V+P4LOlrC+v
33Pc/m2f1dHZyUwHzOSvt3UVXrNfYRb2gin/y35Tt9crspoe2Juyx64olXq+
/9yfLD6BM0/tL03NbGm/fWN/xuZXxVtFX9v/n7S0+Gbjwf2Mpltz1up/sK/o
n7/+ivdKe1+BUvmGK5/su4SO/8tedcx+1muTS0GVX+0fxdn5qqdftH9+7EuL
qtwP+0t9G781SV2zN1m0xfzHoV/2CvMTeN4E3bRvqC15dSr9r72nrsKKwum3
7dN1Zp3zY2NwOPTu9ixJ07v2vFK/1HdEMDrYhPG9+st0z34ze1Sj4momBzO2
6xMYHe/ZR33deavrL7OD2dzD9x+r3LNneCxp8sWf1cGU4xjvzul37ZddqOyN
XcTm8NyOLfTf6Tv2vvtuPjv2hd2hYavJpul7btt/Xm3pYODO6eDKWjVLOuWW
/ayZIMDlsHO11wb/+zfsd8i1vg7cwe2QITo7tq7luj0DGPDA+QDj0bka
              "]]}, {
             Hue[0.37820393249936934`, 0.6, 0.6], 
             Directive[
              PointSize[0.011000000000000001`], 
              AbsoluteThickness[1.6], 
              Thickness[0.003], 
              GrayLevel[0]], 
             Line[CompressedData["
1:eJwBgQF+/iFib1JlAgAAABcAAAACAAAAloghFq0apT8JU8ydlhEVwAZkr3d/
vMc/qcCUdghYCcA2H9eGinHWP12MfKnNmgHANUbrqGqC4D+kfz7tlu77v878
ag4QzOU/O6QZ5CkP979os+pztRXrP2z2/hqPa/O/ATW1bK0v8D8538qnU67w
v00QdR+A1PI/nDLfK67G67+a6zTSUnn1P8YJmOBfO+e/58b0hCUe+D99njSW
P3zjvzSitDf4wvo//Pwrip544L+AfXTqymf9P+wGniUQhd6/Zyyazk4GAEDx
YFmz5pfevw0a+ie4WAFADDPfeWfP3r+zB1qBIasCQK1CGNeMm92/WvW52or9
A0D10jO+O07bvwDjGTT0TwVAojW5LlF82b+m0HmNXaIGQJXJUygqVdi/Tb7Z
5sb0B0A0ruEl19/Xv/OrOUAwRwlAilE9Zmmv17+amZmZmZkKQBh8Iw7N8te/
uB6F61G4C0A4GsehMYPYvwAAAAAAAAxAOBrHoTGD2L+k+7u4
              "]]}}}, {{}, {}}}, {
         DisplayFunction -> Identity, GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, DisplayFunction -> 
          Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
          DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
          Axes -> {True, True}, AxesLabel -> {None, None}, 
          AxesOrigin -> {0.02000000000000005, -5.2671761184653825`}, 
          DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
          FrameLabel -> {{
             HoldForm["Acceptance"], None}, {
             HoldForm["m [GeV]"], None}}, FrameStyle -> Directive[
            GrayLevel[0], 22], FrameTicks -> {{
             
             Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
              WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
             Charting`ScaledFrameTicks[{Log, Exp}]}, {Automatic, Automatic}}, 
          GridLines -> {Automatic, 
            Charting`ScaledTickValues[{Log, Exp}]}, GridLinesStyle -> 
          Directive[
            GrayLevel[0.5, 0.4]], ImageSize -> Large, 
          Method -> {
           "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic,
             "DefaultGraphicsInteraction" -> {
             "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
              "Effects" -> {
               "Highlight" -> {"ratio" -> 2}, 
                "HighlightPoint" -> {"ratio" -> 2}, 
                "Droplines" -> {
                 "freeformCursorMode" -> True, 
                  "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
            "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
              Directive[
               RGBColor[0.368417, 0.506779, 0.709798], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.880722, 0.611041, 0.142051], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.560181, 0.691569, 0.194885], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.922526, 0.385626, 0.209179], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.528488, 0.470624, 0.701351], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.772079, 0.431554, 0.102387], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.363898, 0.618501, 0.782349], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[1, 0.75, 0], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.647624, 0.37816, 0.614037], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.571589, 0.586483, 0.], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.915, 0.3325, 0.2125], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[
               0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
               AbsoluteThickness[1.6]], 
              Directive[
               RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
               AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
            "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
            Scaled[0.05], "OptimizePlotMarkers" -> True, 
            "OptimizePlotMarkers" -> True, 
            "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                Identity[
                 Part[#, 1]], 
                Exp[
                 Part[#, 2]]}& )}}, PlotLabel -> Style[
            Row[{"From ", "Rho0"}], 20, 
            GrayLevel[0]], 
          PlotRange -> {{0.020000000000000004`, 3.5}, {-5.267176118465394, 
           0.5680278382718584}}, PlotRangeClipping -> True, 
          PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {Automatic, 
            
            Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
             WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0]}}], 
        Placed[
         Unevaluated[
          PointLegend[{
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 0, 1]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[
              Rational[2, 3], 0, 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             RGBColor[0, 
              Rational[4, 9], 0]], 
            Directive[
             PointSize[0.011000000000000001`], 
             AbsoluteThickness[1.6], 
             Thickness[0.003], 
             GrayLevel[0]]}, {
            Style["<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>", 18], 
            Style[
            "<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>", 18], 
            Style[
            "c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \
\(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\
\[Epsilon]\), \(decay\)]\)>", 18]}, 
           LegendMarkers -> {{False, Automatic}, {False, Automatic}, {
             False, Automatic}, {False, Automatic}}, 
           Joined -> {True, True, True, True}, LabelStyle -> {}, LegendLayout -> 
           "Column"]], {0.75, 0.2}, Identity]]& ], Editable -> True, 
      Selectable -> True, SelectWithContents -> False, AutoDelete -> True]},
    "RowDefault"],
   StripOnInput->False,
   ImageSizeMultipliers->{1, 1, 1, 1}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9285768728494124`*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[751]=",ExpressionUUID->"abf7e606-cc83-4055-8670-f5bf5d9414ac"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Rough estimates of the upper and lower bounds", "Subsection",
 CellChangeTimes->{{3.8850328066928463`*^9, 3.8850328135228024`*^9}},
 CellTags->{
  "Acceptance-computation", 
   "Number-of-events-computation+sensitivity"},ExpressionUUID->"6ff9d28c-eed8-\
4817-92f4-3f387708a5b0"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"LowerBoundEstimate", "[", 
      RowBox[{"mLLP_", ",", "prod"}], "]"}], "=", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"NpotGivenExperiment", "*", 
          RowBox[{"ProbLLP", "[", 
           RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "*", 
          RowBox[{
           RowBox[{"Interpolation", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "5"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[", 
           "mLLP", "]"}]}], ")"}], "/", 
        RowBox[{"(", 
         RowBox[{"2.3", 
          RowBox[{"ldecayLLP", "[", 
           RowBox[{"mLLP", ",", "1", ",", "ELLP"}], "]"}], 
          FractionBox["mLLP", 
           SqrtBox[
            RowBox[{
             SuperscriptBox["ELLP", "2"], "-", 
             SuperscriptBox["mLLP", "2"]}]]]}], ")"}]}], ")"}], 
      RowBox[{"-", 
       FractionBox["1", "2"]}]]}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"UpperBoundEstimate", "[", 
      RowBox[{"mLLP_", ",", "prod"}], "]"}], "=", 
     RowBox[{"(", 
      RowBox[{"Abs", "[", 
       RowBox[{"Re", "[", 
        RowBox[{"Evaluate", "[", 
         RowBox[{
          RowBox[{"-", 
           FractionBox[
            RowBox[{"ProductLog", "[", 
             RowBox[{
              RowBox[{"-", "1"}], ",", 
              RowBox[{
               RowBox[{"-", "2.3"}], "*", 
               FractionBox["b", "a"]}]}], "]"}], "b"]}], "/.", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"a", "\[Rule]", " ", 
             RowBox[{"NpotGivenExperiment", "*", 
              RowBox[{"ProbLLP", "[", 
               RowBox[{"mLLP", ",", "1", ",", "prod"}], "]"}], "*", 
              RowBox[{
               RowBox[{"Interpolation", "[", 
                RowBox[{
                 RowBox[{
                  RowBox[{"\[Epsilon]GeomTabs", "[", "prod", "]"}], "[", 
                  RowBox[{"[", 
                   RowBox[{"All", ",", 
                    RowBox[{"{", 
                    RowBox[{"1", ",", "3"}], "}"}]}], "]"}], "]"}], ",", 
                 RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], "[",
                "mLLP", "]"}]}]}], ",", 
            RowBox[{"b", "\[Rule]", 
             FractionBox["zminExp", 
              RowBox[{"ldecayLLP", "[", 
               RowBox[{"mLLP", ",", "1", ",", 
                RowBox[{"ELLPmax", "[", 
                 RowBox[{"0.5", ",", "\[Theta]minExp", ",", "prod"}], "]"}]}],
                "]"}]]}]}], "}"}]}], "]"}], "]"}], "]"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"prod", ",", "ProductionList"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"ProdTest", "=", 
  RowBox[{"ProductionList", "[", 
   RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"LogLogPlot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"0.3", 
       RowBox[{"LowerBoundEstimate", "[", 
        RowBox[{"mLLP", ",", "ProdTest"}], "]"}]}], ",", 
      RowBox[{"1.8", 
       RowBox[{"UpperBoundEstimate", "[", 
        RowBox[{"mLLP", ",", "ProdTest"}], "]"}]}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"mLLP", ",", 
     RowBox[{"Max", "[", 
      RowBox[{
       RowBox[{"mLLPmin", "[", "ProdTest", "]"}], ",", "mmin\[Epsilon]"}], 
      "]"}], ",", 
     RowBox[{"Min", "[", 
      RowBox[{
       RowBox[{"mLLPmax", "[", "ProdTest", "]"}], ",", "mmax\[Epsilon]"}], 
      "]"}]}], "}"}], ",", 
   RowBox[{"Frame", "->", "True"}], ",", 
   RowBox[{"ImageSize", "->", "Large"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8927045521296835`*^9, 3.892704618398532*^9}, {
   3.892704651576499*^9, 3.892704652867281*^9}, 3.8951292466391563`*^9, {
   3.8972064547512426`*^9, 3.8972064548441195`*^9}, {3.8972065272743893`*^9, 
   3.8972065273639555`*^9}, {3.897208556347765*^9, 3.8972085563922853`*^9}, {
   3.8972086426345124`*^9, 3.897208654173244*^9}, {3.897232414966792*^9, 
   3.8972324175870733`*^9}, {3.8972329876997476`*^9, 3.897233009729268*^9}, {
   3.8972333224369483`*^9, 3.8972333287617497`*^9}, 3.897233684153979*^9, {
   3.8972340069416475`*^9, 3.897234007169805*^9}, {3.897234114920539*^9, 
   3.8972341194170074`*^9}, {3.9027273710668883`*^9, 3.902727371070483*^9}, {
   3.9037896747950044`*^9, 3.903789674805071*^9}, {3.903791118363947*^9, 
   3.9037911183684855`*^9}, {3.9037936813200336`*^9, 3.903793682290308*^9}, {
   3.9049231517292624`*^9, 3.904923157976531*^9}, {3.9049231902009006`*^9, 
   3.904923190656528*^9}, 3.904926376200742*^9, {3.911027289230471*^9, 
   3.9110273124658933`*^9}, {3.9110277505648003`*^9, 3.911027764091008*^9}, 
   3.913866752239462*^9, {3.9138675516462307`*^9, 3.9138675637833986`*^9}, {
   3.9138682212474923`*^9, 3.913868221253111*^9}, {3.9138690439766445`*^9, 
   3.913869043981699*^9}, {3.9138691384932814`*^9, 3.913869147288597*^9}, {
   3.913869202156701*^9, 3.9138692055185556`*^9}, {3.913869239652417*^9, 
   3.9138692400334797`*^9}, {3.913869474546574*^9, 3.913869474546574*^9}, {
   3.913870429970599*^9, 3.913870442530464*^9}, {3.9138744135974054`*^9, 
   3.913874414587882*^9}, {3.9156429963777814`*^9, 3.915642996428277*^9}, {
   3.916391759919177*^9, 3.916391773937995*^9}, {3.916512010716703*^9, 
   3.9165120302839413`*^9}, {3.9166727678270264`*^9, 
   3.9166727868341904`*^9}, {3.9177681833526173`*^9, 3.9177681834185057`*^9}, 
   3.917852112310001*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "In[754]:=",ExpressionUUID->"cf1b132c-0605-4069-a715-693b632def22"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "InterpolatingFunction", "dmval", 
    "\"Input value \\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"4.999999999999999`\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\) lies outside the range of data in the interpolating \
function. Extrapolation will be used.\"", 2, 754, 6, 17616438568294231139, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.921652892405086*^9, 3.9216533648054934`*^9, 
  3.928576873493668*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "During evaluation of \
In[754]:=",ExpressionUUID->"98e0a502-6f93-479a-939d-fefb04691c21"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
   "InterpolatingFunction", "dmval", 
    "\"Input value \\!\\(\\*FormBox[RowBox[{\\\"{\\\", RowBox[{\\\"0.5`\\\", \
\\\",\\\", RowBox[{\\\"-\\\", \\\"4.999999999999999`\\\"}]}], \\\"}\\\"}], \
TraditionalForm]\\) lies outside the range of data in the interpolating \
function. Extrapolation will be used.\"", 2, 754, 7, 17616438568294231139, 
    "Local"},
   "MessageTemplate"], TraditionalForm]], "Message", "MSG",
 CellChangeTimes->{3.921652892405086*^9, 3.9216533648054934`*^9, 
  3.9285768735309296`*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "During evaluation of \
In[754]:=",ExpressionUUID->"d1c3ff7a-4224-4396-a879-a2007e910dab"],

Cell[BoxData[
 FormBox["\<\"Bremsstrahlung\"\>", TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528924597692`*^9, 3.9216533648695717`*^9, 
  3.9285768735623145`*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[755]=",ExpressionUUID->"6a7a4e4d-4d2a-43fa-8443-6ab5efc2151e"],

Cell[BoxData[
 FormBox[
  GraphicsBox[{{{}, {}, 
     TagBox[
      {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
UGtiFNH/AAg5cmo=
        "]]},
      Annotation[#, "Charting`Private`Tag$117672#1"]& ], 
     TagBox[
      {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], 
       Opacity[1.], LineBox[CompressedData["
1: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
dJNgig==
        "]]},
      Annotation[#, "Charting`Private`Tag$117672#2"]& ]}, {}},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-4.0270534412169345`, -42.44751141869236},
   CoordinatesToolOptions:>{"DisplayFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& ), "CopiedValueFunction" -> ({
       Exp[
        Part[#, 1]], 
       Exp[
        Part[#, 2]]}& )},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{None, None}, {None, None}},
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-41.44653167389282, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "18"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-36.841361487904734`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "16"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-32.23619130191664, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "14"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-27.631021115928547`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "12"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-23.025850929940457`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "10"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "8"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm], {0.01, 0.}}, {-46.15706237553874, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-46.051701859880914`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-43.74911676688687, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-39.14394658089878, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-29.933606208922594`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-25.328436022934504`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.815510557964274`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.122363377404328`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-12.716898269296165`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-12.429216196844383`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-41.44653167389282, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-36.841361487904734`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-32.23619130191664, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-27.631021115928547`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-46.15706237553874, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-46.051701859880914`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-43.74911676688687, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-39.14394658089878, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-29.933606208922594`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-25.328436022934504`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.815510557964274`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.122363377404328`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-12.716898269296165`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-12.429216196844383`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}}, {{{-2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.05\"", ShowStringCharacters -> False], 0.05, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 0.1, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.50\"", ShowStringCharacters -> False], 0.5, 
            AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.3978952727983707`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.4849066497880004`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.5649493574615367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.6390573296152584`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.70805020110221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.772588722239781, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.3978952727983707`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.4849066497880004`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.5649493574615367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.6390573296152584`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.70805020110221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.772588722239781, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImagePadding->All,
   ImageSize->Large,
   Method->{
    "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None},
   PlotRange->{{-3.912023005428146, 
    1.6094379124341005`}, {-42.44751141869245, -16.018028294616247`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      MachinePrecision, RotateLabel -> 0]}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216528924597692`*^9, 3.9216533648695717`*^9, 
  3.928576873651862*^9},
 CellTags->{
  "Acceptance-computation", "Number-of-events-computation+sensitivity"},
 CellLabel->
  "Out[756]=",ExpressionUUID->"dfeb818f-88f8-41c1-9b99-4f314875a047"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Number of events - fast", "Subsection",
 CellChangeTimes->{{3.897206442190997*^9, 3.8972064427846107`*^9}, {
  3.905840324777521*^9, 3.905840328994842*^9}},
 CellTags->{
  "Number-of-events-computation+sensitivity", 
   "Acceptance-computation"},ExpressionUUID->"9568fedf-30f9-450d-900b-\
5ab61536bd06"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FactorLowerBound", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"MemberQ", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "\"\<ANUBIS-shaft-volume-1\>\"", ",", 
          "\"\<ANUBIS-shaft-volume-2\>\"", ",", 
          "\"\<ANUBIS-shaft-volume-3\>\""}], "}"}], ",", 
        "SelectedExperiment"}], "]"}], "==", "True"}], ",", "0.1", ",", 
     "0.3"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"NeventsDiscret", "[", 
   RowBox[{"m_", ",", "ProdChannel_", ",", "couplinglist_"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"NevDiscret", ",", "NpotTimes\[Chi]val", ",", "zshift"}], "}"}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Max", "[", 
        RowBox[{
         RowBox[{"mLLPmin", "[", "ProdChannel", "]"}], ",", 
         "mmin\[Epsilon]"}], "]"}], "<", "m", "<", 
       RowBox[{"Min", "[", 
        RowBox[{
         RowBox[{"mLLPmax", "[", "ProdChannel", "]"}], ",", 
         "mmax\[Epsilon]"}], "]"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"integrandtab", "=", 
        RowBox[{"TableIntegrandDiscret", "[", 
         RowBox[{"m", ",", "ProdChannel", ",", "\"\<True\>\""}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NpotTimes\[Chi]val", "[", "coupling_", "]"}], "=", 
        RowBox[{"NpotGivenExperiment", "*", 
         RowBox[{"ProbLLP", "[", 
          RowBox[{"m", ",", "coupling", ",", "ProdChannel"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"lowerbound", ",", "upperbound"}], "}"}], "=", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"LowerBoundEstimate", "[", 
           RowBox[{"m", ",", "ProdChannel"}], "]"}], ",", 
          RowBox[{"UpperBoundEstimate", "[", 
           RowBox[{"m", ",", "ProdChannel"}], "]"}]}], "}"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"brvis", "=", 
        RowBox[{"BrVis", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NevDiscret", "[", "coupling_", "]"}], ":=", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"0.1", "lowerbound"}], "<", "coupling", "<", 
           RowBox[{"(*", "1.5", "*)"}], 
           RowBox[{"2", "upperbound"}]}], ",", 
          RowBox[{
           RowBox[{"NpotTimes\[Chi]val", "[", "coupling", "]"}], "*", "brvis",
            "*", 
           RowBox[{"sumcompile", "[", 
            RowBox[{"tableprefac", "[", 
             RowBox[{"integrandtab", ",", "m", ",", 
              RowBox[{"c\[Tau]LLP", "[", 
               RowBox[{"m", ",", "coupling"}], "]"}], ",", "1", ",", "0."}], 
             "]"}], "]"}]}], ",", "0."}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"m", ",", 
           RowBox[{"couplinglist", "[", 
            RowBox[{"[", "i", "]"}], "]"}], ",", 
           RowBox[{"NevDiscret", "[", 
            RowBox[{"couplinglist", "[", 
             RowBox[{"[", "i", "]"}], "]"}], "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"i", ",", "1", ",", 
           RowBox[{"Length", "[", "couplinglist", "]"}], ",", "1"}], "}"}]}], 
        "]"}]}], ",", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"m", ",", 
          RowBox[{"couplinglist", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", "0."}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "couplinglist", "]"}], ",", "1"}], "}"}]}], 
       "]"}]}], "]"}]}], "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellChangeTimes->{{3.897200964730176*^9, 3.897200965970766*^9}, {
   3.89720118259857*^9, 3.8972011870868115`*^9}, {3.8972012433916793`*^9, 
   3.8972012434804716`*^9}, {3.8972021109080114`*^9, 3.897202111357911*^9}, {
   3.897205130000824*^9, 3.8972051305748835`*^9}, 3.897206599004672*^9, {
   3.8972085445054307`*^9, 3.8972085493226857`*^9}, {3.897208729717713*^9, 
   3.897208782995672*^9}, {3.8972323557542253`*^9, 3.897232355758215*^9}, {
   3.8972325208882675`*^9, 3.897232579312927*^9}, {3.8972330183637056`*^9, 
   3.8972330186824365`*^9}, {3.8972330557477093`*^9, 
   3.8972330786629725`*^9}, {3.8972331885872264`*^9, 
   3.8972331892740192`*^9}, {3.897233372953797*^9, 3.8972334102237387`*^9}, {
   3.897233632248149*^9, 3.8972337068313646`*^9}, {3.897233770343194*^9, 
   3.897233794850586*^9}, {3.897234027583762*^9, 3.897234039222018*^9}, 
   3.902727371095085*^9, {3.903789674824919*^9, 3.9037896748651905`*^9}, {
   3.903790316364489*^9, 3.903790327604648*^9}, 3.903791118373599*^9, {
   3.903793681334241*^9, 3.903793681337234*^9}, {3.903793815495824*^9, 
   3.9037938405670385`*^9}, {3.9110273360582485`*^9, 3.911027382154455*^9}, {
   3.9110275909078875`*^9, 3.9110276162959757`*^9}, {3.911027735769429*^9, 
   3.9110277360519323`*^9}, {3.91102782490703*^9, 3.9110278664472694`*^9}, {
   3.911027908345337*^9, 3.9110279086712365`*^9}, 3.913867583368688*^9, {
   3.9138687734466343`*^9, 3.9138687783364944`*^9}, 3.913869043987434*^9, {
   3.91386913849867*^9, 3.91386914700126*^9}, {3.9138718044634438`*^9, 
   3.9138718044763327`*^9}, {3.9138744265895786`*^9, 
   3.9138744439740767`*^9}, {3.915642996438535*^9, 3.9156429964465075`*^9}, {
   3.9166711739039955`*^9, 3.9166711755719423`*^9}, {3.9166727968540945`*^9, 
   3.9166728372092457`*^9}},
 CellTags->{
  "Number-of-events-computation+sensitivity", "Acceptance-computation"},
 CellLabel->
  "In[757]:=",ExpressionUUID->"f14e7503-0c2b-42e6-82b3-09c8d2837343"]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Number of events - slow (using built-in Mathematica functions Interpolation, \
NIntegrate)\
\>", "Subsection",
 CellChangeTimes->{{3.916673042143861*^9, 3.9166730501366386`*^9}},
 CellTags->{
  "Number-of-events-computation+sensitivity", 
   "Acceptance-computation"},ExpressionUUID->"c29e3e81-7da0-4ea9-b871-\
a5deff1aa7dc"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Differential", " ", "decay", " ", "probability", " ", 
     FractionBox["1", "ldecay"], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "l"}], "/", "ldecay"}], "]"}]}], ",", " ", 
    RowBox[{
    "where", " ", "l", " ", "is", " ", "expressed", " ", "in", " ", "terms", 
     " ", "of", " ", "the", " ", "longitudinal", " ", "displacement", " ", 
     "z", " ", "and", " ", "polar", " ", "angle", " ", "\[Theta]", " ", "as", 
     " ", 
     RowBox[{"z", "/", "cos\[Theta]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Differential", " ", "decay", " ", "probability", " ", 
     RowBox[{"(", 
      RowBox[{"1", "/", "ldecay"}], ")"}], 
     RowBox[{"Exp", "[", 
      RowBox[{
       RowBox[{"-", "l"}], "/", "ldecay"}], "]"}]}], ",", " ", 
    RowBox[{
    "where", " ", "l", " ", "is", " ", "expressed", " ", "in", " ", "terms", 
     " ", "of", " ", "the", " ", "longitudinal", " ", "displacement", " ", 
     "z", " ", "and", " ", "polar", " ", "angle", " ", "\[Theta]", " ", "as", 
     " ", 
     RowBox[{"z", "/", "cos\[Theta]"}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"PdecayDensity", "[", 
      RowBox[{
      "mLLP_", ",", "coupling_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", 
       "zLLP_"}], "]"}], "=", 
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "zLLP"}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Cos", "[", "\[Theta]LLP", "]"}], "*", 
          RowBox[{"ldecayLLP", "[", 
           RowBox[{"mLLP", ",", "coupling", ",", "ELLP"}], "]"}]}], ")"}]}], 
       "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Abs", "[", 
         RowBox[{"Cos", "[", "\[Theta]LLP", "]"}], "]"}], "*", 
        RowBox[{"ldecayLLP", "[", 
         RowBox[{"mLLP", ",", "coupling", ",", "ELLP"}], "]"}]}], ")"}]}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{
    "The", " ", "integrand", " ", "determining", " ", "the", " ", 
     "differential", " ", "rate", " ", "for", " ", "events"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"IntegrandLLP", "[", 
       RowBox[{
       "mLLP_", ",", "coupling_", ",", "\[Theta]LLP_", ",", "ELLP_", ",", 
        "zLLP_", ",", "prod"}], "]"}], "=", 
      RowBox[{
       RowBox[{"DoubleDistrLLPint", "[", 
        RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "ELLP", ",", "prod"}], "]"}],
        "*", 
       RowBox[{"PdecayDensity", "[", 
        RowBox[{
        "mLLP", ",", "coupling", ",", "\[Theta]LLP", ",", "ELLP", ",", 
         "zLLP"}], "]"}], "*", 
       RowBox[{"AzimuthalAcceptanceInt", "[", 
        RowBox[{"\[Theta]LLP", ",", "zLLP"}], "]"}], "*", 
       RowBox[{"DecayAcceptanceInt", "[", 
        RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "ELLP", ",", "zLLP"}], 
        "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntegralLLP", "[", 
     RowBox[{"mLLP_", ",", "coupling_", ",", "ProdChannel_"}], "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{
        RowBox[{"IntegrandLLP", "[", 
         RowBox[{"mLLP", ",", "coupling", ",", "\[Theta]LLP", ",", 
          RowBox[{"Exp", "[", "ELLP", "]"}], ",", "zLLP", ",", 
          "ProdChannel"}], "]"}], 
        RowBox[{"Exp", "[", "ELLP", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]LLP", ",", "\[Theta]minExp", ",", "\[Theta]maxExp"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"ELLP", ",", 
        RowBox[{"Log", "[", "mLLP", "]"}], ",", 
        RowBox[{"Log", "[", 
         RowBox[{"ELLPmax", "[", 
          RowBox[{"mLLP", ",", "\[Theta]LLP", ",", "ProdChannel"}], "]"}], 
         "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"zLLP", ",", 
        RowBox[{"zmin\[Theta]", "[", "\[Theta]LLP", "]"}], ",", 
        RowBox[{"zmax\[Theta]", "[", "\[Theta]LLP", "]"}]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<AdaptiveMonteCarlo\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NeventsInt", "[", 
     RowBox[{"mLLP_", ",", "coupling_", ",", "ProdChannel_"}], "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mLLPmin", "[", "ProdChannel", "]"}], "\[LessEqual]", "mLLP", 
        "\[LessEqual]", 
        RowBox[{"mLLPmax", "[", "ProdChannel", "]"}]}], "&&", 
       RowBox[{
        RowBox[{"BrVis", "[", "mLLP", "]"}], "!=", "0"}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0.1", 
          RowBox[{"LowerBoundEstimate", "[", 
           RowBox[{"mLLP", ",", "ProdChannel"}], "]"}]}], "<", "coupling", 
         "<", 
         RowBox[{"2", 
          RowBox[{"UpperBoundEstimate", "[", 
           RowBox[{"mLLP", ",", "ProdChannel"}], "]"}]}]}], ",", 
        RowBox[{"NpotGivenExperiment", "*", 
         RowBox[{"ProbLLP", "[", 
          RowBox[{"mLLP", ",", "coupling", ",", "ProdChannel"}], "]"}], "*", 
         RowBox[{"IntegralLLP", "[", 
          RowBox[{"mLLP", ",", "coupling", ",", "ProdChannel"}], "]"}]}], ",",
         "0."}], "]"}], ",", "0."}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"IntegralLLPE", "[", 
     RowBox[{"mLLP_", ",", "coupling_", ",", "ProdChannel_", ",", "ELLP_"}], 
     "]"}], ":=", 
    RowBox[{"NIntegrate", "[", 
     RowBox[{
      RowBox[{"Abs", "[", 
       RowBox[{"IntegrandLLP", "[", 
        RowBox[{
        "mLLP", ",", "coupling", ",", "\[Theta]LLP", ",", "ELLP", ",", "zLLP",
          ",", "ProdChannel"}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]LLP", ",", "\[Theta]minExp", ",", "\[Theta]maxExp"}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"zLLP", ",", 
        RowBox[{"zmin\[Theta]", "[", "\[Theta]LLP", "]"}], ",", 
        RowBox[{"zmax\[Theta]", "[", "\[Theta]LLP", "]"}]}], "}"}], ",", 
      RowBox[{"Method", "\[Rule]", "\"\<AdaptiveMonteCarlo\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NeventsDiffInt", "[", 
     RowBox[{"mLLP_", ",", "coupling_", ",", "ProdChannel_", ",", "ELLP_"}], 
     "]"}], ":=", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"mLLPmin", "[", "ProdChannel", "]"}], "\[LessEqual]", "mLLP", 
        "\[LessEqual]", 
        RowBox[{"mLLPmax", "[", "ProdChannel", "]"}]}], "&&", 
       RowBox[{
        RowBox[{"BrVis", "[", "mLLP", "]"}], "!=", "0"}], "&&", 
       RowBox[{"mLLP", "<", "ELLP", "<=", 
        RowBox[{"ELLPmax", "[", 
         RowBox[{"mLLP", ",", "\[Theta]minExp", ",", "ProdChannel"}], 
         "]"}]}]}], ",", 
      RowBox[{"If", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"0.1", 
          RowBox[{"LowerBoundEstimate", "[", 
           RowBox[{"mLLP", ",", "ProdChannel"}], "]"}]}], "<", "coupling", 
         "<", 
         RowBox[{"2", 
          RowBox[{"UpperBoundEstimate", "[", 
           RowBox[{"mLLP", ",", "ProdChannel"}], "]"}]}]}], ",", 
        RowBox[{"NpotGivenExperiment", "*", 
         RowBox[{"ProbLLP", "[", 
          RowBox[{"mLLP", ",", "coupling", ",", "ProdChannel"}], "]"}], "*", 
         RowBox[{"IntegralLLPE", "[", 
          RowBox[{"mLLP", ",", "coupling", ",", "ProdChannel", ",", "ELLP"}], 
          "]"}]}], ",", "0."}], "]"}], ",", "0."}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.916847573666503*^9, 3.9168475797177978`*^9}},
 CellTags->{
  "Number-of-events-computation+sensitivity", "Acceptance-computation"},
 CellLabel->
  "In[759]:=",ExpressionUUID->"372d3cc6-07f2-41da-ad5e-4f1e21f8559a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Tests", "Section",
 CellChangeTimes->{{3.8972012736109533`*^9, 3.897201275449023*^9}, {
  3.9166730149125247`*^9, 3.916673017271925*^9}, {3.9166730902782764`*^9, 
  3.9166730910359907`*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"7d9414c6-173d-\
4020-8288-2252992857f1"],

Cell[CellGroupData[{

Cell["Total number of events", "Subsubsection",
 CellChangeTimes->{{3.8921113169894333`*^9, 3.8921113174761143`*^9}, {
  3.9166730956740427`*^9, 3.91667309842237*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"50da66da-b4fd-\
4c78-8af0-d2d0bf37a480"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "This", " ", "is", " ", "a", " ", "comparison", " ", "between", " ", 
     "the", " ", "slow", " ", "and", " ", "fast", " ", "integration", " ", 
     RowBox[{"methods", ".", " ", "For"}], " ", "the", " ", "selected", " ", 
     "mass", " ", "and", " ", "production", " ", "channel"}], ",", " ", 
    RowBox[{
    "the", " ", "numbers", " ", "of", " ", "events", " ", "obtained", " ", 
     "using", " ", "the", " ", "methods", " ", "should", " ", "agree", " ", 
     "within", " ", "10", "%"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"If", " ", "the", " ", "agreement", " ", "is", " ", "worse"}], 
    ",", " ", 
    RowBox[{
    "there", " ", "may", " ", "be", " ", "a", " ", "few", " ", "reasons"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{"1", ")"}], " ", "The", " ", "grid", " ", "for", " ", "the", " ",
      "fast", " ", "method", " ", "is", " ", "not", " ", "dense", " ", 
     RowBox[{"enough", ".", " ", "Try"}], " ", "to", " ", "increase", " ", 
     "the", " ", "grid", " ", "density", " ", 
     RowBox[{"(", 
      RowBox[{
      "OutGrid\[Theta]final", ",", " ", "OutGridEfinal", ",", " ", 
       "OutGridzfinal"}], ")"}], " ", "to", " ", "see", " ", "whether", " ", 
     "the", " ", "agreement", " ", 
     RowBox[{"improves", ".", " ", "Sometimes"}]}], ",", " ", 
    RowBox[{
    "even", " ", "a", " ", "slightly", " ", "denser", " ", "grid", " ", "for",
      " ", 
     RowBox[{"e", ".", "g", ".", " ", "z"}], " ", "may", " ", "lead", " ", 
     "to", " ", "a", " ", "significant", " ", "improvement", " ", "in", " ", 
     "the", " ", "agrement"}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"2", ")"}], " ", "The", " ", "Monte"}], "-", 
      RowBox[{
      "Carlo", " ", "integrator", " ", "for", " ", "the", " ", "slow", " ", 
       "method", " ", "fails", " ", "to", " ", "evaluate", " ", 
       "properly"}]}], ";", " ", 
     RowBox[{
     "this", " ", "may", " ", "happen", " ", "if", " ", "the", " ", "range", 
      " ", "of", " ", "the", " ", "integration", " ", "over", " ", "energies",
       " ", "is", " ", "too", " ", "large", " ", "compared", " ", "to", " ", 
      "the", " ", "domain", " ", "where", " ", "most", " ", "of", " ", "the", 
      " ", "events", " ", "actually", " ", "are", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"off", "-", 
         RowBox[{
         "axis", " ", "experiments", " ", "such", " ", "as", " ", "MATHUSLA", 
          " ", "and", " ", "ANUBIS"}]}], ")"}], ".", " ", "Another"}], " ", 
      "symptom", " ", "is", " ", "that", " ", "for", " ", "the", " ", "given",
       " ", "mass", " ", "and", " ", "coupling", " ", "the", " ", "integral", 
      " ", "\"\<jumps\>\""}]}], ",", " ", 
    RowBox[{"i", ".", "e", "."}], ",", " ", 
    RowBox[{
    "returns", " ", "values", " ", "with", " ", "large", " ", "error"}]}], 
   "*)"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "A", " ", "separate", " ", "discussion", " ", "should", " ", "be", " ", 
     "made", " ", "for", " ", "the", " ", "couplings", " ", "belong", " ", 
     "to", " ", "the", " ", "domain", " ", "c\[Tau]", " ", "\[Gamma]", " ", 
     RowBox[{
      RowBox[{"<<", " ", 
       SubscriptBox["z", "experiment"]}], ".", " ", "The"}], " ", 
     "discrepancy", " ", "may", " ", "be", " ", "significant"}], ",", " ", 
    RowBox[{
    "and", " ", "the", " ", "reason", " ", "is", " ", "insufficient", " ", 
     "grid", " ", "density", " ", "for", " ", "the", " ", "fast", " ", 
     "integration", " ", 
     RowBox[{"method", ".", " ", "However"}]}], ",", " ", 
    RowBox[{
    "due", " ", "to", " ", "the", " ", "exponential", " ", "suppression", " ",
      "of", " ", "the", " ", "number", " ", "of", " ", "events"}], ",", " ", 
    RowBox[{
    "this", " ", "may", " ", "be", " ", "compensated", " ", "by", " ", "a", 
     " ", "tiny", " ", "shift", " ", "in", " ", "the", " ", "coupling"}], ",",
     " ", 
    RowBox[{
    "so", " ", "the", " ", "discrepancy", " ", "should", " ", "be", " ", 
     "considered", " ", "as", " ", 
     RowBox[{"appropriate", "."}]}]}], "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"ProdTest", "=", 
     RowBox[{"ProductionList", "[", 
      RowBox[{"[", "2", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mtest", "=", 
     RowBox[{"Max", "[", 
      RowBox[{
       FractionBox[
        RowBox[{
         RowBox[{"mLLPmax", "[", "ProdTest", "]"}], "+", 
         RowBox[{"mLLPmin", "[", "ProdTest", "]"}]}], "2"], ",", 
       RowBox[{"1.2", "*", "mmin\[Epsilon]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"\[Epsilon]2list", "=", 
     RowBox[{"(*", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         SuperscriptBox["10", 
          RowBox[{"-", "12"}]], ",", 
         RowBox[{"3", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "12"}]]}], ",", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "12"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "11"}]], ",", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "11"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "10"}]], ",", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "10"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "9"}]], ",", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "9"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "8"}]], ",", 
         RowBox[{"2", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]]}], ",", 
         RowBox[{"4", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "8"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "7"}]], ",", 
         RowBox[{"5", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]]}], ",", 
         RowBox[{"6", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]]}], ",", 
         RowBox[{"7", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]]}], ",", 
         RowBox[{"8", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]]}], ",", 
         RowBox[{"9", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "7"}]]}], ",", 
         SuperscriptBox["10", 
          RowBox[{"-", "6"}]], ",", 
         RowBox[{"2", "*", 
          SuperscriptBox["10", 
           RowBox[{"-", "6"}]]}]}], "}"}], "//", "N"}], "*)"}], 
     RowBox[{"Table", "[", 
      RowBox[{
       SuperscriptBox["10", "x"], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", "17."}], ",", 
         RowBox[{"-", "3."}], ",", "0.3"}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dat1", "=", 
      RowBox[{"NeventsDiscret", "[", 
       RowBox[{"mtest", ",", "ProdTest", ",", "\[Epsilon]2list"}], "]"}]}], 
     ";"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"dat2", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Epsilon]2list", "[", 
           RowBox[{"[", "i", "]"}], "]"}], ",", 
          RowBox[{"c\[Tau]LLP", "[", 
           RowBox[{"mtest", ",", 
            RowBox[{"\[Epsilon]2list", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}], ",", 
          RowBox[{"Quiet", "[", 
           RowBox[{"NeventsInt", "[", 
            RowBox[{"mtest", ",", 
             RowBox[{"\[Epsilon]2list", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "ProdTest"}], "]"}], 
           "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "\[Epsilon]2list", "]"}], ",", "1"}], 
         "}"}]}], "]"}]}], ";"}], "//", "AbsoluteTiming"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*FractionBox[SubscriptBox[\(m\), \(LLP\)], \(GeV\)]\)\>\"", 
         ",", "\"\<coupling\>\"", ",", 
         "\"\<\!\(\*FractionBox[\(c\[Tau]\), SubscriptBox[\(z\), \
\(min\)]]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(N\), \(events, fast\)]\)\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(N\), \(events, slow\)]\)\>\""}], "}"}], 
       "}"}], ",", 
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", 
            RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           FractionBox[
            RowBox[{"#", "[", 
             RowBox[{"[", "2", "]"}], "]"}], "zminExp"], "}"}], "&"}], "/@", 
         "dat2"}], ",", 
        RowBox[{"dat1", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", 
        RowBox[{"dat2", "[", 
         RowBox[{"[", 
          RowBox[{"All", ",", 
           RowBox[{"{", "3", "}"}]}], "]"}], "]"}], ",", "2"}], "]"}]}], 
     "]"}], "//", "TableForm"}]}]}]], "Input",
 CellChangeTimes->{{3.892111330393669*^9, 3.8921113703258653`*^9}, {
   3.8921114855521097`*^9, 3.8921114891326914`*^9}, {3.8921115909252915`*^9, 
   3.89211160107533*^9}, {3.892112023350475*^9, 3.8921120715940514`*^9}, {
   3.8921121043874707`*^9, 3.892112190091645*^9}, {3.892112748834139*^9, 
   3.892112748933666*^9}, {3.8921130465455704`*^9, 3.8921130470314426`*^9}, {
   3.8921131989548674`*^9, 3.8921131992395306`*^9}, {3.892113256325259*^9, 
   3.892113256434625*^9}, {3.892113458241603*^9, 3.8921135323303742`*^9}, {
   3.892116361437076*^9, 3.8921163614848557`*^9}, {3.893257780692194*^9, 
   3.893257792940939*^9}, {3.893260545232792*^9, 3.893260566765787*^9}, {
   3.896953530728937*^9, 3.896953531233162*^9}, {3.896953744363188*^9, 
   3.8969537469343243`*^9}, {3.896953883310589*^9, 3.896953884008139*^9}, {
   3.896971240286153*^9, 3.896971246695673*^9}, {3.8969733757056828`*^9, 
   3.896973378633896*^9}, {3.8969760731711082`*^9, 3.896976348233163*^9}, {
   3.8969763786206193`*^9, 3.896976403680397*^9}, {3.8969764343671703`*^9, 
   3.8969764672032614`*^9}, 3.8972088334478965`*^9, 3.8972305813039556`*^9, {
   3.897497510731538*^9, 3.89749751125323*^9}, {3.902767311298179*^9, 
   3.902767314971142*^9}, 3.913885628281992*^9, {3.9138909049631968`*^9, 
   3.9138909075735703`*^9}, {3.9138924586138153`*^9, 3.913892484937354*^9}, {
   3.913977632763244*^9, 3.9139776371781855`*^9}, {3.914060611820261*^9, 
   3.9140606165631547`*^9}, {3.914060754306946*^9, 3.914060758151827*^9}, {
   3.9140661649260087`*^9, 3.914066165299016*^9}, 3.9144928342705812`*^9, {
   3.914493274362196*^9, 3.9144932960373006`*^9}, 3.9144933745468297`*^9, {
   3.914514390791649*^9, 3.914514396799925*^9}, 3.91451500763321*^9, {
   3.9151840345413003`*^9, 3.9151840346541643`*^9}, {3.9151841490177746`*^9, 
   3.9151841512887573`*^9}, {3.9156430652941766`*^9, 3.915643065297191*^9}, 
   3.9166731411610813`*^9, {3.9168490479632063`*^9, 3.9168490515052485`*^9}, {
   3.9186662755999093`*^9, 3.918666278407646*^9}, {3.918671385069278*^9, 
   3.918671385130062*^9}, {3.918671448723364*^9, 3.9186714492693343`*^9}},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "In[765]:=",ExpressionUUID->"6962c164-b0d4-438c-bc89-a951513665ff"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"0.00005`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216529262409563`*^9, 3.9216533652373767`*^9, 
  3.928576873853774*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[768]=",ExpressionUUID->"8722ac7a-1e95-4557-8b8c-0bdf338bb66c"],

Cell[BoxData[
 FormBox[
  RowBox[{"{", 
   RowBox[{"27.2170949`", ",", "Null"}], "}"}], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216529262409563`*^9, 3.9216533652373767`*^9, 
  3.9285769010854254`*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[769]=",ExpressionUUID->"5b9fe57a-6086-42a5-b353-585bb031eff6"],

Cell[BoxData[
 FormBox[
  TagBox[GridBox[{
     {"\<\"\\!\\(\\*FractionBox[SubscriptBox[\\(m\\), \\(LLP\\)], \
\\(GeV\\)]\\)\"\>", "\<\"coupling\"\>", \
"\<\"\\!\\(\\*FractionBox[\\(c\[Tau]\\), SubscriptBox[\\(z\\), \\(min\\)]]\\)\
\"\>", "\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(events, fast\\)]\\)\"\>", "\<\"\
\\!\\(\\*SubscriptBox[\\(N\\), \\(events, slow\\)]\\)\"\>"},
     {"5.75`", "1.`*^-17", "7.15308102869978`", "0.`", "0.`"},
     {"5.75`", "1.9952623149688827`*^-17", "3.58503289268576`", "0.`", "0.`"},
     {"5.75`", "3.9810717055349855`*^-17", "1.7967727179479507`", "0.`", 
      "0.`"},
     {"5.75`", "7.943282347242789`*^-17", "0.9005195479652945`", "0.`", "0.`"},
     {"5.75`", "1.5848931924611109`*^-16", "0.4513289010720069`", "0.`", 
      "0.024084835978306948`"},
     {"5.75`", "3.1622776601683793`*^-16", "0.22620028338431564`", "0.`", 
      "0.08055532209027796`"},
     {"5.75`", "6.309573444801943`*^-16", "0.11336869427509`", "0.`", 
      "0.23144733875507648`"},
     {"5.75`", "1.2589254117941663`*^-15", "0.05681894226366848`", "0.`", 
      "0.5041502058282911`"},
     {"5.75`", "2.511886431509582`*^-15", "0.028476928490755664`", "0.`", 
      "0.7326249579786837`"},
     {"5.75`", "5.0118723362727146`*^-15", "0.01427227301248352`", "0.`", 
      "0.577093911949861`"},
     {"5.75`", "1.`*^-14", "0.007153081028699779`", "0.`", "0.`"},
     {"5.75`", "1.9952623149688828`*^-14", "0.0035850328926857597`", "0.`", 
      "0.`"},
     {"5.75`", "3.9810717055349693`*^-14", "0.001796772717947958`", "0.`", 
      "0.`"},
     {"5.75`", "7.943282347242822`*^-14", "0.0009005195479652907`", "0.`", 
      "0.`"},
     {"5.75`", "1.584893192461111`*^-13", "0.0004513289010720069`", "0.`", 
      "0.`"},
     {"5.75`", "3.162277660168379`*^-13", "0.00022620028338431563`", "0.`", 
      "0.`"},
     {"5.75`", "6.309573444801942`*^-13", "0.00011336869427509002`", "0.`", 
      "0.`"},
     {"5.75`", "1.258925411794166`*^-12", "0.00005681894226366848`", "0.`", 
      "0.`"},
     {"5.75`", "2.511886431509572`*^-12", "0.000028476928490755784`", "0.`", 
      "0.`"},
     {"5.75`", "5.011872336272715`*^-12", "0.000014272273012483519`", "0.`", 
      "0.`"},
     {"5.75`", "1.`*^-11", "7.153081028699779`*^-6", "0.`", "0.`"},
     {"5.75`", "1.9952623149688828`*^-11", "3.58503289268576`*^-6", "0.`", 
      "0.`"},
     {"5.75`", "3.9810717055349695`*^-11", "1.796772717947958`*^-6", "0.`", 
      "0.`"},
     {"5.75`", "7.94328234724279`*^-11", "9.005195479652945`*^-7", "0.`", 
      "0.`"},
     {"5.75`", "1.584893192461111`*^-10", "4.513289010720069`*^-7", "0.`", 
      "0.`"},
     {"5.75`", "3.1622776601683795`*^-10", "2.2620028338431562`*^-7", "0.`", 
      "0.`"},
     {"5.75`", "6.309573444801942`*^-10", "1.1336869427509002`*^-7", "0.`", 
      "0.`"},
     {"5.75`", "1.2589254117941663`*^-9", "5.681894226366848`*^-8", "0.`", 
      "0.`"},
     {"5.75`", "2.511886431509582`*^-9", "2.8476928490755664`*^-8", "0.`", 
      "0.`"},
     {"5.75`", "5.011872336272715`*^-9", "1.427227301248352`*^-8", "0.`", 
      "0.`"},
     {"5.75`", "1.`*^-8", "7.15308102869978`*^-9", "0.`", "0.`"},
     {"5.75`", "1.9952623149688747`*^-8", "3.585032892685774`*^-9", "0.`", 
      "0.`"},
     {"5.75`", "3.981071705534969`*^-8", "1.7967727179479582`*^-9", "0.`", 
      "0.`"},
     {"5.75`", "7.943282347242822`*^-8", "9.005195479652907`*^-10", "0.`", 
      "0.`"},
     {"5.75`", "1.584893192461111`*^-7", "4.513289010720069`*^-10", "0.`", 
      "0.`"},
     {"5.75`", "3.162277660168379`*^-7", "2.2620028338431563`*^-10", "0.`", 
      "0.`"},
     {"5.75`", "6.309573444801917`*^-7", "1.1336869427509047`*^-10", "0.`", 
      "0.`"},
     {"5.75`", "1.2589254117941661`*^-6", "5.681894226366848`*^-11", "0.`", 
      "0.`"},
     {"5.75`", "2.5118864315095823`*^-6", "2.8476928490755664`*^-11", "0.`", 
      "0.`"},
     {"5.75`", "5.011872336272715`*^-6", "1.4272273012483519`*^-11", "0.`", 
      "0.`"},
     {"5.75`", "0.00001`", "7.153081028699778`*^-12", "0.`", "0.`"},
     {"5.75`", "0.000019952623149688746`", "3.5850328926857744`*^-12", "0.`", 
      "0.`"},
     {"5.75`", "0.000039810717055349695`", "1.796772717947958`*^-12", "0.`", 
      "0.`"},
     {"5.75`", "0.00007943282347242822`", "9.005195479652906`*^-13", "0.`", 
      "0.`"},
     {"5.75`", "0.0001584893192461111`", "4.513289010720069`*^-13", "0.`", 
      "0.`"},
     {"5.75`", "0.00031622776601683794`", "2.262002833843156`*^-13", "0.`", 
      "0.`"},
     {"5.75`", "0.0006309573444801917`", "1.1336869427509047`*^-13", "0.`", 
      "0.`"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Function[BoxForm`e$, 
    TableForm[BoxForm`e$]]], TraditionalForm]], "Output",
 CellChangeTimes->{3.9216529262409563`*^9, 3.9216533652373767`*^9, 
  3.92857690109411*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[770]//TableForm=",ExpressionUUID->"ad3edb42-8acb-4803-8f54-\
769fd77f9e1f"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Differential number of events", "Subsection",
 CellChangeTimes->{{3.892111289211891*^9, 3.892111293865343*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"f2457af1-76a9-\
47ab-b482-5799da6309cc"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "Variable", " ", "=", " ", "\"\<\!\(\*SubscriptBox[\(E\), \(X\)]\)\>\""}],
     ",", "\"\<\!\(\*SubscriptBox[\(z\), \(X\)]\)\>\"", ",", 
    RowBox[{
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)\>\"", ".", " ", "The"}], 
     " ", "number", " ", "belongs", " ", "to", " ", "the", " ", "column", " ",
      "in", " ", "the", " ", "tabulated", " ", "data"}]}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"iVal", ":=", 
    RowBox[{"Association", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\)\>\"", " ", "\[Rule]", "2"}], 
       ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(LLP\)]\)\>\"", "\[Rule]", 
        "1"}], ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(z\), \(LLP\)]\)\>\"", "\[Rule]", "3"}]}], 
      "}"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\[CapitalDelta]xvals", "[", 
      "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\)\>\"", "]"}], ":=", 
     "\[CapitalDelta]Evals"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{
     "\[CapitalDelta]xvals", "[", 
      "\"\<\!\(\*SubscriptBox[\(z\), \(LLP\)]\)\>\"", "]"}], "=", 
     "\[CapitalDelta]zvals"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"\[CapitalDelta]xvals", "[", 
        RowBox[{
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)\>\"", ",", "prod"}], 
        "]"}], "=", 
       RowBox[{"\[CapitalDelta]\[Theta]vals", "[", "prod", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LegendX", ":=", 
    RowBox[{"Association", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\)\>\"", "\[Rule]", 
        "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\) [GeV]\>\""}], ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(LLP\)]\)\>\"", "\[Rule]", 
        "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(LLP\)]\) [rad]\>\""}], ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(z\), \(LLP\)]\)\>\"", "\[Rule]", " ", 
        "\"\<\!\(\*SubscriptBox[\(z\), \(LLP\)]\) [m]\>\""}]}], "}"}], 
     "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"LegendY", ":=", 
    RowBox[{"Association", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\)\>\"", "\[Rule]", 
        "\"\<\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(dE\), \
\(LLP\)]\) [\!\(\*SuperscriptBox[\(GeV\), \(-1\)]\)]\>\""}], ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(\[Theta]\), \(LLP\)]\)\>\"", "\[Rule]", 
        "\"\<\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(d\
\[Theta]\), \(LLP\)]\) [\!\(\*SuperscriptBox[\(rad\), \(-1\)]\)]\>\""}], ",", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(z\), \(LLP\)]\)\>\"", "\[Rule]", " ", 
        "\"\<\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(dz\), \
\(LLP\)]\) [\!\(\*SuperscriptBox[\(m\), \(-1\)]\)]\>\""}]}], "}"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{"(*", 
    RowBox[{"Differential", " ", "number", " ", "of", " ", "events"}], "*)"}],
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NeventsDifferentialDiscretProd", "[", 
     RowBox[{"m_", ",", "ProdChannel_", ",", "coupling_", ",", "Variable_"}], 
     "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "NpotTimes\[Chi]val", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"ival", "=", 
        RowBox[{"iVal", "[", "Variable", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"NpotTimes\[Chi]val", "=", 
        RowBox[{"NpotGivenExperiment", "*", 
         RowBox[{"ProbLLP", "[", 
          RowBox[{"m", ",", "coupling", ",", "ProdChannel"}], "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tablegrid0", "=", 
        RowBox[{"TableIntegrandDiscret", "[", 
         RowBox[{"m", ",", "ProdChannel", ",", "\"\<True\>\""}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"OutGridEfinalTemp", "=", 
        RowBox[{"OutGridEnergy", "[", 
         RowBox[{
          RowBox[{"N", "[", "m", "]"}], ",", "ProdChannel"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalDelta]Evals", "=", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Rest", "[", 
           SuperscriptBox["10", "OutGridEfinalTemp"], "]"}], "-", 
          RowBox[{"Most", "[", 
           SuperscriptBox["10", "OutGridEfinalTemp"], "]"}]}], ")"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"\[CapitalDelta]xval", "=", 
        RowBox[{"\[CapitalDelta]xvals", "[", "Variable", "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"c\[Tau]Val", "=", 
        RowBox[{"c\[Tau]LLP", "[", 
         RowBox[{"m", ",", "coupling"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"brvis", "=", 
        RowBox[{"BrVis", "[", "m", "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ilist", "=", 
        RowBox[{"DeleteDuplicates", "[", 
         RowBox[{"{", 
          RowBox[{"ival", ",", "1", ",", "2", ",", "3"}], "}"}], "]"}]}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"tablegrid1", "=", 
        RowBox[{"SortBy", "[", 
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"ilist", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"ilist", "[", 
                 RowBox[{"[", "2", "]"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", 
                RowBox[{"ilist", "[", 
                 RowBox[{"[", "3", "]"}], "]"}], "]"}], "]"}], ",", 
              RowBox[{"#", "[", 
               RowBox[{"[", "4", "]"}], "]"}]}], "}"}], "&"}], "/@", 
           RowBox[{"tableGridPrefac", "[", 
            RowBox[{"tablegrid0", ",", "m", ",", "c\[Tau]Val", ",", "0."}], 
            "]"}]}], ",", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}], ",", 
             RowBox[{"#", "[", 
              RowBox[{"[", "3", "]"}], "]"}]}], "}"}], "&"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"GridQuantity", "=", 
        RowBox[{
         RowBox[{"tablegrid1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", 
         "DeleteDuplicates"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"LengthPerVariable", "=", 
        RowBox[{
         RowBox[{"Length", "[", "tablegrid1", "]"}], "/", 
         RowBox[{"Length", "[", "GridQuantity", "]"}]}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"tab1", "=", 
        RowBox[{"NdiffCompiled", "[", 
         RowBox[{
         "tablegrid1", ",", "GridQuantity", ",", "LengthPerVariable", ",", 
          RowBox[{"NpotTimes\[Chi]val", "*", "brvis"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"Join", "[", 
        RowBox[{
         RowBox[{"tab1", "[", 
          RowBox[{"[", 
           RowBox[{"All", ",", 
            RowBox[{"{", "1", "}"}]}], "]"}], "]"}], ",", 
         RowBox[{"Partition", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"tab1", "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "*", 
            SuperscriptBox["\[CapitalDelta]xval", 
             RowBox[{"-", "1"}]]}], ",", "1"}], "]"}], ",", "2"}], "]"}]}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NeventsDifferentialDiscret", "[", 
     RowBox[{"m_", ",", "coupling_", ",", "Variable_"}], "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
       "NdiffInt", ",", "LegendList", ",", "QuantityMinMax", ",", 
        "ValueMinMax"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"prodlisttemp", "=", 
        RowBox[{"{", "}"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"Do", "[", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Max", "[", 
             RowBox[{
              RowBox[{"mLLPmin", "[", "prod", "]"}], ",", "mmin\[Epsilon]"}], 
             "]"}], "<", "m", "<", 
            RowBox[{"Min", "[", 
             RowBox[{
              RowBox[{"mLLPmax", "[", "prod", "]"}], ",", "mmax\[Epsilon]"}], 
             "]"}]}], ",", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"prodlisttemp", "=", 
             RowBox[{"Join", "[", 
              RowBox[{"prodlisttemp", ",", 
               RowBox[{"{", "prod", "}"}]}], "]"}]}], ";", 
            "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NdiffData", "[", "prod", "]"}], "=", 
             RowBox[{"NeventsDifferentialDiscretProd", "[", 
              RowBox[{"m", ",", "prod", ",", "coupling", ",", "Variable"}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"XvalminmaxNdiff", "=", 
             RowBox[{
              RowBox[{
               RowBox[{"Select", "[", 
                RowBox[{
                 RowBox[{"NdiffData", "[", "prod", "]"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], ">", 
                   SuperscriptBox["10", 
                    RowBox[{"-", "40"}]]}], "&"}]}], "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "//", "MinMax"}]}], 
            ";", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"NdiffInt", "[", 
              RowBox[{"X_", ",", "prod"}], "]"}], "=", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{
                RowBox[{"XvalminmaxNdiff", "[", 
                 RowBox[{"[", "1", "]"}], "]"}], "<", "X", "<", 
                RowBox[{"XvalminmaxNdiff", "[", 
                 RowBox[{"[", "2", "]"}], "]"}]}], ",", 
               RowBox[{"Evaluate", "[", 
                RowBox[{"10", "^", 
                 RowBox[{
                  RowBox[{"Interpolation", "[", 
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log10", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "+", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "90"}]]}], "]"}]}], "}"}], "&"}], "/@", 
                    RowBox[{"NdiffData", "[", "prod", "]"}]}], ",", 
                    RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], 
                  "[", 
                  RowBox[{"Log10", "[", "X", "]"}], "]"}]}], "]"}], ",", 
               "0"}], "]"}]}]}]}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NdiffInt", "[", 
         RowBox[{"X_", ",", "\"\<Total\>\""}], "]"}], "=", 
        RowBox[{"Sum", "[", 
         RowBox[{
          RowBox[{"NdiffInt", "[", 
           RowBox[{"X", ",", "prod"}], "]"}], ",", 
          RowBox[{"{", 
           RowBox[{"prod", ",", "prodlisttemp"}], "}"}]}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"LegendList", "=", 
        RowBox[{"Join", "[", 
         RowBox[{
          RowBox[{"{", "\"\<Total\>\"", "}"}], ",", "prodlisttemp"}], "]"}]}],
        ";", "\[IndentingNewLine]", 
       RowBox[{"QuantityMinMax", "=", 
        RowBox[{
         RowBox[{"Flatten", "[", 
          RowBox[{
           RowBox[{"Table", "[", 
            RowBox[{
             RowBox[{"MinMax", "[", 
              RowBox[{
               RowBox[{"NdiffData", "[", "prod", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", "1"}], "]"}], "]"}], "]"}], ",", 
             RowBox[{"{", 
              RowBox[{"prod", ",", "prodlisttemp"}], "}"}]}], "]"}], ",", 
           "1"}], "]"}], "//", "MinMax"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"ValueMinMax", "=", 
        RowBox[{"Max", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{
             RowBox[{"NdiffData", "[", "#", "]"}], "[", 
             RowBox[{"[", 
              RowBox[{"All", ",", "2"}], "]"}], "]"}], "]"}], "&"}], "/@", 
          "prodlisttemp"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"NdiffInt", "[", 
            RowBox[{"X", ",", "prod"}], "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"prod", ",", "LegendList"}], "}"}]}], "]"}], ",", 
         "LegendList", ",", "QuantityMinMax", ",", "ValueMinMax"}], "}"}]}]}],
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"mvaltest", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"FacilityGivenExperiment", "==", "\"\<ESS\>\""}], ",", "0.04", 
       ",", "0.2"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"couplingvaltest", "=", 
     RowBox[{"1.4", 
      RowBox[{"LowerBoundEstimate", "[", 
       RowBox[{"mvaltest", ",", "\"\<Eta\>\""}], "]"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"quantity", "=", "\"\<\!\(\*SubscriptBox[\(E\), \(LLP\)]\)\>\""}],
     ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"NdiffTab", "[", "X_", "]"}], ",", "LegendList", ",", 
       "QuantityMinMax", ",", "ValueMinMax"}], "}"}], "=", 
     RowBox[{"NeventsDifferentialDiscret", "[", 
      RowBox[{"mvaltest", ",", "couplingvaltest", ",", "quantity"}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"prch", "=", 
        RowBox[{"LegendList", "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"NdiffInt", "[", 
         RowBox[{"X_", ",", "prch"}], "]"}], "=", 
        RowBox[{
         RowBox[{"NdiffTab", "[", "X", "]"}], "[", 
         RowBox[{"[", "i", "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "LegendList", "]"}]}], "}"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"plotdiff", "=", 
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NdiffInt", "[", 
          RowBox[{"X", ",", "prod"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"prod", ",", "LegendList"}], "}"}]}], "]"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"X", ",", 
        RowBox[{"QuantityMinMax", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"QuantityMinMax", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"Frame", "\[Rule]", "True"}], ",", 
      RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"All", ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "5"}]], ",", 
           RowBox[{"2", "ValueMinMax"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", "Red"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"Darker", "@", "Green"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", "Cyan"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Magenta"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue", ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", "Red"}], ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"Darker", "@", "Green"}]}], ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "20"}], "]"}], "&"}], "/@", "LegendList"}], ",",
          "Right"}], "]"}]}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"LegendX", "[", "quantity", "]"}], " ", ",", 
         RowBox[{"LegendY", "[", "quantity", "]"}]}], "}"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", " ", "18"}], "]"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
           "SelectedExperiment", ",", 
            "\"\<. \!\(\*SubscriptBox[\(m\), \(LLP\)]\) = \>\"", ",", 
            "mvaltest", ",", 
            "\"\< GeV, \!\(\*SuperscriptBox[\(\[Epsilon]\), \(2\)]\) = \>\"", 
            ",", 
            RowBox[{"couplingvaltest", "//", "N"}]}], "}"}], "]"}], ",", "18",
          ",", "Black"}], "]"}]}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.8921163996135225`*^9, 3.8921164016036096`*^9}, {
   3.8921164560955544`*^9, 3.892116475031265*^9}, {3.892116516434699*^9, 
   3.8921165782759094`*^9}, {3.8921166461579666`*^9, 
   3.8921166470109124`*^9}, {3.8921167042134895`*^9, 3.892116729930051*^9}, {
   3.8927049818255663`*^9, 3.8927049991222277`*^9}, {3.8929115471019087`*^9, 
   3.892911593659387*^9}, {3.8929721720425777`*^9, 3.892972173350433*^9}, {
   3.8929722208773427`*^9, 3.8929722211847763`*^9}, {3.8932578131000147`*^9, 
   3.893257813645747*^9}, {3.8934746693595037`*^9, 3.893474675301323*^9}, {
   3.8935154039618015`*^9, 3.893515450284458*^9}, {3.893515943430369*^9, 
   3.893515962817915*^9}, 3.893516005738713*^9, {3.893516036174548*^9, 
   3.893516050479193*^9}, {3.893516088577403*^9, 3.893516089018369*^9}, {
   3.893516189974946*^9, 3.8935161902213464`*^9}, {3.8935162352543807`*^9, 
   3.8935162734266047`*^9}, {3.893516595793399*^9, 3.893516611219179*^9}, {
   3.893606026577932*^9, 3.8936060575609436`*^9}, 3.8955578364377675`*^9, {
   3.8969794021337876`*^9, 3.89697940417612*^9}, {3.897206579842867*^9, 
   3.897206594529684*^9}, {3.8972085445254173`*^9, 3.8972085493347607`*^9}, {
   3.897208919899889*^9, 3.897208931547951*^9}, {3.8972292867488394`*^9, 
   3.89722929702377*^9}, {3.8972306661965404`*^9, 3.8972306721050725`*^9}, {
   3.8975308343870435`*^9, 3.897530869153321*^9}, {3.8975310380863085`*^9, 
   3.89753104461861*^9}, {3.897531900362914*^9, 3.897531900595253*^9}, {
   3.9027678930208297`*^9, 3.9027678936528425`*^9}, 3.9138856283067827`*^9, {
   3.913890462711218*^9, 3.9138904981911244`*^9}, {3.9140605326688194`*^9, 
   3.9140605336567073`*^9}, {3.915643065351285*^9, 3.9156430653710737`*^9}, {
   3.9166731600344844`*^9, 3.9166731605717616`*^9}, {3.916673280296506*^9, 
   3.9166732810468893`*^9}, {3.9166733394090853`*^9, 
   3.9166733620337677`*^9}, {3.9166734368007584`*^9, 3.91667343719798*^9}, {
   3.9168077827280064`*^9, 3.916807788256571*^9}, {3.9168079412877655`*^9, 
   3.9168079435920115`*^9}, {3.9168080122680883`*^9, 
   3.9168080259923544`*^9}, {3.9168080589461308`*^9, 
   3.9168081500481606`*^9}, {3.916809193876444*^9, 3.9168092210599623`*^9}, {
   3.916849826843279*^9, 3.91684984339956*^9}, {3.9168547378018303`*^9, 
   3.916854867699237*^9}, 3.9168549657426524`*^9, {3.928577456960396*^9, 
   3.928577519546383*^9}},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "In[893]:=",ExpressionUUID->"fe3b5af1-2caa-4f01-a4d7-4be7307a3eac"],

Cell[BoxData[
 FormBox[
  TemplateBox[{
    GraphicsBox[{{{{}, {}, 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           GrayLevel[0]], 
          LineBox[CompressedData["
1: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
OfjWZ0J1qpoJzdmx7/STOfh/lAc6NA==
           "]]}, Annotation[#, "Charting`Private`Tag$140097#1"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[0, 0, 1]], 
          LineBox[CompressedData["
1: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
           "]]}, Annotation[#, "Charting`Private`Tag$140097#2"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[
            NCache[
             Rational[2, 3], 0.6666666666666666], 0, 0]], 
          LineBox[CompressedData["
1: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
ufnSVuCbd7t6Ftmw4P//H/4fElkzGQ==
           "]]}, Annotation[#, "Charting`Private`Tag$140097#3"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[0, 
            NCache[
             Rational[4, 9], 0.4444444444444444], 0]], 
          LineBox[CompressedData["
1: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
+z9XePlh
           "]]}, Annotation[#, "Charting`Private`Tag$140097#4"]& ], 
        TagBox[{
          Directive[
           Opacity[1.], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[0, 
            NCache[
             Rational[2, 3], 0.6666666666666666], 
            NCache[
             Rational[2, 3], 0.6666666666666666]]], 
          LineBox[CompressedData["
1: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
5IlsJEBW8Yu1f3ydog4Eqrf1vxag4KGzzW6DU1SPVNFLLcwN90A6kCmkPq35
EVD8SoAmxdIec2cJKYcqP3seZqWjU3uiZYTUZxsJA5MCATqpkh+btkRI9Qat
YXe9EKCroXM1VVYJqUPSb78uwlz6ya3u3joh9TXLtsLluQD1Q+1/WpuElH/A
+cVR+QIkk750zqtdQqpF/IVfwSMBWv8v/L7hPiGlkfKj7ud9AXKy/rqj2kFI
nV+yYNGCO1i/+RkX2z2FlP4m7xrPGwLU7Tm91PGMkEpsylbITBcg0Sbrtz/D
hdSQQ4tnQwrON0aGN5kipG6c0SZWJAjQlMjFc7JFQor3fNT1e6gAKTv9ULn2
Vkg5blYulgkSoO2lm8pUm4VUYbPpfCN/nE8Qnb3mu5ByG370OsNTgEq6bDML
h4RUVeCnuXXuAtSnX7Bx05SQUp4j5Tx9HOdzdcHnGtY/yj91Q8GyozifSa9g
89n/qJal7hLWhwXI+LWi61ZqmjreVjX3oyyuN3LQZvmWaWrg+M2JuPkCZBb0
yljSZJpyowd2bpYRINuNlks+OExTJxZrZefOxfVXHvnFOWya8vZK1z07W4CS
301YhddMUwa5kCXHEqB0jbKtLu+nKWqvr9tThgBlxsbr7O6apvT/5ema0QXo
vqm6jOzQNKWzdem7yGkCvWlxrM+WnqHUe+ZN0P4S6HtX7eZy6xlKTvLX1m99
BOqDq9p3Ds5Qsk8XSYf+JtBwxpFF0cdnqHn77T+SvwgkdGQx956ZoSRvN3tY
fSfQnO9rC79en6E4G1BKzScCSW/l3qu6M0Oxvk0eOtpDINmcppT7T2YoeqSW
BrebQIou//l4lc1QwtacEugkkGrNOmerdzPU34DeqM52At+3eHvXt85Q48rk
vtNtBNKMbjFS7JmhxqqslOZ/IJD2YOZqzs8ZymBGTFKrhUC6Jh5KP4dnqN38
iePPGwlEPaKkaqdmKFu9L1X6dQRS1u0br+LQwPdUQeimSgKpC881x8nS4MmA
y8TelwQyCHwVo7iOBqrdNV2n0wlk3H3GehRoUHU/QvVJCoHMwEClzIgGLv5G
//VdJtBhWvnLI7vw+3Kvpu1iCBQRWPf1oQMNNpjf5RsFESiuOy432IkGX5Sc
DwX4EygZzP3MXGgQPqx076kPgW5cm79ZxZ0Gy950jQ56EugurU1ywpMGddEp
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
3zeyQfSOPS3iEh85aTDK7baw4Z9qtfRIAh+lNQbMa9nOhqHMNUv2Y37vNeW4
04QNdySbr7hjniXn/ajUnA0tPRsKl+H3DV+N0vSt2MB6dP/zN8x+9u67ntiy
QSN4oegNvN5jZn/qUkc27N8Trm6L41Pc9k1XzoUNT4cP+DTh+K36HCNi3djw
uag2LRrnFxvT3SLiyQaJeL2SbVgPWsuHk+P+bDiyat6cN1ivNactil2D2XCJ
GbzaD+vrym+U/BrGhjeN/fvWYP07HavvN0WzQe5kRea9NOw/d+s/4wQ2bDbU
qnLG/m3PKTUuvsKGSWNF0c3XsN+Dhd9zM9iQYzyePQ/7f8U/VzH6MRvEjTN6
H93kozpS3Z3zjA29VWJaybh+uCU5r/0L2PBqm1doUDYfefEybVxK2fDfNmOl
3bje7t0j73yuxOtV5XmsycH+7U79a1WL/dhGFhG4PuVHF2xpaGDDeOV5SQ6u
X9PLiYlbW9hQt3XMvg/zed25vagd5ysrYjx9D/evzuhVOt1s4MQbOak9wP4p
R9Sp/MD+h6P04Fx8X8715bGm2PDCI19iVT4fVTPNlrXPsAHmGZl54/103mLZ
zkcsDpQ9bbz8Cu83trAj1n42BxqFg8QWvH+Fm9YveKXAgQmp2nfq+Dz51UFb
7LWFA6kOfhv2VfLRrRUftu7YwYHYZY+iA6r46HBw7jHlPRwI+/Ot88Zb3L9U
HR40WHOgYsI2rRf3rzaPYu0V/3Hg278YPS7uf1dKUyw5Jzmw4kzn9Tn4/mYh
e/J0pzcHTtHUeLK4X9a/Ui68EMwBLrO4dTG+v0dJ/OtyOMeBHaFzQBP32+2O
zXTdixy4xLbJXov7MS//npJkLAc6w27NNsD9ukIkzOj7JQ4sEhnz3Ib7e5i1
rdPrZA5cOFk9GoL7v+F97YjEdA7Mibxo9AXfF16bfqs2vM2B+YXi3zLx/SM/
bYtZRgEHVMlZaiq9+HxcLeZo9ZkDSc+2Clh4Hgqyjwms1uACa6OqphePQDzD
vcxILS5syKTKRvF8lqBKhO3Q5cIZtqX1iVkEyuq/c6F2IxemysPPuuH5rtqv
PLHOggs9dcHK/8kQyMI+akGsNRfs3mlO988nUNdG86sm9lzoqOluccXz4TDv
c0bDES68r1p/wVWeQH79t5XjXblgVtl3sB/Pk+wGt2zTE1yoL7+63hXPm1F5
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

           "]]}, Annotation[#, "Charting`Private`Tag$140097#5"]& ]}}, {}}, {
     DisplayFunction -> Identity, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None}, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      Ticks -> {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0]}, 
      AxesOrigin -> {0.8942908176358206, -11.512925464970204`}, 
      FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> MachinePrecision, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
      DisplayFunction -> Identity, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {0, 0}}, PlotRangeClipping -> True, ImagePadding -> 
      All, DisplayFunction -> Identity, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None, "ClippingRange" -> {{{0.8942908176358186, 
         5.933548494756826}, {-30.372530902690528`, -1.5321581874838228`}}, {{
         0.8942908176358186, 
         5.933548494756826}, {-11.512925464970229`, -1.5321581874838228`}}}}, 
      DisplayFunction -> Identity, AspectRatio -> 
      NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
      AxesLabel -> {None, None}, 
      AxesOrigin -> {0.8942908176358186, -11.512925464970229`}, 
      CoordinatesToolOptions -> {"DisplayFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& ), "CopiedValueFunction" -> ({
          Exp[
           Part[#, 1]], 
          Exp[
           Part[#, 2]]}& )}, DisplayFunction :> Identity, 
      Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
         FormBox[
          TagBox[
          "\"\\!\\(\\*SubscriptBox[\\(dN\\), \
\\(ev\\)]\\)/\\!\\(\\*SubscriptBox[\\(dE\\), \\(LLP\\)]\\) \
[\\!\\(\\*SuperscriptBox[\\(GeV\\), \\(-1\\)]\\)]\"", HoldForm], 
          TraditionalForm], None}, {
         FormBox[
          TagBox[
          "\"\\!\\(\\*SubscriptBox[\\(E\\), \\(LLP\\)]\\) [GeV]\"", HoldForm],
           TraditionalForm], None}}, FrameStyle -> Directive[
        GrayLevel[0], 18], 
      FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
        None}, PlotLabel -> FormBox[
        StyleBox[
         TemplateBox[{
          "\"SHiP-ECN3\"", 
           "\". \\!\\(\\*SubscriptBox[\\(m\\), \\(LLP\\)]\\) = \"", "0.2`", 
           "\" GeV, \\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\) = \
\"", "3.450730754067349`*^-16"}, "RowDefault"], 18, 
         GrayLevel[0], StripOnInput -> False], TraditionalForm], 
      PlotRange -> {All, {-11.512925464970229`, -0.8475379342504006}}, 
      PlotRangeClipping -> True, 
      PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
      Ticks -> {Automatic, Automatic}}], 
    FormBox[
     FormBox[
      TemplateBox[{
        StyleBox["\"Total\"", 20, StripOnInput -> False], 
        StyleBox["\"Bremsstrahlung\"", 20, StripOnInput -> False], 
        StyleBox["\"Eta\"", 20, StripOnInput -> False], 
        StyleBox["\"EtaPr\"", 20, StripOnInput -> False], 
        StyleBox["\"Rho0\"", 20, StripOnInput -> False]}, "LineLegend", 
       DisplayFunction -> (FormBox[
         StyleBox[
          StyleBox[
           PaneBox[
            TagBox[
             GridBox[{{
                TagBox[
                 GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {20, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 
                    NCache[
                    Rational[2, 3], 0.6666666666666666]]], {}}}, AspectRatio -> 
                    Full, ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                  GridBoxAlignment -> {
                   "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                  AutoDelete -> False, 
                  GridBoxDividers -> {
                   "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                  GridBoxItemSize -> {
                   "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                  GridBoxSpacings -> {
                   "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
              GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
              AutoDelete -> False, 
              GridBoxItemSize -> {
               "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
              GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
             "Grid"], Alignment -> Left, AppearanceElements -> None, 
            ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
            "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
          FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
          False], TraditionalForm]& ), 
       InterpretationFunction :> (RowBox[{"LineLegend", "[", 
          RowBox[{
            RowBox[{"{", 
              RowBox[{
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    
                    TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                  "]"}], ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
                ",", 
                RowBox[{"Directive", "[", 
                  RowBox[{
                    RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                    TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[2, 3], 
                    Rational[2, 3]]|>, "RGBColorSwatchTemplate"]}], "]"}]}], 
              "}"}], ",", 
            RowBox[{"{", 
              RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
            RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
            RowBox[{"LabelStyle", "\[Rule]", 
              RowBox[{"{", "}"}]}], ",", 
            RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
       Editable -> True], TraditionalForm], TraditionalForm]},
   "Legended",
   DisplayFunction->(FormBox[
     GridBox[{{
        TagBox[
         ItemBox[
          PaneBox[
           TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
           BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
         "SkipImageSizeLevel"], 
        ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
      GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
      AutoDelete -> False, GridBoxItemSize -> Automatic, 
      BaselinePosition -> {1, 1}], TraditionalForm]& ),
   Editable->True,
   InterpretationFunction->(FormBox[
     RowBox[{"Legended", "(", 
       RowBox[{#, ",", 
         RowBox[{"Placed", "[", 
           RowBox[{#2, ",", "After"}], "]"}]}], ")"}], TraditionalForm]& )], 
  TraditionalForm]], "Output",
 CellChangeTimes->{
  3.921652927477542*^9, 3.921653387313248*^9, 3.928577219787634*^9, {
   3.928577514432034*^9, 3.9285775203122854`*^9}},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[906]=",ExpressionUUID->"38ae0e1d-0b79-433b-81da-d01da49fcde1"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exporting tabulated number of events", "Title",
 CellChangeTimes->{{3.8850207904521627`*^9, 3.885020796464762*^9}, 
   3.886649940088234*^9},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"a1ac207f-e5a6-\
41ed-9016-23014b2a6c3e"],

Cell[CellGroupData[{

Cell["Definitions", "Chapter",
 CellChangeTimes->{{3.8850542017641125`*^9, 3.885054203349573*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"61d66c6b-87da-\
4009-946a-eb32cc005fd8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Nevents\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Tabulated Nevents\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Nevents-LLP\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Tabulated Nevents\>\"", ",", "LLPdirName"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Nevents-LLP-experiment\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Tabulated Nevents\>\"", ",", "LLPdirName", ",", 
      "SelectedExperiment"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"DirectoryQ", "[", 
        RowBox[{"directory", "[", "#", "]"}], "]"}]}], ",", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"directory", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{
    "\"\<Nevents\>\"", ",", "\"\<Nevents-LLP\>\"", ",", 
     "\"\<Nevents-LLP-experiment\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  "\"\<Filenames with tabulated \!\(\*SubscriptBox[\(N\), \(events\)]\):\>\"",
   "]"}], "\[IndentingNewLine]", 
 RowBox[{"Do", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"FilenameNeventsInt", "[", "prod", "]"}], "=", 
    RowBox[{"ToString", "@", 
     RowBox[{"StringForm", "[", 
      RowBox[{"\"\<Nevents_``_``_at_``_Npot=``.dat\>\"", ",", 
       RowBox[{"Sequence", "@@", 
        RowBox[{"{", 
         RowBox[{"LLPdirName", ",", "prod", ",", "SelectedExperiment", ",", 
          RowBox[{
           RowBox[{"NpotGivenExperiment", "//", "CForm"}], "//", 
           "ToString"}]}], "}"}]}]}], "]"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"prod", ",", "ProductionList"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"FilenameNeventsInt", "[", "#", "]"}], "&"}], "/@", 
  "ProductionList"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"mRangeExport", "[", "prod", "]"}], "=", 
     RowBox[{
      RowBox[{"Join", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
         "0.021", ",", "0.026", ",", "0.031", ",", "0.036", ",", "0.041", ",",
           "0.046", ",", "0.051", ",", "0.056", ",", "0.061", ",", "0.066", 
          ",", "0.07", ",", "0.08", ",", "0.09", ",", "0.1", ",", "0.11", ",",
           "0.12", ",", "0.125", ",", "0.13", ",", "0.14", ",", "0.15", ",", 
          "0.17", ",", "0.2", ",", "0.215", ",", "0.25", ",", "0.3", ",", 
          "0.35", ",", "0.4", ",", "0.45", ",", "0.5", ",", "0.54", ",", 
          "0.55", ",", "0.6", ",", "0.65", ",", "0.7", ",", "0.72", ",", 
          "0.73", ",", "0.74", ",", "0.75", ",", "0.76", ",", "0.77", ",", 
          "0.775", ",", "0.78", ",", "0.785", ",", "0.79", ",", "0.795", ",", 
          "0.8", ",", "0.81", ",", "0.82", ",", "0.84", ",", "0.9", ",", 
          "0.95", ",", "0.97", ",", "1", ",", "1.005", ",", "1.01", ",", 
          "1.012", ",", "1.015", ",", "1.017", ",", "1.02", ",", "1.025", ",",
           "1.03", ",", "1.05", ",", "1.07", ",", "1.09", ",", "1.1", ",", 
          "1.2", ",", "1.3", ",", "1.4", ",", "1.5", ",", "1.6", ",", "1.7", 
          ",", "1.8", ",", "1.9", ",", "2.", ",", "2.1", ",", "2.2", ",", 
          "2.3", ",", "2.4", ",", "2.5", ",", "2.6", ",", "2.7", ",", "2.8", 
          ",", "2.9", ",", "3.", ",", "3.05", ",", "3.1", ",", "3.2"}], "}"}],
         ",", 
        RowBox[{"Table", "[", 
         RowBox[{"mLLP", ",", 
          RowBox[{"{", 
           RowBox[{"mLLP", ",", "3.21", ",", 
            RowBox[{"Max", "[", 
             RowBox[{"Table", "[", 
              RowBox[{
               RowBox[{"mLLPmax", "[", "prod", "]"}], ",", 
               RowBox[{"{", 
                RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], 
             "]"}], ",", 
            FractionBox[
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Max", "[", 
                RowBox[{"Table", "[", 
                 RowBox[{
                  RowBox[{"mLLPmax", "[", "prod", "]"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], 
                "]"}], "-", "3"}], ")"}], "10"]}], "}"}]}], "]"}]}], "]"}], "//",
       "N"}]}], "\[IndentingNewLine]", ",", 
    RowBox[{"{", 
     RowBox[{"prod", ",", "ProductionList"}], "}"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"couplingsRangeExport", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      SuperscriptBox["10", "x"], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "18.8"}], ",", 
        RowBox[{"-", "6"}], ",", "0.03"}], "}"}]}], "]"}], "//", "N"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.8850528402073092`*^9, 3.885052964529935*^9}, {
   3.8850529967024455`*^9, 3.88505313318991*^9}, {3.885053172661522*^9, 
   3.885053247354876*^9}, {3.885053717249408*^9, 3.8850537696983976`*^9}, {
   3.885054057416253*^9, 3.88505420740788*^9}, {3.8850542428480587`*^9, 
   3.885054257815028*^9}, {3.885054905514982*^9, 3.885054927992525*^9}, {
   3.88523276755499*^9, 3.885232776819412*^9}, {3.8854556204578223`*^9, 
   3.8854556494874506`*^9}, {3.8854560165278835`*^9, 
   3.8854561921232824`*^9}, {3.8854563516684437`*^9, 
   3.8854563631681647`*^9}, {3.885456439233843*^9, 3.885456605782855*^9}, {
   3.8854567400235205`*^9, 3.885456743964001*^9}, {3.885542660052145*^9, 
   3.8855427304549437`*^9}, {3.8855427881537523`*^9, 3.885542788237467*^9}, {
   3.8855430067620525`*^9, 3.885543013668437*^9}, 3.885966882096207*^9, {
   3.8859669421437807`*^9, 3.8859669421488247`*^9}, {3.885968641323983*^9, 
   3.8859686709916077`*^9}, {3.8859700818035088`*^9, 3.885970116005333*^9}, {
   3.8859726427933483`*^9, 3.8859726621626787`*^9}, {3.8859727076000075`*^9, 
   3.885972770558454*^9}, {3.8860482606809826`*^9, 3.886048270758037*^9}, {
   3.88684029377495*^9, 3.8868404665509343`*^9}, {3.8868414104888535`*^9, 
   3.8868414225159225`*^9}, {3.8890817621378937`*^9, 3.889081762140961*^9}, {
   3.88908460476051*^9, 3.889084604763502*^9}, {3.892188794960414*^9, 
   3.8921888564262486`*^9}, 3.892276504856449*^9, {3.892705877974984*^9, 
   3.8927058964920373`*^9}, {3.89270597977682*^9, 3.892706000159081*^9}, 
   3.892890275686406*^9, 3.892890565684495*^9, {3.8928906683120165`*^9, 
   3.8928906691645193`*^9}, {3.8928921066767316`*^9, 3.892892205794788*^9}, {
   3.8928923091023135`*^9, 3.8928923130853605`*^9}, {3.892893113220736*^9, 
   3.8928931146965623`*^9}, {3.8950540496809034`*^9, 
   3.8950540764821167`*^9}, {3.8950762756864758`*^9, 
   3.8950763083391457`*^9}, {3.895129045455325*^9, 3.895129092773349*^9}, {
   3.896335021554511*^9, 3.896335031114843*^9}, {3.8972293188333693`*^9, 
   3.897229318835312*^9}, {3.904712366400467*^9, 3.9047124185854053`*^9}, {
   3.9047124502939787`*^9, 3.9047124639937067`*^9}, {3.907408873347437*^9, 
   3.907408874085919*^9}, {3.907409082450775*^9, 3.90740910474655*^9}, {
   3.9138856464879036`*^9, 3.9138856464899817`*^9}, {3.913890462716206*^9, 
   3.9138904627202673`*^9}, 3.9138915048050413`*^9, {3.9138915838094063`*^9, 
   3.913891621993849*^9}, {3.9145150076454177`*^9, 3.91451500764841*^9}, {
   3.9151858824445596`*^9, 3.915185899852844*^9}, {3.9156430654976215`*^9, 
   3.9156430655218973`*^9}},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "In[305]:=",ExpressionUUID->"5ff1e429-21ed-463f-b582-04b4f7f4c30e"],

Cell[BoxData["\<\"Filenames with tabulated \\!\\(\\*SubscriptBox[\\(N\\), \
\\(events\\)]\\):\"\>"], "Print",
 CellChangeTimes->{3.92165292785477*^9, 3.9216533879043255`*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "During evaluation of \
In[305]:=",ExpressionUUID->"7238b77b-420f-4e25-8116-a4e9d1df83b5"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"Nevents_DP_Bremsstrahlung_at_FASER2-FPF_Npot=2.16e17.dat\"\>", 
   ",", "\<\"Nevents_DP_DrellYan_at_FASER2-FPF_Npot=2.16e17.dat\"\>", 
   ",", "\<\"Nevents_DP_Eta_at_FASER2-FPF_Npot=2.16e17.dat\"\>", 
   ",", "\<\"Nevents_DP_EtaPr_at_FASER2-FPF_Npot=2.16e17.dat\"\>", 
   ",", "\<\"Nevents_DP_Pi0_at_FASER2-FPF_Npot=2.16e17.dat\"\>", 
   ",", "\<\"Nevents_DP_Rho0_at_FASER2-FPF_Npot=2.16e17.dat\"\>"}], 
  "}"}]], "Output",
 CellChangeTimes->{3.921652927866296*^9, 3.9216533879167347`*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[311]=",ExpressionUUID->"834e7819-a02e-4c8f-995d-1f681f65324d"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Exporting", "Chapter",
 CellChangeTimes->{{3.885054212114191*^9, 3.885054213032151*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"87d344ed-2d96-\
4345-98c4-a81cc45c1c16"],

Cell[CellGroupData[{

Cell["Common definition", "Section",
 CellChangeTimes->{{3.8921886043857117`*^9, 3.8921886076155424`*^9}},
 CellTags->
  "Number-of-events-computation+sensitivity",ExpressionUUID->"cd6a76b8-81e9-\
467a-97b6-be4172b2931e"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"BlockExport", "[", "ProdChannel_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "mlist", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"mlist", "=", 
      RowBox[{"mRangeExport", "[", "ProdChannel", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"TabFrom", "=", 
      RowBox[{"ParallelTable", "[", 
       RowBox[{
        RowBox[{"Quiet", "[", 
         RowBox[{"NeventsDiscret", "[", 
          RowBox[{
           RowBox[{"mlist", "[", 
            RowBox[{"[", "k", "]"}], "]"}], ",", "ProdChannel", ",", 
           "couplingsRangeExport"}], "]"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "1", ",", 
          RowBox[{"Length", "[", "mlist", "]"}], ",", "1"}], "}"}]}], "]"}]}],
      ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"directory", "[", "\"\<Nevents-LLP-experiment\>\"", "]"}], 
          ",", 
          RowBox[{"FilenameNeventsInt", "[", "ProdChannel", "]"}]}], "}"}], 
        "]"}], ",", 
       RowBox[{"Flatten", "[", 
        RowBox[{"TabFrom", ",", "1"}], "]"}], ",", "\"\<Table\>\""}], 
      "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Monitor", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"prod", "=", 
        RowBox[{"ProductionList", "[", 
         RowBox[{"[", "j", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"BlockExport", "[", "prod", "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", 
        RowBox[{"Length", "[", "ProductionList", "]"}], ",", "1"}], "}"}]}], 
     "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Row", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"ProgressIndicator", "[", 
        RowBox[{"j", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"Length", "[", "ProductionList", "]"}]}], "}"}]}], "]"}], 
       ",", "\"\< Production mode = \>\"", ",", 
       RowBox[{"ProductionList", "[", 
        RowBox[{"[", "j", "]"}], "]"}], ",", "\"\< (\>\"", ",", " ", "j", 
       ",", "\"\</\>\"", ",", 
       RowBox[{"Length", "[", "ProductionList", "]"}], ",", "\"\<)\>\""}], 
      "}"}], "]"}]}], "]"}], "//", "AbsoluteTiming"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"icounter", ">", 
    RowBox[{"Length", "[", "SelectedExperimentList", "]"}]}], ",", 
   RowBox[{"BlockEvaluation", "[", "\"\<Sensitivity\>\"", "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8921886102299604`*^9, 3.892188661864987*^9}, {
   3.892188696661598*^9, 3.892188782889353*^9}, {3.8921888713769283`*^9, 
   3.8921888914281387`*^9}, {3.892190937661848*^9, 3.8921909466626697`*^9}, {
   3.8922765048644934`*^9, 3.8922765048725324`*^9}, {3.892541051864915*^9, 
   3.8925411081031237`*^9}, {3.8925422299627275`*^9, 
   3.8925422591259813`*^9}, {3.892542627960807*^9, 3.8925426356350746`*^9}, {
   3.8927104746862555`*^9, 3.892710508465253*^9}, {3.8950703812229633`*^9, 
   3.895070389767537*^9}, 3.9027274561413517`*^9, {3.9037911184286413`*^9, 
   3.90379111843118*^9}, 3.9037940600873704`*^9, 3.9138695182916346`*^9, {
   3.9138696778224015`*^9, 3.9138697217311115`*^9}, 3.9145150076546106`*^9, {
   3.9146674986335506`*^9, 3.9146675043101397`*^9}, 3.915643065529893*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "In[314]:=",ExpressionUUID->"1f4946c3-23ce-4e70-bc72-93b0971707fc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"43.7778423`", ",", "Null"}], "}"}]], "Output",
 CellChangeTimes->{3.921652892916254*^9, 3.921652992718718*^9, 
  3.921653431729292*^9},
 CellTags->"Number-of-events-computation+sensitivity",
 CellLabel->
  "Out[315]=",ExpressionUUID->"9a31912e-1d96-458e-a452-7015a24bd277"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Computing sensitivities", "Title",
 CellChangeTimes->{{3.885020809493571*^9, 3.88502081261261*^9}},
 CellTags->
  "Sensitivity",ExpressionUUID->"20138663-2b9a-41fa-8718-2e1c02355f2d"],

Cell[CellGroupData[{

Cell["Basic definitions", "Chapter",
 CellChangeTimes->{{3.9138314745388813`*^9, 3.913831477098402*^9}},
 CellTags->
  "Sensitivity",ExpressionUUID->"e53fa63b-a742-40cf-a205-b2502f696dbd"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"LLPdirName", "=", "\"\<DP\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Sensitivity\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Sensitivity domains\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Sensitivity-LLP\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"directory", "[", "\"\<Sensitivity\>\"", "]"}], ",", 
      "LLPdirName"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{"DirectoryQ", "[", 
        RowBox[{"directory", "[", "#", "]"}], "]"}]}], ",", 
      RowBox[{"CreateDirectory", "[", 
       RowBox[{"directory", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"{", 
    RowBox[{"\"\<Sensitivity\>\"", ",", "\"\<Sensitivity-LLP\>\""}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Nevents-LLP\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Tabulated Nevents\>\"", ",", "LLPdirName"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dropdownDialog", "[", 
   RowBox[{"list_", ",", "phrase_"}], "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"PopupMenu", "[", 
        RowBox[{
         RowBox[{"Dynamic", "[", "choice", "]"}], ",", "list"}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<OK\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"infoDialog", "[", "phrase_", "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", "\"\<\>\""}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"TextCell", "[", "phrase", "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<Proceed\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"selectionDialog", "[", 
   RowBox[{"list_", ",", "phrase_"}], "]"}], ":=", 
  RowBox[{"DialogInput", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"choice", "=", 
      RowBox[{"{", "}"}]}], "}"}], ",", 
    RowBox[{"Column", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "phrase", "}"}], "]"}], ",", 
       RowBox[{"Pane", "[", 
        RowBox[{
         RowBox[{"TogglerBar", "[", 
          RowBox[{
           RowBox[{"Dynamic", "[", "choice", "]"}], ",", "list", ",", 
           RowBox[{"Appearance", "->", 
            RowBox[{"\"\<Vertical\>\"", "->", 
             RowBox[{"{", 
              RowBox[{"Automatic", ",", "5"}], "}"}]}]}]}], "]"}], ",", 
         RowBox[{"ImageSize", "->", 
          RowBox[{"{", 
           RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
         RowBox[{"Scrollbars", "->", 
          RowBox[{"{", 
           RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}], ",", 
       RowBox[{"Button", "[", 
        RowBox[{"\"\<OK\>\"", ",", 
         RowBox[{"DialogReturn", "[", "choice", "]"}]}], "]"}]}], "}"}], 
     "]"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExperimentDirectoriesListNevents", "=", 
   RowBox[{"Select", "[", 
    RowBox[{
     RowBox[{"FileNames", "[", 
      RowBox[{"\"\<*\>\"", ",", 
       RowBox[{"directory", "[", "\"\<Nevents-LLP\>\"", "]"}], ",", "1"}], 
      "]"}], ",", "DirectoryQ"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Print", "[", 
  RowBox[{
  "\"\<List of available experiments with tabulated \!\(\*SubscriptBox[\(N\), \
\(events\)]\) for \>\"", " ", "<>", "LLPdirName", "<>", "\"\<:\>\""}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExperimentsListNevents", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"FileNameTake", "[", 
       RowBox[{
        RowBox[{"ExperimentDirectoriesListNevents", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", 
        RowBox[{"-", "1"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", "1", ",", 
        RowBox[{"Length", "[", "ExperimentDirectoriesListNevents", "]"}], ",",
         "1"}], "}"}]}], "]"}], "//", "Sort"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"ExperimentsListNevents", "//", "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Length", "[", "ExperimentsListNevents", "]"}], "\[Equal]", "0"}],
    ",", 
   RowBox[{
   "Print", "[", 
    "\"\<No experiment is available, generate first the acceptance for the \
given experiment using module 1\>\"", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"SelectedExperimentList", "=", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Length", "[", "ExperimentsListNevents", "]"}], "\[NotEqual]",
         "0"}], ",", 
       RowBox[{"selectionDialog", "[", 
        RowBox[{
        "ExperimentsListNevents", ",", 
         "\"\<Select the experiments for which the sensitivity will be \
computed:\>\""}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"icounter", "=", "1"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"BlockEvaluation", "[", "tag_", "]"}], ":=", 
     RowBox[{"Block", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nb", "=", 
         RowBox[{"EvaluationNotebook", "[", "]"}]}], ";", "\n", 
        RowBox[{"NotebookFind", "[", 
         RowBox[{"nb", ",", "tag", ",", "All", ",", "CellTags"}], "]"}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{"SelectionEvaluate", "[", "nb", "]"}]}]}], 
      "\[IndentingNewLine]", "]"}]}], ";", "\[IndentingNewLine]", 
    RowBox[{"Do", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
       "BlockEvaluation", "[", "\"\<Sensitivity-computation\>\"", "]"}], 
       ";"}], "\[IndentingNewLine]", ",", 
      RowBox[{"{", 
       RowBox[{"icounter", ",", "1", ",", 
        RowBox[{"Length", "[", "SelectedExperimentList", "]"}], ",", "1"}], 
       "}"}]}], "]"}]}]}], "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.9138315400875525`*^9, 3.91383154039198*^9}, {
   3.913891670421169*^9, 3.913891673276001*^9}, {3.913955090567734*^9, 
   3.9139550906928043`*^9}, 3.914667466503278*^9, 3.915262345075774*^9, {
   3.9156430655419803`*^9, 3.9156430655634193`*^9}, 3.9158204210190673`*^9},
 CellTags->"Sensitivity",
 CellLabel->
  "In[317]:=",ExpressionUUID->"99f6e797-c44c-4cdb-b806-3efcbdcad495"],

Cell[BoxData["\<\"List of available experiments with tabulated \
\\!\\(\\*SubscriptBox[\\(N\\), \\(events\\)]\\) for DP:\"\>"], "Print",
 CellChangeTimes->{3.920109008099286*^9, 3.920109077238841*^9, 
  3.9216529928323746`*^9, 3.9216534319164963`*^9},
 CellTags->"Sensitivity",
 CellLabel->
  "During evaluation of \
In[317]:=",ExpressionUUID->"e8af3040-2df8-4c6d-8041-d7858d04414c"],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {"\<\"advSNDfar\"\>"},
     {"\<\"CHARM-lepton\"\>"},
     {"\<\"FACET\"\>"},
     {"\<\"FASER2\"\>"},
     {"\<\"FASER2-FPF\"\>"},
     {"\<\"LHCb-downstream\"\>"},
     {"\<\"NA62-dump\"\>"},
     {"\<\"NuCal\"\>"},
     {"\<\"Pre-FACET\"\>"},
     {"\<\"Pre-FACET-1\"\>"},
     {"\<\"Pre-FACET-muon\"\>"},
     {"\<\"Pre-FACET-standard\"\>"},
     {"\<\"SHiP-ECN3\"\>"}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{3.9201090081209335`*^9, 3.920109077240841*^9, 
  3.9216529928381214`*^9, 3.9216534319265585`*^9},
 CellTags->"Sensitivity",
 CellLabel->
  "Out[328]//TableForm=",ExpressionUUID->"ad763097-288e-42fc-9d69-\
b2bc43b15d15"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Specifying the experiment and interpolating tabulated number of events\
\>", "Chapter",
 CellChangeTimes->{{3.8865657605515084`*^9, 3.886565789800824*^9}, {
  3.8891547325867977`*^9, 3.8891547373469143`*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"8558a057-a38a-454c-bfce-\
bde3419e907e"],

Cell[CellGroupData[{

Cell["Selecting the experiment", "Section",
 CellChangeTimes->{{3.9139658068606853`*^9, 3.913965811150226*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"d2e4b5e5-7ca9-46d1-8935-\
925aa00d1a4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Print", "[", "\"\<Selected experiment:\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"GivenExperimentForSensitivityComputation", "=", 
  RowBox[{"SelectedExperimentList", "[", 
   RowBox[{"[", 
    RowBox[{"icounter", "++"}], "]"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CondANUBIS", "=", 
   RowBox[{"MemberQ", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "\"\<ANUBIS-shaft-volume-1\>\"", ",", "\"\<ANUBIS-shaft-volume-2\>\"", 
       ",", "\"\<ANUBIS-shaft-volume-3\>\""}], "}"}], ",", 
     "GivenExperimentForSensitivityComputation"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"CondANUBIS", "\[Equal]", "True"}], ",", 
   RowBox[{"infoDialog", "[", 
    RowBox[{"Row", "[", 
     RowBox[{
     "{", "\"\<One of the modules of ANUBIS-shaft is chosen. The full \
sensitivity includes three modules. The importing will be over all modules, \
so for all ot the the sensitivity has to be computed\>\"", "}"}], "]"}], 
    "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"CondANUBIS", "\[Equal]", "False"}], ",", 
    RowBox[{"GivenExperimentForSensitivityComputationList", "=", 
     RowBox[{"{", "GivenExperimentForSensitivityComputation", "}"}]}], ",", 
    RowBox[{"GivenExperimentForSensitivityComputationList", "=", 
     RowBox[{"{", 
      RowBox[{
      "\"\<ANUBIS-shaft-volume-1\>\"", ",", "\"\<ANUBIS-shaft-volume-2\>\"", 
       ",", "\"\<ANUBIS-shaft-volume-3\>\""}], "}"}]}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PathsNeventsSelected", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Do", "[", 
    RowBox[{
     RowBox[{"PathsNeventsSelected", "=", 
      RowBox[{"Join", "[", 
       RowBox[{"PathsNeventsSelected", ",", 
        RowBox[{"FileNames", "[", 
         RowBox[{"\"\<*.dat\>\"", ",", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"directory", "[", "\"\<Nevents-LLP\>\"", "]"}], ",", 
             "exp"}], "}"}], "]"}]}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"exp", ",", "GivenExperimentForSensitivityComputationList"}], 
      "}"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "Creating", " ", "the", " ", "directory", " ", "for", " ", "exporting", 
    " ", "sensitivity", " ", "curves"}], "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ExperimentFolder", "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"CondANUBIS", "\[Equal]", "True"}], ",", "\"\<ANUBIS\>\"", ",", 
     "GivenExperimentForSensitivityComputation"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"directory", "[", "\"\<Sensitivity-LLP-exp\>\"", "]"}], "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"directory", "[", "\"\<Sensitivity-LLP\>\"", "]"}], ",", 
      "ExperimentFolder"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"DirectoryQ", "[", 
     RowBox[{"directory", "[", "\"\<Sensitivity-LLP-exp\>\"", "]"}], "]"}]}], 
   ",", 
   RowBox[{"CreateDirectory", "[", 
    RowBox[{"directory", "[", "\"\<Sensitivity-LLP-exp\>\"", "]"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.886840860661646*^9, 3.886840860664637*^9}, 
   3.8890817880618696`*^9, {3.8891547447151575`*^9, 3.8891549444728413`*^9}, {
   3.8891555762544374`*^9, 3.8891555856760416`*^9}, {3.8932345510125337`*^9, 
   3.89323456368647*^9}, {3.89357120648059*^9, 3.8935714592585745`*^9}, {
   3.893571545207655*^9, 3.8935715786721*^9}, {3.8935716945595617`*^9, 
   3.8935717354831114`*^9}, {3.893572484980073*^9, 3.8935725300692596`*^9}, {
   3.895054024169799*^9, 3.8950540417214823`*^9}, 3.89684678645724*^9, 
   3.89919325721731*^9, {3.905403972343326*^9, 3.9054039725337305`*^9}, {
   3.907411978163224*^9, 3.9074119810572186`*^9}, {3.907412091826584*^9, 
   3.907412094086093*^9}, {3.9138856464971056`*^9, 3.9138856465141516`*^9}, {
   3.9138916838349504`*^9, 3.913891827396206*^9}, {3.9138921667513247`*^9, 
   3.913892172717104*^9}, {3.913892368507559*^9, 3.9138923707397146`*^9}, {
   3.913954268074481*^9, 3.9139542724904437`*^9}, 3.913954515586889*^9, {
   3.9139550482633314`*^9, 3.913955048705912*^9}, {3.913955096763817*^9, 
   3.913955158064865*^9}, {3.913955220888626*^9, 3.9139554719164515`*^9}, {
   3.9139555299768157`*^9, 3.913955594188072*^9}, {3.9139558613427095`*^9, 
   3.9139559117838964`*^9}, {3.9139559447796946`*^9, 
   3.9139560410144596`*^9}, {3.913963274949171*^9, 3.913963326902071*^9}, {
   3.9139633600739164`*^9, 3.9139635321188793`*^9}, {3.913963598616632*^9, 
   3.9139636458854485`*^9}, 3.9139640986736097`*^9, {3.9139652026009254`*^9, 
   3.9139652159221773`*^9}, {3.913965669649431*^9, 3.913965669801878*^9}, {
   3.913965852616486*^9, 3.9139658533797336`*^9}, {3.9139739848899965`*^9, 
   3.9139739939318266`*^9}, 3.9145150076636033`*^9, {3.9146674411334615`*^9, 
   3.9146674532611327`*^9}, 3.9146686803003097`*^9, {3.9156430655724087`*^9, 
   3.915643065581047*^9}, {3.9158205477529774`*^9, 3.9158205483157797`*^9}, {
   3.9158208476984944`*^9, 3.915820847707511*^9}},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "In[330]:=",ExpressionUUID->"c04809c2-412f-4207-902a-ca107db71530"],

Cell[BoxData["\<\"Selected experiment:\"\>"], "Print",
 CellChangeTimes->{3.9201090158069053`*^9, 3.9201090796048293`*^9, 
  3.9216530142612667`*^9, 3.92165764300355*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "During evaluation of \
In[330]:=",ExpressionUUID->"9bff1712-0f41-43a1-99df-af56ff75cb81"],

Cell[BoxData["\<\"FASER2-FPF\"\>"], "Output",
 CellChangeTimes->{3.920109015814824*^9, 3.9201090796078157`*^9, 
  3.9216530142638187`*^9, 3.92165764301049*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[331]=",ExpressionUUID->"f222d813-2ddf-4d19-898f-a67ef93d8532"],

Cell[BoxData["\<\"C:\\\\Users\\\\miksi\\\\Dropbox\\\\Science 2\\\\HNL and \
scalar phenomenology\\\\_SensCalc\\\\Sensitivity \
domains\\\\DP\\\\FASER2-FPF\"\>"], "Output",
 CellChangeTimes->{3.920109015814824*^9, 3.9201090796078157`*^9, 
  3.9216530142638187`*^9, 3.921657643019006*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[339]=",ExpressionUUID->"01210029-07be-4412-a717-8a972d6d50a5"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing data and interpolations", "Section",
 CellChangeTimes->{{3.9139658068606853`*^9, 3.9139658231084366`*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"8dbf4156-fa28-4b8c-98ea-\
b1e3be065ffb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
    "___", "___", "___", "___", "___", "___", "___", "___"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{"Importing", " ", "and", " ", "interpolation"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{"(*", 
   RowBox[{
   "___", "___", "___", "___", "___", "___", "___", "___", "___", "___", 
    "___", "___", "___", "___", "___", "___", "___", "___"}], "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Print", "[", "\"\<List of production channels:\>\"", "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FilenamesNeventsSelected", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"Last", "@", 
        RowBox[{"FileNameSplit", "@", 
         RowBox[{"PathsNeventsSelected", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "PathsNeventsSelected", "]"}], ",", "1"}], 
        "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"FilenameParameters", "[", "i_", "]"}], ":=", 
    RowBox[{
     RowBox[{"StringCases", "[", 
      RowBox[{
       RowBox[{"FilenamesNeventsSelected", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", 
       RowBox[{
        RowBox[{
         RowBox[{"\"\<Nevents_\>\"", "<>", "LLPdirName", "<>", "\"\<_\>\""}], 
         "~~", "mother__", "~~", "\"\<_at_\>\"", "~~", "experiment__", "~~", 
         "\"\<_Npot=\>\"", "~~", "Npot__", "~~", "\"\<.dat\>\""}], ":>", 
        RowBox[{"{", 
         RowBox[{"mother", ",", "experiment", ",", "Npot"}], "}"}]}]}], "]"}],
      "[", 
     RowBox[{"[", "1", "]"}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProductionInfoList", "=", 
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"FilenameParameters", "[", "i", "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"i", ",", "1", ",", 
         RowBox[{"Length", "[", "FilenamesNeventsSelected", "]"}], ",", "1"}],
         "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Join", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{
        "\"\<Mother\>\"", ",", "\"\<Experiment\>\"", ",", 
         "\"\<\!\(\*SubscriptBox[\(N\), \(PoT\)]\)\>\""}], "}"}], "}"}], ",", 
      "ProductionInfoList"}], "]"}], "//", "TableForm"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ProductionChannelsList", "=", 
     RowBox[{"ProductionInfoList", "[", 
      RowBox[{"[", 
       RowBox[{"All", ",", "1"}], "]"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NpotDefault", "=", 
     RowBox[{
      RowBox[{"Interpreter", "[", "\"\<Number\>\"", "]"}], "[", 
      RowBox[{
       RowBox[{"ProductionInfoList", "[", 
        RowBox[{"[", "1", "]"}], "]"}], "[", 
       RowBox[{"[", "3", "]"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NeventsTabulated", "//", "Clear"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Epsilon]reco", "[", "mLLP_", "]"}], "=", "1"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{
       "GivenExperimentForSensitivityComputation", ",", 
        "\"\<LHCb-downstream\>\""}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Epsilon]reco", "[", "mLLP_", "]"}], "=", "0.4"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{
       "GivenExperimentForSensitivityComputation", ",", "\"\<NuCal\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Epsilon]reco", "[", "mLLP_", "]"}], "=", "0.7"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"StringContainsQ", "[", 
       RowBox[{
       "GivenExperimentForSensitivityComputation", ",", "\"\<CHARM\>\""}], 
       "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"\[Epsilon]reco", "[", "mLLP_", "]"}], "=", "0.6"}]}], "]"}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{"Do", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "prod", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"prod", "=", 
         RowBox[{"ProductionChannelsList", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"(*", 
         RowBox[{
         "The", " ", "condition", " ", "if", " ", "one", " ", "sums", " ", 
          "the", " ", "number", " ", "of", " ", "events", " ", "for", " ", 
          "the", " ", "same", " ", "production", " ", "mode", " ", "over", 
          " ", "several", " ", "experiments"}], "*)"}], "\[IndentingNewLine]", 
        RowBox[{"IfprodExists", "=", 
         RowBox[{"MemberQ", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"Keys", "[", 
             RowBox[{"DownValues", "@", "NeventsTabulated"}], "]"}], "[", 
            RowBox[{"[", 
             RowBox[{"All", ",", "1", ",", "1"}], "]"}], "]"}], ",", "prod"}],
           "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NeventsTabulated", "[", "prod", "]"}], "=", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{"!", "IfprodExists"}], ",", 
           RowBox[{"Import", "[", 
            RowBox[{
             RowBox[{"PathsNeventsSelected", "[", 
              RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Table\>\""}], "]"}], 
           ",", 
           RowBox[{"Join", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"NeventsTabulated", "[", "prod", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", 
                RowBox[{"{", 
                 RowBox[{"1", ",", "2"}], "}"}]}], "]"}], "]"}], ",", 
             RowBox[{
              RowBox[{
               RowBox[{"NeventsTabulated", "[", "prod", "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", "3", "}"}]}], "]"}], "]"}], "+", 
              RowBox[{
               RowBox[{"Import", "[", 
                RowBox[{
                 RowBox[{"PathsNeventsSelected", "[", 
                  RowBox[{"[", "i", "]"}], "]"}], ",", "\"\<Table\>\""}], 
                "]"}], "[", 
               RowBox[{"[", 
                RowBox[{"All", ",", 
                 RowBox[{"{", "3", "}"}]}], "]"}], "]"}]}]}], "]"}]}], 
          "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"mminmax", "[", "prod", "]"}], ",", 
           RowBox[{"couplingminmax", "[", "prod", "]"}]}], "}"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{
              RowBox[{"NeventsTabulated", "[", "prod", "]"}], "[", 
              RowBox[{"[", 
               RowBox[{"All", ",", "#"}], "]"}], "]"}], "//", "MinMax"}], 
            ")"}], "&"}], "/@", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}]}], ";", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NevMax", "[", "prod", "]"}], "=", 
         RowBox[{
          RowBox[{
           RowBox[{"NeventsTabulated", "[", "prod", "]"}], "[", 
           RowBox[{"[", 
            RowBox[{"All", ",", "3"}], "]"}], "]"}], "//", "Max"}]}], ";", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"NevInt", "[", 
          RowBox[{"mLLP_", ",", "\[Epsilon]2_", ",", "prod"}], "]"}], "=", 
         RowBox[{
          RowBox[{"\[Epsilon]reco", "[", "mLLP", "]"}], "*", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{"mminmax", "[", "prod", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", " ", "mLLP", 
              "\[LessEqual]", 
              RowBox[{
               RowBox[{"mminmax", "[", "prod", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}], "&&", 
             RowBox[{
              RowBox[{
               RowBox[{"couplingminmax", "[", "prod", "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "\[LessEqual]", "\[Epsilon]2", 
              "\[LessEqual]", 
              RowBox[{
               RowBox[{"couplingminmax", "[", "prod", "]"}], "[", 
               RowBox[{"[", "2", "]"}], "]"}]}]}], ",", 
            RowBox[{"Evaluate", "[", 
             RowBox[{"10", "^", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Interpolation", "[", 
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Log10", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Log10", "[", 
                    RowBox[{"#", "[", 
                    RowBox[{"[", "2", "]"}], "]"}], "]"}], ",", 
                    RowBox[{"Log10", "[", 
                    RowBox[{
                    RowBox[{"#", "[", 
                    RowBox[{"[", "3", "]"}], "]"}], "+", 
                    SuperscriptBox["10", 
                    RowBox[{"-", "90"}]]}], "]"}]}], "}"}], "&"}], "/@", 
                   RowBox[{"NeventsTabulated", "[", "prod", "]"}]}], ",", 
                  RowBox[{"InterpolationOrder", "\[Rule]", "1"}]}], "]"}], 
                "[", 
                RowBox[{
                 RowBox[{"Log10", "[", "mLLP", "]"}], ",", 
                 RowBox[{"Log10", "[", "\[Epsilon]2", "]"}]}], "]"}], ")"}]}],
              "]"}], ",", "0"}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", 
      "]"}], "\[IndentingNewLine]", ",", 
     RowBox[{"{", 
      RowBox[{"i", ",", "1", ",", 
       RowBox[{"Length", "[", "ProductionInfoList", "]"}], ",", "1"}], 
      "}"}]}], "]"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"{", 
      RowBox[{"mminmaxOverall", ",", "couplingminmaxOverall"}], "}"}], "=", 
     RowBox[{
      RowBox[{
       RowBox[{"MinMax", "[", 
        RowBox[{
         RowBox[{"Table", "[", 
          RowBox[{
           RowBox[{"#", "[", "prod", "]"}], ",", 
           RowBox[{"{", 
            RowBox[{"prod", ",", "ProductionChannelsList"}], "}"}]}], "]"}], "//",
          "Flatten"}], "]"}], "&"}], "/@", 
      RowBox[{"{", 
       RowBox[{"mminmax", ",", "couplingminmax"}], "}"}]}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"NevMaxOverall", "=", 
     RowBox[{"Max", "[", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"NevMax", "[", "prod", "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"prod", ",", "ProductionChannelsList"}], "}"}]}], "]"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"NevIntOverall", "[", 
      RowBox[{"mLLP_", ",", "\[Epsilon]2_"}], "]"}], "=", 
     RowBox[{"Sum", "[", 
      RowBox[{
       RowBox[{"NevInt", "[", 
        RowBox[{"mLLP", ",", "\[Epsilon]2", ",", "prod"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"prod", ",", "ProductionChannelsList"}], "}"}]}], "]"}]}], 
    ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"pt", "[", "mLLP_", "]"}], ":=", 
    RowBox[{"LogLogPlot", "[", 
     RowBox[{
      RowBox[{"Evaluate", "[", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"NevInt", "[", 
          RowBox[{"mLLP", ",", "y", ",", "prod"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"prod", ",", "ProductionChannelsList"}], "}"}]}], "]"}], 
       "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"couplingminmaxOverall", "[", 
         RowBox[{"[", "1", "]"}], "]"}], ",", 
        RowBox[{"couplingminmaxOverall", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
      RowBox[{"PlotLegends", "\[Rule]", 
       RowBox[{"Placed", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"Style", "[", 
            RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
          "ProductionChannelsList"}], ",", "Right"}], "]"}]}], ",", 
      RowBox[{"PlotRange", "->", 
       RowBox[{"{", 
        RowBox[{"couplingminmaxOverall", ",", 
         RowBox[{"{", 
          RowBox[{
           SuperscriptBox["10", 
            RowBox[{"-", "2"}]], ",", "NevMaxOverall"}], "}"}]}], "}"}]}], 
      ",", 
      RowBox[{"Frame", "->", "True"}], ",", 
      RowBox[{"ImageSize", "->", "Large"}], ",", 
      RowBox[{"FrameLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
        "\"\<\!\(\*SuperscriptBox[\(\[Epsilon]\), \(2\)]\)\>\"", " ", ",", 
         " ", "\"\<\!\(\*SubscriptBox[\(N\), \
\(events\)]\)[\!\(\*SubscriptBox[\(m\), \(V\)]\),\!\(\*SuperscriptBox[\(\
\[Epsilon]\), \(2\)]\)]\>\""}], "}"}]}], ",", 
      RowBox[{"FrameStyle", "\[Rule]", 
       RowBox[{"Directive", "[", 
        RowBox[{"Black", ",", " ", "23"}], "]"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", "Red"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"Darker", "@", "Green"}]}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Blue", ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", "Red"}], ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", 
           RowBox[{"Darker", "@", 
            RowBox[{"Darker", "@", "Green"}]}], ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"Thick", ",", "Black", ",", 
           RowBox[{"Dashing", "[", "0.02", "]"}]}], "}"}]}], "}"}]}], ",", 
      RowBox[{"PlotLabel", "\[Rule]", 
       RowBox[{"Style", "[", 
        RowBox[{
         RowBox[{"Row", "[", 
          RowBox[{"{", 
           RowBox[{
           "ExperimentFolder", ",", 
            "\"\<. \!\(\*SubscriptBox[\(m\), \(V\)]\) = \>\"", ",", "mLLP", 
            ",", " ", "\"\< GeV\>\""}], "}"}], "]"}], ",", "20", ",", 
         "Black"}], "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"pt", "[", "0.7", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.9139740015576224`*^9, 3.913974002429924*^9}, {
  3.914060453150184*^9, 3.914060473916649*^9}, {3.914062253756744*^9, 
  3.914062273041237*^9}, {3.9145150076813545`*^9, 3.9145150076989536`*^9}, {
  3.9146674208960304`*^9, 3.9146674231345167`*^9}, {3.914670783416334*^9, 
  3.9146707834341106`*^9}, {3.9156430656011753`*^9, 3.915643065649435*^9}, {
  3.9158198101069565`*^9, 3.91581981355842*^9}, {3.9158205477702045`*^9, 
  3.915820569650995*^9}, {3.9158208477184887`*^9, 3.9158208477366295`*^9}, {
  3.917768978419938*^9, 3.9177689945791063`*^9}, {3.917852269986107*^9, 
  3.917852293159746*^9}, {3.917852599273158*^9, 3.9178525992954884`*^9}, {
  3.918668246699964*^9, 3.918668246901412*^9}, {3.920109061264347*^9, 
  3.920109061578763*^9}},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "In[340]:=",ExpressionUUID->"712e0550-86f1-4004-ba68-1c8c28691518"],

Cell[BoxData["\<\"List of production channels:\"\>"], "Print",
 CellChangeTimes->{
  3.9201090158374863`*^9, {3.9201090619644175`*^9, 3.9201090796310444`*^9}, 
   3.9216530142946568`*^9, 3.921657643068544*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "During evaluation of \
In[340]:=",ExpressionUUID->"67f75f75-6bdf-4c51-9eb3-7754f10a3628"],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Mother\"\>", "\<\"Experiment\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(PoT\\)]\\)\"\>"},
    {"\<\"Bremsstrahlung\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"},
    {"\<\"DrellYan\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"},
    {"\<\"Eta\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"},
    {"\<\"EtaPr\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"},
    {"\<\"Pi0\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"},
    {"\<\"Rho0\"\>", "\<\"FASER2-FPF\"\>", "\<\"2.16e17\"\>"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{
  3.9201090158449717`*^9, {3.920109061968417*^9, 3.920109079637049*^9}, 
   3.921653014298663*^9, 3.921657643077702*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[344]//TableForm=",ExpressionUUID->"d9e895c7-6407-435e-82e8-\
01d90752e3cc"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1:eJw1V3k4FW8bHhLHydaOEpKlRfzoU5l5zztkzVpJWasj5XeKhESLpL2oFCpK
SiilFFGK8wgRkiRbUgghsu/O+eb74/tjrrnu65p55n7u+37ed15V7oHNnqIE
QfQw1//uvVX/zn62xAgWbH355vm+OSAePWyXyuDjPR19wpdyEJjykH1AyQjU
bAeVFVfIQNtrlyL9xUYgaj+zSGSmDDiUy4SOKRrB500LeZ0/pKGwKd8wV8EI
8rcsl/2cIw0PZmilmy00goxtNk4JvtLAtRmKdZpjBGEva6PuN0pB1Y6UrUtm
G8Et3p03adlSYOTnLNcqawR3lD1aXl2TApUbcGa/tBGkXOjV+WQhBT9+hvue
YBmBozSrL+zlLHANUDdLEtBQ+WhiIuMKG8rP1hG8aRqC2BmHZu1jA3nr0pvV
UzRM8/b1cc3YoJjXr/tqnIYvOY7vTacloV4ib1HZEA29Z5K55vskwTHOsb+v
i4YNXg4udhYssH937jZVS0OaVJKZmoQ42GY5xiyoocE1/INpYdtMsE5Vv9pX
TcMsqV4Tz8KZYHGt4NSDKhqCZ63dkHJyJtBcIU+qgoY9N5qubp0SA13Rw+sb
C2mYSAxumDc4A+SM99QcfUGD1oX4ktA2EajMN5F7E0EDu7LrkQ5M8t+aDx4S
4dBQ3d9xsvB0O/8kd42pTgeG2pqe7My4QkxoLDdI/YXh0Y7G2D9u73Fop5Km
eguGHyErFvEVSnCor4Tkou8Y+hYbkOsjynBISEO5+BcMik+TcxcYfsZHYkMd
mvIwrCyChu+TtdivqtwjIgYDe0mz/p7QFjwQne/AisIgPXNj0d22FnzQKcv0
VCQGzp8XjvUbW7Hvz7uaweEYTHNOB1vP/4V9ev26d4dhyNylPLjgXhvmsRX8
KR8MGelZrYsf/8ZcY8+wblMMW35wXa2CerHLLjE9vw0YeMYiKe2ferFDaGLz
GI0h0SUzYKfGX2yW10yLUxiMLivKOXz5i1caugtV9DDcEF53FI3pw0P/bDvm
uARDr0rFooGWfnxO1TIwf4QD/g+pedcch3Ao/VvdYogDBlfPiModG8JHdpz7
WtHPgd+HK/oi7g3h/XeK1jT+4UCo+c6PF/4MYXsF48GRFg7oSz0Ofn1sGCvO
Jn1XfeLA+eTTtwKiR/ATQpt3I4UDiu0aRd/ujOF3LTNuWiRxQOjqVVCZM4br
ChuKxu9zYFhmLj+mZgyLXTiv6hrPgT4/r6ylMuPYZfavOpVoDrQZzk0yPD6O
2UvjzFPDOEBpd7E59hNYRczvkEsoBx59z04h/53ABu0WiVIhHHge1bqOFTaB
uakjAp9gDpSLki73MiZwjt7mLH1fDrzfuzDo1IJJ/O8GSfVcNw6YGkVeWlw5
iUPUf272ceHALPSfms62SRwlkR2q7MSBT+vqVbInJzGU7W486cA8r6uatUlz
Css7wHUzKw6EHxd5rHd8CpfsPixauY4Drdanw/OVpnGTma3uSQMOND6bZxWh
O42HtNTd9dZwoHpOkqTThmms0lP1OkqHAxV1RWf7vKbx4UOrDzppcCBBSvDo
/fNprHG27UfLXA508t2s8HoBPjBkZcOdzYEAV9VDrhsF+BX3RU6zDAeI8V/x
wS4CbIVPRP+U5ICY3v6BjOMC7Dsmb9UkRLAiMHC8IFeAX+858cptGoH7/vRh
9FGARb+2qX+fQHCN29Wf3SjA0c9fEI3DCAZt3bseTwpwDs86q74bgbbWmaB7
+kI8o/6FmlMngrrwFK9AIyG2NleIrGtHcKr/w3YrOyH+oda+r7YZwfHVRLwU
T4jFvp9Q/VrL1D8SIgWxQmxr1X7Z4SuCKOklv/8kC/GN19ZTX6oQ3EnILVDI
EOIVMQq1VR8RfOoevzFWIsR2dhnhlQUInO2Ubo4PCPHNXIUJu3wE67U06oKn
hbhlZejeT3kIpL/3Cu/PIOgAlo1xxWsESq5g7StF0HmBGc9sshE8WLR8sEaO
oCXaFJQ+ZiJY9S3yFppP0LH57aNlzxCQzh7t7CUE3apj42mVhuCHeWzKsqUE
vSo+o6o0FcHQObfYNHWC5h8JTfuQhGAJ69cJ/iqCZnW2K1omItC3SPGz0CXo
zdtszpckIDA7z/P8rE/QcUUZw+bxCFxLtLc7ryXoX/qKHsVxCD7L6H5INCRo
7fuhlWa3ENTLO8RbIoIOlOtA72MQNC8N8v+LCVqyJ0O+KBLBXwNQIk2Z+i6K
Z02uIBilfw38NCfo2x9CBwvCEQg2skrObiTotrUdOzdcRJCudm5gwpqgVyfb
VLw7h4B4vm8wy5agD8/LJI3PILDj2A/52RM0hCk+yg9DcLdszfDqzQTN7g9d
YBSKoGe7wkjXFoLesqPjFBxHgNqnR5K3Mt/7aNOPjyII928Z5W4j6HYy050f
hIC3KrJucjtB66QqlnMCEQQlu3cVORF0kPzJ9Xn+CM6qrJq64kzQTZbK6l4H
EchIeSdbuxC0ydFcuTkHEMSMptlLuhJ06hOXqTf7Gf9aeyeKGCzXNN7hyUOQ
VKGTFObG6CN784usF+Nfjq8ddifoRtqA/9oTgc3nyhF7Bhv7Vad6eDD8rrM+
LWXww0S/GOldCMq20ilDzPsyX+XCst0RsOWDTrxncID4M+9drggsG55tu8ng
hrU2TrOcEZy/3aHDYzD9b7fJy20Iit2VWRSDk2Mv6O7YiuCnl1pnO8NPqlxz
seQWBKaay64XMP34TRdJZNgjeNS2DCUw/dav3j3oasv0+0C94xijB71T9Ie4
NQJ/rkakE6NXcmRCabolgloVTdKA0VOqgJPlbM7o/UOzbY4jU2+o8Z6YKYJ7
d7Su/HUg6Dr1oxFPjRl/fB6nr2H84WxTCN5OI7i99ouj3CbGv5yt9k9IBBMl
SxOLGf99uwdJx/UIUiM3WiYy+ahZfE2TWIvAydnvb4gFQVO2unNT1yBgqcVG
O5sR9P0TFYIteky9S9LvdE2YfD/f3zWtgyCH68ES0ATt08KuSdFm+K5/bVvG
5NXQ1DxtUgvB/N+7v3ky+U4IbLuZpMHMAz9HVX8NQYs/PHXabhmCTTFyXsQ/
BL2/XtV3XBXBAe89Tz9qE3QVG1wSlRk+x8/bKK4g6HWUu7mNEgJZ2a/Gpcy8
xXtP6Y0qIniXoLruiCpB8yrXsa0WIFhemLO0QZ6gK0Vqh4fmIvi+VUL+4jyC
NtA/1Bw/G8HVji3Shsy8i8Y8fzUghaBzYWXFFXGC9iq2e3CbjeBGhEjDbBGC
rhjruWLGQnBRfE+p5qgQx7qs2Bs7A8GG7ytHdZqFmIgo2WwiwuSv5LL0mhoh
3pO3h9MroEA0s19tXZkQ66kmzjeeoCCBdbd89LkQl7YvKuzso2D/m2E58WNC
rCuf8+x6LwXKXrPuX/AR4hjL7XHoDwWf5qnqS+8SYu6TKL/IDgrO+/qePcis
p5MHpVXXN1Fw8uikZCMhxA2CrWW93ygYiNOokehn1uNL8Yce1FPwIoxlWPVT
gI8k6ZTKfqVgLOzFjbg3AjxWt8m/vYwC7inxLasPCnCdZ6zS7Q8UnD31TeS6
O7NfDLQUbyqmYHXr2bE3zP5xWCpgce47CoIfvD13Q1mAR3BM0fXXFKhpaiXb
fpjGNeVNByyzKSiRKPB+mzGNXzppKgozKXCFufYjcdM4wP+VDy+dgmeyGtZH
edN4MLlhoVEKBT5PN5qckZjGfdLKvN4oChxPsJX/Lp/ClbF75z24RoGMavGq
ZqkpnK6Znud0lYLLL8JuLeqZxAeMjOYWXaLA++u439W0Sdwb4PE2LowC60W/
1Y+snsTd31JkLH0Zft5ZvOY5E7jUq++VwJuCukrn7rLucZw6vM4jcx8Fxsf8
z3UXjGOebGm28l4KqC8P+CsCxvFv4z87R9wYf0ray+nqMdz+SDcj0YqCRwri
GnYHRvH4O9YdTUsKSvd9C/qxfhRLNf48+9iMgu7c9LIDYqNYTybSOcOIAm2u
y8Grt0ZwiF+/SMFaCiYHY959fzuMF5Iv7FvUKBBcqK0WqR3EKxwuGu5RpUBM
wXB1QfQg5nhzl3UtoWD5w9vnTjsM4t1354z1K1Dwn/e7DCWqBnD6DP+7InJM
vnguHvav+7FFuX6vyhQJ0d6X60dymf+/tll1D8ZJ4AVYnZJU6cU+gtZ8rVES
0FGW9uKwHhylGxWtO0DCboF/8WPDP/hn1BBF/yZh+YvwhJtnOnGQ28tLO6pJ
4L76W0XmteJLgRGHWj+T4ESpJ/kQrTj+iueOvZ9IiPioVO20vgUX5s/XP1BK
gu2tBZIqsT+xnEZgQwiQkLBLrn17dgN+1GuwPP4JCVP5C5QtV37AdaVmkdap
JLAaN/revVKEWSmO4xMpJDSNhuQPD+Zjrx2BH7YlkvCUW1FsEvwSa1W+/Hd2
LAluadVrp7bc5Sc/X5N6+hwJ7QNda/KbPvNrIkzm6J8hwcrpSl2aaDVfnOdw
pDmMhMd8/WOxGjV8z6UBGzkhJJyKOFbg79PAX3Y9o2s0gAQDvnzt5nvN/MQA
vZX7uCQAi23uqtzNr7I3vq6wk4R3D8OKF3r84Ytqb54sdiOhxGLS/EtyD5/b
drBsmRMJXiaBy9QX9vGXOj7f12TH6K0vVvzm7QA/Ya3uk02IhNOXVTV37xzj
35nQ1l4nT8KbogXCIzdFgfD4WJ05n4T33mkbX82eAbvL9h/7Zy4JO+ebxAxf
nAErbj8uWyFDgrvK5sXBx8UgCy3nKYmRkH8osMHxojhUhi5LEe0zBLFDc2i6
ng36nQW2J3oMgR0lk7lq7yyI2eQxMtllCLYZbC2FYeY8t/S+6XCbIeyZTD66
RFMaOguUf3V8M4TvvRdmFYXLgqjEItWPxYYQ5+YResZxDkgWVpnqM/j/59f/
Ai8INVw=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$63287#1"]& ], {}, {}, {}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], 
          Dashing[0.02]], 
         LineBox[CompressedData["
1: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
pLZMBcWr/ghLe2jz///lfwEAQBE7
          "]]}, Annotation[#, "Charting`Private`Tag$63287#6"]& ]}}, {}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0]}, 
     AxesOrigin -> {-43.288599748287965`, -4.605170185988081}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{-43.28859914773628, -13.861562860375944`}, \
{-207.2326583694641, 
        2.0460528643108433`}}, {{-43.28859914773628, -13.861562860375944`}, \
{-4.605170185988092, 2.0460528643108433`}}}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-43.288599748288064`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(events\\)]\\)[\\!\\(\\*SubscriptBox[\\(m\\), \
\\(V\\)]\\),\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)]\"", 
          HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", 
          HoldForm], TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 23], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotLabel -> FormBox[
       StyleBox[
        TemplateBox[{
         "\"FASER2-FPF\"", 
          "\". \\!\\(\\*SubscriptBox[\\(m\\), \\(V\\)]\\) = \"", "0.7`", 
          "\" GeV\""}, "RowDefault"], 20, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-43.288599748288064`, -13.861562259824158`}, \
{-4.605170185988092, 11.715756861009247`}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"Bremsstrahlung\"", 15, StripOnInput -> False], 
       StyleBox["\"DrellYan\"", 15, StripOnInput -> False], 
       StyleBox["\"Eta\"", 15, StripOnInput -> False], 
       StyleBox["\"EtaPr\"", 15, StripOnInput -> False], 
       StyleBox["\"Pi0\"", 15, StripOnInput -> False], 
       StyleBox["\"Rho0\"", 15, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1], 
                    Dashing[0.18]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1], 
                    Dashing[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[0.18]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "0.02`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.9201090158449717`*^9, {3.920109061968417*^9, 3.920109079637049*^9}, 
   3.921653014298663*^9, 3.921657646074088*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[357]=",ExpressionUUID->"6d9cc519-9fb3-4f46-b93a-f9d0d6cee093"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.9201090718757505`*^9},ExpressionUUID->"aa260324-a45a-4788-81af-\
30747aa0b564"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[0, 0, 1]], 
         LineBox[CompressedData["
1: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
UXfcGF1vbJ6KYmTR0mf1nncjxv//3/g/gE5eCw==
          "]]}, 
        Annotation[#, "Charting`Private`Tag$12210#1"]& ], {}, {}, {}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          AbsoluteThickness[1.6], 
          Thickness[Large], 
          RGBColor[
           NCache[
            Rational[2, 3], 0.6666666666666666], 0, 0], 
          Dashing[0.02]], 
         LineBox[CompressedData["
1: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
/X//wf8BmbZYTw==
          "]]}, Annotation[#, "Charting`Private`Tag$12210#6"]& ]}}, {}}, {
    DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, DisplayFunction -> Identity, DisplayFunction -> Identity, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0], 
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        MachinePrecision, RotateLabel -> 0]}, 
     AxesOrigin -> {-43.288599748287965`, -4.605170185988081}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         MachinePrecision, RotateLabel -> 0], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     DisplayFunction -> Identity, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     PlotRangeClipping -> True, ImagePadding -> All, DisplayFunction -> 
     Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> None,
        "ClippingRange" -> {{{-43.28859914773628, -13.861562860375944`}, \
{-207.2326583694641, 
        1.9026447461089282`}}, {{-43.28859914773628, -13.861562860375944`}, \
{-4.605170185988092, 1.9026447461089282`}}}}, DisplayFunction -> Identity, 
     AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
     Axes -> {True, True}, AxesLabel -> {None, None}, 
     AxesOrigin -> {-43.288599748288064`, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"\\!\\(\\*SubscriptBox[\\(N\\), \
\\(events\\)]\\)[\\!\\(\\*SubscriptBox[\\(m\\), \
\\(V\\)]\\),\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)]\"", 
          HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", 
          HoldForm], TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 23], 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultMeshStyle" -> AbsolutePointSize[6], "ScalingFunctions" -> 
       None}, PlotLabel -> FormBox[
       StyleBox[
        TemplateBox[{
         "\"Pre-FACET-standard\"", 
          "\". \\!\\(\\*SubscriptBox[\\(m\\), \\(V\\)]\\) = \"", "0.7`", 
          "\" GeV\""}, "RowDefault"], 20, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {{-43.288599748288064`, -13.861562259824158`}, \
{-4.605170185988092, 6.151140588351575}}, PlotRangeClipping -> True, 
     PlotRangePadding -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       StyleBox["\"Bremsstrahlung\"", 15, StripOnInput -> False], 
       StyleBox["\"DrellYan\"", 15, StripOnInput -> False], 
       StyleBox["\"Eta\"", 15, StripOnInput -> False], 
       StyleBox["\"EtaPr\"", 15, StripOnInput -> False], 
       StyleBox["\"Pi0\"", 15, StripOnInput -> False], 
       StyleBox["\"Rho0\"", 15, StripOnInput -> False]}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 
                    NCache[
                    Rational[4, 9], 0.4444444444444444], 0]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1], 
                    Dashing[0.18]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1], 
                    Dashing[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[0.18]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[
                    NCache[
                    Rational[2, 3], 0.6666666666666666], 0, 0], 
                    Dashing[0.18]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #6}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"]}], 
                 "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[0, 
                    Rational[4, 9], 0]|>, "RGBColorSwatchTemplate"]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   
                   TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                    "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "0.02`", "]"}]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                   TemplateBox[<|"color" -> RGBColor[
                    Rational[2, 3], 0, 0]|>, "RGBColorSwatchTemplate"], ",", 
                   RowBox[{"Dashing", "[", "0.02`", "]"}]}], "]"}]}], "}"}], 
           ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5, ",", #6}], "}"}], 
           ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9201090158449717`*^9, 3.920109064858982*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->"Out[74]=",ExpressionUUID->"ef95126c-7e30-4ee4-8b52-daca294a94ea"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity", "Chapter",
 CellChangeTimes->{{3.8865657605515084`*^9, 3.886565789800824*^9}, {
  3.8891547325867977`*^9, 3.8891547373469143`*^9}, {3.913965830034291*^9, 
  3.9139658311040325`*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"ca66427b-19d6-4877-8ebb-\
41db99aeba92"],

Cell[CellGroupData[{

Cell["Events density plot", "Section",
 CellChangeTimes->{{3.8928925129732084`*^9, 3.8928925141322923`*^9}, {
  3.892910359615284*^9, 3.892910363538608*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"a59ae6cb-9828-417c-bdd1-\
fff95cb38e4f"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"plot", "=", 
  RowBox[{"DensityPlot", "[", 
   RowBox[{
    RowBox[{"Evaluate", "[", 
     RowBox[{"Log10", "[", 
      RowBox[{"NevIntOverall", "[", 
       RowBox[{"mLLP", ",", "\[Epsilon]2"}], "]"}], "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"mLLP", ",", 
      RowBox[{"mminmaxOverall", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"mminmaxOverall", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"\[Epsilon]2", ",", 
      RowBox[{"couplingminmaxOverall", "[", 
       RowBox[{"[", "1", "]"}], "]"}], ",", 
      RowBox[{"couplingminmaxOverall", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "}"}], ",", 
    RowBox[{"ScalingFunctions", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"\"\<Log\>\"", ",", "\"\<Log\>\""}], "}"}]}], ",", 
    RowBox[{"AspectRatio", "\[Rule]", "0.78"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"All", ",", "All", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Log10", "[", "2.3", "]"}], ",", 
         RowBox[{"Log10", "[", "NevMaxOverall", "]"}]}], "}"}]}], "}"}]}], 
    ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"FrameLabel", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
      "\"\<\!\(\*SubscriptBox[\(m\), \(V\)]\) [GeV]\>\"", ",", 
       "\"\<\!\(\*SuperscriptBox[\(\[Epsilon]\), \(2\)]\)\>\""}], "}"}]}], 
    ",", " ", 
    RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", " ", 
    RowBox[{"FrameStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{"Black", ",", " ", "25"}], "]"}]}], ",", 
    RowBox[{"PlotPoints", "\[Rule]", "100"}], ",", 
    RowBox[{"PlotLegends", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{
       RowBox[{"BarLegend", "[", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"Automatic", ",", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Log10", "[", "2.3", "]"}], ",", 
             RowBox[{"Log10", "[", "NevMaxOverall", "]"}]}], "}"}]}], "}"}], 
         ",", 
         RowBox[{"LegendMarkerSize", "\[Rule]", "340"}], ",", 
         RowBox[{"LegendLabel", "\[Rule]", 
          RowBox[{"Placed", "[", 
           RowBox[{
           "\"\<\!\(\*SubscriptBox[\(Log\), \
\(10\)]\)[\!\(\*SubscriptBox[\(N\), \(ev\)]\)]\>\"", ",", "Bottom"}], "]"}]}],
          ",", 
         RowBox[{"LabelStyle", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{"FontSize", "\[Rule]", "22"}], "}"}]}], ",", 
         RowBox[{"Method", "\[Rule]", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"FrameStyle", "\[Rule]", "Black"}], ",", 
            RowBox[{"AxesStyle", "\[Rule]", "None"}], ",", 
            RowBox[{"TicksStyle", "\[Rule]", "Black"}]}], "}"}]}]}], "]"}], 
       ",", "Right"}], "]"}]}], ",", 
    RowBox[{"PlotLabel", "\[Rule]", 
     RowBox[{"Style", "[", 
      RowBox[{
       RowBox[{"Row", "[", 
        RowBox[{"{", "ExperimentFolder", "}"}], "]"}], ",", "20", ",", 
       "Black"}], "]"}]}]}], 
   RowBox[{"(*", 
    RowBox[{",", 
     RowBox[{"FrameTicks", "->", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Automatic", ",", "Automatic"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"TicksPlotx", ",", "None"}], "}"}]}], "}"}]}]}], "*)"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<plots/SensCalc/NeventsDensityPlotExample.pdf\>\""}], "}"}], "]"}], 
   ",", "plot", ",", 
   RowBox[{"\"\<AllowRasterization\>\"", "->", "False"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.8929096922410564`*^9, 3.892909806303069*^9}, {
   3.8929100920281754`*^9, 3.8929100955435038`*^9}, {3.8929101335841722`*^9, 
   3.892910162228066*^9}, {3.8929101949082084`*^9, 3.8929101952618375`*^9}, {
   3.893481779378194*^9, 3.893481781603961*^9}, {3.8935713726623445`*^9, 
   3.8935713726663337`*^9}, 3.893571593533576*^9, {3.893600462416499*^9, 
   3.893600464823284*^9}, {3.8936007175747695`*^9, 3.8936007273021555`*^9}, {
   3.8936008794615602`*^9, 3.8936008816425495`*^9}, {3.893605565414917*^9, 
   3.8936055685099897`*^9}, {3.894552167897132*^9, 3.894552190947688*^9}, {
   3.9138856465220795`*^9, 3.9138856465250854`*^9}, {3.9139635639485736`*^9, 
   3.913963579089311*^9}, 3.9139636566744375`*^9, {3.9139640983446198`*^9, 
   3.913964098352851*^9}, {3.9139656696637654`*^9, 3.9139656696674147`*^9}, {
   3.915643066011381*^9, 3.9156430660143795`*^9}},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "In[358]:=",ExpressionUUID->"dfa47edf-f1da-4b2e-b4e4-0bdbee1c1674"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{
     GraphicsComplexBox[CompressedData["
1:eJxl3XVUFF8fx3EEJARRUezuDrp2AbsVC7s7sMDuxEDFTuzGRFGsuT87SMHG
QFEwMFAUUOHZ55x53zkH//K8zszO3rn3+5m9M4wzVQaP7zLM2MjIaL+1kdH/
/3UdcyF23bd4JbCpMG430Vv0LL41PTPnnjTL9YuGZerbacsxy81vFkqzr6Et
xyzfXWTg2Q65XnI5ZrnjuiNbnU5ry/H1qIOHwt4+UG6VzJxbYbi2PmZ97N1Z
8bhue12az/fe6jWsYFnt85jPYz6POzfcMP/GkydKeoXlbdOj9XJ7mO1htofZ
HmZ783YnNnowX9seZnuY7WG2h33L3ileo/t57fPbXr3qPMlKFK9Rye6yk16Y
f7l6I/p7IemHTfcfaRuoef/Gpatv/bSUDvgwKqD5NM3N9O17/ZdtIW27tqFe
P1Nz8tui1S7+MZc+6fbd3HWO5rnBDz6dyTOT7ph8Lr7JfM0VnLZGHDfW/Clo
1rZ6iwpKX0zqP+9QQc3LG/sMq7HUVLrXompt91horv24YKNKy02kk1Yv6P0i
+rmC6X9M/2P6H9P/mP7H9D/uv2/twiGjbMSBQ6Ny9r3XiQZZASNffSgs/aed
X4d+YzXf2+lm/zTdWnrr93Kl/MZrHtUq93fCVytpxhczvpjxxYwvZnwx44sZ
X8z4YsYXM76Y8cWML2Z8MeOLGV/M+GLGF/+ql1Z8u5Xmm3PvZpUONta2tyCk
cbJ3loJr1e2R87TZL+nr8WWvJ7b8KT1o+svgmDaZ0rmV9/ndbv9DetvtkVWu
dvou7TqhwceLXTKkz2Sd2/L71Stp6g9Tf/L71fqT21PrD1N/mPrD1B9uXrvW
wIWWu6VXdz4Z+i7VRrjVP/Ny5Q6drE9MfWLqE1OfmPrE1CemPjH1ialPTH1i
6hNTn5j6xNQnpj4x9YmpT0x9YuoTU5+Y+sTUJ6Y+MfWJqU+8ISHs+QYbzUNr
rb5qu6aAdNL6zECzRrkKnu55wcvI/q90yZQ5ljmOf6TDVzRL+O7yW7qzg8WO
dPcc6fSnUcNTddnS5AOTD0w+MPnA5AOTD1kPaj7wg1IZZ852/yY9SYmYc6Ln
V+mKMT/XdDn3Wdq79/5JJR6kSM843NDM4tlrafIm+0vNm9x/NW9yf9S8yfap
ecPkTX6/mjdM3jB5w+Qt6kTu9QBfLW+YvGHyhskbJm+YvGHyhskbJm+YvGHy
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
D2Z/MPuD2R/M/mD2B7M/mP3B7A+mvW/DGlas88FethfTXkx7Me3FtBfTXkx7
Me3FtGda4+kmxUK19mDag2kPpj2Y9mDag/k+qzPX0rJ8te/DfB/m+zCfD3Wx
iXlVUPs8Xj67ol3ky0fKxm97z42spxMlX1p9jk94ptQO/Ly980tPuRzv8c6+
+eHWS+VSlusC13Wecn3M+riU7/fYAi+SlY6zFo6o3Er7PObzmM/j3HJNPHd9
TJC+1PBEu6FKlvI6L7q9xW8P8bzAaE+bx2+k+T7M92G+D0edCivx3Oy29JnP
8YOPVhT/bD9gYWn7r8e17WO2j1nfwnxIqceDtfUx6+O9p18dKnv/rbJ1+bE/
Sknt85jP45SApTdtvsQqtg/Shu9f5SP9tOSqXltGat7X06F9cFPNY7c+1s8v
r9k5aXaTwJ/e0rkVqlUfFaf59oDbJfsd0bxm9zhL30Wae7+x/dO8v+aqNc5/
dnXV/Gl4v+T6tt5y/Eb7Fjzk89hLLsf0P2b93MROwXVWautj1sesv6bn1knF
vLX1Metj1q+elOKX/V0v18esj1k/YkAjXfJBbX3M+pj1276ZXvVOH219zPp4
bY2/h3xvZypJw6+bnyqifR7zeczn8YKXNc5PiMxRJnywSd98TScqLv0wf/Sl
bGnygns+nGzX/+ov6Z+zXV/63fgpTXtwVMASzxYx36VHl29n5hWfIU375Ppq
+3B7XyOn+M4FhLF/r/vzpupE2f2vy3S8byT9Iet67t2ummkvpr2Y9mLai2kv
pr0483rzz17io3SjEjHzHW6+lyaPmOMRZnww+y+/X91/zP5zfGX/MfuP2X/M
/mP2H7P/mP3H7D9m/zH7j0cN8bOrFZUqzf5i9ld+n7q/uHOVsrfyQoZIs//8
frD/mP3H7D9m/zH7j9l/zP5j9h+zv5j9zf/7hnm+Cub5R5j+yf97yfNH6S/Z
PrW/5PbU/sL0F7+f9BemvzD9hekvTH9h+gvTX5j+wvQXpr/y/75jno+B6T9M
/+WfP8jnYar9mX8+wXL6U7Zf7U/s7vd50PexJ6XpT+YP9CemPzHHz/zzDUz/
YvoX07+Y/sX0L6Z/Mf2L6U9Mf2L6E/O8PUx/yfao/SW3r853MP2H6T/mQ/Qf
pv8w/Ye5HwHTf5j+w/Qf5nkQcn6m9gemPzD1Ir9PfT4Z5vmCmP1j/sb+YfYP
83uL2V9MvWD2F7O/mP3F7C9mfzF5yd9e5pO0F7des7367PA/cr6Z4jLo85SI
39LsD2Z/MPuD2Z/881fM8wYw+4PZH0z7md/Sfkz75fxXbT+m/Zj2Y9qPaR+m
fZj2NLTJSj541122B9MeTHsw7cG0B9MeTN4x/Yk5H8C0T4Q0vbV6jtY+TPsw
7cO0D9M+THsw39fNLjhsqr32fZjtYbaH+fy7zY9CBrxzk5/HfB7z+fzLZ5Sv
OrXVVm05Zrn1rrF9G3XUlmOW76p2zqeUsbYcs9z+YIFaeWdd5XLM8pt121un
jtKWY5b3PL7xW0wFbTlm+acmyQ8j4l3kcszyOWfrXQpdrC3HLLd1m7J7iZu2
HLN83yWxxD/dWXs/onp+Jt+PqJrlnK+xHLOc8zeWY5ZzvsZyzHLOz1iOWc75
GMsxyzn/YjlmOedbLMcs5/yK5ZjlnD+xHHO/E+cv3A+M+f8RmP9/Js+v1O1h
/t7K+QB/T5fnF+r2MdvHbF+e76jPq8A870V+Xv39l+dPansw7WF+Tnsw7cG0
B9Meef6htkeeD6jPz5CfV9sjz2fU9mDaw/yX9sj5tNoeTHsw7ZHza/X75frq
98vzCfX7Md/PfJHvl/NP9fsx34/5fjkfVb9frq9+v5yfq9+PeX45pj3Mv2gP
Zj4lr5ep7ZPzP7V9mPbJ+Z/aPjmfVduDmR9h2sN8ifbI+Zb6/Zjvx8xPMdtj
/sL2MPnD7C/m+zDfh5kPyu2p35//+5h/cL8a5vsx34/5fsz3YbbPfILtY7aP
2T5mfoTZHr//bA+zPcz2MMcHzPwHs31+79k+ZvuY7WE+z+8962OW83vO8vzm
9xzz+435vcb8PmN+jzG/v5jfW8zvK+b3lPOln4EeA3fO1K6XKudedVnXXXNQ
9uIWSxtp9vWo5zrTUnPZ2XF1x7/Rroe+uRJYYchlzWFG5Yr6bdLM+5ox72fG
vI8Z8/5lzPuWMe9Pltdr1fchY95njHn/MOZ9uJj3kWLel4jl+9vU6xnyfXXq
+TzvX2J9+f4ndX35vit1/fzXT+T7cdTl+d8fIc/frxftbZwZrUzwj6r87qa3
tPvJicWf7tJsnFHSLGaG5iiHS1n/ddO8PnDQx7MNNfc/Z/bisIXmThl+uz1u
eEm/DtyzpNp0zYHZn8ZYNdBsMdvF9/srvfQ2owXOz9Zrbrgoqty11pr/My9V
4OgfnXS3FYPerT2pOdUm7N6MoZpnrP15cnBpnahV482L068fKoVL+mxsG6X1
Bw5fEnfu3sOnyq4tK2baz/OU62PWv7mrckvjNMPx6UGvdkrSY/l5/MjvXZD+
gPZ5zHK2N92lVfXHcUnK6GeN/Wv21r4fsz4eFDB20oG0ROlt1zILbv18X/qB
7dwtwT/ilJXR02t9eqKNB2Y54497FKlU9lW4tj5mOfWBK/pet04M1tbHLKd+
cNraUXm3RmjrY5ZTX/hkok3GRR9tfcxy6g/PKHkm5UQ5bX3McuoTLzl5+nir
j1r9YZZTv7iM4991jXZq62OWU9847Fyr6aW6autjllP/2Mtjbf88M219zHLy
ge9fSWqWekHLA2Y5+cHDmtaqE+uvrY9ZTr5w1o2JNueqautjlufP34o2l76H
PtRcMdrsyZLlmk919r3ir9fJ+m2euG1vjwytnvPnkeVcz8lf/+QJ588ny3vd
3dx3b9O10rTfocLDgWUdNf/tP7OrjY32ecz8lPZhvo+/F8jr7ep8H7NcXl9W
l+ef/9I+1pfXS9X181+vlO9nUvtHvl9Nvb4n37eoHj/oT45HmOMN38/1fbaP
5fth1O/DXK/Jb953wPUZ+b6KtMtrUu6+kP3L9uX7KtTjIctpH+b75fsc1Ou1
8v0r6vVa+X6Wna1jz5W+Kj9Pe+Tz+dX2rHl9w/Xnf9rfn1nO+vL52+rvKeeL
1A+/Nyzn/E0en9TfH/qH8cH53+9G/fB56m9vz8pXqs7LkuPF5+X7u9T+oz7Z
HvXG9ljO9shXoqn+yf7cLJkPfl8wecufHz5PfvCC9lvnTBv8Sv5erh1cbf57
o7vSLO9VfUy9D9u067fy/QHq9Zz8ls8nP9XnR+3Z2UrE+94mN+toy3k+sku/
6UXCfmcrbcbtTzv23F2uj1mf57+yftLXL9EbQrTlPO+S5eMD3MNnt9CW8/w/
lhtnLdo8LFu7nsbz0Vi+YWbs7A7HtOU8X4rltfPKDHEapC3neT0sv7hgaOsK
dtpyno/C8o5mJxoUvKNdb+P5FCxPXpZtmz5LW87zA1geULh5VmJjbTn/35vl
5iGrnl9K0a638f91Wb61xJOr+zZry/n/lixvsLnaoZXtteX8/znqJ//xnHqj
fjB/L2D+zd8L8NHfK5zXmf+Uv0/PDx72LblEM+fHmL9H8Xn+HoUXZDxZN6/o
d7n+mdBfx01Wa+Z6AqZ9nA/QPkz7+L2kfZj2YdrH52kfpn2sT/sw7cNcf+Z8
hOvP+OeQlTfGTDYS/H7buJfreuy0Zs5fMfsr34+t7i9mf1mf/cXsL2Z/+Tz7
i9lf1md/MfuL+XuifN+8ej1fvo++SGDjI23T5Pq5I04OP9nqvdYe9foQpv84
ntN/mP7j95b+w/Qfpv/k+4bV/sP0H+vTf5j+w/Qfn6f/MP3H+vQfpv8w/Sff
3632n3y/t9p/rE//yfao/Sfbq85/MP3J7yH9ielPfv/oT0x/YvpTvs9V7U9M
f7I+/YnpT0x/8nn6E9OfrE9/YvoT05/y/chqf8r3J6v9yfr0p2yP2p/S6nxI
7q96vGQ51zMx/c38gf7G9De/5/Q3pr8x/S3fp6n2N6a/WZ/+xvQ3pn/k+2TV
/pHvm1X7h/XpH0z/SKv9I9un9g/L5d9rVNM/zCfpH0z/ML+kfzD9g7kfhM8z
/2H5u30PzswZkCzN9U5MezHtxbSX+THtxbSX+S7txbQX014+T3tZTnsx7cW0
h/kb7cG0p9rwohVfBGrtwbQH0x4+T3tYTnsw7cG0h/kj7cG0h/kk7cG0B7M9
5ptsD7M95ptsD7M9zPaYj7I9zPaYn7I9zPbk/FWdP+U/X8x/PzPHb863OB5z
PsH5B+dL+ef3zMdYH3N+QX1yfsH8n7/ny/tP1Ovv2Ob4Ur+QHin/nC+wnO9j
uVkB50Nx1jf/yQvr8338vYPvw3wf5yN8X/7lnw6eLXq/k4e83srfMznfwpwf
MR/EXK+U19PU+Rj3F3F+yd+/MNczON/k88xH+Dzjy+cxn+d8lPFhvJmPc/7J
30sw40c98P18nu9nfb4f8/2sj+X1H/X7OV/l+zHfz/kB9Ytpj/y9VMeHeuT4
QL1wfMAcTzHrUw+sj6k/zPklxxvOd6gXjl8cb7jegPk+1qf+MNubW8/oZ6SJ
ZtsTbZ/tPqfdP8Pfn+g/+fcptX0cH/j8fvsNYtkYza4RL/dPrKT5nlvdFb0S
tPPP/pcDJvgs1fzNW+lex8NN/p5zfZDfe8zvO2Z+hJk/YeZLmO2TH7aP2T5m
+5jtY7aPOZ6SL463mOMrpj2Y9mDag2kPpj2Y9mDmM5j5DmZ+g2k/+ab9mPZj
2o9pP6b9mPZj2o9pP6b9mPZj2o9pP8cD2o9pP6b9mPbL67Vq+zHtx7Qf035M
+zHtx7Qf036OR7Qf035M+zHtx7Qfc/7B7znnH/J98+r+sT77h9kfzP7I7av7
g/n9xBwfMfsrr8eo+4vZ3/zXa+T7t9XzA0x/sD79gfl+zPdzvOb7Md+PWZ/j
Netj1sesz/GX9THrY9bn+Mz6mPUx63P8Zn3M+pj5IdcjmR9itsfxnO1h+pf5
CfWC+TzzDdbHrI9Zn/kF62PWl/9fQq0/zOeZH/B5zOfl/ydQP4/5PPMDPi/v
t1c/j/k85vP8fYXPY5Yzf+T3Wc5P1eXMD1ku54vqcu5/YTlmOfezYO4/wfx+
M/+mnpk/5J//Ys53MZ+nvvl8/vlN/vkH7eX4mP/4kv/+r/z5zX8/P/2HyT/n
9yzHLCcP+eub/qlZ9Mirz9+MRP7rm5jl+a/f4YHi4/aI5h/+uV6I+Xz+61WY
z+e/Xob5fP7rL5jP578+hPl8/usT+a9/0P9sL//1FMz28l8/wK3/Fv24qO9r
Jf/1C8zn85/vYz6f/3pC/uX5z+/zn89zvk39Up/UL2b+y/ky5wvMdzke5L/+
lP/6DX/f4fnK8vjY7dbYLaa//rm+j1lfHh/V9ak/1sesL4+H6vr5r6dj1pfH
P3X9/NeP5d971fXl8U5dP//1UXm/irq+PP6p6+e/vpe/3lif8ZLvA1b7m/kJ
/U2emW+Qd7bHeHA/Hctdz7nl7O2Q+s948fvH+Sf3M2PuX24c/d+kdvd+yPHk
/QL4bVu7u0sK/5DjyedZzvksZnvy/z+q28Nsj/Fmffl7qK6PWZ/xZn35+6eu
j1mf8WZ9+Xunro9Zn/Hm//dwfOf+U0y+ySPr83vF+pj1ySvr83vG+pj1uf7F
+hzPWT//8Z08m10vEuea+E3uH+83wb4tL037G5Ihf6/oH+qV5/fjGZ38yxVd
lqldv1KvF7GcesTUI+tP2NLx1uojefJ8m+fB4RfBf13qOmq/X+SL81ssz0dV
5z/+yPM91fmPN/J8SnX+44s8X1Gd/3gi5/eq8x8/5PxbNf1Bf1Nf9CfHC/oL
0x+MJ+PD8aL13s5GwYW0zzPetBfz945KW0P7zSiufT/jR/sx20/sn3ttR+d3
cvuMH/WJ+T1ZNv55t/j3efL3JNG/XpMr+7T7YR8mBfiPK6HdD5uxz3Nep8Ux
8n7Y8e+vhY37FS3vh112+/rZg6Oj5f2w4/f0rTLzWZS8H7bnmRU2xztHyfth
j+0J9m1Y5768Hzb0z7qlbTvckzb+e3l2aIkEeX9se78TEa1m3ZG2K3rULzA7
Qd4vO9Bs1PoiV25J62ePtu35KFHePzsio9Wt9CI3pdcMvuyWcOyBvJ/2lInN
u8uTr0vz97z3Pbp9N93hJVIHbA0ZVOGRvN+W++dzE+udyA71EtZVjnaq9uo/
uXz5sxYtJyc8lvfj9liy02GX8xVp7lef0PvPx3rpetGoV7lyTg+eyvt1B3pt
XGViEikdGXf4/c9Wz+X9u75l7xSv0f28UjC71Drlql48tWx/ZZz7abmc55v8
vv+gxCYXvfDfffvakqVWgvt95fPAg/P6D2iq196vGB72I7SDXj6f5XTKjc1n
/fTyeTN7TY422T5IL583M6zdirXjR+vl83V2rN/xJXiSXj5fZ9nBDcmm0/Xy
eUN1rVs0Kz5LL5831N47rnm2wTyfafalRrXdDeb5TPt1xmNjDZ/neVeeE5yM
rwTq5fOuxnXffcjGX6+938DuvHnLoXr5fLHzWT4B3j318nlvp+9FnAttqRev
TlSxO1zXRPYH9/eviVvlOGGiob9qWTY/2vCVvD+6wfPTVZ6XOyTN81VMd/We
GvpZJ9qcfLQvbLuN4P4KnteyskPpg+9ydPJ5LeM9+vjbm+vl82EW7GrRxLuE
Xj4fZsrHQ+FulfXy+TDmAbsyPOvr5fPpMuPPF7BprJfPE7zi82TmnuJ6MfGR
Z48HRYzl969PrGF22DB/xPw+bLIZ1X28jV7+vtju9Ls39JdOlJ6VO//Gom9y
ffn/N+ub+3S204sird9XvFL7tVzO82YWNGpXt8ZrnXyeYaXRuwe7GpbzPMrv
fT7snnlFJ+r6x770qlpAcH8Hz4/9UrrStK97dMI/7s/D/fty5f0fPG9YOFt/
2XZMJ/+/wufh9X5WPa+Tz6+OWuPqfUPo5P39v1dc3PP6jk77/zMOR9+3f66T
77/bO2Oqrs47nXz/Y2SPfnfuRuvk+x9rlm56bNYpnSgj7lZc55Eu28PfV4rl
bO5xMVQnLB9e2HEwNUUu5/+XPu0c+jgnTvv/Trl5S3pP26yTv58L/YR4ZZg/
8Txdk9+NenXZpJPvX73pt/Dppw3a/7fq+KRI9cWztP//5TPuRkTz2ToxYWfU
oGJF+sv7PYpOP+78rU0f+fcv8/uBs3xDE+T89OvyuBcmBWKlmf/t7NH3RrGO
niLHo+OEfkkn5HKOf8rHv5WDCnqKT+dmfjQe+lj+/ZS/Dy1qeqzCkKKews3a
aUw7qyi5nOPTrfCWy/vkeYjni9p0Pl9Yux+O618HL8wp4XDfQ9h+nfP22+0X
cr7dIbaL89CIZHn/G/17p+bMxy9i3EXP26cSmh3W3nfe6+TZar4ltPc5M17+
2QOyh+/S3v88/0pw/RHl3UWHedV21en5Ud7vxvz94V6/DVPaau/DHfp08drE
T27iRZMGunv+n/95f2jKNavD5ssMvuF5vP65r/L+N+rpeqr1R/cL2vsXq0w/
luzl5yY6tQiYN8Q145/320Vs8/47Pd1VnJ519WmhA9/l/XDk9XaTX19Dqmnv
x/tYafxbw2gIV8t3Q9/Wz/zn/U5J9/c8qtLZVVh/OBe9fcJPeX8cx4OZBRd0
D1uuvX+nx/xRvzpbu4p0j9G1Nsz79c/7Um6cPdFgR6SLmDd7boMmg7Pk/XK3
Z537NKRi9j/vJ7jadEYfq64uImTm4CubIrP/ef783SSl2ZAkZ1Gvds0V0cd+
y+eJk+cI/+PxyXnOYnyd/dVrXtaeL87xp2fDhsuNN2jPJ/+8f8G1qGBn8dqt
VpMaoX/l86k5ftisutOrRbizsDkZnVQhRHteNXlc3/nI9rtezmKyz+6wcSEG
q8s5XrlvX77+4HBnUX9H+N3Q3drzkLmek9D6bsifDCcxY8LVBZv+M5LLyf+c
qyZZu8o6iz1Dz41PfKQ9j5fjZcrYsX/27HUSzm0OZ3U5W0Au53jS71RD771R
2vNJexfIXdxomfZ82bnd3S6mdHMSUxe9zpp5xFg+z5Tjc8CVncal5mjPPz2/
MKtfbXMnsbL9oeYv9pjI53Hye/N6lPGDOY2056n2vNkp0+uio+g0t5x/592m
8nmT/N5W+zgop/hr7fmUNy0W/h423lGsKeC7vfKugvJ5i/x+j0/YVrnfJu35
jLYvvixMquko+r1NabP6kPY8QuYDzfVfH+5rrz2/sFedT1+vv3QQFT91ep17
Vnuen3yebLl0r4Um2vMQ7SaXfZqyyUHMqx0p+lzVnpfHfGV20qwevy9qz9f7
s8djQGYnB/F+zaj2s2K159Ux/wlrvKVZiwDt+XZjHm31L2npIMIKPiwz/IX2
PDn5/p7A1EWr62vPy7N13OC/9Jq9+HL7QsipD9rz4JiftQ/6MuJdivY8uboX
uzjs8rMXNj5JJn2MtOe/MX+IWbBwtH6O9ny5xovXuQZu154fN2bhnCxXO3ux
/oL5L6sK2vPhmJ9cMbV/UstZe36c36MTcY4ZTWS9NTiQ7t71ThNx2edUH2On
aOVcnyFN217zFg0nHy8bNTFKsQ+xeb12i7ewuvyuxsqS95W7DsWijk/yFo7h
5Q50C7+vTEyIDFnaxVv0fvDL07t9gjK64ZS6Hvbe4q7lrKtFkxOUm+blvG8V
8xbFOw1dfiH2ulKyiW+5zpFeIm12sN+hsw+VCncmbROBXuJEmlXG1GePlK+H
T65WvLzE9pK+57NDhVLQ9pxLSnMvkVkreuLycU8V4+FtJ1k+0YvKx0seaF7y
ibL3+rjZXay8ROWwB9lTOkYqtbuXyd5+Xy8uF2rX5+7TZ8qrqCXDRxzSi/Lr
Fr00CrQSDc+1eNvbMH8euNnY397MSnSvFegR7a0XMdZO5iU2FRJTeydOL9JW
Lx5vrR+wuXYh8Xq45aHwrnpxdlLLAv+dtxQn79XfsqSvXigrr1VzbG0pRm6q
PvaTYX5ar0LDP8EPLcSooNM2h8fqxYktvg3vDrEQe4dPTY6crBd2bUzLhX42
Fx190817Gua/JgOub70cYC7KPK6jVDHMj2sX8fII+mUm/F+dn/HB4COvqyWt
nGomLN4Wqmth8PGo513X/CgokquNcPEzfP79Gvsn18cVFMPXeSX1CdCLbGu3
ri9emorRVSyHlh2jF02dEl+6dzAVj1znDcjrrxdhkQvenD5uIqour1Dtcju9
KL3l0/T6FV8qg1Y/szTrZDhfeLer+9nJzxX/A15PCs/Ui/sL25VbMeyY0uGs
0+Tphv2/X/fqm/kTbETXEYGl09MN89G8esdDTGxE9lNdiblZOvG76Kqs/RsL
ix9T064XNzGc35S9eH9SncLCS9kze3bh//9//fJXwi9bi08eG4xuldaL2Nv7
ao/ubC321djnXq2aXvyMyVhk+8ZKDB4wyWhqA704WDBo/dw/xsJ7ommLA4b5
snDe8jB9UJZS3S59zIbvhvnX93EuRst+KX7PRo+dkKsToXlOby+LH0rGlDMh
i6z1wuf6+ri5qzMUi5EzPD/+1onon/NNG09KVkY3Hh8yI88wn29cuvHhqa+U
lmnzr72roRcOVZMzGz+3EcXXXfvs8EYnTo6ssyDH2lhMGNpr1bE0w3y70Oze
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
ZcrnMXGK84UjRRvofUStN/du1VsXp+SdPVeyT1Uf0Ty7wDXvXTFKne3Xm0UZ
bFYu6MHvfXGKW78TOb/tfMT5KiPtdDfjlNtvC89xz/UWhyZsPbq3SYzSrYjd
1ESDr1xcW33m8zjFLOGiS1y6t/Ba7JfkvuSeEltv++lZk72F76ZCq8vVvq/Y
xes99OO9xZpkF8sVvveUI9Hfosv5e4u2Na6ZFelxVzljZdWsdldvMaFI/c4t
CyUo80wm7j7l7S2WmmcN+LrrjuIa/LbaZy9vkVzYrEN6vTvKwfqvr0UY5qfG
bVN6lnieoHQdFv7ivK236HvBuO1ai9uG+WeVMk4G974bH1De4B9LNr6qaXCH
x8kd068kKosaZeysnuYlAmtXDmo69YEyfd/o2wsueIn+qWWnH/e5qdyr6vCh
7XsvMVtcPxh+4IHSZ9zA4OnHvETC2+CeQ+deV5RmqzwqH/cSGxc2G1qkaJby
ukCPlV0N86fkVRYm1VJ+KmGHyzf3N9OLLyYnr5+8k6kcbN9sZ9mielF3QKaJ
za1MpfW+F31tDf60r7/nzeTvSsKZPhMTLPWiRKNn8UlZGcqusd2MbhnmX54H
Uzo0Xbhdebth5ZnuX3VidEBui7xxBURad6unVqd14qVHnVOfruQo+q2htbxu
6MTfvTeCJ5zOUaZ+cnsXbvBLt35HfiRlK58muVUeHK0Tkc1uR9nNy1amPYy/
cvmBTtwvEuGSUylbCUv/+nPfK8P2A6vOqGW+UunW9NiG42d1okXt8Q12lTIc
L0sWLJa6RSec4iP2zDlrJMrveJubGGTYX/+pR66NNhINPWu9912sE9WUNfuP
uBiJiEqnj4wxLL/Y6T/znqM+Kf07XS74eY1OXP7S/tDxCR+VNIsKl6Yu1Ann
L+Jv2M33SoMNCSXXTdWJrAlNfR7eeK+0s7R+vOr/z3M9aDH90PtUJaVsBbNi
k3XCKNi4VdGa75RdTTyiKy/SiY0Rh2Y8nTlGcQ4Pm3Rqmk48LVep1Liyo5SP
0/Y/ODpFJwbWNJ9gXHWgct5mfKH0ejoR12/0vSnVBytNG1muX/r/540+ORt8
ceoiZUjQr0sbt3uK3coZz1uVQpSrncMGrJnvKe4kx9y66JEor79xv6/rmkHJ
vWt4isRax05VP2nIS+qrne8tPEXDbd2GRUbEKFdCh9vdNPMU10yyRFal6H+e
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
NtPlhctEmurF/wBVT0GI
      "], {{{
         EdgeForm[], 
         GrayLevel[0.8], 
         GraphicsGroupBox[{
           PolygonBox[CompressedData["
1:eJxUnQm4ldP3x8+959xz3veca4rQYMws8xQpIWSWMQ1KKqXIlAwhaTKTIaQM
TSRCSSIqQ4gyjyGZx6LM5P/93PV9n/v7P89Zz57Hd++119577e/ZrHv/Y8+q
zuVyZ66Xy+VlLq/kcm2Kudx4mWfIvZ+ojaivzf1FfUStHTZQdIToSNFepVzu
NKU9WvYv01yuh+zHyH6hw48S7a44p8h/V9l/lX0PUVe5e8vdyvl2IZ5oD1G3
Ytg7iw4XNRft4DIxdxQNL+dyJ1C+6jxK5XZPcrkWyvdk+e0s2kXUQbST3ffU
5nJVSjNO5gXOl/x6qaxjZQ4V3ax8Tlc+eyufQ+XeTrS96BzRwaJDTNuIthV9
q3g7iI5VHl/J3F50tOzNZbaXqaJy5zpNO9H5ucj3MNHZooOc72Euh3YOsJv6
ned0pOnn73AA383mgaK82lQtOk72/qK2zvcsh+M+TnVZU2YDUU/RPqKWtN3m
vqJOVblcE1FT0emirUXbiDqKGjust/22FZ0h2k60vaivzeaiPg4n7GRRI6df
pX69XfXYStRA9uPUR1vTV7LfIXMtxblVZiLzEFG7qrCnokNtlkWH2ayIeom2
cl07iDZ0eaOVz230P21x+xhnZ8q9g2hH0Qkqf5zi7Cz7Twp7WDRN9KPoIbuX
2+8RUXfGmqiF6FTRnnb3EO3tPj3N4bhPVb6biTYXdbfZTNRDtIVoS1FPm7Th
NIcT1tnfYSNRF5sbi06xuYmon/ub9nQTberyujoc945q4/Fq49qqzw+y7yQ6
Qe51KzEeOmncvC/zdtEdog9s3im6QPGukfmK6EP7jRF9LZosul/0jc0HRF+J
JjlsYS7SXit6TzTaZbwgukp0tWiR6HrRDaLXRNfZ/arT4b5N8/EcjY/9VO/z
VJ8R8pvPvHOZU0TPi0Y63+dyEQf3W8xn0S2i7xz3QfpBNNXfeKnoHtG9onOK
wQOeFX1mv/tEt6oO/VSH1qVo/2n+5nfZZD59ozj9lX6I7J+LxosmiD4V3e0y
PhGNs/t714V6JPoGJdEw2b9wuomiZS6fvD5y31Pmlw6nrz8WjXW+SxyO+136
zv2+hupWK7pV9ouL0SdvitavBD/oorIbyVxXtB55qp1bwv+YGzJPktkwF7xn
c1GzXPAezC1ysT5s5rClzGnRYUpzYjHy34DxI79monby207mUTJT+kr2bUVH
yL2NzMNlysj9rLrtL/tkmStFB8g+pRL8jDK3FP0ud1v5PyLzV8Jkf6gS/I7w
rXKxVm3q+sFnt84F7+6suE1zscb0LsY6wri5oxzj9oBKjMUTRSeRl77/hYp3
Uy7WJ9JuRDxVdqD8b5T9D9kPFF0k9z/MO8ZLMfjOxqJNRLvKr6P8GueCR2/l
OsHjWU9Yb1o7LvUewwKiOt0pc7nS7iLqoPS/yNxN1KkY69yGufiGJxejv6nf
XbKvIx5wDLxO1FC0vugk0QbmlTcpzmrFbSX7mipnDdF/pNXHuUFtPkZljJX9
Ftnby/4T/rSPtitNtSgvull+VTLbiI5UvGvk/llxdqoKHroiFzwXPosbfvax
5wT87BPPFfgW5tJc8C9M5iI8Dr5M+tblKHd/87vPPFfgr8s8/+CdSzw/WLc+
8vxoIfsfMv9kDqotl6uec2S/XfZL1MZDStEv8ER44cFyX6Y4TzM2FGew4rST
35XF4EO0+Ypi8Az6kXXuQ8/XA903BdGeot8Ys3xT5XO18jlK+VyntCsZFwrf
rSrsqxiXVWH+ynirCpP06yrt0Up3vdLtVRX50Z6G8l9P9Fcu1hD6AF7CWoIJ
z2CdwYRPP1XQNxXdKnra5m2i2aKbHTbHfqNFT4pGOWyu6A7RnaJnHH676GHR
CNFI0VTRMNFw0Y+iBaKXnOZc0XnkpXY0EZ0ve1OZA2TeJeqhuXcB8fWd75V5
segS0bMuh7LHiQaKLhTdbfMi0UMuk3rMEt3kes8U3SC6sRCyAmsYaxeyDCbr
CWswfUMY8gt+rBvINfBr1o2VEprniJ6pDvmGcMJYhwlnjFZU77JoLt9P8Z4V
zRXNUNnXia4XTXM/XSV6xObVokdtXiN6zOa1ouk2SX9jjfpMNED0uPOjbU+4
fbSZNYB1CfmOMTGbb+6xMkv0pOhm1fk40fGiW2zCJ+4vhvw1HHnMficiU5l3
IGd10fd6DLlZ9tscTth9GoMPa2x3VHhZZio6SP4Dq2K8Mv/Oraof7+fZZLyf
b5PxPsAm8+YCm6S/oypkSmTSjVRWU9Hesl9ZFfOtLTKPyjxJ5d+r+t3u+pLm
RvPC9qKzqoIfwZ8aKY8NRevKfrfMu5X+RKVfQzx3rPJYUom+Wc889ETz0Q2c
Fzy2gShRupKoKPvL8GbRdvBn+T0s8yj552TvLP9H5N6/HDLuCNHIqrAj505R
2APFkHMfZF0UHS77PcXot3NEjxajLTeI1lWeU+XeFp6r+t8nsyXxZZ+gsA4q
b5Ny8MvBoquKsf5n9caOrFRTFfLZi4Qp7dqit3PR5ndyIVP8yVotGolsrf65
WuZHleBxyGGkh+chhz1vnjVT9ISordJdoviPyT5aeV/A2JDfpfKbkavnfdgf
N+973Onpa+TI981Dn/A4Zh2AD1Me34Q6Eo89APwbXryNyhmhMl6XfZzKvUPu
Y1XuOuqTtUWtFfde+T8g/5PlP6EY6+EgxqvCNxVNKsbYop3005CqWP8Yc1d4
LcL9p+fWbK957BsezcU+BLkWOfeXJGTfNfjeKm+o8l4g952qwzCFHSa/4fJ7
OVe//8GOHM6eB9mavA5HTlO8xbnYDxFO2DjPe/Y9d9tkn438zh4G+fVDxR8j
uotvXoy5sZj2qvyeyvc5+fWS+XwxxtgS0VjRONHHNu8WfeQ8CFus+I+yx2Bt
FO0oupZ2y2+e7DuI3jUfYV6+7/l8J9/KJnV6z+GEvVkVfAr+9C1zgzkh+k31
nMveUfSG3KMc7y3HhW9957hTRaerDgsU92HZl4nGiyaIvhJNFt0v+kx0n8O+
EE0UTRKtYL6JHhMt+J/5+rnzIN5SxpDTf8rcs/sT9xPuifq+L6nevVWXb+R+
wO1ZLnrEZbxcDPtPomdl3150lezfux0Pib50vaj31647eb1TFbyY/n3bfYD7
YK09a4jWFE0Q9ROdKbpfdLboHNF4UV+HTRJxONRfdKhobdE6oumiQaJLRROd
B/HuE53h9PeK+th9j6i33R+r7Zep3fshx8t9rug80aOii0WXiB4RXWT3Y/aj
vMdFl4kuF012vaj3A647ec0TXS26RjTf5rWi52xeJ3pSNER0pWi2zaFey0eI
RoqeFg0TDRc95XDcs0RXOH070Vrul1VOzxq/j/jEVqJn1MYn5B7sNHOcH2U8
77pcL3rB5g2WD65yGxaIbhTdJHrR4bhnug8Gu7yRTjPD34Q++lVltxYNrI4x
wVnMGR4jve1uVh3jj/l0tr7Jh4r/m+ybV8d4ImzL6pg/jLuPFP67zF3ob8Vf
Ivcfcm9RHXkQb7PqmEuk37Q6xijuTapjLuFuLvvPMn8RnaV83lc+q2TvL/sH
sv8q+w7VEb4SPlCMebAN40f2P2XfjTGq+O/I/QNzQOPqLc2pM9lHVkd85tMn
yMeiGvk1U/i5Ct8bP7n/Ufi/ohbVYa4W7Sn731URtq/sVaJq0d7VEf6faKPq
4B3M+32qwy8ncw/RX1WRfvfqqCfultURTl7nqfylnG3JfqCoLKqI8qp/tagg
+0Gi2uqYq20djvt+hb+nNnzKuuR65UUbV0dd6N/tq4NP0b/bVUcfrHA/zhA9
bt7EORTnTOOV50zl2bUUfOpUh8HPOJ/iXOrxYsgaGW/Cfq7542mOB1/r5vTw
ua52sz6cYjc8mPPBfuZfnMEhf52isqerjP7mbf0cBl873eP1MZeJnDjR9epl
/tfL8Z5WHpfLfAaeWRV25Jy5NlmfZ1aFHIkc2k3lzlSaC2XfW/O1mWg2Y1F9
MkvmxYwz9c2pivdEMfpugNMzNqe7T392/XBP8Tzr67DznWaC8nxKeXVnDXRd
kB3m20RuXaY4pyn8KeaZ7HMVvwfyp8xa0VCXcZ7z3Vz1vZR2i7Ysx3r0It/C
eyD2S6sYK6ILNBYerA5ee7556oEeX/DZA+yGPx0lOtp8CvMY85f2omNFG6is
9UWnmPcc47CLVNd9kWdln6L6L1Wdf5D7e9E+ov3MQ490GfDdw0VHmGexPh1i
HnaQ3YNcR9wPKs8vlefFKuc75fctPE7+A6pjrjInhjo/yvhJ4d1kjhbdITpV
1F00StRR1Mn8tIPoZPPgE0Unmdee5DD6jHnOPGadaWF+sEL595R5V3Xw8hOc
nnXmeLtZf46z+xZRZ1EX+l9tWK70PWS/0/U6zd+mpdtzs+tImturoy204Wp/
B/K9yXWnPaxJh7lPL3dfskax9hzqsKK+Ww3fLhfnodyrcN/CmWy3XJxnI3+x
r+IegPNF7hjOsvx6kejiXJxFcifEXcQZxciH88Tf1a59RH3gcfpeJVHHXJyh
cm/EndI9lkNx32c/8rrD5XfPxXllV9cJGf8S0aBcnK9xl8PdDufFJ9k9y+GX
Wu7GvMzyN+bluTjH576HOyvOW7mD4Y6F89fz7B7jdnPufpdNzt05Mz7X8Qa7
X+nTsQ6Hx/G9m1bH+sCZ9DlOwzk49zFnex9wofuxlfrpLPXTFbnYk1PHwbk4
9+3nfp/m+pLmfudBvpP8Tcj3IbeDtk31GBrgsbiR14eTbLIOf1wdsh0y1J/F
GL9vil73PGE8Dlbd/lDYGNk/rQ4ZETlrqU1kt0+cB2GLPUZJ37Yc9kWi34sx
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
O3OPuo7L4k52bfs/pPgN0vrwBvZvUojxsSIfcsbjrhNy2B0el5sWQiZDRtus
ECay2yayr8xH2A6FkMmQDW9UWQ1Fv8t/R/shD65fCvmxmewbF4K/kH4j2X/O
h3uLQsRBTty6EHIb8tq2sq/Ohzy4fSFkPuTB5jYpe7tChBO2k8tE9tyyEPkh
n25VCJN8u1RCXpwrvrGz4yIztiqEXIg8uFshZDLkuN1tIg/uWgi5irA97Ids
uFch5D/kwT3th3vvQshzyIy7uBzSt3BcwvZxODJaa5ePHLqfTWTANjaRAVs6
LjLgAYWQ+ZAB97UfbWhaiG9L/+7vdBv4u8HXX3TYc/ng9fBLZNKzzTcxz8kH
n8Y8V3RiJWSpJ8vBs/FDxoEHI/cMML9EhkCmmOBwwuDZF+ZD1rvfJjIgfBe5
7XLXCbkNWQw+jayJ7PmgTWS3B5yOsKn2I/2jLvNK877BrsfDzhv3Yw5Hfpxu
c5h5JzLcTZ4HyJojPB8wR3quYiLDzrKJnAtvRoZDppvh/Ej/pMORv2bbvNbz
bb77/Sn7kX6B283cm+u6IK/Ns3mz02He4vSYyImsAze4DXNclxv8XQm/zd/8
NvcvZw3cVXMXhczO+s++HLmcPTx7ZfSAeov6FEIfCPOMQugJne6wUfbrWwgd
ol4OQxfsTNFZhdD3IrxfIc4ROok6F+JcoaPdV4hOtvscUTvRoYXQ88I8rBD6
XpiHU674SSP0SGQfLOrg9Le4HMpurPAjC6EThi4Y9qNEZ4sOcRn9RQfbjZ7U
aaIeom6V4EHPaZy3l7lNIfgQeR8oais61n7wnhMKwY/ghcfZD151vM3m7ouD
XN5tdlM+eluniroX4tyFvulSiPMXzFMKoY+G2bUQemmY3Qqh/9XN6dHr6ulv
cLXzoz3Xuk2EdVe7jpb5Qjn03Y4pRPsudRtOpP414neiPUQniPYU7SVarrCX
Ra9QntwHiA4UnSZqKzpI1MPmwaLuDifsENFWoq1F7Wxu43hbOuwY0S6iXUXH
inZzPc5WnbeT+XY5ytxMtLnzxmwm6iba33Wi/C2cb1uH4z6/EmW/r3yOd/to
W1dRG6f/QW17sRC6hhf7G/M9L7HJ97zIfUbYIPvRdz8VQj+RPrpcdJLH5WXu
V9z0Pesc6xJnT3O95+mssluJWou62NxPdKL7voXoJJt7izrY3Ed0ss2Wok6i
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
cBjuT+L7TZJ9M9Wzfxr213iDIHpQYU86LjgUDyXRv5S3UuG/eAz1dFywSM5l
LUoCxyHDMK07QykGVgL14c0/74d5O4ws/KC/O3I3mAzX+CwQf/YIL9mf7/Wq
ZSjigMPwkOMgN4HfcJ3TTvH8WF2Kb0PYK5apSPtoEt8bLIX5NsFeOLYqcBna
W+Yi/rVV8b3BKeD7zzE/QaZ4yP606UanvUlmZ+W5ZhJYE4vVJ4v8Dfj+vOfn
Lf+FVYFNAC7BTNuR615MAoPhEY8HsAqIO4i13ev+LPPPJy0TPmE/5IJfPW5m
+/vNpgz5vZAE5gLvV6gDb1j45mARXFYVbuy8aXlT/m/4W26hsXFJGvk8nsTY
pX6v0xbLHs8mMRbBMtg0jTlF27dW2jlp+LMfAqPgJfctuATItMi9893PyL3z
/I3eSOJ9PO/MJiifV5GDaqOPeMtDn+3lfgbTgD0EaZGXkbXnemw8l8Q3Bt+A
vQuYBmAcfO9xyDv9y1mHk3i3vyCJb0DZb3PP7L5b5XJ/rYr9EPkt8nd/weOH
8IWOw16TNzsl762ws99BRudtEu+S+J6vFevfKWHnnT57St4IIcvj5m0S75Ke
dFq+dXP3J3OK70Oc2VUx/sBxoF47uz70GbLG5pY36Pc33Vfcpb9Yivv0xUns
97C/lsQ+mfhfVqLPJpdjb0Hd2HdQh7luF3vDt90njA3kUvAtMnx5zmU5B3/M
7g+TeFOI3hZ9y5tA3gO+mcS3JwydJ/x5G/h+EvtM3ryz3/nQ/QzxfpA8eH+I
P28G6U/eD9LfuLHvYt0w3gmje0Wffuw+h5b4uxCGP7pd7Ms/cXtbJVEW5bDH
xZ997lZp7HWpG+cT6F9xRsE+eqnHQEP13QdJvF8dprjLbP8oib5Y5nZ+6XZ/
br9u1k1Ddw1dtZ6O06s63lLiv73r9pXzyHS/BlrPC90szhnoh69d/9Nt7+0+
+cb91tt2dOdaOy06XV9V4jzggXL4fec8W7tc8qN+6NRRR85svnf/8IaEtyS8
ORkp/6+TeC/9RRLt5E30huXoE/y/sR9vUni7wlvoMc4f+2ney/KumP3sZ0mc
9fzgsle4r8bYzjuXNkm87eatNG7eVI91e1e6/uyVebec7ZVXuY37uSz6s5fT
Us44p+UdzMaq/w8qg01zk3K0kXc7S9N4d8MbmR+TeDfzmuvG+xza920SbSbs
dfvTZ/snUe+/Xde/3Ja73J/k8ab9+Y/yAx2XNz4z0jgjo084B+AtJe8oP7N9
mc8EVjt8me28aaU9/7ivrkmjXb+5r/9z/3xbCfcj5RivfHfG442Kf30a/fBT
Em2uKkX+4BpQftsk6so7UOrNW9DsP86xJ/l404ue9G7Wf0YXGj/6hLdC9Afv
8nhnmr0jxU6/8UaP96iEUxewAziMOSSJd4HodB8s+0F28zaPN3rT+Yb+b/TH
ZD9C4YcngRdNvuTJ9znIded9IfrivC3kv5aOdFzeIqDXxTsE3h0cmoTuOTrk
5Mf7Id4otUuiToTx1of3P/y3ON+Q91pv+ztg51v0cxz01CF01vFraTt16em+
Qlf8qCTqxPsH3kKAc/1KPuqE/hl1PNrh6Lj1cJ+TxyuuP+kOS6INa7t+67i+
idte8vfiLTbf6oY07FX50HdGHxr952OVR/sk9KF5u4LOJfqWx9kPnWfcjRze
Uf4nJ6EvdYT9ye9Op0WH80SFn5CETidx+a9B/mdwu3LUo8rx0Gsk3Vzb+Z/H
k5yO/yPskISb9OTH+xreCqHrhK4Y+lrzbCeP45Ood2OHbVaKuD9Vwt6nEueN
4ANrSak7h2xWivM1zv3A/uV8kP5A5xDdwmOS+B64//F5I+eOzIGSxz86g3w7
dBRbm6fBkzjH27IU525gtIPVDjs6UzJTJ1n61sYZ3db2P7wYuMRMVc70sDNN
ONMjLc+wN/e3o0zOYsGB57yT80BwjDmrhZdc6fnN2ex2zpNz2e2dD2fO4C9n
Z9jYObvlHLK58+TsDazjhj6DAkd6V5+37eS0nMsRZ22fq4Eh3Nhnbjs7LedO
YDc3yc5RSvVnKbs6PmckxOGchHMV8Po5RwF3mHMqzqs499vJceqw/J0n52TU
raPPTsDJXZCLszKwszv5jA2cZc7GetWG/eZynPmBuXxFLs6gwK3mXKiH/Sn7
tCTOMcFf5ixqH+fZJo0zUPw5lwKnmLOp22qjDvfAr9I4qwKH9+LawAoeVBtn
rmAKZ3cLrVyHQ9O4JwDj+Mwkzuixc4a3h/vk3CTOzsjz4DTOvMi3dxLnUOBr
n5HGPhOcxFPTOF8AF5KzIPB/s3O7A91ezorA9r3RZ3vg0nLmwf0Y2KnckQ1M
4owPjFrO9tq6vZwngSebnesc7HadkMaZEXiyHdI4DwIf9ookzn2wD0rivIk4
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
cx0I5863VBX9SP+i889/no62/w/leGM+VLz2p3K8lx8m+/flOHscIvvycrxv
HiH7x+XAkThf9k/LgS0xUPZvyoGfcLns35bjzPIK2T8qB6bEeei9lAPH42zZ
Xy4H7m4P2ReUA0exu+zzZH9T62En2eeXA/Ozi+zPlwNTqqvsn5UD1+JC2fvw
H23MS9lfLAf2VLdK8HK+C+8+vioHrsNl6HCVA1Phkkrcid/hfuAOm76iX3mP
gD/rIX3PN+Bunf7ljQL7HcJvc9qbHYfvwhsMdPy5H+c/QMd6rDJm77Kd+1D+
P2Pr6tjnDbF9su9J2fdRlzudP3sx9njsqb8sBy7EoEqcH+C/putDfNrBPGY+
I8/QB4xRxiz/7TvS4xl5gntY9GnRb87OqtGxxf/HqjjHRv6gPtxNI7chs6EL
zN6bfRayyVuOD671IvMx8iUv9LQJf91xXkriTpr7aHgRd9zcXfPfZ284DnrZ
z5nXoR/Ou1l0nvkPBOzsZxc4n2lVsd9caP/VtsPr0FV+1f51/5GYhE4/Zx6c
feBXp++fxBkIMuA099ujjoM/8hV6+shU8Djs6A+QF+l5G3KX7cTfpxyyLu8v
eAtMHXhHjEmd0J0uuA/Rqa47O3F/LnQc6ky/0Bfc9ZPfs+5/9APqdOuL8f+P
891X+M1L6mVs7MTljQ28g7dI/D/yKI9VdE5uEP2b83/MJhGXtz68/eG9FXom
V3vMoJuCjspNnhc3OR/mGHb+f5nwG50nfGiIeRFyHPYFuXh7xDjkDRrmVc4f
XRbshPPuiXKZTzc4T8rnnVSduxg8mLE9z7yaupIH/yPNOyreKqGrz5hjjDPm
6sZNMcbOSx4/yNDo8qPnwLrKWsvY5L1D3V6l6HHqfuYdwAKnJY8XbCdfwnij
Qf9d737g/6yvs526X2s7ay/rH+vaJNt5B3SV20Kf8P+bLzp/wkmDnkz/2njP
VVsb4+cUzyN0RU7xWEI3Fx1d/iNgeRL2V61XzN3/bdWB2/+j/TF/sr1lOdzo
JPMf1rz/543VKts51/rO+aA/wN39cqfFxM09Pv35czY+08gf3UveDJIv/4t9
md+Md6uNOpKeywDK+cVlcWa1ynb8sW/lMxvOa9Bt4VztV/tz78PZHLIf78Pw
5/yNsy78eaOA/gtnIpyHEJ8zF85beD/xu+cgZzD47+A9+58uCz1u2k8f86aa
/2Th/zf5nz/sBZv/2M77COzE5e0FdeZ8qbP7Z03H/dfxG9lOup/cn/Qt8ioy
Nzomf8j8OI2346znrOvDvf6gP8Zagw4b/iWv+7iRQcB8BZPgQuU5Ng29MmS8
kx2H+KxvJ9t+Zxp21kB4CLp0rCno9SG77Gv5jTWP+Yuu36n2R64hDnyjm/2Z
y+izIdsx/sekUWfmO/pvXVx/ePvv/l7oE3IWAB9Gr/AM28eloYeW7V+xw8PJ
mzLgbZwVoK/G+ojZy3Hgy+ArcK7IOQD+yADdnZa6IXuSF7yxp/MhbR/Xoe5/
oNPQPRvv9aG364ZOGntv9tfss/um9ecbpEcuuzuN+Kwt8IHuLhdZtav7EPmd
tY11jTcB33r+svfhXhk9Qc4keTfO+ST3/LxX5K6fPRT+7Jt4w8b/gqOvxZ0q
ey32Wevan/8KJ10jp8XEzd6V/RX/ucz9NeeR3Elwvoqb/4pu4fhNnP9A+7Pn
It3GtrMPw05+hG9k/w1dLmnZt1E37lzY97FnY7/2ovdO7Js4p2E/yV7y/jTe
2oApcX859pRDauO/k3jflH1n7OyVCCPOp5X4v9D13S72uNuk9fpczDX2tuwX
qQP7esphn9bG57HYeePDeSx7SPaP7COxc3bLWTR9xTktuBdbOi26XZTFnnqh
v2/du6ok3rx0rY7/9fvcdv7fk7dO7Ol49/ReEm3h/PZd28EMwZ9+gChvP9+d
pD6TJpz01BnZDhkUPbElSdiRRZFPP7Qd8yPb0YHDzhskiDDeaqE7t8RxMHET
912XVbSsS1j2vuljx//evJTxvDSJOtM/YFPzfoczct7yLLU/2C/YwXjhPRD9
081picfbFsqgD/lPQMK/cB9+6jjkg/4c/uTBGsac4q0N/8n4jetDHnyPH/1d
0L3L0n3lPH/0esD/PNKOr52Wc/pPXdbvnre8XfrKeZL2rjTmOPIMPA/ehwzT
2XZ4IOdq6FdzhoMu9+FpyDzoXR9kf84L8ee84fY0dJ45Z0PWwI68gQ74EU6L
XvTx9mevdJj9ORdClxc9XvKmDM622tpOWbek4ebMj3Mn4oFxwDkH6cEU2N/5
DM+FeYDtyEGUy9kb9TrBdWBvgo41Z1Sj09C1HmS5Ep1t5Ez20/gjF92cRhmc
C3Jez3/UcYb/WRp2zv/Ri0c//krLmZTB2ReYBkenIZdiHmX7HWmUhTx7vOvG
mSTnY/u7/se4ntQBs73t6MujN88ZHXLukc7zcPc5Z0G3pdHPnLO1c3zOIznb
w82ZJPH5lnyL7cuBdwKWCTp66Orx5mXvNLA22ufiO6FvT5+je386/ZsLHIhe
tpOGtx7o/N1XCZ2oiZV4F0Oe6PiBhwJ2RyL+MN5xhtbG+xDSvlaOcy/0Gjn7
QjcQO+dkPVwu34KyyJe3NhvbTv58G/5DkP/kIi51pe4Dlf8pquOCSmCXgxcM
njF7UPaW7Ae7J/H+gTcO8K53zE/ov3bu81vT+Aac8XI+eoj9T3Va+opye7hP
wJMhX3Bjerk++OPX1fH3TaMf8Qc7hj4H2wTzVMeh34lzQi7K6W5/6koc0jEe
d/WY5I6Ju6vE9yzYGb+8uT4njTOfmbajKz4+DV30bI+CfZr3IOwNuI9A3kfu
Z8+C7vqFjvNnGnr15HOv7ewv0EWnPP4jnf1jnV57KfaRuNnXop/PnQ17Se5q
zrX9vjTs3K1MTEO/nb0V9e3vsih3WRrv2pFvyR/5nzMA4v/ocwb2/OyZ0Jm/
NA2d8wlp6M9zf4TfJfZHLx07/8WIDIVchRzFnQbyFWdp/ezP2d5fafynI2+p
9yz7jXxV9A191NXnoPQbeyXqgr4+e8TLbaee9Bft4G3+JVk9ixE+2HEGOk/6
/C/Xnzq/Vw6s2v6V6IMB7gf6lf7lrBXdas6sObPl/og7trLv6fDnXJr7Ju6T
uCdi/LZMY0y2SmOMYucuiTjcR13tuzruocAfQ9ZnDZ1hOzI/96G7euzBM3mP
yvzEn/tU7ge5x8TOnemVtbFfmFaO8lu5XPYgzZ3nFNtZlzmvoJ3cu41Kgxcz
166vjfQja2OetUhjvlxXG/ZhtTG/4HHwI/YZ7Dfg//DmDraf6z5kTHKeQZwr
zbPgXfA57kC5H+UemDto7NyHcq/C/Qpzk/UBO2sEJm7mLnXZx3XD3Nt27n9a
Oz53yNwlc6fHHR927pTfKQdWdr9K7KmQ6VtzrlUJnj6xNtZ81n72QZzRsfaw
7lxTG2vHTbWxD2Bvxv6F8xbs5Mc5NvsN9hqHVuJtxhW1cd7CPo09GucM5I9c
Qb+RP/s1eAC8gDME9nPEZz/I+Ql7MPZfffxWsVFtnDnca77BvLvH82ug2rGT
+mBbxb1Y9j25H6sEb+ZtPPupy+S/t/x3kv8g2feSfQfZ21UCi2Ct2jgb5JwR
3oDOLHZk0rr9UOp7AKV9nPurSpxzst+7xXsx7Ozp6u4f0thDXa74+yj+zpWQ
o2gXMhVj5j7PO85ZOW/lHJQ9AfsEZG/m/kTzAeYx/Ig7bs558IfXcWeKPzzq
6Uq8mZwjc+1KvLF8phJ3bsgxyDCc+5E/exDu+5DPkM2u8lxgTvAmY2oacihn
t9QTHgtvGW9+9X9FnVeMllUQhunLf85BpUkTRMqyCIiIFCPSdNGIIUECARPx
QqPGBuqNRlRCgnRYuoqowIVRQzQaFCmiQbFhwXphJMYKkWAkFgQB59n33ezF
5pudf77v9DPtzBx4H3oOcv2meKdVtHNLUWzK8xXJ28jXwMi/2C15F94xyTES
57rPn3M/IzO/4DWLTPpiRfIsshn1RP5hTUODXE3MCjTIwOgx1Ac9ArmX+v9t
ORcZGrn64ajjSPyW+HIDvijgmixdgNwH6B3c393Rd3jz7GA8Z7A4izWjKI/Q
WUk2xjaGWVPfZcUgTSu6L5P715HDuXu9s+9fn2n8jX52Mk17l8XvnY0HvtG/
AeObaeOy8BNXJfmIyTeVDSMfkmMR3zQ4fmMtD+DcecAbimTsYvr5/g7+a95r
7XeRg1pSzyaN7Txt2RL5Bllxs+Ul5KY1pl/rZyvD5Bdq6zrz5H/WL31GP7KH
zIY3BW3vqOOsgGsC7hXwXPb3gIcEfC/+moD7BHxfwAMC7ss89/fhiffgcwn8
BYG/K+C+AZ9PrjXi/wPuF/DdjCdyaNZe2M51uz+eAwNfnTXe9Dn5wJD5z/ZY
z4vnpHgODZr1AS8OeFzAKyk/4NEBj0qqE/VZHs+HkN2yygDPGC5FBgj85YFf
F/CigMcGvDDgachrAdcFPAe+GvAGbMjoLvieLBuTO3B/Vl478uStSsqdN4Y9
OEsHIt9b8tyg/qwXYr3QBx8zj4PXEfe5z/steg0wvkLOK37stQ/uPdOwPwND
y/4ADbYu9nz8f+gcxKlhL7jJOi8wOjrxqu+aL7BXLDAN9l3sv+imxLO+U2n0
cXG2Dz8XtixiJmfZ1o09HTmU8qDHnt+wd+M/Il7wC++TvPep9x/s6NjTkSWJ
lfzEeGLUvvFexD6JvwQfD3/ku8Hvw/e+9DfRx+e7/vz+tfdVcs98ZZh9j3Kp
e2u3BX7B8wPDZ+L5U0V5IJDZkVGQT7iTvD4/QPDxrRXFpmGLJs4LPPeqnzG+
qXUZdFF0H3Q7dDx0Pc4AADfkBoQX1FqPRn9Gp64r8otwzgX9ku+gE8ELiNPb
bx2WuiGTECu30uUy9swVzuoQk/uReV8ynvkDTwT/lMd5mfnLiobvVImf0ieM
OXR8C98lNvitbjvxvh/6+7QbPLZ97FrkM8ImCV19fo/mmu+LPOfJ90O8Kz4U
+NJ88ybqstRtXBv98HbADxTVa4/rtt7981WWDYR4b84XIYPXnxtjXlX0LraI
NUX/ry6iQa+AdxMT/5Zp6vNfGY9dfY/bAu9a0sC/Kjpnwxkb6vOmafBNLHGd
0TGhQd9s1kx3uWP7BzfY+EVe+/BK8vWC59vc/07+K/wF+PCAiQXmucswObS4
K57zunWuA+POnfLgKZM75Xc2vNtK8F6/+5nxL1d0vgSfLHyb/QieiB6APgBP
J4aevp1jPHY39AVkRXRRdDrsWNtMf6/xM/zeXr/L2eEDHuvdhjn7hywEDWPI
3sF6xtfG75+bHnsjfnHkMexnCz1/Brqe6BeUy9kIdGTOCb/sdrHPsach/6wq
wl+bZY8l7hd7Kc9XDXO24nXXf57LxQ7JXH7J83mO588O297BY2fF3st3sO3x
P+9U2dZHGdh+4efwddZ+lfk7fJ85wFk05kbvpPN5nM1D90IHwz6APgueuT0m
nmOTzuFUJ/mV8Sn3NP78JB8BZ1yQ84kj/8HjRZ7LIYH/raLfh5oGXRYa4s7x
a3DWh/48ajrOyVwTf+OSzlKOT4IXGDfedUC/q/dzM//j/9FJ/uX+Sb5D/Ibw
3lFuI7wGPOua3DXfu73onMDkQWLuoa+iZ9I22j/OdbjS5fZ1HagP95tzTzk2
1dGmp6/w/9J2ZOxergOyAbbQi40n1yZ9Qrtrk77DPemPVMmnxnyrdrmUydki
7AjYEMhxOCzgPyo6Swm8xbI0tmns18TC/uQ1Sz4KxgF/NHYI7BLE0HO2kPmA
TsneCT1xtN9k2SSXlkb7BboGMfc/ek6SR4uykNv5fYRpDroPWb/4my513Rrq
ypnPIZ5v9P2DVXoHevyItJ28Vuhw+BLQNcgdOMJ9wNwb6X4mj9e3rgNtBsbX
gJ7Cu+iCtJs+p+3MSf5nX2WsRnt8GZ8rPE/ogzPut43R/ilBOzxrzv7ruT3b
MHOZvNuBavJq0ExPyrfdNkuGbpokKyNnN7OMjU/2lPfeOpe13Pvxae+/U0yP
rY8587vHjvzjxDy9kZW/m7ix17L67LjnDLScUaizDg7MN5hrvxv/RdL9WXdm
zSXOwzFGmz1OjNH+JBvqbaYBz9o8lnRvwuKstX/MeObgMX9noOvDeP6RdD/F
wqD/M+n+hSVZ+w99zvq4lb0k2tIla9/DhsW8ow+au99aZOX534BOlpXv/8l4
nkq6p2NNFt+BJ8GfTibd3bEa/SzrXoAn4nk6Kf//uoB3J90vPz2rb466n/cE
/kDgb8jSlzk3DL9lcLmPYH3WODGO8Ny/ku6mWBb4f5LuqlhumpMV8cGZgW8f
n+iQXb+KeOgtge8R+M5Za+uE11frrDsjno1nJevuiGfiWZV1r8TTWeWf9lw6
nnSPRF3gW2bdMbExq5z/XIcTSfdNrAz8bQH3jHK7BrzMusn7WXvC2kqjHfuI
18vEpDjVIbEmhhX5QYfHM2flph8a8KbcmIMfObWG8pprD6v2/llblON+QlGc
P3H6/QPuFH8LA+5cNC96ez1OLMqDf11Rzk/w2GDPi2f3JHmPeHX8zbOLctx1
TdKvJyTtrdQjZeXNv6SIv3czDbTAyF3EzxNHT/5vymBukpeU8yuU92E8zxim
3B6uA79Trz7mm8i35Plq5raP9x5+Tnz3/vh+26IcAcT1DyrKKz8o/v+5ojPe
wOgClNfF329XtFe2L8o7QM6BwUXl9HdZm9jPAp+LcBea391J3aLKPbLyCFDu
mKLYfuLuRxXF3gMPKMqbwLhcVhrrNM+2x4GuW3fnPRhfNP9oH2dL+nmswXUo
4mcdi8aiv/kye10/03TxeNHGOxjfKKd7Vp9QNr4ndC7sI9hDyEkFnvpgv/3F
NPQZMHVDzjlkGsqc4DnA77+aBp0LmG88XvSNYVl5qA55ztPew/7Otni/Y/Tx
5Kw1wZ4AH0emPuz1cpXnG23ckXSX+NQsHzXyJWcSdyXdMz4ty7aCro6evsIy
EHvp9sBdHTRTsuQ2aLD9IFMccbk1LguZodZtpNwW3jPhIayjUd5juTuB2Nlt
WfdVBGmTV7L4KXmWkcEOmu/Cc29mbgfNE0X3JaBibQ/626EPuFvAU5Nif3dm
6SY9PI6sCeAm9ivx/Uftv+jj9bsvy3ewuMin0MJ1nlx0X8X1ReuT+YFdjfeR
yeY21fd6+ptjDTfIqMwrZEL6gG+iF0MDv+f9/wHEJihq
            "]], 
           PolygonBox[CompressedData["
1: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
0T4IfmvqTaW31S/IJjPp
            "]]}]}, {}, {}, {}, {}}}, VertexColors -> CompressedData["
1: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
0UdrF9+dJLhcbWK1pGQFA9S1w6Zjz4i++LWwz/cvF0tKLvXPXc4E+/ORX5O2
BG8a2o2mEdxgnRj2sC+Lick2+VnXagXQ880bVCvkopytcCtdn4UNa2PlDy0V
wLht/Z+8QC7O1rLipn+yYChldybflg/63s8rYjUJP9YmLdg+ykbnGQbjD/Ge
5ltXX7uTzsGPwv6BS9JcyPqvXfj4FQf00K7lEhls+Gr/4m8XcUHyTrofxiH0
y2YkOOUGC8HOUYsc3vFgm/nTu9KFju+vpMz0XzFx2uTgfI0IPp54kziiaSpO
W+0bXmzGRPO3qO73TD6M5z+6Lb6CBs3Sg7xaOyZKFfsSVDr5CK7/lf35JQ2f
b35KEZxhIrjwmPH8p3xU/zthqKtLx2WjV0op+UyIFyb99bhE5I43pzS3X6Uj
m7bfobiKie7LbtSW43zEKjj/1yWg4+SqHiUdARNnRNsVo534CLE4obpBhoH+
GKvxz2OEPhe/rwq24iOGsT3TleA31Z0fL98m+O1TqrGrIcFvFLc5piduEH3h
petyXZ0FmaAzLluXEucMl+lb0shAvJB0bDHBWRM3NgtaiLmafG8Vci2QgVoP
S/QtYiHpV/XKtyuJuarfuKN6CQMhfvdGlxG+aXPqvft9wjd9Ws+M7lWjY1LR
qyMsjwnJ96WhY5cJLvl998Xm5TScsX2mtdSWiSbdT0sudvHx030idaUeFSus
E7TGhxjQSA/8nKIsQJS+b45MFhlGA5rFPw4xcOHJhR2u6QJ0X2Ss2K9CwhFD
wXAag44HunqaUmJCqNHPqelGEPofrFgr3EKHbNJ+3bQoIVJP3Ww42NCBK3OX
B618RYNR6PenkX+FcMo+eNP+SjtWiA+b+C2goTlD4VV0lhBuzVcjVOe3Ic/9
9XNqJBVrszfXFywTor21Lv0yi9Dne7kB+7SpEDs6fMGWLMCztzmWA29b4BIk
vNOzjArlOKmZZ1oE2JomPBa9uRW65OLDDtZUnGIKfo4PEv5e1Rc9rUfkjroV
H//EU3H9JT1w7wqCw01XJvQptYPq4Sk92UzFlu2HmZzDQlw40/Ghzp/Q+Zy7
jrP/UlG979r480Qh1tHCYz4saYfT/CV2p1qoWCg5/Mjam7iHibWu17JbYC6W
Wty3iDh/R0snr0aAzOs+jxNmdUIiT+GyYw0NF8JjjZr7haAbnszwS6HiQnwR
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
EA91gRVOzMV07JIVZz/oEWG+mdXIvyU8tM+p4j7N7cStpbPT9Qn+eRm4sDOI
4B952zMvdOZ3oi0pOC/1gwiX132ZohXPhdmnOHf9Ux2o/bnT7iHRHx30dcP9
if6o5WM61hBBwx51q3cj7iJo/FYd+sviQNvV+rV3fDuezfC/wjMT4YB5Vvee
axzczp1reSmaik7NjMe35ESYLPFsHe0PGy7ZPZbMvRTc1953I7JJiO+y5tdE
p9lQdk257CUgo6ZhReZwtBCtb6ju18u6sfSl6R9ZJxIMT32nmG0TwiFlj3Om
bDeSrm2xLo1oQbdBeqITkRsKKXPq+4jc+O7R9i61qAn3+Mlmr0wEuBH29MK+
lC4Mr5aNdTRtwi/pXdMiavgYkp7WKrWkC44t2uqJvGZs3L3OeUsLD15mvqSF
NQR/ewZXHJ7RimdvlFrSCH7N4DdLvQtg4mDh1Y1vp5EwoDJFLUWRizena1S1
CB/6Rd1jXVUm40f8ClKFMgccCVzZ3kr4vVj/5vctbUjJPnd04UI2amYsia/w
ZQCvfE7pelCQTHNb8GiUhWbK9f4v8xkwfdQUYPKdimfzSwubWV04uEeHXvqB
Dkn15y5D0jS0IbffIZaBD7WmeZMbOiHpYTxg/6kTFOUL6VGSNGR4BqzsTqJB
SaVv/VAWA1UdOXmVhSRsX7tuh2kFFdoXt89dtKELm+/IkQaqGrGUNHfwtQwF
ejEk+5K3LHzW+3i5Q6oOXpLzK8dXk3Eg7de5TZ1dWDfbuk97Szls69tvhe5p
xTIVvz7LHUyouKxYmf1AjPhER+3SKj5kmtyeh7MZ6G5uSr/2WAyFdZLH8n/y
Ef1G3n6VmAHB9fmfrZ6Jobl/5YwCggcplRUbqb8Z0H50OVopXgzT2Eevyzv5
8NtjMvxEggmun8vMQkJ/dsTjmAuDjwVN54afEj1yxeg27ag4wr/z01MvdvAh
eeGhcv8YA10K4SGusWLMOmAdfo/Kx8Cv0fjDo0T+VJJ8bYnrSVsYMbibuJ5P
vXFxr0QMfOZZ/ui7L8bSs88T2cV89OYfkJHuYMCWN2PJiXAxVHrk593MIa7z
7My9OZUEJ1YY5ycHirFqwd+Z6rF8vCu4dsn7NQOvD+7iLr0qhtRkA0leAPF7
9RyCBu8w8NCtu4/qKkbNSt0F+of5yNXZ2vzqCAP2upsmWxE5kzl/xjYTImc2
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
2akyZAZemi0zb3Qm9kWpXff87Xysn+cs9c2Sgakdc74tIfKfXacae6KUh9eK
+xo8kulw9DNR6x8UYd1hiUjORh6cTVfr0gY6QTojk73wiwh9WTLetm+4aPib
tt0ysgP3o+y4xwKJfSwHSf8FXOwJeNq0UoMG5yea5tctRShTs+4uCOYg2M+3
qSiLiqCXUVkrJouwaDul7xKDjXuMgHMtyhT4rmossSsUYsbcG9ptBmysvu73
u9aVDFWPZU6XLwmxxLgpRe96NxwsfiSRElqh+7Qk4JkGwdMaTv4Rb1jgcouC
96c0g3Y6daZZrQA30mWPryB3oS9I94dWdCOWPHePs0nig5FY9Pzn3C7k9um8
vKLSgpuJ7m4yhD8NT3hM/rGJCZ1Z5OXm3SQoe1MfJNR0w7+tHYbHGPD8+67z
chUFtuGa1Su2dGFzXa9drC8dZBHt+ZpyGvINX69ueklHannI/XtLO9G0yNi/
4Awdx9m56k+02iEIi216tI+GulKnZQn/vYfvs+uxb3Yrxj6Ulj92o0L90IUe
iztdqKvdYme14SducwzjrT3a0FRLHmjlEb3tr7MnTaISmjpW/bG1rXh4OjaN
+n5inqVWbYl6tIHg3Dm+NvlvJ+Z2+h3fPSepQjTerFRyGp2YW6vEnnV7fYQI
rvksY7p1Qj8re3P3Uzkhzrb8uuJ/bWJufd5r9559IEC6rs0W60cTc7txX3j9
pYUC9G9cOsUnpwvPJueru/DFOPD2x2zppB5YzFx206SXCTazZsjoqxiKVM+0
mfo9eNC/VV/zJBMNcdLSKkQ+019L2e4m8ln11Mm3S4h8Pu4zOL/5oBg7Dzhc
izPmE9zh7Tdbn4GPad66NzXFSLJIyLZ9z0PCzy3FZXfoWLtw1nV3noh4/o9E
jxbzoDSrZMAwvROHqBKz6jNFWF/Rz5x1i4sqlUbtM3odOFPS53j+rAiMmbWJ
amwOyn6kS1gntuPUriuqi1eKYO+iFNGyhYMtVhlO+2SpKCxpP/iMK0TOPaXF
EXFsxEYt1eklnk+8XDHjbKIQdEvyhQXcbtTmq3acf0tC0fLbtIC9QnyZbnm6
Zlk3lE/4Hw5pbMFIDxa6SgpRcSEqcOZhFmZ87H/5idoEmW9tX6R6eiCnFFTy
7lYXjB8dHfz5pAmzr79zWZzCQxM1oNo3n4ldw9O379naitYZWqFbietT1b+X
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
AlAvjqqOhg7Bs7E15GxiL0K8Y/ZGZ/Lx+wTn8UoMoSZVvVR8rAeRqa5KQWwe
PDkpZ//7vGhoz/Td6VY9cJ7Szfvv86LNocnVZz8M4nzP1bUJcd1Id1ISSFlx
gKZ8LzOXQXinFzmurenCNa+532SdWegLG7EkZg9ioaft5RLxLgQmZj3r8mBA
y+7Hpaz8Aeh4WXtUaXfiV7WZTv92GqbOnazsdCZ9b93Iilpj8lzkrdvuS1BQ
e+/M5tDf/bBN+EtptBRCTfLxztH3rTjwo+pug3UfmhUyZ9faELjpyvh5yaYN
JtWHHNySu3FbWdcp9ogAW2dK3wm+SMVoxk+dX3EdMA+QHxq2IvtrbNLHWJYJ
O4V+m4wTAvhc3PNYYwUPxrO7fD1rOHg1MfZWtZyNn0UTl0w72XjMEBmu9OXj
gkLiw1wNCk6EZrDE1jGxSS1E6lQOATOr/Ksnd9djxlqb6zb/qDi4LXJh+EcC
sZllVqVk3hU7HQy6QOYdtKo2viHzjndKwrqB5PDw9BAR2Vs9aODPXTzPiYd/
L2ZPna0aRFvJk3zVum5MNrcWP2NwoOr8dVd24CAeSu7xr5HthkeD1Cnt6WxE
M2d/cdQdxGeL+Xd6N3WB0ptirzfJwM8Jdp1E/QC2xj3e/Hh/J+5L6o+Pl9Kw
X31PdvGFAWSezv3b59sBy515+83iKbhkZJb/bcYApq1Si/TwEULj8Cz5D4pt
6CzL26PzsQ8tVnSJUz4Efvk6bLWjt0JEPHBzxPduFFnWSyoECnDKSKVVVYWK
x0WmMt/rOmCmdHWjjQsfUQ/G+xVqSP41tJxIihcg9vZq+UTwwOxSVMBdDspL
Xh4RecfG5KYdIrVsNnxou+LYgXwUbyAObG9sx76zkveVVZl489H0W0kdgaEo
qzL+l1qI7chqqoyhYlAvwCLMgUCE1ach5+5BGBBfFYbVetBvQpxMTuYicclW
7pvYQRwLu3smx6QbLfsm1wyHsMHgtz6v3TAI/wOhjjdOdsHcf/CvvRsTAvMH
6lRiADPbe6c9j+2Ef56f0N2Wjhk3w1tqQwfw42dxrWRiB15feRVc8JOCF7vW
zM9UGYDPYW+J4nghEh6/saaeaMOko7irNel1Bszpj7Y+IJD3aJQocm2FT0bu
Xvt5PVBMXKIrHylADfE+3baHgvqCmEKD4Q4oqljXZp3jw1PF7PuLZAbKG9+l
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
zsXND6677U9TsG3w5FfRZwz85fs9ZFrwUO57rnkt8TzuHhFuz4jnMewZUSoi
nudF7er+4P1EnxDPKD/1iAEdKe77/TY8XDH4olaS2QQt4YipuJVUBGrffzlR
Szx/WmCs784mzFrXbCYyScEPXZX0FW94yLsu4ipo24SgVb82bBWiomqH7con
hcTrdqaNV/wkwf7EdFeqIgPn1X3VvT/z8CHsQKUui4Zryjta2aFMODjJlb54
wMVZS0lfmatMDHgK/rS8wIJatkUOj+gtkhPuR+gbmOhQWzH98RgLFUNdP59/
46C1sOJeoQETw5vzDTfasqDB9N1V0cuBsoXH2OFKgl8Xs4aneljY/Hv98Cw/
DuZeLl1oxmHCm/Px5rZEFrauKLAoLuRg52/2gdMLWRgTA+9vJgtaZqydttkc
qMa6C598yUSJ6ECZzg0Wgl8IvUmqJfqZcp3F8tIOiB/dn3DxNJFzDM7nWY58
SE+a072Ps9G/X3eezVAXtjurTMUms/HhfvqgixIb350nFU0buuBMHtqkVcCG
bKjw58vb2fgiLs28R+6Chcs2tZpsNjy1hwJ2E33KIHpae1iRDU2b2xOXuV3o
Mx8LcpDi4otudK7NcjaGhko/JMl040S+lWPkJi4UwszFJKTYsHH8mbFiQTca
s3U1VRT5cExPUVzRROQ+z6V+/AMTLjWha65/4eFVKjtFupCN0Pobz6UEWGhP
GxTXJ3xRd+ht4ZoyNiz2aSlY9zBhVhObEtXZA7ug96+mzhC5bCkiK/eZji57
CSPB2B6sUlxNx0EOWINH2VFiDDz3Pb31P58/qfHRL+w/nz85V9Q2ZZA4l3FV
h1vrzPugfdB99OUgB/d+eu2PmaZC6d3D8r3z+uD1122ihuh/jupPj908QUPg
wqJankIfFNP/3ODTOSgUqph/YgsNFxj213lrB4jeMGB8KooLn7MZbg84ZAxe
+rvC6mI/HCTj8uWI9VO2ylv3+RkFAb56xsap/ZDuv0FvI3zw08VfXVOXCZ/y
+eL6zqgfuqPxw2d0uVh2oep1XTfRy59vHj4dUIeAeR/kvgyTkT3/0+PqFi7+
voq4k/2xFib3JPLOFJGR7FmV+Dydi3mbOyqqPlRiqE46z/khCV6WFWkX33Ew
z9zIzFKwFe7Ommd6SqmYCvxXSLHg4/GC4FWaBK/tKb382p/gtWL74LTpvzx4
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
lNdiISxsEPX9t6SGA8oJo28UPxK2rqr/MfsPHcbHve+U9fKw7KC+yLzfdGTH
9fs8GGRif6QpdY8xF4a7QoPOLm5G1Kcu7S3bqLhlrLbmB8FH8jT3MunwPlRJ
d8qJ/eWgfEJWb95noteTUrusUmnYaMK1rPZkIt3L0kiR4JdI303D/e50uN+b
MhIvYuKogPcTuicXGWsmXV/mtcNfUpxJnkXHUFWA+eECotcdOB73mdWBuXes
FOFCR7lKcdn0KcJ/NK1XppR2wuoBtzy1iI4XixeophAcsX2i8XfneCMSyTG2
kX0UJG+I3xH4mAfuuYNKjU1NsK9PyJ1cR8WK8Zy4BML3JKxC1Z02NkPEO4Id
oU3FkSc3Dk308zDpW90vdqMXYp4KDw+ncWC0RdZmjMh1l07xPRvk+mB5o040
geBh9QNCB4u0aHhRdPp1gF8fzh8WKWIR5+RL4NLwchIVka59f7J+lGNtyJfD
hdIkGHOuLMsx4szoM/qMPqPP6DP6jD6jz+gz+ow+o/+P1//P3012+F9f3/73
9/3/V/3/9evO3P//z/1n9Bl9Rp/RZ/QZfUaf0Wf0GX1Gn9H/u+n/0znrf/r9
Z/QZfUaf0Wf0GX1Gn9Fn9Bl9Rp/RZ/QZfUaf0Wf0GX1Gn9Fn9Bl9Rp/RZ/QZ
fUb/76//F43qFFQ=
       "]], {}}, {
    DisplayFunction -> Identity, DisplayFunction -> Identity, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, 
     AxesOrigin -> {Automatic, Automatic}, FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
     AxesLabel -> {None, None}, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", 
          HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
         "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(V\\)]\\) [GeV]\"", HoldForm], 
         TraditionalForm], None}}, DisplayFunction -> Identity, AspectRatio -> 
     0.78, AxesLabel -> {None, None}, DisplayFunction :> Identity, Frame -> 
     True, FrameLabel -> {{
        FormBox[
         TagBox[
         "\"\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", 
          HoldForm], TraditionalForm], None}, {
        FormBox[
         TagBox[
         "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(V\\)]\\) [GeV]\"", HoldForm], 
         TraditionalForm], None}}, FrameStyle -> Directive[
       GrayLevel[0], 25], FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], ImageSize -> Large, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, 
       "DefaultGraphicsInteraction" -> {
        "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
         "Effects" -> {
          "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
           "Droplines" -> {
            "freeformCursorMode" -> True, 
             "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
       "DefaultPlotStyle" -> Automatic, "GridLinesInFront" -> True}, 
     PlotLabel -> FormBox[
       StyleBox[
        TemplateBox[{"\"FASER2-FPF\""}, "RowDefault"], 20, 
        GrayLevel[0], StripOnInput -> False], TraditionalForm], 
     PlotRange -> {All, All}, PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}}], 
   FormBox[
    FormBox[
     TemplateBox[{
       FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               GraphicsBox[{
                 RasterBox[CompressedData["
1:eJxFlwmcjvUWxyV3YmZsZbtJ9i1q7q2spR9ZrrJUuLYUQiEx1iRRdmNwiySk
kEtlS8qSUYYwxjIz774/27svM7JV0r3P/zznmff9fHx4/6/3Of/fOd/zO+dt
/tqMIZPurVKlSpH+5x79j/j3mmnhO19dK0TT5fGXjj1sQ395Qb0D/5LxUFzp
/ODPZ/Br2aDX6oy0YeIr3n73zpexf4p/Zt66s/il2aFZkz+04X1Xj3dG7pXx
TMS1748xv2Dz9PuX/nzRhm3//vyb/U4ZV1+3had2OIc3T87Z0KiaHUdLq/ir
1lAwLljSwvP7OTyT6diV28MOiwjTTcG1CZdeGXDhPOqO7Hbkwjw7yovOPLt/
ioIlyvnNP266AG331rPNDtmR1a/13KpbFDww/oylw6QiHL1+1zo/akfbwhV7
RlxU8GXgVK1tT1xEXi8RyYHedEEFnV898Vx21WKMWV94s90YB+htBxXnvN8v
W1hSjH/4WmV88LEDCzp/88yIl1WMfPnbnxLbL6Fqh5UNXFcc2HQ4e+a+NSpI
7luXYZsfbfPP6k4cfmz6rntOqlgwcm+ny09dwd5zA7qs7uXEla+v2oYnVJDM
zKt4V2R3gRMx/Vv7HtI4T1cxWMg/4kTGro+63zNIQ4Opg66vG1qC5iLNSSda
NL0xbfh7Gsa2L65z/kQJbgi5bVzosVU8QMPeSP/H/te8FOdF2HEujGooMq2h
Yo+4SCm2fCpeLszVqzC8VhDtFuUff7NGGR49/Fn5nnMu2LaEmuyJaBg/bEjb
L1aX4fTFHX1/uO7CkzuPdPmtUMOWRxp9bK1hwTBVFMCNDV8teem5zzSUiXLm
WRDRKSob5Mb1Qy++ueVtjfVaWa8bQ449rBOmoTcBZEVtCuzGYT27T3fUsHBp
zsD/ZtqwU4961+pG3fMnjq3N0HBk1M3j7jwb182D3CuryvySikTOj21rZ9lR
NO/U5w/meFCiZznnRxWt9er1XmPn+nqQQ/VU8arAN8vB+fBgvfZr07IZKtfT
AR1aXbAHqfjP3Vo+r+KqCJPlREPXldtDVQ8G69WY00pF9bGbB9bPd+Lra6Ix
vNivU/DLXwp6dhIXdDHPXmQTMArmZ7XSU+1CqU77oqleTKvx+xdvfKfgkBz9
+HC2G5OeCryw9hMvLtURghXEjh68N5zvxm9DRaK96CDSPllBi3VzZzau6UE+
9asXeU0npEY/q2D0RPEAD/evj7lSsEGnaFlNL6i8A3x4Tqfj7i0ZxRTHi34i
zfN9+EqndXCpjGrh/HbJmj6Q3N0+VCewZDxdMGRT83U+vCXClvkwuc+UGRXL
ZebIjyr08jN3Mg6QP/ixUXz8qB9thv5NJ1pGiDoygLbieqP9WDHaclKtJ+Nh
Aj0AasOVfgTH77A/WS6h461PfBvuk7gv/OgrwhZJ7E8SFLIpP77UKXPskjBR
2MZKie8VQDVKvIT3j/bUrUOCiKqnChMWC8OSsG1ny+N/3idj21lhZAGQbTwu
4fjajIoG/WX2gQDnXYJd9PkqGWd0qtYXBtgPAviV/EqGLlZPdQCndXreXRpA
rRcObpxUXeH76Pfo/9N7TboG8Ej3j4oX91cgqPW1ktBzhDAYP8jOVil8Twl/
Tbqtjd/hB8m/oHD/SCgQNjrcj0V3uudeqa7y/SXuHz+2ijbur4LsVddP4X7y
Gb67WuV+kPCHTmFstg9WvQpNilS8I2xsn4RjAr92PqNPamisV8LbdGGda2p8
jfmW0Fng86HX8JPVGudBwg2P44PZ/bwgXIo0fCHkZsg4Epv9ff07HsNnagSZ
Vxmzfq8dPXrQg/cgGimIJ+gl43FKiMfwn9VB/lyGXqQX/2zkwQ/17xSnioKV
/B1srS3dftlt+FJmCJS+eTKmPylIcHN/h7hvZHTsLSad2/CrvBDzJEN00/K4
i+dJCKmFIrCMr8eJi7vQR/hYZhhdV4sBI4NkDnNhnLCH58MQLjQtLLPPuoz6
5IVRLGz1rgxqt1NOnpdh1Bc2WU8BjbdZTsP3MiM8nxRMpMBOlPZxVtx4PsLz
RYFO8Uo910gKP1wT4XmtgMblfxyo3nj7q+2LIyCbma5gp95dXfs6ICjonRUF
2cZyBeMJGDt60QCO4qqwga0Kmomxc8AOGv9roqC2PqwgoLt+0wl2vHO+vY5Y
tJLT7XV3F5xuaDd8NSsGo+0UjGkmnmxjP4rhlsDqpoLGBKQNZOtrYuyjKtxi
rehkQ1zgUhwDpbmFik9FemNW3Cd8ODvOe4M5p60Q3ZczMI4mVGCV56jVeG5+
HK/TS+W5beV7xUFjdqGKjSuX685kMXw7O4E/Fk3VNxcVQ3UXnDvTgo23MvTI
CfShxUnF/UJuGwu+FX6en4CeZL2gKkq+EwUsw+VL4pUAjUOHChpL68v4fQIz
BW4VKvtJGYz1K8HzUwO1ey0LEsRjwuCzpQay40EWzmOC547GXFvYl5NGnBEa
38PCz00acXM1UDtlW5m/JPeBxnWy8lxJcl9oPF+taE8DNmnELdCYYyv3Lcd1
mHuAje/HcSs07mNz3+S4mUGezzb2O47bMogJxJeN5zrH7RHkOtrxBtXV1Bvk
59pZZxJ0/dwgjtOcsfNeYuoNoiMJtnM/mHqDIJvOcHDdkqDHFARxPy0MDt6r
TL1BLKPvO/j7HLciCGqnsw5Qmg+YekOYSnuxEyT3mKk3BC81qJP9l+P2COEF
AszJ9TT1hkDXK3TyPcz6hozyVnUxV8lKnzP8w8VcmXpDILkfuJgrs74h5trF
XKU4Tojfs39mpri+IVA7wc1cpfjzMM8lN3OVYr1hkE2fcjNXKa5vGLSG3nUz
Vxx3RJg/9/DfHDc3zH3s4fpzXN13W4r166SHueK4u8LYJGxan0cGVxy3IMxz
2MtcpeAkvWHmxsvxUlzfMBI0H7z8uak3grEk2MtcmXojIJvu5mOuUlzfCPrw
XmZwZeqNMB8+vjfHzY3gEWEbt33Mlak3AmrfLn7+nqk3wvPQz1yZeiNYQvuv
n7ky6xsB/bebfn5v6o2AytspwFyZeqNwizTPCTBXpt4oSO6RAHNl1jcKCns9
wByVs94oSP7fJX5uOec7yn4vMVflrDdq7COjJOaqnPVGec+VmKty1hvFYtF4
myXmiuM6opwvie/HcSuixlx1mvsnx82MgWz7tsRccdyWMZANN5SZK47bI4bt
VBeZuSo3uBoRY90y6zT1xir3F4MrU28MZGObZObK1BvjOsrMVTn7VQzGz2+Z
uTL1xri+Mn+/nOsbw2PCBuorzJWpN851VzhPpt648bttmMJcmXrjzIPCXJn1
jYPkbFT4Hhw3N877vsJcmXrjWCHSbFGYK1NvnPlRmCuzvnFjbj+gMlcVHCfO
9U6fG/WLc77T58RHowTrT58b/CX4Hulz43dNgjnTKs+NuiW43ulzY79KVM5V
89zwqQT/vkmfG/t3gvkOVp4b+2QCr1DB0+fm3DbqnT6fTQVMsp+lz2kcjEsa
dakXqjw35kESJPel9DmN+x1J5ix9Xsjzisp9KX3egH5YJivngHluzL8U91X6
3Ph9lGK+0+fG3E1xnPT56+zTxvsI/g9eITvj
                  "], {{
                    Rational[-15, 2], -170}, {
                    Rational[15, 2], 170}}], {Antialiasing -> False, 
                  AbsoluteThickness[0.1], 
                  GrayLevel[0], 
                  LineBox[
                   NCache[{{
                    Rational[15, 2], -170}, {
                    Rational[-15, 2], -170}, {
                    Rational[-15, 2], 170}, {
                    Rational[15, 2], 170}, {
                    Rational[15, 2], -170}}, {{
                    7.5, -170}, {-7.5, -170}, {-7.5, 170}, {7.5, 170}, {
                    7.5, -170}}]]}, {
                  CapForm[None], {}}, 
                 StyleBox[{Antialiasing -> False, 
                   StyleBox[
                    StyleBox[{{
                    StyleBox[
                    LineBox[{{{7.5, -123.10344827586209`}, 
                    Offset[{4., 0}, {7.5, -123.10344827586209`}]}, {{
                    7.5, -49.82758620689656}, 
                    Offset[{4., 0}, {7.5, -49.82758620689656}]}, {{7.5, 
                    23.448275862068957`}, 
                    Offset[{4., 0}, {7.5, 23.448275862068957`}]}, {{7.5, 
                    96.72413793103448}, 
                    Offset[{4., 0}, {7.5, 96.72413793103448}]}, {{7.5, 170.}, 
                    Offset[{4., 0}, {7.5, 170.}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]]}, StripOnInput -> False], 
                    StyleBox[
                    LineBox[{{{7.5, -167.0689655172414}, 
                    Offset[{2.5, 0.}, {7.5, -167.0689655172414}]}, {{
                    7.5, -152.41379310344828`}, 
                    Offset[{2.5, 0.}, {7.5, -152.41379310344828`}]}, {{
                    7.5, -137.7586206896552}, 
                    Offset[{2.5, 0.}, {7.5, -137.7586206896552}]}, {{
                    7.5, -108.44827586206898`}, 
                    Offset[{2.5, 0.}, {7.5, -108.44827586206898`}]}, {{
                    7.5, -93.79310344827589}, 
                    Offset[{2.5, 0.}, {7.5, -93.79310344827589}]}, {{
                    7.5, -79.13793103448278}, 
                    Offset[{2.5, 0.}, {7.5, -79.13793103448278}]}, {{
                    7.5, -64.48275862068967}, 
                    Offset[{2.5, 0.}, {7.5, -64.48275862068967}]}, {{
                    7.5, -35.17241379310344}, 
                    Offset[{2.5, 0.}, {7.5, -35.17241379310344}]}, {{
                    7.5, -20.517241379310356`}, 
                    Offset[{2.5, 0.}, {7.5, -20.517241379310356`}]}, {{
                    7.5, -5.862068965517252}, 
                    Offset[{2.5, 0.}, {7.5, -5.862068965517252}]}, {{7.5, 
                    8.79310344827583}, 
                    Offset[{2.5, 0.}, {7.5, 8.79310344827583}]}, {{7.5, 
                    38.103448275862064`}, 
                    Offset[{2.5, 0.}, {7.5, 38.103448275862064`}]}, {{7.5, 
                    52.75862068965517}, 
                    Offset[{2.5, 0.}, {7.5, 52.75862068965517}]}, {{7.5, 
                    67.41379310344827}, 
                    Offset[{2.5, 0.}, {7.5, 67.41379310344827}]}, {{7.5, 
                    82.06896551724138}, 
                    Offset[{2.5, 0.}, {7.5, 82.06896551724138}]}, {{7.5, 
                    111.37931034482759`}, 
                    Offset[{2.5, 0.}, {7.5, 111.37931034482759`}]}, {{7.5, 
                    126.03448275862074`}, 
                    Offset[{2.5, 0.}, {7.5, 126.03448275862074`}]}, {{7.5, 
                    140.68965517241375`}, 
                    Offset[{2.5, 0.}, {7.5, 140.68965517241375`}]}, {{7.5, 
                    155.3448275862069}, 
                    Offset[{2.5, 0.}, {7.5, 155.3448275862069}]}}], {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]]}, StripOnInput -> False]}, 
                    StyleBox[
                    StyleBox[{{
                    StyleBox[{
                    InsetBox[
                    FormBox["1", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -123.10344827586209`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["2", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, -49.82758620689656}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["3", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 23.448275862068957`}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["4", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 96.72413793103448}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}], 
                    InsetBox[
                    FormBox["5", TraditionalForm], 
                    Offset[{7., 0.}, {7.5, 170.}], 
                    ImageScaled[{0, 0.5}], Automatic, {1, 0}]}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]], {
                    Directive[
                    Opacity[1], FontSize -> 22], 
                    Directive[
                    Opacity[1], FontSize -> 22]}}, StripOnInput -> False], 
                    
                    StyleBox[{{}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}}, {
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]], {
                    Directive[
                    Opacity[1], FontSize -> 22], 
                    Directive[
                    Opacity[1], FontSize -> 22]}}, StripOnInput -> 
                    False]}, {}}, {{
                    Directive[
                    Opacity[1], FontSize -> 22], 
                    Directive[
                    Opacity[1], FontSize -> 22]}}, StripOnInput -> False], {
                    "GraphicsLabel"}, StripOnInput -> False]}, {
                    "GraphicsTicks"}, StripOnInput -> False], {{
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]], 
                    Directive[
                    AbsoluteThickness[0.2], 
                    GrayLevel[0]]}}, StripOnInput -> False]}, {
                  "GraphicsAxes"}, StripOnInput -> False]}, PlotRangePadding -> 
                Scaled[0.02], PlotRange -> All, Frame -> True, 
                FrameTicks -> {{False, False}, {True, False}}, FrameStyle -> 
                Opacity[0], FrameTicksStyle -> Opacity[0], 
                ImageSize -> {Automatic, 340}, BaseStyle -> {}]}, {
               StyleBox[
               "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)[\\!\\(\\*SubscriptBox[\\(N\\), \\(ev\\)]\\)]\"", {
                FontSize -> 22, FontFamily -> "Arial"}, Background -> 
                Automatic, StripOnInput -> False]}}, 
             GridBoxAlignment -> {"Columns" -> {{Center}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
           Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontSize -> 22, FontFamily -> "Arial"}, Background -> Automatic, 
         StripOnInput -> False], TraditionalForm]}, "BarLegend", 
      DisplayFunction -> (#& ), 
      InterpretationFunction :> (RowBox[{"BarLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{
                 RowBox[{"Blend", "[", 
                   RowBox[{"\"M10DefaultDensityGradient\"", ",", "#1"}], 
                   "]"}], "&"}], ",", 
               RowBox[{"{", 
                 RowBox[{"0.36172783601759284`", ",", "5.088088556056479`"}], 
                 "}"}]}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"FontSize", "\[Rule]", "22"}], "}"}]}], ",", 
           RowBox[{"LegendLabel", "\[Rule]", 
             RowBox[{"Placed", "[", 
               
               RowBox[{
                "\"\\!\\(\\*SubscriptBox[\\(Log\\), \
\\(10\\)]\\)[\\!\\(\\*SubscriptBox[\\(N\\), \\(ev\\)]\\)]\"", ",", "Bottom"}],
                "]"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}], ",", 
           RowBox[{"LegendMarkerSize", "\[Rule]", "340"}], ",", 
           RowBox[{"Method", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{
                 RowBox[{"FrameStyle", "\[Rule]", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}], ",", 
                 RowBox[{"AxesStyle", "\[Rule]", "None"}], ",", 
                 RowBox[{"TicksStyle", "\[Rule]", 
                   
                   TemplateBox[<|"color" -> GrayLevel[0]|>, 
                    "GrayLevelColorSwatchTemplate"]}]}], "}"}]}], ",", 
           RowBox[{"ScalingFunctions", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"Identity", ",", "Identity"}], "}"}]}], ",", 
           RowBox[{"Charting`AxisLabel", "\[Rule]", "None"}], ",", 
           RowBox[{"Charting`TickSide", "\[Rule]", "Right"}], ",", 
           RowBox[{"ColorFunctionScaling", "\[Rule]", "True"}]}], "]"}]& )], 
     TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{3.9201090204459534`*^9, 3.920109083840563*^9, 
  3.921653018737911*^9, 3.9216576474711027`*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[358]=",ExpressionUUID->"5c357d86-b3ec-4792-8f11-bfcc264269ac"],

Cell[BoxData["\<\"C:\\\\Users\\\\miksi\\\\Dropbox\\\\Science 2\\\\HNL and \
scalar phenomenology\\\\_SensCalc\\\\plots\\\\SensCalc\\\\\
NeventsDensityPlotExample.pdf\"\>"], "Output",
 CellChangeTimes->{3.9201090204459534`*^9, 3.920109083840563*^9, 
  3.921653018737911*^9, 3.921657648500765*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[359]=",ExpressionUUID->"393d1f0b-f7c4-4380-bc51-e3afb090b9af"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Importing constraints", "Section",
 CellChangeTimes->{{3.9139638439670105`*^9, 3.9139638463219385`*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"15df64ef-f8bc-45f8-9d3a-\
b2b9fc3a4c63"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"importformat", "[", "\"\<txt\>\"", "]"}], "=", 
   RowBox[{
    RowBox[{"importformat", "[", "\"\<dat\>\"", "]"}], "=", 
    "\"\<Table\>\""}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importformat", "[", "\"\<m\>\"", "]"}], "=", 
   RowBox[{
    RowBox[{"importformat", "[", "\"\<mx\>\"", "]"}], "=", "\"\<MX\>\""}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"importformat", "[", "\"\<xls\>\"", "]"}], "=", "\"\<XLS\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dir", "=", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<contours\>\"", ",", 
      "LLPdirName"}], "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"DirectoryQ", "[", "dir", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"filenames", "=", 
      RowBox[{"FileNames", "[", 
       RowBox[{
        RowBox[{"LLPdirName", "<>", "\"\<-excluded*\>\""}], ",", "dir", ",", 
        "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ExcludedRegions", "[", "LLPdirName", "]"}], "=", 
      RowBox[{
       RowBox[{
        RowBox[{"Import", "[", 
         RowBox[{"#", ",", 
          RowBox[{"importformat", "[", 
           RowBox[{"FileExtension", "[", "#", "]"}], "]"}]}], "]"}], "&"}], "/@", 
       RowBox[{"FileNames", "[", 
        RowBox[{
         RowBox[{"LLPdirName", "<>", "\"\<-excluded*\>\""}], ",", "dir", ",", 
         "Infinity"}], "]"}]}]}], ";"}]}], "\[IndentingNewLine]", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"DirectoryQ", "[", "dir", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ExcludedRegions", "[", "LLPdirName", "]"}], "=", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"10.", ",", "10."}], "}"}], "}"}], "}"}]}], ";"}]}], 
  "\[IndentingNewLine]", "]"}]}], "Input",
 CellChangeTimes->{{3.913954473848921*^9, 3.9139545020914497`*^9}, {
   3.913954538781415*^9, 3.9139547566326075`*^9}, {3.9139551197291293`*^9, 
   3.913955119731121*^9}, {3.913955157942445*^9, 3.913955157944439*^9}, {
   3.9139637161395655`*^9, 3.9139637459797597`*^9}, 3.9139638034238195`*^9, 
   3.9139638559036703`*^9, 3.9146674126897407`*^9, {3.915643066455455*^9, 
   3.91564306646422*^9}},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "In[360]:=",ExpressionUUID->"d222b99d-aa87-4a70-9775-f512810f7932"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Sensitivity evaluation", "Section",
 CellChangeTimes->{{3.9139638518488245`*^9, 3.913963854535544*^9}},
 CellTags->
  "Sensitivity-computation",ExpressionUUID->"b9b04a85-a4aa-45a1-9921-\
706d27f2c6b8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"SensitivityBlock", "[", 
   RowBox[{"Nev_", ",", "Npot_", ",", "SelectedProduction_"}], "]"}], ":=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"NevTot", "[", 
       RowBox[{"mLLP_", ",", "\[Epsilon]2_"}], "]"}], "=", 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{"NevInt", "[", 
         RowBox[{"mLLP", ",", "\[Epsilon]2", ",", "prod"}], "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"prod", ",", "SelectedProduction"}], "}"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"RegSens", "=", 
      RowBox[{"RegionPlot", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          FractionBox["Npot", "NpotDefault"], 
          RowBox[{"NevTot", "[", 
           RowBox[{
            SuperscriptBox["10", "mLLP"], ",", 
            SuperscriptBox["10", "\[Epsilon]2"]}], "]"}]}], "\[GreaterEqual]",
          "Nev"}], ",", 
        RowBox[{"{", 
         RowBox[{"mLLP", ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"\[Epsilon]2", ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"couplingminmaxOverall", "[", 
            RowBox[{"[", "1", "]"}], "]"}], "]"}], ",", 
          RowBox[{"Log10", "[", 
           RowBox[{"couplingminmaxOverall", "[", 
            RowBox[{"[", "2", "]"}], "]"}], "]"}]}], "}"}], ",", 
        RowBox[{"PlotPoints", "->", "200"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"SensTemp", "=", 
      RowBox[{"Cases", "[", 
       RowBox[{
        RowBox[{"Normal", "@", "RegSens"}], ",", 
        RowBox[{
         RowBox[{"Line", "[", "x_", "]"}], "\[RuleDelayed]", "x"}], ",", 
        "Infinity"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Sens", "=", 
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"10", "^", 
             RowBox[{"#", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"10", "^", 
             RowBox[{"#", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], "&"}], "/@", 
         RowBox[{"SensTemp", "[", 
          RowBox[{"[", "i", "]"}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "1", ",", 
          RowBox[{"Length", "[", "SensTemp", "]"}], ",", "1"}], "}"}]}], 
       "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"Export", "[", 
      RowBox[{
       RowBox[{"FileNameJoin", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"directory", "[", "\"\<Sensitivity-LLP-exp\>\"", "]"}], ",", 
          RowBox[{"ToString", "@", 
           RowBox[{"StringForm", "[", 
            RowBox[{"\"\<Sensitivity_``_at_``_Nev=``_Npot=``.xls\>\"", ",", 
             RowBox[{"Sequence", "@@", 
              RowBox[{"{", 
               RowBox[{"LLPdirName", ",", "ExperimentFolder", ",", 
                RowBox[{"Nev", "//", "ToString"}], ",", 
                RowBox[{
                 RowBox[{"Npot", "//", "CForm"}], "//", "ToString"}]}], 
               "}"}]}]}], "]"}]}]}], "}"}], "]"}], ",", "Sens"}], "]"}], ";", 
     "\[IndentingNewLine]", "Sens"}]}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"productionlist", "=", 
   RowBox[{"Join", "[", 
    RowBox[{
     RowBox[{"{", "\"\<All\>\"", "}"}], ",", "ProductionChannelsList"}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"DynamicModule", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"input1", "=", "NpotDefault"}], ",", 
      RowBox[{"input2", "=", "2.3"}], ",", 
      RowBox[{"choice", "=", 
       RowBox[{"{", "\"\<All\>\"", "}"}]}], ",", "list", ",", "phrase"}], 
     "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"DialogInput", "[", 
     RowBox[{"Column", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{"ExperimentFolder", ",", "Bold"}], "]"}], ",", 
        RowBox[{
        "TextCell", "[", "\"\<Enter the number of proton collisions:\>\"", 
         "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "input1", "]"}], ",", "Expression"}], "]"}],
         ",", 
        RowBox[{
        "TextCell", "[", 
         "\"\<Enter the value of N_ev,min for which the sensitivity will be \
computed:\>\"", "]"}], ",", 
        RowBox[{"InputField", "[", 
         RowBox[{
          RowBox[{"Dynamic", "[", "input2", "]"}], ",", "Expression"}], "]"}],
         ",", 
        RowBox[{"Row", "[", 
         RowBox[{
         "{", "\"\<Select the production channels to be used for the \
sensitivity calculation:\>\"", "}"}], "]"}], ",", 
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"TogglerBar", "[", 
           RowBox[{
            RowBox[{"Dynamic", "[", "choice", "]"}], ",", "productionlist", 
            ",", 
            RowBox[{"Appearance", "->", 
             RowBox[{"\"\<Vertical\>\"", "->", 
              RowBox[{"{", 
               RowBox[{"Automatic", ",", "1"}], "}"}]}]}]}], "]"}], ",", 
          RowBox[{"ImageSize", "->", 
           RowBox[{"{", 
            RowBox[{"Automatic", ",", "Automatic"}], "}"}]}], ",", 
          RowBox[{"Scrollbars", "->", 
           RowBox[{"{", 
            RowBox[{"False", ",", "True"}], "}"}]}]}], "]"}], ",", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Submit\>\"", ",", 
          RowBox[{"DialogReturn", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"NpotVal", ",", "NevMinVal", ",", "SelectedProduction"}],
              "}"}], "=", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"input1", ",", "input2", ",", "choice"}], "}"}], "//", 
             "N"}]}], "]"}], ",", 
          RowBox[{"ImageSize", "->", "Automatic"}]}], "]"}]}], "}"}], "]"}], 
     "]"}]}], "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"MemberQ", "[", 
    RowBox[{"SelectedProduction", ",", "\"\<All\>\""}], "]"}], ",", 
   RowBox[{
    RowBox[{"SelectedProduction", "=", "ProductionChannelsList"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "\"\<\!\(\*SubscriptBox[\(N\), \(PoT\)]\) for computation\>\"", ",", 
      "\"\<\!\(\*SubscriptBox[\(N\), \(ev, min\)]\)\>\"", ",", 
      "\"\<Selected production modes\>\""}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"NpotVal", ",", "NevMinVal", ",", "SelectedProduction"}], 
     "}"}]}], "}"}], "//", "TableForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"sens", "=", 
   RowBox[{"SensitivityBlock", "[", 
    RowBox[{"NevMinVal", ",", "NpotVal", ",", "SelectedProduction"}], "]"}]}],
   ";"}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{
       RowBox[{"ExcludedRegions", "[", "LLPdirName", "]"}], ",", 
       RowBox[{"_", "?", "MatrixQ"}], ",", "All"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
     RowBox[{"Frame", "\[Rule]", " ", "True"}], ",", 
     RowBox[{"FrameLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<\!\(\*SubscriptBox[\(m\), \(V\)]\) [GeV]\>\"", " ", ",", " ", 
        "\"\<\!\(\*SuperscriptBox[\(\[Epsilon]\), \(2\)]\)\>\""}], "}"}]}], 
     ",", 
     RowBox[{"FrameStyle", "\[Rule]", 
      RowBox[{"Directive", "[", 
       RowBox[{"Black", ",", " ", "23"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Thick", ",", "Gray"}], "}"}], "}"}]}], ",", 
     RowBox[{"Filling", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}], ",", 
        RowBox[{"4", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"True", ",", 
           RowBox[{"Directive", "[", 
            RowBox[{"Gray", ",", 
             RowBox[{"Opacity", "[", "0.3", "]"}]}], "]"}]}], "}"}]}]}], 
       "}"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.01", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"0.3", 
           RowBox[{"Min", "[", 
            RowBox[{"Flatten", "[", "Sens", "]"}], "]"}]}], ",", 
          RowBox[{"0.99", 
           RowBox[{"couplingminmaxOverall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(N\), \(events\)]\) \[GreaterEqual] \>\"", 
           ",", "NevMinVal"}], "}"}], "]"}], ",", "18", ",", "Black"}], 
       "]"}]}]}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"ListLogLogPlot", "[", 
    RowBox[{
     RowBox[{"Cases", "[", 
      RowBox[{"sens", ",", 
       RowBox[{"_", "?", "MatrixQ"}], ",", "All"}], "]"}], ",", 
     RowBox[{"Joined", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"True", ",", "True", ",", "True", ",", "True"}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"Flatten", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Thick", ",", "Blue"}], "}"}], ",", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"MatrixQ", "[", "sens", "]"}], ",", "1", ",", 
             RowBox[{"Length", "@", "sens"}]}], "]"}]}], "]"}], "}"}], ",", 
        "1"}], "]"}]}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"1.01", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "1", "]"}], "]"}]}], ",", 
          RowBox[{"1.1", 
           RowBox[{"mminmaxOverall", "[", 
            RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"couplingminmaxOverall", "[", 
           RowBox[{"[", "1", "]"}], "]"}], ",", 
          RowBox[{"Max", "[", 
           RowBox[{"0.2", ",", 
            RowBox[{"0.99", 
             RowBox[{"couplingminmaxOverall", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "]"}]}], "}"}]}], "}"}]}], 
     ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{"Style", "[", 
       RowBox[{
        RowBox[{"Row", "[", 
         RowBox[{"{", 
          RowBox[{
          "\"\<\!\(\*SubscriptBox[\(N\), \(events\)]\) \[GreaterEqual] \>\"", 
           ",", "NevMinVal"}], "}"}], "]"}], ",", "18", ",", "Black"}], 
       "]"}]}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"#", ",", "15"}], "]"}], "&"}], "/@", 
         RowBox[{"{", "GivenExperimentForSensitivityComputation", "}"}]}], 
        ",", 
        RowBox[{"{", 
         RowBox[{"0.2", ",", "0.15"}], "}"}]}], "]"}]}]}], "]"}], ",", 
   RowBox[{"Graphics", "[", 
    RowBox[{"{", 
     RowBox[{"Text", "[", 
      RowBox[{
       RowBox[{"Style", "[", 
        RowBox[{"\"\<Excluded\>\"", ",", "24", ",", "Black"}], "]"}], ",", 
       RowBox[{"Scaled", "[", 
        RowBox[{"{", 
         RowBox[{"0.7", ",", "0.95"}], "}"}], "]"}]}], "]"}], "}"}], "]"}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8891549915062704`*^9, 3.889154993345764*^9}, {
   3.8891550726092916`*^9, 3.8891550770006027`*^9}, {3.889155121639572*^9, 
   3.8891551652523565`*^9}, {3.8891552062371397`*^9, 3.889155265897581*^9}, {
   3.889155479601365*^9, 3.8891554816320353`*^9}, {3.893571372676326*^9, 
   3.8935713726903877`*^9}, {3.893571601881855*^9, 3.893571615039663*^9}, {
   3.895053897017438*^9, 3.895053913667447*^9}, {3.8950539675027623`*^9, 
   3.895053982046572*^9}, {3.8950547143224044`*^9, 3.8950547266846137`*^9}, {
   3.8950767393111925`*^9, 3.8950767394248295`*^9}, 3.8950767893304987`*^9, {
   3.895124505321786*^9, 3.89512453121947*^9}, {3.8956553541843185`*^9, 
   3.8956554026141047`*^9}, {3.8961546653491325`*^9, 
   3.8961546658914757`*^9}, {3.896155101225853*^9, 3.89615510727777*^9}, {
   3.8963350116975923`*^9, 3.896335014109411*^9}, 3.9061946955346165`*^9, {
   3.9072588156578064`*^9, 3.9072588179012136`*^9}, 3.9121559814843984`*^9, {
   3.9138856465382867`*^9, 3.9138856465433846`*^9}, {3.913891860173438*^9, 
   3.9138918659831095`*^9}, {3.913963752775922*^9, 3.9139638379784517`*^9}, {
   3.913963934973338*^9, 3.9139639785347033`*^9}, {3.91396409837434*^9, 
   3.913964098390565*^9}, 3.913965549614134*^9, {3.913965669687707*^9, 
   3.913965669702223*^9}, {3.9146673955031853`*^9, 3.914667401790114*^9}, 
   3.914667704420864*^9, {3.9152623903935328`*^9, 3.915262416380659*^9}, 
   3.9152624585549393`*^9, {3.915262489482725*^9, 3.9152624919616766`*^9}, {
   3.915298261386327*^9, 3.915298267152412*^9}, {3.915643066483992*^9, 
   3.9156430665113087`*^9}, {3.917341578038809*^9, 3.9173415782277284`*^9}},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "In[366]:=",ExpressionUUID->"140a9c48-3c60-400f-bb3d-41932b0b01fa"],

Cell[BoxData[
 InterpretationBox[GridBox[{
    {"\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(PoT\\)]\\) for computation\"\>", \
"\<\"\\!\\(\\*SubscriptBox[\\(N\\), \\(ev, min\\)]\\)\"\>", "\<\"Selected \
production modes\"\>"},
    {"2.16`*^17", "2.3`", GridBox[{
       {"\<\"Bremsstrahlung\"\>"},
       {"\<\"DrellYan\"\>"},
       {"\<\"Eta\"\>"},
       {"\<\"EtaPr\"\>"},
       {"\<\"Pi0\"\>"},
       {"\<\"Rho0\"\>"}
      },
      GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.1]}, 
          Offset[0.2]}}]}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  TableForm[{{
    "\!\(\*SubscriptBox[\(N\), \(PoT\)]\) for computation", 
     "\!\(\*SubscriptBox[\(N\), \(ev, min\)]\)", 
     "Selected production modes"}, {
    2.16*^17, 2.3, {
     "Bremsstrahlung", "DrellYan", "Eta", "EtaPr", "Pi0", 
      "Rho0"}}}]]], "Output",
 CellChangeTimes->{3.9201090257640295`*^9, 3.9201090872650204`*^9, 
  3.921653027926696*^9, 3.921657651274683*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[370]//TableForm=",ExpressionUUID->"510a32e1-d810-458d-82e9-\
3aba15763ef0"],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{{}, GraphicsComplexBox[CompressedData["
1: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
RRXV/qLLlZ58g1/RB6LG3pr93r/o28ZeGGUKG0CB9vuXfzh+0RNLC36SKAaw
eY+cw4P8ObrlHg/l5xYG8P38Vr442zn6Wpaxxl0uBuDXJsTCOz5LZ7twa9dw
kAFEKvH1tl6cpVteN95YGmUAK3qjzBfUZ+m89NjvVukGsF5yPsimbYZ+Lu2r
1+cHBiBvsz93OmiGXvWm9bH/awM4L6cfniw8Q/f1S5kybjOAQ4sp7bvLpulS
pNe7m78bwPjtOgGC8zSdt6F8KXXOALyCxz4//z1FN8v5rUjlM4Qn9y/zBV6b
okf336NPixnC7ijLKhHTKbqgwJOnCeqGELTWbmf355/0kvlPpVuNDWFC+kJT
fsxP+m8ni9jBbYYg2k5OdFz/kz5rPpjxeJ8hzM5sSvxTO0lXg4BMk1BDuL62
L+2a9yQ98KZzDfcpQ2jr4j60m3OSnv7M/fvNTEPQOVU2ab1jgn76rq/b4XuG
8KN6xevG1XH65osxeqx0QxhnafHi6Rmj46LqJRsbDKFOxIXkLzNGX17kL3Ib
MATrzl/LAx6j9MiC9denFwzh9R/jArt7P+g7fxK9gNUIVn5XSfBQvtO3S78e
HNYyAt4bGk4eR0bod/Zf8XuAGcE9d9b8ocfDdF0hct5GJyMoXvyq4jD/jT5t
2Ezp9DcCU6Ujis8Nv9F3tpQL+MQbAVf9eIv4ya/0moKXA7hsI/imNjYcUz1E
D++6xedabQQD7p3MQ6xD9G828kemOo3g/CEhM+dNX+gDCek/7P4YwXE1h6bC
hEH60TUKt76tNQZJN+dgybcDdC3bqekNesZwukRXMUxwgN6WGn3K19sYMh6l
EJZ39NMzhTh5ms4ZA82sMy884zM9+f3TP2W1xnD2TFJsQkUf3X/UcOHLjDFU
pWvmHDfrpZueMpakbjVhcO5g88Yj4aaM8Vulc31iLpky5oufHU6VyDNlrPdK
J5Xy+bEpYz9/+e9+NZ2jBorAlHGev/z3vE7eNxXDmkwZ+vjLf/X1l//q8y//
1fdf/nsff/nvff3lv/f5l//e99/97CnoFvi4+wdd29veKPWVKbzo/2zjQRyl
F+VIeSt/M4XWN3kFeMdRuphK7W//MVOGvVmfDg4u48Fg4ZbJk3ChcfpS1p8p
YQIGBfJVWQU3kL1OTm93WodBxHbdhE8Ck/T7FdWZKTIYdLS1i9yrnKSzH7GL
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
/eEdtMr+z5vDYpcNGWyf6cCRfWaVqWHv0soFVplv5zaFj1kGDB7X+vjop+Iq
Nwk4mfE+1Gdw4WTnW2XDVU5o3u1qXqu3qq/CnjFX+1W2PucaEd6py2DVA/1c
VzxWmWujx9WSMR0Gf5cfUmoOWeU6nHfpCG6V7/UNm7MmaDM4/vmhNhnhVfbO
HHUzytFisGWY3+RO1VVW3DkZefSxJoNZtAN5L5qs8heBmcz8Og0Gv5wMVn21
ZZVvN/8q6+9WZ3BsYZjlH69Vdj/3+4PoTzUGmx044akVvspyG1em7FlXGWeF
Z26XojIYmNlk+DQpDI6icxpbWJIZbBLO6xyxm/Rf9pd8CJ38sPU3G2gIx4t1
nSX+f66/RGRocN/FQHYojVJXfZRN/N/eX2Kcymms94EdAupff9w5pQryeXmK
5/vZGf1yY15Fz76OsTP+f93sggWTziI7RAlKiygUE+GPQfrLC2wcIBnd2H3D
jQiOf976DwpwwGT/22mzXlXQMkz8pCPNAUION3ctzKrCy+HLEcFKHIx+A+7q
50frNDmAp/S58kNdIgxIHagXxVC9Sc3PuWNGBHGyltkRWw7YJLyfXIcR/1/3
l0z8Cb8ufY4DXDwPJueeJ/5v7y+RjHiu1jDKwejXOPSRWW7dAgdwvbJ5ksNC
BErGR41gVk6IzApsO/JbFdqqnVzq13BC1p02zd3fVGG6knR2vRQn+N0VqnNs
U4UkfOS546qcQGibbVDZ8z/fX7JrrU19SBAnXGjNzz6XRoTD0uvdGqI4gSWm
bXvtM1Wo2V5jJX+BEyRaj1c7ORMhQT/oVvBVTkZ/ZW/xKYXmO5yM/rX/bn9J
bdQXcal2TqiX+DqqnkH8T/0lkWfDrjZPcDL0GRB3LVd5iZPh7//d/hL69rrP
wWQuxnqHyZklg8ZccNNB9TleiAgC1eltBtZcoDNqqeerRoSWnySmKzu4gKPp
5nu2rH/9Jf/6S/7/3V9CffywTCONB46o1x6uf0T811/yr7/k/9ZforBnhPeG
Ox8ILE2mfd9GhKXodya8R/lgpWXPzmZX4r/+kn/9Jf/6S/71l/zrL/nXX/Kv
v+Rff8m//pJ//SX/+kv+9Zf86y/511/yr7/kX3/Jv/6Sf/0l//pL/vWX/Osv
+ddf8q+/5H9Bf4leanPwLJEdG/5FqNrJSYLgnIDAF7LsmBkr1yujSyRo4H20
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
Rhyv6VjDeBdEJ1E1mz0jGsT//X1XWvfJw1+eLDQwWlK6H/xcwUzgO2E32L+R
bDNFqE8zrnIJ3yoWEj1deez6f3/POsoSKawVx38e8Kcegnqol4jfLrWchexX
HsxMamIQ7w8tKYNPxfH6xq9e0qfo5Ouq5Qnz7aB/lBuezgI/ebRp2m3eMljP
qnzJYcCHPGGOq7oVzB8qJBsP/GiYveS3LmahXxFG17YGU4R3vkZXfilcL0aZ
DAG+P3+zUUXVEvDo8Dz/j8spwvC4/IJazEL6izLoZ9Up8sj2nqyRMQsdEXpV
8wzi5iZdBboZ7Gdqtsl9cdivk4dUNRYB3vvs/+guQpH0UyGzLPShH810/8wD
/s7/1XyBYQj9tCh2VAHw4X3KfGUTCvD6ac14LOz/3SvDs7EeC/mR7t38ccAv
Ye3fGZostPOEWOHHPRQ5mTv13VydhVhbpks04fkfLd4YZriAhR64c9faJ1Bk
/6jVV2NtFvoZc6U79iRFzs3/dsWCzkI5W9ZpDqVQpCbp5+QSVdjPcwebZoF/
L6v+8stEhYUe6+/JPyfBJD/WvXzCmAd4tqW14jToVX2/4YNmc4F/VhhccYpi
ksqQe6I2c1ioaW27SdpGJgkT+C2yWIGFpO4WVyU5Av+47VVYJgf7+d1zZmDx
f7+fdSJ1sSwLLQl25boLgP9zZzTpSwNf+hu2WeTB82evrtWUZKH/ez9aWiCo
h87PQsZWeblvbECfGqc6aoiyELcnsG0tgyKqK+htTHEWmh7Q/patD/gfsqOD
IQz7udDLunr2/yPqy+Oh+v7/FbPYShKiIhWz3JGyZEnnCkn2JUuJpCSVpayt
KtpRCBEhW0glkiVOREVRKUVStiyFGTNmi/zO+/H4fXz/vI87c+45r/N6PZd7
zz0XgwK/z62qYn/BjTz212erMPhoZ5rNSpG/wPSCyoH+Tcg/jJX2rf0nBO0r
GM5VxhjEHXtfSnGEQKb6iNCulw51c8v6VYRC8NvbJEnxIx2Cmz1DylUSeJSt
LL6rmArnRMS3EMslcLOTB9Ijl9Bge4HnO8UZIaBtZvdaouvH57C+yU4JgcOB
68nmK5B/Vb1lRGAKwVT7+uUzu5FeNq115Y0LQZ6F8YZx5Ge+SChgMn+EwNze
6ANXH/EXcNnY9FkI6pyxmc71GPyw/I525xchaPFP7H/iiMEftBSPji4hEEvz
3B9lj0HLZt3LrzqEIO2ul/DYQQyeG3ok8vSDEJyx2fvqOeLLT4HUz5XtQvC/
/XRieIv8q94JwfuazcaW+5E/8ie63HolBL0SCt4UB+Rvj9IMzzcJgUZ05mHn
oxj8dTA/5fwLIQgbLLfWRe2ZJPZfPt+I/t8Wk6iE9MtDv3+PA+qF4H/vOxm4
bdwS8ByN/9iX+OupyG+fdCpcXCwERy8IGeM1qL5OVuioP0C////7Td1It8yX
ui8E934qFDvcQPi0/tON6XwhKMxf/64M8e+XCu1utyohWNvGgd4qiC+dP753
rxECne3bfRaieqVelWYUvhGCtgLD+jQUL/EVrOUFrUKgtF2v1lcVgzR3u23v
vwnB4ffOPrFoftod5ZoXjAlB6/Jjj6Pr6ZAqSyzeWCqBizx8ntboTIP/siek
5O9L4F9GXd/806TB3kG1E4b3EB9IPmTelKBBEQcdilWCBG5KnN629QkNEuem
qNqpErjJhnWR/LVUWHRXM21XhgQ+cRIYUL9QoP77qzdWxErgW2raYVkUBVa/
83TBLkngioeVpUO2UuBujovl81MS+OeF7iKLtlDg5dhQJu2xEPhkpFTW19Hh
vqN9ZZSHQgDas3YYKyI8e1ooMZWL8ueP3j9rxMdzQSoD6alCkP8ovsF3jA47
z2Ter7qD4ksTtQhAeCteptdVniYEavTOVIECimeM3QXuOYn59+Mfcw8bbT4i
gS8Ltx3ybtGADTrsThiG+PD1Yqj0hALVO8pMo4Il8MTLGlWB/RToWzj1fXjv
/9VDh4hVd+puCbzsAdh2VJEGOfKrPLV9JfBbBwqUsQM06Lb1hO02FwncPqzS
3uk0HS7QadFl2kvgS5RkY5MC6bA+eEHyxx0SuHl4lpOfJh2uX+wR0bVeAp/p
Ll99Ow7pnTte4YdoCO91RRq1rGhQdKj2xfRaFN9iuR/H/Glw5zEfxzMqEnhf
G9/oXwANMnz114oqSeDy9e+TD92hwmwP+Y3RchL43yVlUU1nqXCf3buwBYsl
8IPe6rYvdlPhzrWFm80lJPBx8jvRTnEqjD7w7I25rgS+ojl/LDKZAo2uhgUv
xSXwE14Xwh6WUuAbU7+7k55CMLD77F4wSoeX3VeRZ/ai+ohpMI3vpsNva8s+
hJhL4AsPdvcmnKfAEL22yUVRCE/8ti1tQfOVuSB60ZlgIViXYD+ojPDp7Nb1
L9s8hPPr89NaAxnhjkJgJ7Vsrh/xa+nmA+tjnIWgo29F2E+kPz/d+bdimy2q
fy4rUGsLBhVhS6GzvRD05TvtaWJg0C010maTNcIzK/l/YYivW81ohpQdQnB6
dZwXwQb5m++S6wpchOCzt0PbdYS358qPZZS7CcHHV2uud+5D+FkX8fHFLiF4
ads1o+qE/Mspk4ip06g+N/Zb5aP61nxpS79zHPWnn3LpCfIzY227qj6fRPVO
JhOFXAxOp+6LagwXgiOD7ZibKwOe/CZW9zZSCGpsr6nR7BjwyjofkepQlJ+X
hQPl8gyYwZjrV9wuBKVxkU6+9QivJwv+csyFwAzW/kw3ZUDPBezlQ6ZCsJHq
GvE0hgEXSKXmQBMhWO5rE6D633rAv04xd42F4FXBdvPUmwz47EKD3gkjIfj5
rmVVzkXkR/xk9B4BlP8BqsezrzBggXuz0M9ACGBCzW8nxGcr3nidcN0kBK9n
VmRpBTLgZZXTFea6QpBRubZiiS8D6nV0W6hoo/GPtV6nov6cq1XnSW0QghPt
tOioXxhc35o1nKouBEWeqydqEzFo209JLKEIQSPPJ78vH4PvRFL8PtGEIDZO
dIUv4mdKXvKlYUwIhj6IdIgcwmDGHegt1ETj/xbuLIbwcMegclTQWjQe6y8f
JdH8bBiBFh5qQnDusq3hLy0Myu7QbbFQRf0Dy8bfi2JQV+IgSXuVEFgcHwXb
kT5amxoUVGqI6idNidh4lgKDze4crhGTwL9eUatbZasBZ/bvbmDMieMj5t84
TUUUqLP/mtEdgThu5+m5TqSVAsN/N38gcsTxz9vTnM/aUmG5VdFZw0nx+fVD
g9aF7Rmj4vgeL1f/ZVvokGNDZswOiONTWZoJ7uV0mOI+sl7jhziur+xKLyNR
YWLCHerZLvH55y1WnfdVOzrE8a1lofczjCnQ7FJUM3gjPu8HBpxNHNht4vhB
Ccg6vQnhk7XtWfeX4rhj2uUVgkYKvPmjyTOz7v/aH6q4HPe4ShyvfoTr7NxM
hRhvonHiiThu8ZL42UOTCg0OTlw0uCs+fz/i1kjxM71ccVwsr05v7QYqHAeq
7n9LxfFYnRDD8wIq7Ja5rDXOEoDN3Cr3t4N0+CxVfs/HSQFQWGfq0BqIwcrp
qq2V4wIgva6xqfUdBp1OePWl/xYAq7DoMTUOBvOCOfpRowJwatueM4kLGbCr
Plt2+5AAnHNzTLNFfn2D37438gMCcD0x/Lu0EIP1rx9esBsWgPUhk1oeZAbM
vmq4QPhTAKI3/pi7iM6bBdxj9fQKAMbb5979AoM2G66m1fcIgPmh8bOEcAwG
j337m90tAAXUyk5tpI820z8/oXwUAO16hZOBv+lwsDBmWfRXAdhzs7rxCvIb
LiEhwwc6UfvxdQZyyL/9tr4VbPFJADYQt6VYfaHDvKKudq374rhu9/WzgWwq
jH2hftHntjheMcLQcM+nwqgio2zKCwF4YJmZ+QrppUj98izLRgFYZrf/M0DX
t9fVnmysFgDD5I9XRpGetxNZXSr+XgDq3wcc9UT6/FbFgb1j7wQA+Azl+Oli
cKjBsvnqKwHwbTjA/JSDwbc/lUWS3whA9V3mfZ9CDA5iN1paWv8v/mvPlrn6
NwlAmmRqN0TjX2Qm8y77mQBccRuW2H3kv/s7svvOPhUA+aye3OcQg0dDrGpt
ywTgtvl11SI+BgPEa/6QSgXgpKWixcF+VL/7FSLpjwSg/bbBbxob4W3NulKP
cgF4l/X2YDQLg74f1RQGiwVgTWkGJvUUgxHrjPj199F4fPUN5/ZicJ03Mz69
QABmbvk6ds7SoWjh+VivJHG8OWUcI4nS4M+m30fd4lG+phtnBNJpUD76x6uw
K+L48NQfn+3aNOgoZdTsFy0+vz7X/8bcGtMT4ri9gdGidgcaPBbwcMAhRByv
3b3gycufVHiVyL3helYct7mpeGSPAxU6MKcD9QLF57+/dNUivFLBX3z+fmjO
kwVPp/eL42c+u57vuUaFaz12H3zvJY4PhRYe+7KJCpuMtr4q2CWOZ93KXHbi
LwUaSx75cHKnOO5lpXVs2x8KnLqp27HcShz/LmMjI/OBAh9+3+vOOiUARhq5
9HikTyJ7/IuEsQJgF/5gomWADu/cT5HdkSAA2deWjyVgGCwg37+gdkMA/p6U
KvmnjMHZ+h2uwUkCUBp1KXQbwq8++sVz1vbiuEz9B9MLbykw61jYSPMJlJ/+
vzxyUP19bv964XGEAJz/1ZFpOk6H66KUYoNCBPPrfzHP2q70MAFo+lO43xvl
u5S8+rTZMQHQu37/ej/yy4TSliXLgwSgaDpTxBf5jZfld7YvDBCAFNGekRxU
bz2bDh29eVAAfqnKW00bMqAEcUb6/iEBOGSQs+GBEwNyDVd9+HxYAGQcbYnr
jBnwt17DxcgDAvD0MdQH46h9IPPLykcAXO7tEbmI/JWVg2GQtjcaX6Sfejbi
d1pAuCHBSwCot3fM2jcg/1sq3zBgjsZ75FuPoIkCxXc9tyzCxefff9KvLT9w
1Egc3/llak0tlwI/6Z1dwtATx93XZ9msPkKFr22St49qiePHKUEx+pcpkFm7
2I3mKABcvVHd3RN0qLNU8lOYhQC88e+a1EL1V5sn195oJQDr7lAXWNliUGPY
ZdkPGwFoxr8dolpjcF9wjpzQTgCsOXmOeVSkzwOsihMsBUBlKDpyDzqeOmG7
3NxcAJL3Tl6NeEGHI/H+xBy6+Pz+Q5vP+mxzVRfHpTxm3vvkU+CCyB+i4qvF
8YxbWl8fZFCga4a2YaWyOD63y/LqhWoqzHhaPOgtL46bE6bLxR7RoLUI3W6T
ngDcPaV5Vvo7HU5aAuXD+gKgLLPyfhbCF+a55aOKOgIgtkrrXmwXHUaoXv1H
XiKOv4iOcSq0psGgzRvO35QSxxeuq9r+ZBcN7lO8SNxIQvwilrnI0okG4+v+
LgymC8B43Uf1hJd0uPffpOwGDcH8+nD1drn1DlR03uVQiuIfOjRRPFEqs04A
pg8WvKC6/6d3cvW61VA+lOx7HBGJwbtphbMpqwTAviXxRRXyH1trzEPCViA8
ufVt94Dnf/sPHtlSpSoAPktGtpCDMHh4VWTrFiUBOCp39osS+v++u+UPVigi
vN6ya9FppAfeG8hbCJchvKaVnBo6j/SUNLfyxVIBWNq1JHkK4cuWvFIxIVkA
OvLP61RYYFDEXbL/kZgAGOdQxqyikJ+fUkz9TBSAqq+1mQYhGNRWP9Z/baEA
4FJP/3D3YHDZpdO1mUsEwJvhHBiI5vPgwGT4ycWo/QAd2yFJDG5X+qmxShLV
Q/O9rc4SyF+lGoy5SgvA3GKXGgbSq4//ity1FxGAjEkGxxb5j3xLNXH6Pz7w
2TF86vxrOiyoeFAQPkXGn0dn1n/+Q4MfW1PW+82Q8bNOS6QcuTS47mLmn7YF
iJ8zjiy4qE+HlrZJK4Z4ZPzjyYwyx/V0SBZJO0ccJ8/rfwuOI+nSdzJe5r1f
PbuUDj0Lqout3pDxY7pWsRbn6bDiadiGukYyfmIFjZ1KocEPkYcfKNWTcZPW
HPWNrVQYGdyR01NOxn10DYeMq6iQtMV++cUqMo6dMNwjiKJCux1HrUffkfEj
TqrVS5lUKOf7uS6wg4zHFvfxhmao8PCzv/umvpLx9ZLuRFyOBhWL++sWDpDx
46LP3ejlVEgxGnp6YoSMK10LzPz7igK9VmX14w/JuFHo1Yr0Tg14IcjT/2YR
GecbnPBb360B2TvnNvzII8+vRymQ5fbpZ5Hx3ILA31ZxVHjv04qbUelk3HNS
Zsf+NhS/I1EhN9r44Etcpf8I8quNx6sLJV7zgUI3c8UjO8T/Z3NiN7Xwwbod
wmV/DmCwP+e7+v63fDCzv2TjKksMJozKRHxv4oMwt3+uV5H/zTC5+fdhIx/U
7b6c0TREh59Ic78+3iLjnZeCKg7vp0GvT+ra51/wgVXrpx1ESIeFfVvq1j3n
A25u7J/9LXS4EHui+PoZH/z+W6hyWArpH17fYekaPuiT3Ki1bIoOR6X6tB8+
5QPBtpXHEwmIf3vNW+zK+GD34fXOVHEMXtR0yDtbzgfln9s2/Eb6I3hjUY7K
Iz7QNK1aOoLy6bHuIc3JB3zQz1YYNkD5rfzn6NG6Yj7wX6RsFoTGl21/zyv2
Ph80aPobM8IwmLiTI+ZRwAfFDt3MylQMkqkqnXgeH/xvP6m83iQ/fg4fvOsc
/dZRjsHT1Kq8niw+WD/+W1ML6afme7XLizL5oCJhU4ZRJ9LbQc3LzdL4QO2x
hdO6SQwafziGh9/hg6NJvDwxdPx564CWRiof7Ej/E/z4MwbTfa2PsW/xgd3d
1gjDbxg88H2pb30iHxy5n+4z0oXBsBT+3yPxfJB2Ymmm5CIGjA+PENeP5YNA
qcnA9gUM+HLrWqlrN/nA+XLFuPQQBpdOlvouv4bqyTPEn9ODwSOjZwzfXeaD
D8Qzpldvo3j4dO9JucgHeboZ50UOIrzSle4Oj+aD5ujij+bID2Y/Iu43Oc8H
n8KbbwkR3geKvTwqd5OMT/n5W2/XpMGlaSVqTtfJ+KZIEbpCPxXe9E7MTbtI
xkVj21nd96hw5etLyzvOkXHjytGn4nSk91e3PCafJuNV3h/q6pFeL/ZV0jMP
J+P5nFAPwQsKfP3aJizkGBkX6HS6/KulwDWy341a/Mh4XnJU0WgKBa6IrW7L
OkrGq817l51E9ZG1MlOWv4+M90ZPXtlkT4WXXq8iGLmTcYkYQymSAQ1uTNcn
KXuS8d8Z8cVv7tDg1sbHZDdnMm6H9d2tP0WD9hSxD6k+fLD5ccOOb0ifPqIb
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
ArvB0gXpiQmxOI/8yfnvzTlf3vbT7OwksIg8QGvSwyBubKX4KnoSNAoX03En
DG5Ida54ETkJDh1tS44+gsGZSLdpK7dJ4LmFyDlkjM6vX7a4wXESXHMIndAR
x6Aq3Vh7k80kaBVNi9v1kQ6TjIVBH56Kzb//9/MJYB2pEZt/n+Lo7lPp69+I
4er7W2oDB2hQjmvGt/0ohlvDvSoHZ2jQ9Jpf9vMnYvjvzVYWxlp0WChe9mjl
QzF8rbeX++VgOnx3U0T2ZJEYLlFkH2MVRYdLDuvUMbLFcPq60EdvEL8FTbYv
vHBHDNdbXhjk0keHcS091z+niOG7pC/u2OpBh4f9NzV8zhPD42MNLfxGabDZ
gOK+LlEM9742Xic8SYNL8+oztn6fAN+zBNzDKP5fL/6d/dk/ATprWti2v+jw
8ZfI/cfixHCjkNg7H49TYVdcYnHtFTF8/Pst+wUzFKhBNse2LZsEXYYVuoVo
PnfHyf0/os47nqv3//+ZTUmDhEq21zkvW6V4vlBIZbRINFCU0VBRZhpUIntE
JCOE7FVc9t57z5c9UkJJ/a7373b79P3zup3jnGs8n8/H/fFyznXCP7Hj/Njb
F72EeequrfLOXRvmIKlmW9CiDoGan9wNdGWeAxbJv5sDNxDI366S9r59Fv73
fWudfWiUsWkWiuVUdHmxHuj6aXpdqZkFKd6PYR043/y92RUKymZB2Gr5Kw/m
ix+JGaM8hbP/nhfQsKjU7gyeheCfpU9kcX1aPDnsZ5s3CxmcLOYFWD/vzD8L
2Jc5C7l8kUIj+HjZF6sFyqdZ4DjyaIKC+SctpWhba/wsaO6+2PBJiESCu0ua
iOhZWENNWOOmSKJKVS/vx+GzwM1yzWHnIRJl8Vew2T6ehTN303OX1pKIJ5GL
jeo3C3tY1tA+43o0dHS9utDzWYhgPCD1KIFAFwp1nZo8Z6EpWTh+FPPASZG7
fbpms7DluOEOEexvldXenLp2ZxYOXvqt3+yD6x/7IFu65SxQuta6mWJ/rbV1
xpfLbhZq7plbtuD60Jwo3VTuOAtJfSrzgqdIFJVzLCLsyizkp1OerPwkkGsw
wSl9bha+rVV+WILb/LIxRuMXZkGIhdg0PE+gPIdcnhqdWWhxubLciftfeW9t
x7bjs3D70TsJVpz/z29YeBocnYVyiZi0wDrc/yB3pQiYhQldv3At7B9uyGXY
yCvMQqg5R/427Oc62ysFH8rO/vv+QKO9a91n6iwMHPxgknYZ3z/Q5dYf0VlY
y/fMwwzrqa6HFIX5KTNt+OadFwqcYsjT+sr3nkfMtGdLhYlOpmJIj2Ogco8j
M01iTE2WY1QMubSFMobZMP97P2HGTzOB3ZiZJhcVUXQ6WAytHWl2BiNmWu2e
k8O0l2LIruCYlaU+87/9VvjzMwt7VmbAvmmlbHcdBR2oE7MxW5yBfcmP5/Vx
f3bSKy+2Ts7AZC+n6CtbPL6Frtm3X2dAQUA/6aom1pPt70WM6DPw2OrVhF8k
5ju+h0AWz8B3mQM7i51xfHJ1vPLunwHri20Fm8r/28/52t/Vipl/v5+GDx69
ztU1A6dZ3Q2X8fyeYdItOdYyA85tRlsVmEgUKJTPYV83A8xxvZyHMU+rCHOt
V389Axag5mqB9YXL0eWrxYsZYAjcX5uAeXxp0e8Hi/MM9M5NnYgrIFFh5mnB
4SczMKBuRufA+vqWPChp/2AGolKOWLdmk+ikcOvEG5sZqG47zMSdT6IC/0Ex
dusZsI0/1mReSSITx/NVpPkMCDosBp6qwjzfZ7I53HgGIm87uwjcItHVccoF
dqMZ6M86yj40QaCZtuYucb0Z+N/zBt8Jh95afzwfN8Yrt2sT6ITCscNJX2aA
Kp7n9qyFguK/zYa4HGemJVjXPo75I4pqjk09+aLFTHvMHPVk+1UxxFMtdivg
NDPtmlC0dMWCGDr52sVV9Srzv+ftJ3T3XWy3Zqa9lHYIsq2gIJtojoZLdsy0
NVO/r51JoSDv7MP9m28w03axi+7dJEAg2ctykn2HmWkfxLynrmK+TtlWuybk
IDPtSCt7xVc7AmX/oR5IkWWmBRk5VHt/oSDOh96lkWrMNJrr+Q7RZgpypzxf
LlRmpl2/tdlIVpiCWGh2N0olmP89H+xsNefbJs5M04u5tFEtVQw18or9eSHC
/G+/V1s93y2B+5hp+mxHJUdfiaKQH3vXja4y0Wyebs4kY0TQi77jvCVbZ+AR
JLx8j3n2YkLCPWG2GShoKd2nTmL9NPdpcls7A9vXJiblY//MvCXb3pcBx0Pc
z7E9dOyP+fLqv61Mg/GmWIuhwyQ6xi0nrLs4DUfdTj5WjSHRJ4c39IzJaVj/
YMm3oh7z/bJ8yPmv0/Cx3Krkay/mN9mr0hz0aWA0Os+RGkciuSMKLhb901CU
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
+7j33/mtiswKOfbuL1624KnptvR/uDbv4R11tX+4+8Li+QuF/+FN2U825Xm8
/ceXMy21Nf4/jNcX5Goe7f7Hn+ojS6K3/cPeU8m1bRe7/uIxwQT7HRb/8AJh
yQduY6/+4hGpt0o6xf9waMIdds/oy7+YGgm21v7/cEqoVVNu0j/snCm4P/7k
P3zIccWjE9nt/8534ZquNpd/WMdv6AV6UtP49/nuymEvl936i8evWfY099z8
iwnBJ557I+v+4q+5er+Sw5v+YhU7q7AzvDt/ceWQoJfquta/eL/CB87zlx1/
8ZOU3fMNR1/8xcznl88+F3n5F7cGDWUFOnT/xb+SB+Pz9v3Da81opbSP7/7i
uRpbhus1ev/iSdfRr5rxf/7irl8HbXTO/cOLd7x99PDS9F+c1Dt1wd2I/Rd7
mH/8wvDm/Lvfyfq88aV/uPrXm9Zjk7y/eP79yEe+ksTfvNyU9Ep447x/mGWV
3dNt8g9nNBmmRqb8w+U3rp4du/8PC/itUvy9i+8vppJnvtW69Q9reN/Pzu//
h9lD0buPGP37859LbfSZUQF24//+vMiIPOiv3s6gvYTPLjudTOGHs4+09AAW
//SYW+pN4YPWNfNetzJo59XWfB9jKFyZYxaeep9Bb79/bub5egrzi+pUb29i
0F0Zqu8GUiisTdwsLsAMelI+eo5XDoVrWrbyzWtm0AtLRNdrx1H4zaIU9L2R
QW+9vzNr5AiFC352f38G9TUb4294h1C43E3MK+YOg/7f74MoUkdsFeHzAxRa
rgw5weffZz7wvAef93/f1/U+tVjL5C6DvqF4xOmzEQV6yf36B3CQj9tKDxUK
j79W/1DewqBt3M0nzqtTWFBf/a4ufL6Fndc6hgGFGy7tWdhfy6DjX3roFa2k
MBp7dySsgUEf/fBlscZ7Euu6lxqK1zPo//0+stnO/a12dQzaMVj98bqjJF5n
bqrTAPX//V6LZd6X1em34f36axMW1ZG4YuJAmVAFgx4Y0hkLtqfwoZTpFtty
Bt3+LvHlO0MK98lMPTp9lUGvslS/nsWisKr4V4GuMgb9WESsY3gthe3lbYcU
ATd7sTbS/hSuXhl4tBGe97//X1B063fLA9fgvH4b874GURhbOjcsv86gD2Rs
nCo+TGFHD5PFY4BDu5Ibxc9RWMaVFaIK6x2YfnYwtp/C210fh/jVwP6srSrc
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
PCrfJt1uS2LhkE9l/ssJOmrPPt0YQ9BzxSdVd3QIWtLP72PsfBJn2DpuSFtG
0PrROxVdYP759ybN+64N+V3bQpX3g4nRkRHvUZKgez8Z3vw1h8QHli23XQT1
HSVP6ubdZuJAo+qzTRTwm7FPpeQtJu43SC3w04Tz4YpnhvtB3eVYJtIiaLep
jByLFCa+n3U4J48F/eY/rt9yhIlH6vuGm5QIek/e+NcP55jYNYs/Y99igt5V
ksLeC3x3XT5a1EIR/M/pVbVD+5k4mK7YN3/Jv/5snwqtHwD8eEegfaE/Ewuv
iZiZrQz86DH6Y9sYE6cKbfGslydo9zYtvueQf452XhDOVCDofrvu4l+wPrmd
lpKBKpCPhftFyi1gfgxXaS6A9do36Oo8CyQx1+6IkKkq5Dl3/4D7h0jsIDf6
bjUT6nrFNzY+IfGk0YP8saXgT5ardVzsJLHVzUqnO2oE3VimoVcE/izWnvQO
1AB+j3nyQAD6QTvaYihbHfwDK6fxiTiF1ef5DkjB/ZkqsysTr5L4wllUNLQI
8rh2y/vaxyQOPKNNes4j6EWqDsNt4C/PtRR9qJYm6LrRnxtkiuA8bJ1leqUI
WoE9tV2ogsQth71PnpgLerR1QmwP8MMvkUPGYlDfukQ84VEa+C22r67zbNjv
Z0XqieBXMkdmvSuWgP01KnPdJkzi0B1DssckoZ+pjAguh4kLt5ilv54Febf+
8B+mDYlzlVLMdebAvH5ft2nvVhL3+eaoc8RBP7Kc73nchfnXHSjTkyFoqebh
bHng08JJw0Wz5xP00mMibzRcKMx35eWbObC+2eu6Nm32pfCrHnZgP9QPW3W6
FLTC/B0punlHlqCFf3+0uybNwvV3d43vWkjQ+0qNK1NIFg57+KAneQFBh181
eqm0moW9ywVHaTnwZ6OpE5+GKVxk6BwWPhP4edaFQ3eKKByTdEDdSQz8P7VV
Ty4V8o98f3OhKEEbWF4QVE6k8M6tub8WCYMeH146qhFI4ZtrWz+1i4Afkrg1
Nw/4IV7iPuMP1B/xKa9V9oP3LSBerBYC/df7snWXF4WFTEOq1GH9rqojNTuN
Kex6wLcxZAbM9xrv6TI9Cmcc9/TLFgT/EPOu8Rbwt1Rnr1CjAPidFRFGYo0k
PpP67OwgP0Fvu3/zThv02wnGxS3L+GD/c61e1PyXRwsZwhJQ/7Fe/Ls75Nmj
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
9cjk8g4u7PQYvSh4lkSnhn/y09q58Fi5sEUT66NtRPNrpUYuaJZLnfP5S6De
JxErwn9w4WBsccV17Dfs/f0HjrXg8WPe6Upg//bX4vYp4+9cUBfalWjeSqB1
17X2LSjnwvSIPXPPS8zfodGf+0q5MEyP0RXB/SD06dY0pfdceG6akvIJ66Ug
nfxU0wourLA+2gz4+TZamuMVxVzYcqfx+hDW89YCa3MX1nOhvN7b6xDW57cL
jh0Z/soFcO175K5For4PplWRn7jg9uHYxPdHJKr9LSNw5wsXih9OZLs+IVEv
eau6uub/x3/9xTwHz49cSBZJakd4/Yt3iH9Ne8uF644Diw6c/O/znWUuF99w
QTK1I6MMkcjL37zUKo8Ld3felH/KIZH3wpKRBblcOGe60vh4D67fo1JBxEsu
1N3V/UuhY74t2ZDrlM+Fr6m1x8NpJHJrVJDqfcaFdbkPSNE3JArcsJVTno3X
46azZfYIiTY4T8Tce8zF9eVm2zJNoEUdKl0BmVxwMfzqyX9MIO4LVYXLd7iQ
T4bHLEjD+KxOnnM8nQuTlwOorW4Eov+KKDdIw8/jXN1zV45AfjXlmrIPubDW
Os65EdfDJLd+e30yF3Ynxuyqb6Cgw5WbDrHuc2H7SLm+YRUFucWHNmcncf/9
Hk3c2nnY+zIXLpTXOMetJ5C6ccTQpQgufMu6c6F+BYHMFokOPLvKhXt6TU96
dXD/EzLcvzOMC32iWvJrLAiUvfnIvvLr+PkuIWlz9xHIPc3kosxFjOdx12+1
cQR60XlkHy2EC1sVM4gYrE+COjyf8qK4YH32+Vj1HwLdz05cZhbHhbQbq4bj
SBI9Fs6+rHCLC/xzojkzMiSaLjdzOJXAhdzQq2d2Yf4anX+/cuAGjh8zY3f6
fQKlng4YrArG+PTsd3qE66+57sflV4FcuNTflGI0SqANodJRvv7cf+//kodK
2+4FcOHjyJOjzhjvopIbmTtOc2HzzeybPdgvC+ZWL13ly4WnzBQBN+w3KvPv
m8z15kLivI7BR7jeOrQ9vGKPc6FfXtKcuYWKFglNiWV7cMFD95H6czsqYm1Z
09B8ggvitlZCG/So6O/mD1eCjnHhzSukA6N4fBDvN3flgn36QYEr2F+Z797i
q+mM1xfkvjEN93eK99ktgodxfu6aTdt8INBWUwl/f3su6MfnG565QaDuHYlv
W5y4sJTPmLyM+W742FzPsv1cqFEU3m5BIVBVZZJttCMXeqrrz0aZE+jygoaq
HXu44LuMI5qB9eJE6RJHii0XWJuHtA6MEWjTcpHvAcZc+OLZNq6G6680U6Ku
wpwLG+4rzzG3IpHigP2KX5ZcqNL/6aFsQSKXU48keNZcsGBk2mYqY33ubf4s
zpQLcn3hQQfx8WSw1aqdO7lw58h4ZOB7Aj3ivH+pZMSFht2Ku0ewXlwV9EtA
1IALosZpoa04f+52LIXSbRjvgTfibmF9W1t292jbdi5EGdzupEQTaJ/p5Ni1
LVxIUB2+Kl5EIAsBwlp7MxcehqhcFOsk0LgpyJzQ4YKM+OrsVMwvE2GrhlZu
4sL8NWrpUW0Ybx8fhfeqcyF4bcNN2bfYj32SN8+icsF1Om826SGBtFP+3Pio
yoXAae6R6jICxbzjzz1FcGH0XePGuEoCHZkZX6auyP33fvjGOgnV3cr4vL1H
4soR3B9WBueKb+AC8/jj98r7/tM7GZvbFTAeclxeBQaR6GHyk+nENVywqY5/
X4T9h2HJTv8AWcwnt38e+HPov/0HT24vksfzWTq4XdiXRCfWBNVsl+aCl8TF
Vml8v8vD/OeyKzFfb9+/+DzWA/W6ksa8FZivKTkhfZewnhJjFb5fzoXlbUvv
TGJ+2Z6ZO58nzIWmrEubCoxJJLBPpOflfC7oPVIaNg/Ffn5yZVKzEBeKfpSm
6PqTSHPj6Z4bczG+RN+MsA6SaMXV86UpS7ngTN3j44PzefzP+NlzS/D43pus
+kRIZCL9W3GNCK6HqnTDPYuwv0rSHXYQ48LsEvsSKtarr/gCD20EuPBgnMqw
wv4jy1RhITHDAVezgZBLnzFex84pC05xYO8FwXv3sD9IXcWb7eJyoJPd0hZw
kkCj49duvmVzIHGx4uXw4wRixkjUxTI5EHrh7raH5wnUtOT6J08659/7T8nn
G88Y0TiwqHdD1FnMnza/Otpkxjmw77hz2IGrBNK7WElGDXLgQm+zx2lZAplc
H35aMMwBjRD7zQlYz+eZzYYF93PgXeJ6cr0ZgZbdS+jqHOHAYHORCtWGQCIS
H0wHf3GgQWWEvRXz8btGC6mEnxzouHnuKeMagYam5ti/6+SAUd6XT9IZ+PyB
tMmlPRw4wq976XuHQB5L8m229uLnh51d4B1AoHyxvLfbWzlgUu/TU65EoOMf
0pOWN3PAzOKSR7AWgV6bRkd5tOH1/khbrWVHIOV51tTBRg5siCreE+1LIDHX
hwGl9RxQUlC3SsP11Hgy1P/WNxyP6ELPQexXK/yKnyz6zAGp9gnZl9a4/198
FKVdje83460YOUainkedG4/WcmDqaI7GGlMSxQ2JB3Z+5ECA44xDJPa/Dwxi
+S8qcDwOXHvwsY9AHbTSNXvKOfCX3OObl4n9zfeNmpfec8C85ruZECLQk+7t
7zaUcYCVETVytJpAc8nXKz+/xdfzn8idEMX6h919QqyEA90iGmorJnG8RLs1
X7zhAHfXar94Qdx/u3ZWW+dx4MAJ1T3KC0l0RWV35sV8DuQ3f1P/i/XHKY2n
j+ReckDFqGj5IMbTKy0PlfHnHOihSw3oYnzLjHh5vXvGAc/FMjt88frSbNIP
R2Vz4IOKpx41gETxexnznR5z4Nnu9onCJBIJK8u16Gdy4H/7SWV2JbhzHnHg
a8vQz6Z8Ep1XLsrsSOWA6uhfFTWsn6rSS1c9TeFAQZz2g60tWG/7Vq3akcwB
hVfGdhvGSaTXcFr/7H0OeCWwM+fj42bDP2qKSTif90ZOvWom0T03i9P02xyw
flgTuOUniY51Lncrj+fAyex7roNtJApI5PBPxnAgOXh5ishiKoo5G7hQJ4oD
PqLjPnVzqKjScL3ojVgO7LlWMCrWR6Ll47luq27gejrk78noINHJoQtbvl7D
+BS6YBR5F8fDtf1g4hUOZGo9uCRwHPOVllj72XAOVIU/a9yJ/WDaS6GjBpc4
8P1s1W0e5vuurY0Wa0M5wPOZuJGRjvv5OUm94fMc0KlY9/ykJ4Fsfb915Z3j
wPV9T7VkdhFoh67bYGwQB2p6skeeuxPovIxFeZQ3Hk/HMddClEBLdfcKnzjJ
Ablsq6PvsF4/rCuzTd2TAy+vePzd2ERBxhqz42LuHIhe6lziN59AVz5tv9Z0
DOdfl350vguB3Nz3TFT5cqD5Id98KfbjQyXD4/vOciDhqFOo122sP9wePVl7
BudTdST2Zy72y3OsG2dPc8AuK60zAPcPG6X5DUmuHNj26oPZT6xPXxK61Qed
8fkosR0jmB+DG79Z6x7G9bgnKv90JYlerDC//2M/B34W8hNyFlFRTo+84WtH
Djx+kPvNHh97n2jImXbigLPWRLLOFIlMNzYUBNhz/r0ft22ed5vuHg6sjr4f
c6sB5/ebo+ULSw48yfH7bFFFotmctQot1hzwdrWuffORRE7i3TlTuzkgGVDd
tB2f3x2jvfmUOV7f7ghhsRQSFZsnfNMw5YDAZwHeQUesP9mCK0SMOdBS5Lnv
Aa6fXRf3LqndgfnOJs2GeYVAu33FUh5rc0BtYl396TOYX1YKC2/T5EDFbfHV
p3C/3MO4rMNTw/G0F5fYmUKg/kw5bzctDsy99UrkRTaBGtrFdOtUcH6lWFxb
zLd3V8ucaNDlwJ+ypKXrjAl0wdd2lLcV56tqfsPKTQQKzOopSzfkgAXn8oF1
2lhv1Suobd2O82ctcK4Q82t+zd+15/Q5/z7PSjjz3vvjOg6sQiG7tPZSUORO
x4yktRyQcOl6d8mCgl5aWdnvkePAQ8b1NORDQY+rm2QWbsTH2pXBpiEUZBb2
21xLCa93/pbo9hQKKjlxSs2ZwoEbguXV8wYoaNkvDdrG1RxwOe5ZFFRHQVbz
7325SXLgytyGfatkCLTmc+ucHmkO5O1oKHFwJJCaSP6c/JUckGk96HQZ65OB
x2EFEZIYz5tjFAslSKT9jGgGCYyP607+frokcjXwHRVfxoHbo+/7rtqRKGna
rah7CQc+bnCedfck0Z2flgPJYhwQOxGwcew1iQYK6Fp0IQ5Ela1cfzmPRBf3
VYV8mM8BbZ6e8JoYEjVsvsvbspADnM/HHh/vItFp7S1SJ0Rw/l1+chR+k+jZ
t5qA2Lmcf+/vPxAeX3dEgAN01mnzHdj/nP1xrODeGBuo2u6KerPYr6Z9DKyb
YIN0hcImsV8E6tureFyazoby3WRS7ycCecsJHg1ls/+9z3t4ecBYHpcN4nZm
hYzrBOo5/ILo47Nhz/XpxxU5WI+ZG9+0ZLKBrFhzl4b12U+adLjKDBs+t+vf
OM0m0JS4a8bxETb01Km/mof1QbC9IJIZZoMmIyd621Hsn3h64gMDbDDLnZVu
DSHR2q2jVSF/2LDoY/4bTjyJLE7FLcvrY8OdrY5lCi9IJBRhudL+Bxue7R3Y
rtaK+Vetgr6mhQ2GQ+1TwV9IJFGnQzXuZoNe9y0lXRzvA/cO71z6C4+XNOT7
8jCJtghaLPnZwQbRPy9qFfHz5noMRma0s6FDU2np+WwSZddmhQ40seHw4g+m
GeYk0urvvdNfzgaK4/oQBu6PY6JHxHLK2NAmlVXQH0yic7YFIpuL2NAUrzz3
uxv267cdNp0qYcNrIWNBAuuxbYtd43lv2P9+T1OzY6pe/gMbPvUyNMrFSSR1
3azmXT4bdrVwNR9h/b7CqLRkfyUblOrlm0KwPjkR2/PuRQMbVr8EVesSXL/K
Vgdi6vDzuEwhTSDQ9bmGs/Zf2RD/dI50pBjm2/3R6V8/s6HryM553GkKGguq
TRWqYcOTjKGQs4MUBJNbHBKq2DBrljjbZEugB02GN5Lz2JAYq72nGfNnTIyX
+a6XbFh6/mbWQ3z/Za+Q+IW5bLhZI5uRno/r5+oBr95nbDDPiV6jcJ6CDvWv
14zJxnhZ/FRkz34KWuiv4efxmA0p3dTYu54UJL34znkikw1LuJbKRz0oqHhR
mPboIza0blCQ3oDrV7WlIzU3lQ2ws/mbxA08v6a4Ip8UNpyOrGwzvkdBSgdu
hqndx/njVWd4vaGg5LI8zsRdnP/KAwLvcP8o1Weu+ZLIBv68t+Kf8glU+cx/
mhrAhv/tx/+tJtzXKJINFYVGIlaXSTRvLcHwvc2GvvDGt3WZJCpa2BG46hob
OA3d66NwfxfeLwIPbrKhpmbrb6liEg1GMmNPB7Khrrvg9OAP7Md1nGVaI9jg
+Zwxs3kuFW1yDk+uimbDn8W0F1QpKjp8TuqiSTwbzhwZTS7dSUVPF/gWLIhl
w0+5ecz7tlT0SkftZMJlNuTaC2xap0lFujpuehsvssGuq1ltO77el6Z+YncY
G+S1Vi4it1JRbtfkvZ4QNhwfOeAYaEBFV3K8nqQEs8FKfl7VOJWKvgZf3ady
FM/vXKxCzXoqCu/T9Sk8jPHrwb8xV5uKEnKd7H0OsuGh7B0bxV1U1HVeaXjj
ATa4Dcbzv+P55JxL/tPvzIbSsFSVEEMq0isJu85yZIOsSr1J8iyJltxuCnpu
z4Y36/q40w+xPs92DTnjxobHmQ/6hoZJFDq9QzDDHdfPGTlZ+yck8pxfHDHs
yYaxgFVnuHoY36JHX6t5saFaMMTHCOu1eWI3dx/yYYPxLD8uVIhETGuHzvRT
bJij5HtbeAGJWkUfSA75sUHbIs7ghhyJ+qrsQ0L2sOF66ZJQ86UksmZVUEp2
YLxSRUMVeASaUx+3e2wX5ieDQcvXMwSqHptN0zVlQ4lh2ZKOn9ivh+tp+Riy
QTjA4Hjaa6yXRz9QTpqzYUjTtu72XQK1yzZ91rBlg1BJ7W+jJAKFHlFSmWOD
+fH/9svScvBreWPJBuZ44sgtfwJ1Diz03arPBnZDqOaxE9jPZcicKt7KBpc1
C55/lCeQ1WlDqo42Gy6KZep6yP+HT4Ndw5swv7ldHB1TxufPmqt56bLB0fSa
VPBGAhVriTWP6eH8KNIUNin99311VXq+BhsExdbdp7kSiD22WdJNjQ0xTrEe
Nlm4nxv5P/xNsKFlPC37+nwSTbOEy7KVMd/aj88/PYz9jiOtSVUF4/0hr7f4
G4HiXPS79ymy4WpSp+GZOgK1vtxzSGEDG8REND5tx/5e7r104V15zAdPXB2y
sT948727vUGBDQ7p6xaH43jJNQTvcF7DhvzFUt+F8PUGigovysRxvQ+cTZyH
9XxgZWrVElmc3yhTxd+X8HrfEjfDpXA8wh4tTtckkIKCR4vZCrwexiZbBwPs
5488yGtZxYbfoWf6h+wJdG/kYIP4cjZIrQwduYH1iM9VZ8e3C9jw1XO5tW0j
gc4yxUM62Cw4uKK7Z7KUQMIHlk/SF+L5PWXfvDOE43Hj24LLi9nAPUQEbeJg
fz5nXNxEFOfP6tVKO4wP2y+GltI8FuQGZiTc1iFRmfxv7xBBjP9s/dAzq7Ae
bw/U0p/HhnMJvbr3fEi0ZyCtxHeKBSvoYWofL5Bo5mXZ4PMZFtjlE1Fbq7Ef
uvTi47AAG/zfEcPLcP9+E5hSENfBgver3jDvfyCRLrE2cLSLBera+RXHcT//
kjevWqWbBfGGgXULMrDejoqr9vnDgpsTkbelcf8omrejzKadBT+Me1FoBIly
U3uDXvaxwLH819uhLdhP0639Fv9gQUD7Fn1yCfYfBDi1fmTBlW6VqR043ykV
28i4ChbMdzI49E6ARGJnC7Mt3rPgdkL458W4/x5LJjSCi1kQc1V1PjMS53Pt
hEBwNQtu5S9at9SDQDXl24evNbHgyxfV3hsrCES1ct38rpYF8qnb+1yECCTI
e7Vqbh0LRO5M36C2UtBNV/rTnQ0s8A+0uHSjnYKuH/Nc8mWMBeF+DWMZuRTE
XnhkozCNBVrR+ld/p1NQa//Tx9dHWCCpzXY//YuCroQ+GtlFZ8HCjLDnfQ0U
lFPsuz+FyYJtIdeEYrYQyLCT2qc2zIKrl4gpBev//k9U/MfEAAt8nH/snHhH
IIbus9aaZhY0eb9fezeOQMspBkFan1kwc+rogGwxgTjfE78LlbNgg4W2f0AD
gTxdqnJQKQtsqpud5mA8946+OKr5FsfvZGahBfbfy3T6BhoLWP8+b1wYVFif
8ZoFwWNV/G0tBNp2RGTRwVc4nwInj/pifLV1dFyqzWHBokt+Ecl7SMTvpXy4
/JQFAyfl4RfWe1NJnVvXPmGB8gn3G5ObsF75IDch8YIFxj/SH9Ur4Pw/dalv
zWSB5jk3R9N+As1kJUjVRLCg235aYS6uz621UzKrrrFA10A8TKOeQEWlCu9C
LrMgzpIvKlSF/dYTvxq3SNa/90Unni/dmH+TBfdL7FMdmgjka/sgdiCa9c9v
j1Su77SMZf37fLVx5kbk43Q8fymNg2mnsH7nqZw7mMaC1/0HnewXE+hv8yem
ehILaD9TsrofU5Boi/Xe88m4fl5nv7l5n4Is0b6O3PssmDQi/45hfW0WZZTI
TWEBr4IdWF9CQWdZOXm1t1kw5lLwsOMPvj6iWjc5ngX786Z9/HbiePqVi/y6
gOf7yevkW0sChTfs88wOYYH1gYcqbC4FvdZdPF8/mAUJ5eqS3N8UdKpE1aPo
DAsKT9y7bV2L9b+dYvnCQBY8WHBF6elrCnrec6nM3Y8FnpFXYj2ECSR0Z8sV
9VMs8N1ltn2bGa6PK9FLVMIwvmX6R9STCbRWPutolTcLkg6G1MSW/bd/Gu1a
9EkWGMgJdXrgevv0Tev6Nk8WSEwMnDmcSqLAUFPN4eMYn0XvbIL6SUReXH41
8RgLHi4Wnpxkk2h1UXD4DlcWvFX7/Sh4HRUlLnUjaEdYUC96uGi5BhXJZX12
LTyE5yNyXGwQ9+vqtjaz7w4YL0sDKF06VERbtNnZ1YkFJ9O+yPfh/nxlSeeC
JftZcGT3zPVxFypSrPU1vriXBWWvBX6v5JFoxUXWiLIdCz4e2FWTl4D9+fXd
W7/b4PVlyNFF15Ko4Ky7xgUrFshoVks7YDzl1yr8MLDA9TxnzSFwJtBOYc31
f01Z/z6/cjyruDHXmAUVzxWOFGG/k/c7f8msIQu+e0t31eN6OrGsrsp+JwtU
ffNrz+F+iYhygcf6LEhMX9t/NJRAg6+Av2QbC8KgwnJrIwURVycH3uiyYKe7
CvMWPr6f6xpyUBvPb3/t5U9yBOpQ/37Xajvmn6BItXcSBOIV6/Su1mLBn90T
pPZZAv2qf1VToYH5JDY3PvMZ9qMn7+/3UGNBi7dOumcFgcjmOZ+VVFgwpDTP
4xGu78Tig9lfCRZcoj2+wB0j0JWw4DNa8iwgpNJ3q+P+8fVClORtGRbYf5X3
zWzH/mbRqPGP1Zh/9NqiSnF8FjqHz55VYIFwXodo1Wocv/gOXe1VLNgVpCcR
hfuDS2LovDZJFlR1FzAOmJLoBqNT/bQyCzaVJ6u5U0lkY+PuLKnIAtPeBAtv
YxLtu2Z34ft6FswRmBkZtcT+4pnfmNYyFjg5qq4avU4iRf4hv2AJXJ+fjVK/
YH8wIbRZiraEBZ+cNsYWRpNIQJEXGiuG+8WviKTFuVj/mN66pS6C+XNSY2NX
Pol2RRyKjeEw4eO7q8auuF+03tsrvWWaCT6bNv45RZJonSTFeJLHhBZN5hY5
7F+MK/cmh80y4fq5hwlsRxJZie4x/jMH4yl1m8Q6rI8/ul9cTZnPguK+X+cc
sR/qp5sX/xVmgWXlBGsTnm+U/fpVN4RYkFKd+KI2nETVN6uXG7OYMDx2eqN6
E4kcE9Of/aEzwXOs7IBkHYno+4nBizQmHIw7296D/VTq/a77CoNM8C0iHk2U
kGjRzsrkm3+Y8O3nhsHNWF8bHe7+2NrHBPmMsqz2BqyvISWqvYsJ/nfLm97/
xPpSddWxjd1MkEpS3Z5MI5Hoq8h0vw4miMaoNSji+T1nvKq6OswEgbuRVa6J
2A/HDNAaRpj/vu9+OObovnmcCbKmLht0zpBIJNlCTrGdCUOOy2YjFpMIgtxC
y1uZ0DOnqexlIIEK70mkF3xh/tNvd1L/hjs0M+HojhN5LVMUZOvWwVvYxATl
pdmzS+Mp6EKKzDK7b0wYLT0/71QcBR182i9TWs+EV7WjK1gnKEjhpVrE/Fom
9vPdE8ZtFJRfIBJp/okJmhXbL2Wew/1nJHd5dyUTrlodqHL5QaABsc6CuhdM
CJEL/72OT6D91g2HFj9jwtNH0+y6LuzXr5Nvip8wQU5X6OkLrG97Vvx56fyc
CaXd3+uMsR5KlYl+YJ7FhPmP93pmYD548lbRQSGPCeTSL0YZ6iTKW56pHPuB
CW6BEYqxuH85/yQe+eczocNDtlc3DPcvLcFhfYTX+7pEpaMc66GYN3smypgQ
J48eOS2hIp476R9ewoQd5pwWyeNUZP/DUlWziAnPBNbIme+jouhzcxOr3jBh
aUancNkUic503Y97lMaExe/+xPq0k8jP4NgxjYfMf/ttqCufm9t5nwl6E21H
5X6TaMGkq8nVZCYEJw54xZSRqNMzwoidjvGRWiZ2G+PPXvGBoGQSE4xZfXln
MF530/qSym8zwXD+8pTzgPUZ7fV393gmnN5jc3RqikANsaNvl8YyQcH/tgRn
nECPVYJ2FkczIbNgZdaZEQKdMS/ZZHyTCe/2TtoPcQk0mpAiNn6dCeuC5y66
roTxGB4RfecqE6xPsa442eN6NbEv1Itgwv/+L03V93aWTyiuR1h10esb1n9J
hhpfLjFBaInRBvSKRN5cWkTJOSboDP3ySthLoldbLn9YcQHnozw8csExjM8f
CU81TzMhtTqmQVmTRC2GGlYx/kw4wEmSSdxJImlZbcdzXri+j9VJ6x4i0dIo
xvNWHyacopjWVnuRKNr0a+TOICZcKTDM3y5DonH54blCZ5kwK9dTmIj17/zN
htlrTjD/ff/pe5Gf+t6dCWq+K3ZEX8d8W9ngpXKYCfbPguEmxuM8Qeu0Oiec
v+nPd3gYX33r2oN99+N8U2UcBLH/6tN5IfdqLxOsFK7O2yNGou1+jjxxR7ye
y52Ortjffc6tGLaxY4J3w64eNzqB+ueeOzBhg4/LPsiusyHRy5+LPvhZMWHc
imv5GPPnzHs3qooFE1at9/2c+gv7L6GbP6yMmfC//x8Zdz/b8tIU53NOxoWt
6QTaFFRycWQHExacjsrS3k0g61gTOOrGhIHM7R1uHAoqO3SCO+zKhPWFl5+E
FFLQsOD53zedmRBT1iYS9JOCaG4zpRv1cT3ZLHKYN01BEtd+2lbo/f/7Px6G
W5mGOH4+Z13N//t9T7Vb1OGtzH/fnyeufzhu/4IBEn+dbS3fUpDvidqI0KcM
UC/xt1T9SEGaMaPWvBwGnO/UOq79gYLCTdaprnvCgJBftGlBrH9FV0tnPslk
wBo/34fjFALdVrfg1b1iQF3hp+TlPRS0ZUY93SSfAXFBqUu+6RFoy7q9Xxa9
Y8DEsboBeZy//AP0tPgSBpxT25cWhvVLmovBKtkifL70kXHZBwK5F3sPozcM
+N/+zlH5+W+p6QyQ3edSsTaNQNMCmRZ1qQzo/JA6GY773UTE44d2KQw4ZuXu
6uhKotMX6DGt9xiQnT11JfU8iSz0PFcfuMsAgbamcZ80jEffsG38OwxoHs2q
FkQkkhDwE76QwID7rJOlVOx/5h3ZdEogjgH2D3pR1hsSLVdZJbc2igHs1rzt
Ms/w9YYxgQ9jGKDtKCJp/QL3u1U/TpZHMuCbznCzEj7fI51vo3+NAYES8ytm
sd/S/nSstzOCAXrrwjxW4PFNpmQFD11mwBazZVULYnE/bPLcGnyBAbkzpxfF
WpPoXbF1Fy8Ur6fx1ccyvB51a6NN3HM4noy/z2w9sV+ufj2ZEITnr3st7xLu
t+dntyguP8uA6bR9RiZ4PlnaYpRcfwa8TvvzpqOeRG2o+i5xmgFHz8/mnWr+
731ioRuGXgzQCOi/YdKN++PtG78/+mA8SLzd1d1GIuFrhis6PBkw7lYSO7KA
iqYa5/Ac3Blwj3i6J4hCReKvvvWdcGWAX5nDjldxVHTyx45PE8cYMHr1+9eX
blS0ZuZdxQYHnE87n8mJeCpSuKGgFrOPAWT2lRHxbCr643P64QonBujkLBvL
LsPj+2cw5zkzYJFvdcbBcir23xcsLxxiwP/+7/nl3y83U/YwICN7cN8bLyoS
LL/skmPNgLvBtT8uCVCRd8Bd5022DJhpK6T/3U5FgwsPvXxrxoBJb5MwXiuJ
DG3EAw0sGfDrd5iSN17/YwV1IUsTHJ+eH5v3DpFIeeLYmYqdDBCy/LFCdIZE
Y93phsP6DGARj8JYEyS6a2SX5G/EAGJ3XWcA7h91GY8iDm9nQMWtF/KjOZg/
9rS/iqEwING7XKwT66FLS6OORKkyIEanD3UFkGhtrd2d1VQGPGjtqDx9i0TZ
uQemaFsZcCbnuGA99s/9Q+4UzmYG8KT8cprWkyjnlErY9U0MuFigyQtTJFG3
5KIzbroMsFu/4RcN94dfc3+tl1NiwLNUGyOXXVgPqDTXTKkzYH605eYfWK+h
hNX+tzYwQD7spXjpXBKZ+vevk1vHgM1HR8v1cX2t0aD4P5dn/NvPxkHgw5pn
MgxQ3fpxmawWgRKG1B5qSjBgeVt77WdtApluc9N+LMmAsdse6rWSmF+TtMx1
VjEg4qDr/LliBJK8V3N06xoGeGh8vjx7mECx2RVZ5UsxHo49+vgO8/EoS8DK
fAkDWho/FF3NwnrEOu6y0SIG/PiqPyyL+9sPo6Hezxw6zFwUPL3pN57PnZB8
GxYdfj3Lc03pI5Auy/vTIT4dVIPCfPwxf79LnEx7K8oA6zuKO65g/zhtcmn+
twV4fYvruas0cLx6vRR+0OlguYZ6nqKL6892SNtSgAGePR8i1SpJROna31Ux
F99fK6m1FB8/+/1+3RZBBmxyrb4iEYr7s721Wss0HZrnbXlyH/dnwyw1YQMa
HV5KvfgW70yis1fann8ao8Oh/C8JawJJZG0QTrMcocPSjrQ2SjyJ3C4ua2oa
osP68lDeUAa+/+cx230DdDCI+DN/B+aHHd2Hfbp66eClsjGhDR+/nue65csv
OtQ0Pav2wHolfUmPsmsP/R/feBb2USw76aD4ed3yU5MkCjGMf1vfTgczP+Eb
jdiveQ1Z/LH7QQd3A4k6G18q8uihP21ppsPz/DWh4aFUpLvXY8m+JjpUC/1Z
8fQWFZWH38spradD5Kbym84n8bFuws7t3+gQZumWf/UQFZ2gvbHQ/0KHu+Ea
YgkMEs1Bj4pRFR16DU+JHsP1sMwu3hO9p0OJh7a573/7r5qlVepX0mHDltoK
cS7ur4ung8tr6KAUEJmpoozr5ca+HCjHz7ueuHuvPhWJ3f1+/V0pHQTL9x+m
Y/2lLN43V68Yr2+VlVGzDxUVnz0hVVJIh42BY0aSflQUaWzySaeADlb39B5b
eFLRvjU0/8Q8OqwwmUnwcqaip/Upjbee02HhNmXWE1sqQtMW9hIv6dDyXTXp
jysVFY48uk08o8PNK2dKhiSpiKOaee/aEzpc2vLritB7Es26CtZdSKfDvmXe
e+XOYr1jWasal0KHuGiPrS+wXrMWkh6cl0UHn7bvqQ8ukcjWxNiGm0oH2wUX
kxdgfe5ob7V29B4dCkHIKsiBRF80mnzd7tKh51akZLEE9i986v5fd+jglPLQ
yyWbQKKu2zsdEujwv/8bmhHr5dbF0mHRjVz7THECKfh6zb67SYfwZIOHXYsJ
lHlr5oVxDP2ffl+vID6oFUn/93lHwrx3+2qu0v99/9d93jrIIIIOJmctvZw0
CcQ/mK9eeIkORhJ31AkT7D87ai6RoXR4/EYh7oAHgVauPXMy7TzG26BPo3gK
gUp3xoytOEeHiaYXgr8/EsjJjiscGYjxK/dnQBvr+QtGcSXTZ+hwWP/RRqHd
WN/O6gid8qMDD2wJFYx/Z5fawT++dOgasl7x4zmJZNcbh5/xxs+XXavQ+99+
UJ9N7g2cwPnZKBI4pxH7zdbvpvs86NAgH6AV1IPxtY4lLr0f15s+S/PXO4z/
scy+aw50iMnMLLDEejql5bsNew8din+p2kr/IlGH6UDjUyc6nBe0LCnrx/3e
p35E5jAdxsONVHbOo6ID8UJeW4/S4UyNrL/aCir6PPIlptoN442ldl9ImIom
dnp0P3P+D0/Nzvn4vN7CT0GHLekQPORKVCynImnWEdtjtnQom77M24yv93ra
vmvSmg5fhap9zkhRkTGZY1hrRodZf/uT1YuoaPXo8TQdEzocsJbyLZKlogaJ
H7czdtKh0U1FanIbFdkWMPwEt9PhzZmoa0keVLRx6O5tVSM6aPwcGXmO60Ho
m1xxsj7OdzPrGBPj30b0rXHMVjoMVHG/tmhR0S6VDjWuDl5PxGeJi1iv/3Ya
ynXZTIe+eOvVL29gfzpW+r5Gkw52sYHGH7BfHnqw1ahUhQ61Burpt46QqH3j
Jo9N6vR/37dWJuStXE9i/K9+8733BIn0jN0u3VCmw/JVf09JH8T1UKgZOrmR
Dm6NaMcY1ief160Y71pL//d59C/u3srA9XQYvrJEOkGfRAkqLI+jchi/rhBf
6I7734T8+y+ydEjwkR67hPEgvemaiNQKjN8Qp+sL+FgPtb59piKN+bAhrNic
TqK60GTleCk6BAX6NcWLU5FBv9bwDmE6qLdEf+npJVHcaG9wliAdRuRcpK9V
kYiWkSlUsQjjyy/gy93vJHJy4T88IobX5/XISwL7c0HXyvzgZXToUP0YY4r1
mPHekZrpJfR/+42/sfz4YME8OjiriC1wvY31ZOtT5kbWJDx+fyRkcpJAL1qu
BJjwJ2HrYr/FTxIJdMNEqP8xZxLWL5EoR8UECpN4mjQ4PQnBBvc2B+Lj8E0J
FtcE6LDy9+oi/zUkqj1rEhVBn4Q5nv1BTZJYX/aL182jTcKX0DNVhdjvXJww
iHYem4RfcbSpCuyfBFuy5/z6OwlvpQvnFP33/ypz/gxsHZqE9/s91h3AesC+
svJQUv8kBFXML1cQxPzDkL4r0TsJFQ8+PWHhfnpYW32zb/ckKHfoOX9gY32u
esd1V8ckrNq/Zdd5JoEGhX+k/u3Cz18j80LlL+7vHkcP+n+fhIh1GdL+2C+u
PLtgBrVNQvdX50GGNO6fTr/7pFsnoXeewR0lFRJZOvNLRhsmwUX0yRMJPL/O
wgqHXXWT8KRgQuwHxo9NS0Pvu9pJcLI7m8jNJ9GnHZaHoz9NQkJkv8omOSqi
bbSnOH3Az1vwAd3A/UZXcdKgr3ISPqxYz5twoKKLWnGqeeWTkDGlb5e5gYqS
2NYZktX4+aevNRwexPntb9qhVDYJDwNtLVufkuiCcZVrSR6Oh1HMoWMiWP/a
uLF2FUyCadUR8Wnsj6+15zyfLJwE9TlCvg+wn/w8K3nyfPHkv/0Qc6N8PFRf
4vjSFrxIx/j2cJrvdun5JNieCnxI+W//u1uHFxdnTv5730FFw+y18ZNJsDB4
sJCD+efSoew7zKeTECBy/7dNC9bnX4LMRNInAYxH/0xdxfFQ/vJ39MEkuMpl
vCg+TSKZ3x9/6N2bhJ+aAYqHLuJ6LVZZk5s0CYRK24erB0jkft+vLiQVj9c1
zlt5GPuJFC3l6duTEPL+CjsV5ycxYn3iyXicXynqr5RlJFo9m1pefAvjpVIi
x28OiXbrt4cl3piEPbOndw5yCDS88dpe5Wg8fo8ap4lGIBHpzY691yYhfUEb
pLUSSC4459nuKzg/g6f4yjkEWlJYOjM8RYMT39tLv0SRyDfl/dqEWRokD7/1
0MR+Q8jgiKcBj/bv/YZ7568cTWTToDakr0bwJuaDuBMfe3tp4K+/XiDGj0Tm
BRXzDCdp0JOoVHZ57X/8tOPn8AgNXlSJyUhhf378e/STO+M0aDvbPfkKzy+9
t/ze9mEaHJWOWt2I8XntattQ7AANGJI7WsPESaRxb+HoCIMG69gOux2cSPTg
hbWKdg8NpC4gJT8OiZYOORektNLg2L4EQS7G04n+44VEOw3u76JXWgdSUfXX
rdNTHVhJ68Yb5UVQ0U4dN/9nWFlnt1690bKXioIkjvWOfafBwzMLZf6oUFF2
2veH2xtpUPR917Js3B8y864PRNXRwErlTNqFhVjf7D1Y0lFLg3ZLv0aGJhVZ
5rlUfCulwZaBczk8PF53hJIMUU2DEeepxyHBVNSmXCkU9IkGO+pkng2m4/4j
sfBCVSUNxqIz6GHYD90Uqg9d/oEGw6qbOFbJVKTxlLb4SDkNvlS425dexfpl
9+NadhENrpu7vuLLUFHrjnePjhXSoOLAwfp6zI9r3z1weZlPA7Y5zTke68nJ
5RLPea9oQJuzoD7An0RewdywHS9ocMomw6V+AcZbg+3zlQ9x/PTWn+AxCBSy
dGN3VA6O77qXPtWhBMo9SE1sSKPBJ20L+dVGBHrbe6q6JZsGh3pUbjUJEcjv
5rVFkRk0GG3HTrifgpof3Vxg+Bjna2W0amUrBXnt+fP4yxUaqDwwCZbE+p8+
+HmzajgNfmS97P95g0Df44T1ToXR/u2nKXLOQ1gqBI/fRemoO4r59krr98QA
Ggya+XDyzxLIZmLxM4cg2j+/MX2hrzrvAg3ktixHUj4E+puRXs7zo0HpC8I8
5B2BMgZ2Tuuewvm8bdToSpDoTta+wivX8fPmVexWHyJQUnq/ldFNGqQFDi9N
sSURI6re4vB9Guy+M76yMwXzya9cp893af/2X5BMdpBYnEiDWcP1dpFrMb5k
u/fYJdAgoGMvhaZGRWSJwpqkWBrkhQcVO62mItE3dJ+OaBo4LJi59awG60Of
W+8DvWlwRGcOBOL+c9TZwrH9BA2ox+MKvs3F+bQIVV3pQQP9k0lPzslT0baU
/N5ANxp0d330UV9KRSpWGt8KXGnQy7z5fDOej6OR9/3dh2j//i9Dfolx2gpn
GiRoJt/aiPU7PWX16qgDNNB0fyLZZERFXeW8pL+ONFDu8xaJc6Gi44pCWab2
NCiWtf8RHERF91Y9+HDZDq/neMOGF0epaMshyaNlNjj/i9qar26hovN5fx36
d9JAy0npby+er7vW/C+25jQQ0TfU18L6R/L4qpXSVjSYmOoe9MXHCkJ2M5Em
NFC0vd/Tg/26y0S2gYERDaZdquxFRki04EPUkkB9GvBDhHceqSORlpj+8kY9
HP/8e4rmiEQg8nRswVYaENu3mqZhPWHf8VrEWYcGKw3u7ciQwv3zkukaBTUa
VAcNj3WIYbyvrlAe06CB31VtfU/cD83GZui3tWjw1SUi8eEAgaJMKCeDqLR/
+3uHL2szqafQAL24lBZ5Afu1qxkNc5VocHZqQK0G6wUR73fGuQo0sKnQOZ/2
BeuDFeEfHTfQQODU23gH7MfOvHBy/SWH+WyRVExDGomU4tr5mqtpkCWWpR+F
/T6lWnrtUWkaBG07S//yAOujga11hVI0cN5ZuXdlLIlWRDMXiaygwQHzEOqZ
vSS665KE/h9R5x2P5Rf+8RQVKWmIjJLtvm9FNIhLaRhltSQakpGRklBWJA2R
XVIkkZ09Ko4Ziew9Hh6PPR5lldTvfF+v38/vz/O6H/dzznWuc33en8d9n7N/
wxQk6OQrah8g0c33bNy+XFMgfPaV1Pa9mH9NQie6OKdAv//uyTd4/BsjRHav
4ZgCtray7w0rSLR65Lao0aopKDdl22iwkkRHqv4l/WHB49nQIvEE+5FbdMfo
JNYpULMLreVdTSI+nqNskv+YwO5w/s/JSQIV/t6ROjnLhMNhJbv+FhIoSU97
h+MfJphXOvsXVBLIocisquwXE06V1z5SyiFQyRxRdHmaCTNtFKsa/ntdU9YP
j6eYsFexM4mB52P6Z/q9lgkmOPOwV1/ajvUwKrFbZIwJT4Q/lQL254Hz5eXX
h5lwxq13f6YZ9o+OXfs/DjBhHevF7aGYH45clPzYS2fC2flj/3j5KLTq/DNl
spcJURyRR8QMKBQcVNBb2MGEQv7mqKCl88eZ4H3g6qvNmK93cymsYG9jgl78
ZyGtDRS6Xp+VotfMhBWlcWeUMD+2VvL2v2hgwg/F34s+10n0rFrhbW8tE4bG
abk3cDxjho8qs9YwoWzlnaDOVwTaonn/rUAJEy5FpZ1e9xjzVvy+CwEVTDia
sKYr5TiB/nmaH2gpYy7tp0Sc2M6uVcWE6tWbTrtYYP46ZxZ0GTHBie7l/OS/
5zHn+9fEfmZC9/oNrtW4HscYtHCO5OProV/3SF0jUVHIplAqF8fnyl8tO+x/
aDn2cXZZTJj+oW7+twPX80s/L8+kMiFx4mDGZDvW47Qq1Yx0JtQFG7jXYL+e
5FvEsTeZCXMKl7S4c0hkP8yp5JTAhNO8WceW+ZMofFPSj9w4JgzscHCVe06i
6FAH2V8xTFDk3xa9Dden+D6Y2xfNBBllT3og/n7jM71qTpFMCMqXqTveSaLB
/bu25ETg+3PrdVtgv8QoXH5j5gUTLnRc+Hf7PoUccnTdDMKY4BE6FjPa+t95
jFtGQ4KZ4BNmztmxXQb5mTK66gOYoJP4/tN2MRmk7x5whsufCb19NXumWWTQ
K2rqlJYvE/apaFSopOH6tL299cEjJnBcqK7tlaeQx0/hvqIHON6Jkif+9ZLI
kXht98eLCf9eiIusDSPRgKN7//l7TFh19N7oezxevcJLXiFuTPDdZCNliP39
fPZ8bM1dJvS0VzuI4s+7+ArorHJmguvQLxGZhySizr65C7eZ8GtlGm/FIRIN
HetLirBnwpp+3XsSrCRKFt851GDHhNVbc80saQQ6sOxCHIctjo+D9/3sEgJJ
B6mNqFrh9WWfcYDlI4GqZzm1IiyYYOrZGiSPeYvlN9v1lVeYS/trGQnYvqy7
ylzSx5jp92WKl5iQeqaqcA8DX//gfDLYmAl5kbEzlnj9fufQyP5iyIRnN4TW
lGE+2ucY/fL3WSZcK722Wxpfz1y1o0r/NBOS8h5+icY83FOW+PG+PhMOrpLx
lMLtxGJlmWwdJoRyjAm8w/4gPJblL+cJ5tJ+/Vl5651tjuHx2G4vWcR+wPFi
+R1lTSbwK31KtF2H46eUNFh8mAmyJwYDBDixP5SVnpw6iOczb4Pkj2UkUgxK
8bp1gAncH7p7afj+UpcSHLcDE7b/FN2Wif1JYsrlTdH7meA3Zz3//SeBfnn7
VQvL43rxv+fNa0zpK8zsYcJGntPivJgHVfSYjBOyTDD8xL6MwvU76Sf9TaQM
E5L9VvJujcX1fPwr+kowl84HGr7wasiLF8dXwrD8D9brNxuKM9cK4f5fCP9t
8oBCydvzUcF2Jux/sHb4azSF/nHWhIaIMOGdTSd/9hvsz981ZB4RZ0LX42Un
gz0ptCx54zN+KSYUjHRli2J9DE8k6Qr8eD44ugkhHayPcq1bEzcz4XFhzOhq
zKPLd3PKzm9gLv1/geeghZnQeiaoXAyS0LhBIn3bPN9ra5mYFx5phP33/69v
W1WyOXB+6kYkLOL4hflq/25fxYSEe4X7lLZhXmA05ouxMcFebQtnuxiJxt7a
O2ksZ4KauOEVPxyPD1oTfuL/JkHkwIsaEvM6Knu9xvrXJOyKykxZnMF+fqtO
2eLPSbjl2GOqAhT6cZER6DcxCYtSHvdO4Ho6cHEzT93QJPC1fe+MsaLQp1vG
ixfpk0C/pLfAdpdCm7tIN6p1EtQPJrDucaFQQEXI3HjXJFTkpyXpv6bQrJXA
s7x6fL+VaXvF/+Dxu61SCg2ZhK5D6/Pv8VJIyWznq00vJ0Fhx/s+kf+eB1E/
PMjzbBIy1qjVC9NJJPXoVp/RlUk4/Sw68ngLid6P7lm0tJ2E1zLW21rqSKSc
PjtMt5jE0nH++c0R7Df+nR9oNJ6EQd6Vz2Tw+i5OEg5TvjUJfRkf9oXhfHAZ
XLcuMGoSRt/bZH15S6KZ9MA3oY8nwXa9zxZFrNdnuB/e4iieBPkVr47cxH5o
YZCheO/LJLxwKqLut2O+DJAuDPw0CWvaom2a8fqbSr27dWvOJPDX3L6v9Y9A
taf83uin4Xgpup2g4XognDbJ1ZqI2++SogCvn4xVbJmHqyfhBtvPYo0zmCcm
WP2MYieXzps79fAo7bD7JBxzvipdtodEqspavF/uT0LJby5C9SSJZJ+fyipy
ngRLm5rQ+9Yk+uNsMKNlMAkXVFZOWyrj6zs3cxXrT8ITPYcJeXYSbSeUd+89
MQlVK8L9DOsJNEkcczY6hser695h/JxA1s4hb78fxN/f4PCU9SSB+Mw0Ww4e
wJ8XcvhotPa/97HWb8rYMwmyxzxLT3VJIzUHx7hAYhIOZZQyJSql0UmdgHMi
spPQqrc937ZMGk34Wi8uE58EX+velKgZaZSmuPW87fZJ+NkVnOa1C+vj1S8K
2T8n4MK5Uz91VQm0jvKP1f01AbKT5lFvThEo+k9s5daJCeDZE5f0zoxAkjVN
l92GJsBd78xxB1wPN74rfHWoawK6on7NWuH4tz5YWKT1TUDzx68/tQcIJKh5
RmDk7wQM77VI936H/f2MFGrfOglagsO1JvcIJLH6CHl08yS0KWYpvMfzed5v
U+QHLrw+tne/m8M8dcvxIO9WjklI+bbx+awuiRru3wrzZJ0Etl3/1oVxkCjE
qVL1bcsE/N/51ro70MDy+gkoUTikJ4D1QC9Y0//yNzwegaRXrXi9hQRwKRaW
T4C4zTyTH/PFTHLWAH/RxNLzAupWlTptLybgxa+y+/K4Ps2eoAc7fpyALB42
i0KsnzenHoTuyJ6AfMFosX58vfyzzTTxYQK4D98bJjD/ZKQVb2xKmABNoQu1
H8QoJCpUWk++m4BlMonLfJQpVKnmH+AVOQF8bGYuvEoUyhGuWOvoNQGnbmXm
z62iEH/ylrUywROwjW2Z6idcj/qOsB8TezQBUcv3yd5LJNH5Ij23er8JqE8V
TxjAPHBC4la3nvkErNcy2iyB/e3Boy/1zW5OwP6LfwwaAnH94+pdm2k9AUT7
Kh9T7K+1N4wHbXGagG8OFtaNuD40JMvVf3GdgJTuQ1Oi+hSKydOIenV5Agoy
ifsLv0jk+YLkkTszAT9WHbxTitvC8rHGQ+cnQIyN5KRPkeijSz7/N90JaPS4
PN+G+1/psKp1o9YE3Lj3ZudKvP4fXbPyMzwyAV92xmaE1eD+P3+oEgU4H/SC
I7Wxf7imkGW/R3ECIiy4CzZiP9fWUil6R35i6fyBurueNZ9kJoC2//2VjEv4
+8M87P5KTsAqwQe+5lhPpZ36vz8TmYC8QpM303kE8pxgtasVnIBPWz8z2EII
VD+n/uD1homl82JaT59cxcU7AZfM5L4E+OF8vP+cr4NzAt6+OHqkxYFAor8c
VN6yTIDLqTjruacE4iz8E82zagLe7dGwbbcmsH/PLupcGIe79QvlQjUE2lcj
ZW8+Ow47Ur2mDHB/eBmVF5pGxmGki0fyqSMe33T7xGvmOCiKGKRc1cR6sumt
hDFjHLxsng4HR2O+E7wDVMk4/Ny9j7fEHefnltanAT3jYHuhuZDzy3/7OZv9
W6wYX/r9NLL3iOWW9nE4ufKh0TyO76kVeqUajePg3my8QXEFhcLECrjv1owD
a3wXzwHM04fEt7AfezYOVnDU0wrryxZXD6bV43FgCdtbnYh5fG42eIbNfRy6
JkePxxdSqCj7pCj9/jjQjpkzuLG+vqb277rrPA4xaYdtm3IpdEK8afil/ThU
NR9YwVdAocKQXiku23FwTNCot6ik0BXXc18pi3EQdZkN0/+Keb77yrpIk3GI
vuHuIWJHoatDxHku43HoyTnC1TdMovHmhnbps+OwQVh3Mnvrf+d7unRVh+B4
XBuq3KRDouOKGgdSPo+DjPRHnweNBGI3NOuNfTkOeQbGGg6xBPp41bKQeDMO
60L9Co4rEag30s+mI2ccfg1d05o9TaAbpKiTYfo4uKrY6wTNS6NfDuIvvJPG
gevBernDdGkkLyj8YXncOERN66oeWZBGx0eMO4SOjsPMjuWbg4elkeA5V9nH
quNg2HnZ6Baun5NSh3zTtcZh1d/rJUdZCWRc5iL1Qm8cwv2sdNbcwHyp3WET
pTgOb3PvF57C9ZWb7PYeFRmH+MEp1/zLmC/9q8ov8Y7DdKMBt6ctgY5KX+jV
FRqH9yy/OspxvX/dqFnMrjAO0iuH5DpvEWitfoFLm9T4Ur6Ox2YI3Nw5Di0x
wif3vCTQ424tgdIN43APEp+8xTx7ITHRQXztOBQ2lu04RmH9tAis91k1DptW
JacUYP/Muj73bhALzof4X4PbGNgfC378/mNhDEw446z6DlBIg09BXG92DI74
nPBSi6XQB5eXjKyRMWB3nguq+I75fn5P+DnmGCR9sSlldmF+k78qx80Yg+XG
57jT4ymkcFjRw6pnDIqzQ6t48P3iErWSr7eNQavl7z+h2J836guMf2kYg8os
nZFIJxL5q/eT22rGwDMkIOUdrvf54+rWDhVjkLC7rF0T8+RG+8mEr8VjcL/t
FatHOIG6lkfFCeSMQWRuXuWVswTyVfxUb5s2Bn+upXttxPHianMZEvo8BmJ/
7wXEXSFQ3be4hcLEMYjIqWq6/4FA36ZX7lgfOwbNO+tj32IeiPvkeuRi1NjS
/un2i6lXk8PHQH10aoMO7t/sOGt8TPAYWNuZHozHfJPZo5nO9BsD1QfST212
USh1r2yO0qMxeLzb6Qe3Oo7fyvM53l5jMPE0h7hxHNdzaav0Gtcx+FbtUXVH
lELVOqzveZxwvHZTm5d14/tPVYQZ3xxb+v82Mj/d9+H0GAxQE8IymK+PWtOv
jOwbg+PhKj/XYr9vsyK1OFllDA79rhTv+UKg3/9+brE7PAZCnTeqZIZw+77s
gtjuMVB48aL/BuZ50Zc3VMnLY0vvP7SFG5sOmY1BOpe40qMIvH449m++fn4M
+vlMzK5FEWje4Py9t9ZjMLNxKF4W85P5onnclM4YcGR7pvCLk6iJzm0qqzkG
OziqGXq8JFIw3f/wEoU/D8IPy3B9yxoL5wiXwNcL95jJR5JItHrmXr3wGLxJ
LtrC3Yw/r7VZW5VnDNz5jsRHC1Dop/vwOLvAGPitHPQLXYn9qCpvtMN6fD9n
c5tC3A49EDAczzEGkudk735OwvM1KCTaxToGBg6sh79qk6gk86Ie179ReJO3
7lzoAoH6e6fsVH+NwsM32gkCswQqcrT3tPs5Cj0TDhsfz2O/puHpHTk+Co5z
nck6uN4cm/noXD04CvobeEX8zpFIrN5XQL9vFPLyJJwKbpOocp7J4tY5CrcO
Db6u8STR1BXjlvfNo+BD/5z15hWJsjttI+prRyHhpMpTvUwSdc8U6S58HYX+
z62D0hPY75VHyn3JG4X11neiN7FSKH3Nz587ykZBWe3zHWmcD7/7C6LfFI7C
sGatVagUhWQM9n0YzRiF+EmbtXbfSNQvJMrPlTIKG3LlH+jj7xc2/3tT9v0o
HLexcvolh/v/wVw0MXoU7r1yYvb/977SMHm1KmIURG7zRh/rJpCSfE7ASOgo
LO+o4S9HBDJd8SZ+dcDo0vnFbQmJ59yejIKWSu1NZdwm7B3PhnuPglq0XjBH
A4HefbkNWe6jYJF2MbFzM+6Pkhr3d+dRSLoo6VWC14vb5o+2BrajYH0+kf8r
Xr/eqgL5qrdGQaft2IzFEcxjnvNrrluMwoKLlP8zNuwfdt9M7TIZBSdYNP+c
SqAHXfLUDyPcn9nWdbXXcH/3KVA39EZhZs8dtxUaBDoSfzWQ7ewoMGNuG9IO
EOiYYbidp9YomE3vYAoEE6jKdr3UAozC7VPBq9Px/LrIK4UHHhmFP2VGNs97
8PyPPpNhVxyF3aoHPa9j/xCNePl45EeBL2n+990UAj38kWT0QHIUmpkGX05g
Pdm04vXzuzL4+46PzR/xJ5D97YtNwztGYfO7H3TzIAKdZTe/8UNgFAxt1rl+
wPE0+1PTe3LLKGhabdWxZBJIlwNOGXKPguKyu9Ghu0kkwqbXc4VtFOhWY6xB
2E8eM6C/v7hmFN6vCJ+Rv0wijdFG6aJ/I+AQ7FF+0J5Eglec5Ut+jQBfDQgz
vUm0Z+Mee6HpEdi/yyGrJYVEEYt3tYUmRkDP0XjD7jYS/RX/6eY4NLLEn+p2
atIOfSMgxHZzeuwshS4fdOdOyxuBisSQlSfUKETbNqP5rXNkaT+y4Nns0i/N
I9Arob/2vC+Fms3yt/JUjYBCydeTZjEUehIs3ChQNwLLiiXHU99RSDrTcItl
2QhYGO+dN4+gkC4lI3WpcATuCE0Y22GetLw5LSgfPQK/gmryBPH3mbhNNbpH
jMBL/3PmsVrYj+pMSV0PHYGdiml+PhSF8nKOfsl9NgIFD6yfAuYBsWOTY+8y
cH926a4Mwzx5VrnFZDDu/8en8fRa4XTyCOw+GvSUif1r0XI52rvHI9BTbbHL
HfOkk9ZJk/H7I1CmKSrs+45Ei3Qv5Va3EUj23P5Z0IdENu190YLOIzDyncPU
Bfs5ZS1PFhP7EThrk+4h3kWg946fvTVsRpbyq3KHetkT8xEQjTgwfdCHQK6r
noinnR8BgSO9XI7yBFomzLGjXmdk6X2llwPqm7k0R5b2A+ScrzzAPD0Cwv7/
/mQtSqPyHT/+fLs8svT+nTKz4K/m4RFI4pcIrj1BoO40SS8plRFQ7w9On0gn
0NiXg8eu7BuBR+MHktmlSHRj2mpZhNwINCduunf8MYk+FRxNaSBHQNJ1h11L
Ls6fsJS0ZPERmI1/Z+X5k0RpfKx76dtHIHqTjt0nHgod9exN3cI/AqWuBcVX
jbA/0cvWmNg0Agv3VvneSaBQAm2uRY99BJRXnr98kEGhw6GHODxXjED5ezmu
fMxz55zfh23nwv2Z/JxigvV/G7vFllOLw3BodD/33ucUCmoP5PecGwaxcs0z
zroUWvj4ZH3q1DAQGYLfndfgfNjJFbq+YhiOmFwL/YX9Ua9RMJ/Bp2HwyU6J
ENxMIT4r2V754mGIM4sbr9lJoc7YqDb1mmGgzDOWRU6T6OyxBpU72cMQKCEj
uhnXV4+PQpWlDcPg/e/fQXbMy0E3IdF1dBi0H5sV1Zbi+hOcJlLfMww/H27g
BX8SHdoSf/09YxjkuM/U1YZgP+48U/67bRiSCc9Xv7FeRSk80n35YRgmt+/j
FsPrj7eQ5YhxwjDsVJPZnLL1v+dPKUGXmGHo2lVLhGfheuDygvbi9TBwJOh6
a3kQ6OQBml/282FY7rZ5q6s9gRb9X0rUBw6D9QkNKd1kAg3JXE0Y8x2G+bsy
C+O4Xl1ZViK5/Pow9D9ZafN9NYlqoxSJ8VvDUPL5qYs3zk/D+M2JCneHQUq5
/kI11rtK7kfWQveGl5737rUwjol7MAzB6sW/Nuwj0UL90FoeSzw+g+th5v3Y
vygfbpe8MgyF2qfDSlr/e7/b5qmi8TA0h2puleskULD6grjW2WFwuLGC0P1J
oEDuB7GGesPgOr5HwG2MQAjFrLHUGgbpexJrw+oJJG0wcfr2keGl98c1In/d
94Thpeepv+8wfv50/zB8F+FgOe5EIHf5VP+w3cPQKbyt57oNgVaNel+Loobh
G9v11/6+2H8JO0q+lxheOi8614m3MkV4GKZccpeN4fUnceqfVib/MERqPy0f
uEmg8E70IXfzMEzcdlot+N95C3+nZj9y4fjFaf6U8iZQ4jUJoQL2YRhMfjNr
M06gxkZp8wzGEMi3m71/aIr9vdlJ1VXtQ8Aw3BD/QpBEDz5JfXndMLQUv4kP
yfHJPUOwb02vuL8KiWJuZi/PHR2CWmpU6S6uJxXBM2KFK4aBaxfHtW24ngdk
MtcWLg5BxFe70jDMN5OlSU2f54aAnJbe0vKDRNNen10+Tg0BH01q1G8A80vH
w3ha0RAciM5ygVkSjfF9kGr8OATTIhIsli0k2rGxn3XsyxDY54blVpWRaK/0
rgOz1UMwfPxGTxzmkX6eqvyc1CHYvv/dx0uKuB6Ijd4vzxoCF/0x28p7JJqf
dqlfnTAE1L3dawx4SPSnu7Bm7u0QZG54J3lpI77/nUsxjFdD4Fx4X+rJGszj
jAn9+rAhUPI+i/Tx+DXS5KW3BQ6B23K+KFU/Eq0Krn3J7jsEA6I8B192kohN
bj3jh/cQ3LcxywjcS6GtY9l/ipyHYIKh98vElkKuKZ5sHe5DsOW6xWISbo+u
FbrNfguPN6hQqGU7hWY7xMkJmyE4nX6iqy6dRJtT3ubUmQ8t7de5ynwHb+Zl
PP5moytNuD+2+XGH5s4PwcdXgbM7lUmUeiP4QsvpITi50SSsZBuJXC/IaWfr
DMFZUYMjZTifYy+t4w7WGIKdxuoeXz8R6O/wzoF6tSEwDug5l4D9Y1PUmssp
ykPA8b5XyR779f2P31gmbhuCX/ONGh/EMN95icv5sgzBmdOwVvy/80YNTbUf
rh2CruaiiAzM20e/p23J3jgER732JIuW4fpPsz15btUQdMad9xGbwN+3V3HS
nW8IrsiOJa3C6ye8oC754d4h8Hy3Oj5VlUT1QexqpbJDcMvWa8VZQxIl8ygd
iSCGIDy8PGHaCPtdbhZee7EhkPUvzB08gXmhNYFhuDAI72TOPnLB+UbueHue
r2sQtG/U+AvFkah09X5vXfogxDIeBQ+1k+jOZJ6IyPAguLTC2fb2/3jVdO7s
5CBM37719VIRiUK2E2aSM4MgrF6oRCaSiN2p+A+teRB0U2Nr5/D3u9u5cayp
GwSPuW4ZYX5cj1RWnqz9OggSFjpp+jL4ftk95HzpIPAG+FvQ5UnUyjxTSMsd
BPYP4msigzDvHOXg/1gwCIy7ExWZOF9tHxjpvUkfhN8x9+cJ3B/ZBa6Fi+GD
8JoYcDLBPOwoZ1dQmjQIA88U7Now769Y5/PDM3YQ1pWE1T+XpJDA2wzxmKhB
IGL2apVLUyh/hXxZrfEgZKpKlWw4Q6FnVybKOK4NgrfhNOPjLQrV7mfr+Xhl
EH6mlN146UchpZdzgf1nB6FU4IqTcA+J3r1wf/Xz+iDYCglXCLJTaJfju2m3
YNy/CZ3Mpq8kOnDb2Xyf3yCkXKJXzl8lkcRImejph4PQLNw94ID599Yd3292
noOgsjwqUnOYQB77AjLEXQbhM/dNZU583fOYj4Dq7UGAs2v4pL1IlKJezhOo
h/uXpSNbYonjp5wb+VZrEE6VDY7PcpAo9+O/dZlHBmGRe/rmNDuJqnpv/DKG
Qbh2JYLVRJpEH7P1hK33D4LgGUeeUCBRdNIRGefdgxD2mzXOQgfHcwrubqMG
wSexyKFMlkRQKasiLYHzJR1VNeP+XNg93b9beBBO6wRtjsb5n7vr1LPmrYNA
sRlLGT8lUOcZVmG3dYNw1dBWg/Mwrse/PpNeqweX9k+87u8w0rVpEM7FPKZf
PY/zOUNsq8/yQfjgGfEx5RmB6s/WDj36MwBWd29yrcD+o8BV//mT2QFoKXZf
exPr0+2De4rEmANL5+P+3D0uKDYyAM+3/9EVyCORX9UuQ5H+Aei5zNtV04jr
6VXfBbnCAXj8lXPrw2ISJd1+0JDXNQBhm7P0fddTyICxZ0dC1QAEnuLXO4bz
4U2EofuHugFwmtL46nSYQpMluvlZLQNw2+RhxKVD2E+aFqQplQ2A456Xk8Fj
JFr2uVNYKm8AQtklj0SEk8ji5EFRoYwBoFh98lKdcf4biFu8ih2AvZ7fHC9h
3jI8blOckDQAK+q7lIxwfXrvETXkFzUATZ8GJBRWkOh+irWae/gAyL9ubSvC
ftPXl9/JNngA/Gl3jjxuJpBsuYmNxsMBSA8z5OXGfmHYW/mBkd8A7LB+56uV
h+tHSqBJ9b0BYL9NThXgNhH2YSDn7gC8d/NKiPzv/PhjzofeOAzA+TNCjatJ
Enkx7jo8uj4Af4rmjapdSPTW4Ji7neUAqI3fHf+O13fWJvvNSsYD0PmF3d9I
mEINA5NRQmcHwKyMtf4+jl/80WsXz1wZAJaf21UyF7CeRdqysOgNgO8ug6Kz
8SQKezCQ46w5AGWZ/pYSx/D6l31cVE0MQIhDTkDUAVwP7Zq4efYNwPW6mRj3
nSQKL33i8UN2YOn3dh16u8M+lYGl85zzfbiSzx0eAAXxm07+XCTaVGHUGCc2
AAHT9gI6OH6vvreqs64dAKn7XAd/ZhPo8O5DP2U2DsCb550d6zBv+11KtjHg
GwDtjPwDxU8IZHzKP9dj2wCcoLRNnDMItHZmwaZ15QAs+/GQFP9HoO3b9pgk
LhtYet9a25tbzPU3A66c7XDJsiNR4Vbe7BPTDPDPXXyoifXtlEa16uggA4Lu
qPtcfUGirX4NmwQnGHDo7Vnbdtx2FbZYv6OPAfoHhCLNcf5G3Fk2Mt7BAN1p
7ba9VVi/0539c5sYS8//bBI1Wub5nQFTbQmRjccpNN+784BmJQPORb3fG3iF
Qo/zXQ5xlzDgrLubHzqC/ZDC1w0tnxhgdGzA1ZuFQteDI5NeZjPAKnXdUZYK
EvMym2JVGAPMdftU+DGProxeVBROYIDADzH/PlyfhhXKozlfM8ArJiA5X49E
iTeCZPreMkBl7pgLF25P1HlxXfzAAM+ilO64l1hPJn6FPQxgwEGx3OFHdFz/
y6U+HX7CgO2mv0PaD1BoeTFf7L/7DHB+fkjqoRWFEnP8HUTdGRD5+FmeqjWF
xpxD/nY6MWAmkC5+4TSFijdMaQXfZMCOaq0/wbieFlwXN9a0ZsBjtT7rmhys
bxt7Y66ZMSBjsW7NL5xPef03E16dYCydLxDbvMX++DEGbHA++luXjUQv1e9O
3TvJAN8XOR8W8XyyZ7voCV1igLXpHWoEXw/yuo9qzzFg3HTR6B1eH/fqFP/8
UmWAz5uL5VJY/6Pu3NLcoMSAjyyl2rwVBFox5WzxWZ4B++TVfNs/E+jq30dH
zGUY4LZR5EIb9lcJNmK9XJIM+HOHklTqINBUvkywyA7G0vvu9OMMVMmP57fv
Qu0vX6xvZzMuC7MzgFX47WtJrCfBmjHDblw4Pi+fP7lGw/Nh9iHBdjMDXss+
cwrLx+vLwzikeDkDQnTN/K6kkujHBzmj73/64TiLpFomzr+yyz6hTsx+yGYo
7balcP2+odCV3dUP9XesmEzMZ7s6erhP1fWD9w3e+A0rsb7MPr6q09IPpqeF
Epl4/USZNNBS6f3QkZwY14B5xrycv2fTSD/4vCz9JI6vJ0Qd5red7QcPu5xb
n3C+0CyGhEa+9sN0SYD7RU0Snf5h6jxW2g9Pxd2c0j+S6ElI9sfnkf1g/luy
7ss37I9jZCtEX/SDTrlWdCrmNcY/DZ/UwH448n7TonUl5rWK97pxvv1L+4V1
rM2fffWgH/STd7XWTmH/Zb2b3aOgH0KvWV/au4tC3GtitTfk9oO/8mG+b88o
ZGmcup07vR9i9Vv+rQuikLIyd/26pH5wuqjImXiDQr+UXl5+9a4fItemNZQK
UOhW411Vvjv9wBK+WkF+I4UazeXmRD36odxv0dsGX++qWsh5Zd8PxajcOKwX
5/dnyp/bvB+83Kq8VCJI9PrY22h/m3540fal0TADzwfLWT6Wy/3AVrtyfS7m
e+H6ja6Thv1gPy8SkfIIj39TXpTNqX4QlQ2P6vMhUcl12TfntPuhSPr1yY7/
9i+NPrhym0I/vLrd62tznERb3v+q26vUD5586+604Hq5U3x/bcHBflDqVbeK
0yfRpb8D8k3H+iHug2SNPtbH/BNT69l29sPp5a/HRm6SyHRL2NSwZD9sN9ya
7eZOoospu2jGO3A8Xtx5vg3ny22XdWdUBfohwJj1+xFcD2SW3Y8S5ukHwa4c
oWuPMQ+21GUFcPVDlPSKvvZYPP6VcYF27P1Q4BW1wz+XRPabMw5pr+iH1AuJ
3G9jSGQX6VkmvUgHw/chVuq6WD8OsVudb6HD/p4tjxJwf+tcJk8vr6KD6+W4
zH+BJBoymHHaWUeH4sbLugu4HgbIf5k0KaXDuUBe2mNb7FfUXp/cXUCHI/vX
t8xjv5qWzuu9PJcOW1mz373D+dhUEkU+6KJDpZGPukEN5odr+Xkhs3T4JTNQ
ETFIIG9jgarrTDoo31GtF3Qj0PIdsgWpdDqoKx5+WGRNINvcrmT1EToM/rlV
2aSF9WJCQOdVIh0WMo5/5jpIoNPsJVfnYugQ428deW5cGg1fFcwoek0HmkCK
2k2mNFosKKh6/Jy+tF+E16adqfqBdIguMGgrsCRQSV+hV20aHb6F541KxBDI
bPusEZ8vHXIuWFZtC8H9o7/b/NadDhWR6cmd2L/qnXnZ2O1NB5mvhV8vv8B+
OiVim5kzHaRy7v31/e//U7pqBVk36eA3aJT3AfvrvYyzh25b02HNhrrGw5ew
vq6mP1Uwo8MJNp2b53D+UR7Xon5epMM2OQme/Xi+dlfYO384R4cdc7ST3V9I
9G3zfV7rk3RQGbxoaYv1W5ysju05SgdG7sedXy5R6MPp7a7iJ/B8bYp/OoD5
p2l6XUiYKh2eBpSMd8lT6H6x5TFtRTok7Cn60dOF9fuj/I9rEnTwZik64YPz
6YSm82wORYchgblYXhMS9V24/HmFPB3qnr//rf0Q834kzwcBYTqU2xx89hf7
2S3hb3ZWb6WDE43GVNWnELnCwM5lE/4+R6fwdeEUchv+eEN6HR3+5H9v6EzD
+rBeZ3fLKjqkrdtnEfOdQjlTgZmeLHQwytf5l8Ok0Pr81TPkQh90vGax7mZQ
aM1x2emm6T5oQUerXOMppKfyNM11og/W/U4uqbpIofqOLSefD/UBVWSxMawD
+9kFm2jlvj7wqwxue4X94scYj5Tejj4Ict+1LyCFQB0Hv9++39QH6h+U1qIL
BCqdav0t9r0PBNTUTa01sX/zFlAsr+gDuUvSrncuYb/oySt/tbgPWGe2H6+w
J9DmbVpDyz/1gRPPmcWbdzEvq8mdiczqW9p/l9VXy1UxtQ92HnPZKR+E8+OP
yjWN+D4oL6i+PZZJoF+r3vL1ReP+N3g+y8D50BaS5+Ec0Qc2ITcLtmJe0eX8
95ortA/43GKrN57DftvsYhffsz6o2IUeTF4m0cwTDo/kR33gvIbnzR2sp25W
l1vBqw8MvHs9j2K+uiHXw6h16YNhySkZfdx2KPgbd+l2H2wD5RVpB/H67VD8
Y2rXB2fspQ5w3iPRuGCt8g/LPrxeA4czMI8327nLuV3B8Rd8dKC9lUT9t4rb
Vhv3gU+uuN3QPIk0q6JtV5/tA6m37fl1chQStrkc8Ey3D2JEzDPPYB5/aSp5
dYsmbl/Xd7mAeejlervhCLU+4LH86XG7FtcX+tWcMOU+SD1X+74/mETXA8Uy
tu7tA0H6SkN/zN87B5uNI3b1wczH7C+i2B//NN8TFiTdB2Nx3dY9IiT6fOt8
9gZRPN+fWe7P9BLIUofm+Uywb+n9nx85piL3t+D5nQ0W2K9KINUXJy//W98H
f/e2WDuvJNCElXssbbEXco+2mOhXSqP1u+M51KZ6l36/FV3c65Q90gsbmx0v
a9GkkYmo6tGauV7Q5bC1vNYljV56XdO2ZO0DnbDCzNqv0uhv5FotZ44+0N1i
uD6NLo2SV0faR/X3QvVWgTVTq7F/SrLU5O7uXTqvbdeXzxUeLb1L+xe3rbrG
b17XCya3DxQtx+Pp4O381/C1F9I5VoV/U8B8aXRwMKe0F2oMuhpNHpBon6fb
Rc3EXjC6+HLf9m6svzS0c0dBLwTFWmiPtWA9V7Q5ZZXWC+/XbVShYx7zhJ/x
K3J74fQr50DdtRQ66tFlmRrTC+GRkZl7E0j0XJndeiKsF6wCHr2owP6/T6Zr
he/rXgjgUPvyyJVEI26sQRUBvXA8obf2LkGiGCn6GcknvRBpcZoWg/3l84b+
1cu8e0EqUeW8Hub9t9vOiRu74fEZCczeW0aiMymWl+WceiFE/Gvtb8xzvTyn
mn1v9ILFM7HyjuU4v947P79ohe+nndgUu5pENjaz8T4XeoGLUv/yGPPe0NZc
kxzTXih3d3OKnycQD1d1wRmDXtjMz5zLkiFRZMqngAS9Xvj9WMmp1xTrS3K2
pKNWL+S7mrDW3cLjUS00CVTphTZ7xwu/72I/uS1Gq+JwL3h+Cjoj7E8iBWv3
BtreXmj+uH+BEUWi9Ec/17sK9YLYAdPH8bMkWsuWY/Fethe27z9RHYn94xqL
M1O7xXrhmQel6rCVQivp4hW2RC+YNQ0LLROi0LTsoUzg7YXLX7aLL2D+XdOg
wP+Auxe+MjY+UcH8YMR/jI+NrRcqYj9P9WP//igubM/RNb1AP6sbffQMzu/s
DbeO/aXBbPqufR54Pvbeq6haMU+DrT+ng6axvqpG6w8XTNHA5kaFdhpuoyGF
b06jNJAoDFh4dQGv59ODnEZ1NFDvOGHxF6//puv8MiKtNFj7oSrMpZZAldEW
PDbdNKjRbjPvbCKQlHhgcVY/DbjDxPfVyJPoQoh9IFcVDaIe3I0uDSCR9Euj
9qJSGpQ+Pi5w9xeJNuod1onNoUHEtYy7V3gpVHvoTcTsZxo8tAsS8cN+829P
UfGpNBoYxA9O6WA+nq1+OcuSSFs67yNY9F+a830ayH03fntCC+tbpmphlCsN
zGJLpJVPkOiuhsBlhh1u1z63NOnD9XW9UpX3NRo0CbVkPM0n0GRktQYVQIMt
/BJK6QUEyhHeJ+cdRoPOlUqh96MI5FD4q7XjFQ3eBgiLHsT8vztccVvjYxo8
/XbO6Rrm42PVASqyMTQ4WM3TnYv9R6e9erqaIw2E2I8aeOzA+nqlOJdHkwb5
esfpGzD/j65R6+rcg+MzrbLtpDGJ5vddKz2qjL//3kP1GVy/Xu8oMElVowG1
6KNuideLflpp0o1dNGAZ3r33WSWB7qv/LnfRpcHebdS2ujoCcdcMPe09QwMV
5cK59EACHTIQYYqa0kD+hivxN4BAJ96uX3fEmAZdjSUWdzwJ9HzymhybNA3a
iLXSWkcJ5KScZhMmQoMNmvsuNa/AfFG04YKkIA3mowRFt3ATaFafY0UuDw3e
D+xU4T9NIF3HDUZH19NA8lxS0qkszDPt6yoHRnvgS+kFLrUEAk1nP1Cd7e4B
9vm4yz9CCeTc9pFvRX0PpBQWcvlif7Sm+vXJtWU9UJG8+qpsDx7PWMP5U+w0
4FSUc9UdJdCVigoW2nIaWB2wepT4A8d705XMxvkeMOtIPBaE/ViK47bxTbk9
0Mzx48GdjSTq4aMYfIk9cGPKyldghkCLJ7IVBV73wKzfuY5AfP+nT5M4BAJ7
YPOeNs7aLgJl93Ie5/PugX3W5f8CfhPoTm/Z4EanHhCalnYwViKRb2hJ5xqr
Hgg/v5V3B+apsctTUiwXemCm0vVniBeJTi7sr/mp2wNbTr1IyggnUa6dTwVd
rQcuzrtR0tjPlIiVbKnbg/t70a3jdTOJZBua8j9K9YCSssizcKxfuVHb5h9y
9YAnbYipjvnm8oO4D28FeqBn3RZO6iSFNraIPrNa3gNDd2PqzbSwv9m2fbX2
bDeQEU98xAkKlQ2ssieGu6F2o8RslySFeBIOESs7u4GtMmf8wSbsn+0zd3bX
dIO744PKXKyvKpGq7hlF3SA3ryutM4rXf2sl74PMbvj6ew8/Xw32K3xyC6fj
usFAoyXaCvt5wwYpCYmX3cDDfT3r+FESPWNqHC853g0H3xHne3F9KI57kOcK
3TCkfIx7BOv9r943VxXkuuGilkP9pCWJvMxkdzLFuuHs4OuzV/Hfu/7g2rbS
sBu0Ppfd99lNImOz6Oqpp93QpdS3k4eVRFWNe0fc7LshpHNHZVch5t2FtLw8
j24QuLNseewXnK8eGy4cNOsGzV2/OUaHCGRuwuUbzdsNFSpfj0VvJRGLmOzc
38UusLyR2kgrJdBDj1V5qVNdcOOtwsEZBoGk394Q1V/TDSKlOTRv/PdPOFt3
n+3vgq4rVZu7sL/iNXrLWGjugqxdgQ4e8SSydhi+ffhzFzQbMUvzskhkGQzV
ryq74MlaGf/7jSTaFPx9kZbaBUO5cz8m8fiul/Dn3InugjB9+UsJLHi+DRze
wt2uJV43e3dKpMW2CzY1icqtwryYXOK5I+VhF2Q0BUYGxxPotoB3LV9oF9gt
prP6fMbrj+/UniuXu6D1RlT1nwYCSS7W3ho72QV7L2RM+E8RSCykSs/lWBec
6lTpejeH/Y5TDP8yxS74Jfbb6MUwgayeXhx/THXBe2nPNPEq3P4mrsK+vQuq
biYEfUv47/n6V5n3N3QB89y9u0GvCfThb1XDqpU4XsuPdAXj+L1dZv3Vdb4T
/IT2KB6VwHwYu9iwMNoJDR7dpn1v8HjltY5ad3fCNxEpn8ANWP93W7a21XZC
b/L63cK22B+Ih2zTLe0Eo5I3SiuSKHQAHojnZnfCE677oZ+qMb+3PD8hldAJ
Fq+fn+b9QqGs+obSJxGdwM4b16fzkEI7wsO/zPl3gvbItz/yOL9HHlvNlYl3
wmPedJlIzOc9V+Q/2O7uhDJfj3txmA/n9DXOc/J1QiyfqSM3bh9VGbG4wNkJ
C4b743L6sT8+bCoc+bcDCllar8Y8+G9/+tfvdhzsBIEU47Tdt7G+JT9LOOXZ
ueRvedka73906AS5FfTxfThfk3vsXW6d74TvK+WnXrgTKPwrs2aDRSfY6T+V
S/iE50NTUKr8RCfExFc+v47z1XC54NToVAdstPY0ZB7B+lZPKe1hdICnUfLo
R2nsX70XHti2dIA5Y5XxiByJ1DyyfDO+doDqpe/f36mTSJ3rdrfYhw5wr+Io
QWpY7xRvCg986oCPRcdVOHT/29/r1forbzvg66UA6yhNzBs7tSSehnRgHtNx
YFuD87VvP0fZww6IZFlcHfqVQFFibBeG73RAC1fHqTOYD/MUb49pXe5Y2p+F
2qk9zm/bAU/fKXtXPCNQd9yLD+YnO0BjrJz2qptAIxLepwOPdsB3J2Hukf1Y
/1eKmOfv74AX516puVng9X3jWn8P2QFvoieuhfv8x5fFB5lCHeDCr9j+KYRE
lTczuim2DrC8nRJTj/2gwsVlRus3dIAf8epEGvanbN2RQQpz7bBP9JuCwBUS
WSyEJJ0YaYePKt9yH+Hx5qeXS1/paofU/mdHEzG/mi+4kSbf2yEqpK2zVJJE
se/kFG8Wt0NIRB62eCR6ZUaLd89qBxZ0xccY88jGXJ9xh7h2uHy5YHtEGYES
kkYZruHtcLztesToGwIhvhXKXk/bodHYUVvyCY5H2qcpb4/2pedzaYffnbQw
aIewDeW5zboEWiY4V2pztX1pvytVt5UrHti3w31G0M7dWE9r6wKVLmm1Lz1P
GTCtsQOU26Gb8WmzxhYSTS0kecjuagcd3xiN0f/OIz05Ly8s0g6+g90PhRGJ
rmhvVlnH0w7HFo3U8rFfqg0cC59f3Q4ZSiqLWu0kahcw06QttAFX4nW11RUk
Uj5gqVU20QbL/2rLnMHx1ehSSfWntcETj1nOf9r/7c/4nOd6Qxuun3TNVaok
stLd/E2rvA38wtjXWu0jkQAjvEYsrw26pB0z/HaSqL6IU3AxsQ3khf3ERMVI
1LZRO7vudRvsvzqdn7ONRIEGB1+8DWiD4sO/PokvEMhDS0/lnFcbnJWvsOud
JFDZC3lHsdttS+er8Mmcnp2waIMNcXxrd+N6fyktMD/rfBs8K1+3xQDnUxzf
t2Jn7TbQsDodzx5EIo/4nrVKB9vgjLtq5ZfG/87vTQj/tRuPd/zZh+1cFDLQ
7bhly9cGba6Ta9eyUeh+GYdFlngbdBpzNKXj62N/5wpFOdtgmZzhC6CRaPPh
d/afFlvBLHlrlEMR5meFJrSV3grCi48f6hWSyP+HO+ejqVZwcnwacb6ARB9W
WxSUNbWCh7C7xqV8XP9yradtKlrB08ZC1+8p9kN7JNiyk1uBxVnTURfr3ZYz
+Zc3fmyF1x4yjp2YF47PPOw6HdUK2RJNc7cxz52yzxz+EdgKpofLz3KvoNB8
o6vkU2/cfrcqTt+RQsqeuc9FnVrhr8am9/OVFBIS37s/71ortLfFpHCM4XqX
XLVay7gV4nLGP/0ZpZCV+rGV7TqtEC8ya/riB4VUWEva1+1phWk7G8dI/Hmp
+Ffq3mqtcFOnse3kf793zJ4NC5FsBevqOs3iKQqxFki78vHj+/V65k8148+3
r34SvrYVrq2fK7zwgkIOKwsLeZe1gpvywyv0PbgeH+DbGvyjBR41v8k4hHmm
cOLIi5+pLXA7Yr2KcT2JlhuN/Z2ubIEe00eSpx0wr7YwFD1bcJuro+bqNRIJ
pvU952S0QFFAD5tyHPbjEoV0008tsG/6ukpgBPYre57+Mo5uAbNmj/zr2F9e
+bPesSy4Bdhn9S96baaQqmDYemmfFggV92NRU6DQ4+T+0ifOLbCNYbViO27b
zX8OHLFqgdXth5tfiFFI233A6eiFFghM7978VZZCZq9a6ov1WuC9RwC5+yiF
9o3xPrbe0wLXR9u3N6hSyM9puyjf4RbQD6xxeHaWQk+N7q34LNkCm7Na3Qr5
KPToEp8/B38LjKwYEKruJZFSUSRxei3u3wtup/VhJMruPhBbtKwFSnf/IGel
SEQspkWu/NkMQWZVJbbFBEr6ZR6rzmiG79UbTrNfI9ABu615Pi3NMJ5kK1Cp
R6BzPdUsIp+bwW1dX1voeQLd6kp9Ofy1GfIokaogDQK5P5K1O5faDKd9OP9c
DSfQJtUghu+bZlAYqUq9/t/+Fk37hPqDm8Hw+p9zzzxIVPDpWhe3TzOY59Ty
78T6F23VHnnAuRmCq+OaCnZRqHmFsqmpFf771YEjj0wopLe2i/bhQjNsSZ9q
fXmeQueWGTHqdZtBUfZweLgyhY6zsQ5NHWoGg7qFx4qCFDL5YWK4Z08zhAjs
avLioVC9f1eIjmQz+M2qLxvD9SpTQijfj78ZBlNsZVmdMS98fiEVvRa3Vz5k
GSFJ1KU7+Cz9XxM41Bq5vG7B9Tkwc6JwqgnecMVxrcH+q+IvjZrub4L3GT8H
xUsIdF316Avpr02QYFpvtbeGQJe8SrIWmpvgiSZ/1wbsx7bE2Ly2etAErnup
rFTMS5+61oXpvWmCTg+OE4FeBFKsd6VLpzRB5g728o4HBCKHzh0lPzVBMlff
Qmc0gUyTB/Q0g5pAVHpRs+cDgWYi2G5ecGqC2lM1Qc3Y3033Se3UvtYE7Yd3
Sc4dxv4s6aSiuXETyCvOndqIeSFpJHq1nk4T5BI/+qQwby/ezLyrLt8E8zYF
Iw46FDKayXWT52sC27+tHyrvUqhgVvTVGYkmeH43Za76NoU2tyq/MT3UBEGm
jaSiFPb/ccaiypxNoO9UcKgN56t33N9Vm/82gsdhtR/FC9hfvFKvHJ5sBN6x
mb1sGZh/X7UmDzY1gvPmA8neqSR6Z/Zl7UhfI9j6zOwMTMR6Gq3+IONLI8Sb
ZPntSiPRm2D2vS55jUvnA2UdSzS/kdQIukkFz9P7SFS6zm61/OtGcLc8TX/f
gXkicc17kYBGSNB89YvxiURfbjkrf3VohHR3+ZQZOxLJ3LaLWH+/EYx0uOXa
sP7w1X17kWbRCHq3Wcvj8foo9pkTvGrYCG0cm0w0h0kkNGPTdfREI5Bu9t58
uhTaPnkXplUa4dQO1dJSHwptQ2rGtbKN4CkyUZYbSyHj8skwR5FGWPV8O60/
mkJbeWS5tHkaIWDrW9FPOF+jYLhWmL0RTHayFs6OYT39uma48HcD/Hl1nc3K
mkQLm9kXn443QMZh10ecG0ik+SSCJtbTAPZ7qtYf3EyiGJe5gxN1DTDRveu+
/i7Mh/K/BjNKG0DuSem45S1c/70tQw5lN0CiV8Ne2ldc3zRd7y2PbwBa+5dK
G8yb5uo5KYUvG6B+Fx/3BTyfeZcUth552gCXp4ZLXHA95SmXePDHvQGsxK8d
nvSlkChv3s60mw2w/veOn/ex/8sXvHiCMm2A8m+U+hReT+ksB2U6zzTAjZDl
TpfxenqRsVvjoUYDZKcOZVtgf2JVw7p2QbEBKga4BS2jsd4P1Z19QzXAJdGb
N4/jeM9Ub207vL0BytQMW+hOJGIdW743hbsBYj/NRJjbkIgj9A1Ni7UBXM3z
hE9bYX7btP3zwGw93D4nTXuI/S19Xq/KbbgeEvhWfz3tietbsnxsR3s9vA69
mLgvEOuzV3q9TXU9rHlnPPkziUTBt1WoxcJ64IkQoclhfnnAFZ/5KL0e+/3Q
0B9Yf523FJtvfFcPa2NuPuCnsP7deRZ4KbQeAv2N6adeUihJ8uTZ/of1YOj6
cDC6F9fvvRsPX71bDzU+Zc/2DFNoheGrs3Sberj17HuadyGFep+U1IhcrIdv
uz9t7HxCoTsoffilXj1sWGlfEo/1tPpSmgT34Xq4WXfM8Q1uH/j30MdrTz2o
ZBfOF1zB9c9i+eqfkvXwtEHGtlCEQoExjLiL/PWQ0VFc7pKH/antd86nnPWw
zyxj5z89nB+mETE//9aBoUCBMjsXiTx/sxucnaqDjf5jMlaYt8fYusRy6XXw
9WvkFwVREjkFtXHyNNfBkbGnRalXSZTAKF5zo6IO6ulyLxQxf+y7dV64Mr8O
Ar8rGGWJU6gzdX4jLbEOlIsH4g97UqjjCCV471kdnH3y9ed8G4VW9ZQdqPas
Axmmfhy9COtRhCSX3Os6uL640PL3O4U2VH+w5nGog/bnq3ZZYv+0LjYx0ci8
DgxuScrVKFLo9i77+chzdeCgdGLlzS94PkxK9GhadaCUc+bfGhMSKV4+my2o
UgfZiWpr/Dix/9BMd92ysw5MFGrefasmkK4KI1VbuA6GLpouxmJ+ztIZ31q6
qQ72H5V8uBLXb+r2b8lMtjrorG+oyMK8/eOmlk3fXC3ca1aMUOgg0N2KjVlr
R2ohl+XqTDH2r88+r/6n0FkLn4rOildgvpQr7tY4X1MLIc+OLX44Q6JWW41g
V1QLsecutM9cJtFXr4XOiPRaeLmrJC7G7b98j92RF1ML6dP/uDIDSDQZ/+dK
fWgtGOScknDF9ax1ISly6GEttJW/nhNZQ6EFBfPGhTu1YJ9oLPYL15vQrldK
Inq1ELCuJ+SxBYU2Thw7Jq1WC5fcr2V4GFPIKen8ERmFWjhxJXTo9WMKnWps
W8Zpgz9vTm++4IF563a6CN/FWqD8J18c9aPQV2Uv+Z0StRCRU8ly4Q+Frg+8
vZ1N+w6d3RofpvbIoKgB840UXy3sm9ljOWQpgxqUIrVsOWvBMuJMy34vGbRe
TOjltz/fgWe55rP7+LroeX6J8NLvsPLViZInLDLIepL1j7bvd/gae+iKRgWF
hs7VxDu+/w452nE2VA2FQozY+LfbfYcnfCnzwwjryeZNrKMnv0O9e+feq6kU
ivtsn5m69ztc8DrMXhxEoUjpq1K2/N+BO1Cyztjzv/1eJC6J/6uBix+NYzMx
/8w9mDvd2lcDorKmtHOcFPr4WztsS2UNSIRtHuDPwvHn3BTyOakG0p+PTXEb
kqjPplHD+FkN1NXYGE3wkejELsHqR2drwMqr+s5vOoHktpanz9rXwAF9z1P7
xgkUfe/84m7hGtDW8X6rjf1d3dSaUB6lGjCUGfwZjv3xwIGMlEzWGrijO2LV
g/1699/rK3cOVcMXr/ESFewPdqZ+YnlbVQ2skncOxj3H/lG3+NX61GqQED1f
N/WCRDfU37zhDqmGe8V/GWmPSLTN+u4ae6dqyNtmPx2D651YGVpbc74a6DtD
RgyARN+9VzrW13wDmNrCUoz14Yuvacm7zG8gOvStRZogkWRH4LsdUA11nJ/X
Ck4QSF8hr5dTrBqe50/3X6nF+e0/K3t6dTVQXCbc8vUEWslqzBU2+g3OiST/
ejNEIJP4jYaLd77B8lHlrtJkApVoEVe3Xfi2dP5MJhx70aH2DYp0Dnx8H/Pf
eb4t1Y1h30AwYfsb978E2iN2QnZK/BsU9raN1wiSaJ3Ua1jG8Q3z+/WgDKzP
JzS+v5Bzq4Kot2Eqk86Ylw3e+y2qVYHTut3PeXH9U/+meoX/chXsFtX42HkB
52v7AFfk8yoI45F+7YTrSX7J4aLV41WwzO85tQrr7zmT/ZnJ9VXQY3mS5/AA
rscjuUnxWVXg73LdJ/wX1uvyW8/dpapAS+vU8/NfKFT+xJLvNGcVnFjg/h+i
vjsey+//3x5RSpSKSiK5t5URFzJKZSYjIUqJEiWjoT2UolApFElWkT3Py97J
lhDJ3vO+7d/1/j5+3Z8/X49zrjNfr+fr+Tz3fZ3L3FiLDMVv/aYlxisxjuAj
6d+ekmH8T8O94xmVmM2ZEwe0g8jQord8JqixEttY9GS4N44Mz64vTm8IrcT0
9A94h2Fk8FX5nHHJtxLPX2USAmMkWGZ9arXDvhITcapc8yKKBHeu79ASkqnE
fL/f7xbcT4J33z2ybjZWYBW/1qzL1CfBn35MPTWrAuNsIBHe4PN/qi5Z9/Vm
BUbjUWn08yDB0i6PiwrvKrD+l4/1PfB4SIhOu+quV4ntXaqaqcTru0kpB09M
VmA2f9uNl3C+e4WNx/ArfyXz/sdGW02LBocKTKt4mZ2M64fOoJtpGrp4++3L
YqkbSfAqRzMxc20FtjGx/+neOTw/Cs3bWRAqME9eZ7s9w3i+qA5zL54qxypG
bT2MJ4lAottFbm4qx2rOzXZubMH1f8dGz83Z5Vi0v9pTJ5xvdSgn3zz5rhxT
H38R44nr1UeUXRbGt8uxKPO1Tw3biBAwPkjwcyjH0gbH10ULkSB6rfuq28Fy
LFAnmp3TFOdPFR9fhsmUY5nqGnnbcb7EMfbsuLdAOUaay30fh+fDJ49ORrya
LMNMhRZSitVJkKfWp3u2uQwb0Vdf3DpKhF0VbkpemWXYaSuKuyoef+yEsizV
sDKsRe2VQp8BXu5q/3rOoQxLSyp5LmdGBJbqnQcx3zJsPXVNqLI6Ea5YRZEy
m0oxr4+s0vt0cf1oOLl/x2QplrRjX4vNQRzf6/N41ATKsMdi2uVkRyJkba6s
eiVThlm3rdmjdpsINzWeZIzolGE/tKq26jzE8X5PQuPTjFLs+cHPWgY4v7tY
znNxy7tSzDQmT3sI1+tnAtZIvL9VikVe3eSn9N/9cB0vv9nZl2I33jiO791O
gt6sytU23VIsRE3yxFVVEsC3yh5/6VKsNp1lZsKYBA2Dbz45TJZgtsvn78Zo
4fr4zXLeIn8p9vagLMtNaxKk71nQYWsoYX7PPv1ib9zJjBKs9YxwrUYUrg80
NTelvC3BFgs3XyLo4Pz5jPjcFb4SLPvhLt/VPUQwZTMoVd9Tgm1RjbkdxkWE
ZsUp1gqdEsxOzr+SvEqAQ7e+EB+cKsGUOEKuL7IRIdC+3kztRgl28kPpOWNR
IkyTDohGjxdjBjEPQ/Ss8fzJWn2Iq64YGw+r3PIlnAghj89n7U0rxnJ72XYy
8P3jaCVt1ntTjF2+lss1okOCWYF1L176FGNSa1kOjuD8VOOBiPRHm2KMxLq1
9+0cCZz81n78olWMhQ3XR1eKkuFupUBtdW0RVm64dCbBkgzpV7dO93AXY9Ot
2hWkW2SwCwy7/Gu4COOsZZz8fp0MNWJa7ClSxdiWZAdzPQMyvBjOZ8tMKcJu
BL99JsSF57PrdIWaoCJsvZ6m4aZiErifzL8c71WEHWn8Qtd4ToIfxBO371oX
YXd8KWrPz5Cg7ZSQtZlGEUa87PNOZCcJKj6RWcV3F2GtdX0HbFOJ8G1p8MJG
ziKswT1k+ZwWrs9Te1brBgqx4Ru5r7MZBJjgzjH1qy7E6Hden45sJcAYOdFx
f1Ihtlu5r/o3js9jfrMKAy8LsThWxa69EkTIdXzvn3GlEIttaf1VY04ErRgi
8bhFIeajkhEsifONrMSLN8dU8fo2aY8EfuJ6STf09q0dhdirEeMB5QUi+J7q
luVnx/vLtvydjOPFh7VXngf2FWDNxwkj5G0k4PS5FbS+sgBbNUm1yqTj+3PZ
MOBLXAGWfzh0904cH5zVkMrOZwVYZth7+T/jRNCV+H3viVsB5jCxfosjJ57/
/ZucJ44VYMkHj+g4rCXB3FLpiIFSASa9JV/4DJ6v/3I0c8RsK8COZ/DbdMji
/PGoRDJjBTBnaourNQHnO89qxg78AUwg8M7Gqzg/kgyYzH5UAtgoyLmR8fYb
G6fKxB4D1vvnNLc6rievXBN/ZOAC2NaW2x2cobieiu+s9DIE7PuJuGrXGCJo
7o0TLPsM2MlxE9NoPB9ZUtT838kC5pW35VQkPh+phqPVWcKAbQOZkJ80Eoj/
UF/zYRJhP+/82CR2kQS7Znf8bDuAMJQuFkfF+ViW7w2nggyEJXvdEUR2OF8z
v5DUeANhoVtCb186QIIbo5EdDbwIEx0KnjaII4F9xWoGqs3HzK/7alxgkCBz
sTg5KCEP67HwaTWWJoOPmRTHcF8epqUln5yO5xct7mPr5MXzsZRpYrU3nq/c
liyaXU/kY/LRcRvuKJFhhHW/fXhwPhZ5uSKyl0aG/uGdG2juedgRod7EQHYy
DE5KicK+PGzt8sTWHFyPnPyKqjWXc7HCxZADDs4kwF7XiqYX5mJnorOX3wiT
wALV3bl6NBez8+x96oXzp09jilxij3KZ55P3OjyfFgrmYi9vUmUMcb6j/3tJ
lLU1B4szkL/diOObyxYqWTYsB/MblvtbivPjurftWWb2OZjYTBbRloS3593K
I6WZjXk+Uj16kO+/++VGRXSuZ2Nhd15Sw3H+Nfd/+TcbKxw/uK2/jgDB/k0m
VlPZ2ExuuKXiBF6ur/TYiJSD3d4cEsngJMJ7OV2Dec5s7MVgJ38d+b/70Hr+
5FdmYShGZ+vvwzgen7aCq8+zsDfHU4TLcT71gMOga+exLGyD1fVQ/zf/3U9l
ovRlexZWzPtBpy+HCFv1XAjqPZnM932Qp48BxGRiYx+WW3ax4HowSuCtvEsm
BoZnB/3w9Wo1y17zlpqJidYfabqG2yEhHK+mZzIwrdOHModx/+wfvKysnpWB
7bj2rvtEBxG4NG74eNzNwEiGJ4KG4okwV3/9bbReBib+WsuhJogI8ZL5qIwv
A3uVuvlcRgQRuiZTu37VpmOW0/r6/T/wfGH+g979Mh3TukR9zCFJAuMWn5Wf
5umYraagfADun3ky7iWl4umY/oYnKorpJPBjFWT92JuGhXNIOd+oIcHW3HVb
LsemYZ+jb0+vNOB68wtwyV9Iw/5kcaYIJZAg7Liw+LhiGnZNLUFPDffnZBMX
weCFVKwl6UIeRsTjT2lDKTE/FTuavSQoXIPrsaOn9bDDqVgqVUIqHNc7ZkOH
FNJvp2L94XuS43A9/nCL06PEdanM+8rMHp12W1ufggUU6Ly0xPUdufzxok1w
CqazhY/DCY//9rWNn9NsUrDXSgtbIn1IUBer83hj7zdMZsJ8PA/XD9fbTtUP
i6dgBA43s+BvON/6GlFK/PwNEytdWX0WToIRAceD8euSsTc0B8N9l0mwJbxI
+lhdEvZlc6AQEY+/tDm6ydjLJExnF/3HmTASaC22xkdYJ2ENSmn8nYdJoDpV
/7hBJxkT8vhy03k3jj8b7yQbuX3DuN6f9a/G+cZ5z2MnDOS/YQNjJ0NDcDw9
3hjoqUZPxiSWJhbKC/57XyreURWSMZVnF3buw+1i6d0V6+4mY9s3mqLuPiLw
fu/8LrYjCeMmCxo34+tXlfCwLNPpC7brc9bJljAibHshXuJc+xU7FivTafLf
9636/Soox75iJznSzy/gel3yu4dYc+sXTNb50cHnOJ9JGeV6IjWWiN24mPpK
upEIiiWnr1x1T8TYC37Tj+H5tH735M6+6WfIrXDF0nUIz4dCe5ViP75EJej0
1OIYGSQWKtWKngWi8jAKx7cRMtA8iAHiMp9RrvBIcnIoCdYbfQktvvQN2XY8
KDc8QYYzP9hcaiSSkEvKyVY5cQp8LNQP4e5IRjXufV4iLFSgiej+0hpLQ6Kn
qqsO6VOArJhxwOZeOpr8g3y6JHF92ThH5OfNRtHbtS5l4O3tS8Z0xUpykNeu
Y1WJt0lQNvawhSKXg36aLYybHCKB7OyHX4ah2cg7vKraBNc/yqH14R2XspC7
wmF/PVyPmDeK7w5PzkBfVw9EHj5EgPM2XH/rtmYgzUax3ge4vneSvnbA1yIN
iTHEOkT3EMBb2MYee5OCwpT5dNzW4PruLvvGFo4U9CdB4dmhvzJAP3gpKuJQ
Mhref1hPjUoA/lFbu6fpSShwn/NQkBneXsVb6Rahr8h50eQsO0aA/Y6/klkO
xyJuRsO7zlgCTP50saYsfUKXFbsFFllk4MCFN1fetUejtAHSHstPe0GjgO2e
kU8c+hjjOnz42V4Ap4e3KDUJKGDrOtrOCGnY+Tzmz8138eh6y5o86VlpKNcu
2Zs0kYg4ovMVd9P2wp6DDcIbi1LRjXuHfuk37gWK282RZVIqKqWHuvdd2AtD
31H7M81MFD776E5i6V5AXVYmvD8z0ZPpanbFazKg6vrAMMkmF818vpGZmkQA
g4hm/kOTuai8kQ9sJwkg/O37uebt+WhbhNm3JRGcv6m2lgc8yUOmvV2NrJeI
sPwkdurSt3yEFQ7x7FAiwaMHQq6CfxD69/7jbypbRPlRhNTyqQskPL9E1sRZ
N94HdFvjg6DbETIUHbgkUf6qEElJRJ11uUCC4Kq4Hfw7CtCRgkmXxzjepmao
ECxVASlzRXR2chPBoogSv68RUN+9rGXiNpy/X/zhwn++AO19o79sVEiA4s+e
toEshag74nfTzQgCrHnMd2HTkUIUltO/1zuLAByMnaVKaQUojTP71RZhArib
H92fH1eMPrD2x7TnyYCRfodnG70YVefVb3xeIwOt+x780NUsYe7vkledxY+T
xejf/UmxLWUGw9eKkKpnnsg1OgFyWV9lfOopRI5qYx+F/9PnerU23yhFyMbH
58BBDyLsffk8z7i8CCUbbcup/kyEpH3Nwes3FKNBcfNiVTwfGLLY8+c/K0G2
mp2FHLj+zJ2NVb/dWoJY3sTP7p0jQ6X+CNH1UimaJIa4XM8kwy1SqMkxqVIU
ELVfi+BEhq0RudPh+aUobllNs/s2GfbeCa29ub8clWwnlqzdRIZ5i7N6grxl
yOnFauV7PH/Ezs6ER5iXoX/va/dO7NNwiSxDndIuT035CDCieYvXYrIMoT/v
xe+/kAHnRc22Lo0GJHv9uGIQkQCrntNdxecakGXaJ9URhgwo8EtfefSsAelw
zqZyJMmA9IjOurD0BvSl+JljYKwM0OZG6yo7G1BQ54WIkrVEWFsvfl6O1Ijm
uU/uM8fx/UeYvU0jRyPilHzoG8VKhpcvJ7KdTRvR2/iD05eMcb2dovFo6Voj
En++Z6IvhAwdiL7+dGQj0sFkoy/i8zNebPjpItKERo2GRCSjScDVKbxtT1Uj
SshO4kntxvlA4aRR/mQjEtnFNmqYTQCzjb8uXtNsQoz4GNezZQSoE8ruN3re
hLbwXbfec/y////sP251rgkpBqgkBfsQQSnkkOtG7mbUcXD/ZokhIhCc5DVs
05sQ3yu1WIfY/7v/urThdxNasP3R+9mMDDaRWkrO5GYUafp86XYqrvf532C/
zJrRy531/Cv4+BRJGlEON5pRW9V8jLspGXau2t/miG5Gv1GFm6MIjpdxpxl5
1c1oc6xDkDTC+dy6bqmAmWaU1pa55fUTMiyaJhKuibYgD9uq90cfkOGBR6uk
r3YLeldgGbVelQKedfGe9UEt6ICrUDTtJgVEm+Pl37m0oJxjS1Gco2TYZvx6
3a68FqT3criSdo8MffUrwwcTWpF7aEtf8hsyUBUGiQuLrWh4+UBGwksSLD18
mhVk1YquDnx/wf2WBM6aRu17e1oQt0geN1/Tf99Pk52P42tFRRYpw8dxvvV4
EMp15FvRv/8XXSazV5y624qS9d9lTnsToUVxhq+rvhX1md0TszQlQhzW8aBg
10/0774wUtIzSYEjP1HI019uMmdw/u4TKct9+SeaEb9GrAshwuHltB+P3uH1
8+M277hPgtGwUsEioTakFY84sEck0Fdr4vtW9BNx3F3o/HiYDNp32onnRn+i
avUjFq+z8Pz1pldFcX8bKuvR0VhfSAbJZ6GHVR3b0GTK5sUt0hQ4fEX2V5d/
G7rZ9jJSDfe/6KabvBFpbehP8+FV8RQSlPvz5p3h/IU2CP1pMA8hwXcfqVmP
jjZ07VPm9jZpEij9uNc9TvmFmmaLSEO+uL5oFzPZaPEL1d/3OscdTYBk29En
mrvakbSelYrJQyJIF33UW9FvRz675mtIiUQo52dha7rcjv79X7lpkG+NYmg7
oqvmckXgeqM2MPypcN0vlDaybohAJoNh+vCK4a1f6M+OwIh1N8gw45PH/enz
L3T11K6fun1kyNdpSQyf/4WmJCTUa4kUuCOqbeEw0o5CZTUbJripUO469e2D
cAd63353U3QABeZ8xr4tqHegIJmyLGWcL9S3fbiFFbUje7Kl0wVVMhypzb3S
fKYDjfBdLLV0JcFUMu3tujWdSFSAu+o5G863QomFtK4O9O8+R47d4ff5sjrQ
/N57Chnn8fx55Yqnw/MOdGv+GK8jOwE2NW5M9TX8jUQU8hKUa2VgLp7lwdU9
v5FPy9OxkAYCvOi93Gzo8xt9FOYRv4Hzf78A8hr/yN+I4qpN4fuI+5N6uemD
1U4kdl1wUm0/CViUlYe5mzrRuw1nbSrDyJDpkR3kSOtEAWddz4waUsDKqoKh
n9iJEq4vcUREUaFpWAh5nehEfWHfayK7qTBPeDvDdrcT6fIGmXquo8GpZ2e3
Lu7rQmfJnw/kZFEhB7v79uyRLmSW2RY1akKF19wbQt9KdKEARZfGP1ZUQKGL
vIcEutBSQuxDaQkqNJNyYkynfyPt+UTb9hUS5Li+Cu2p/I3O1Ow3dHMjwY4u
bnK3XRfifUe5b/qbCNrKWX/OenQhgYYD1U2aRLjocq1y8XEX+kNBiuf4/7sP
0XTuXXgXsrOQO/T9FhFOuC7ZcJd3ofRkUMJwvmcY6Oh5OKULXbSJftvyggRn
N3vExEx2oacxFmc/c5FBJeFG/o/2LlRs+cDL8xMZLrc/Jzzl6kZu7d1em/0p
wN4RZn1zWzcq4OMsC5OkwtEyR+/NlG50t+7vH/MkCuwlLRzdrd2NVnPloh9H
UGBwy1MOzLIbTRxdHcz3w/N7tq/Eiks32iYaVa51kAxBCu7FudCNuOTuci8t
kOCqeZiDTHM3osTtuWwRSAK+xDUeJ+O7UUv69qP+ePzIjxn0yt3pRoyEkRqh
g0RIHLFBnq+60Tpq/dWBLUSQp11j15n+i1jT61i2s+J8Y5vY7UruXsTunqVR
JEGC3uo4+teyXnTgSpmy6Bci2PEI7PjyrRfFby2JC/iO680NZVGovRfx3Wd5
EJFLgksf2+fF3vUi+xV7Hp0bJDC9V9UxJdaLJmWGuqcjyPCjTavppWwvyn1S
4O4ZSIG6n8niWnq9qG2z+fxZKhVUlo5vUun4i7zajwQ+n6WAysXsitryv+je
smHGaw0qBJ0wWen+9hcd8XFpaMukwjDG3WXn3ov4uZIiTsvQYOBrSXzIyV5E
UXPMHyygAsGrMVzpYS96E7x7pfYJFYyXIhU6JntRF2T3O9GoIBB3lMuP1odK
xYPyLryhQuXIB8TD3Ye6tC/tuPCMCiEth49pifahgZvhzzwRFewSvAd+6/ah
TxI1+wVSqcB66/jjdLc+ZEbEdLxfUOFib9labes+tPMJsUfqEBWO085f3Pew
Dwlf+ONFsaDA2PuLP0rf9SFC4m3Jh5pkaK2bKzz9Da///9+XPeSfZ7mhvA85
nK5ZG4rr3fot1UvA3Y+khTYeXyCRYQMbL3Vnex96LSco8nYDBVTNWfcMTvYh
m5s39X6HUeCKWnFJjFg/WqUGTs7j8RJyrDV0hNaP7j+w5+xNpkL9z+CTE3r9
KHdF6PnDy1SYTp0yZLfpR651eVauo3i+S2zd7ubej5pqb8jU4fge+eNehExY
P3Ji3PDJxfdPxejNrQ+P+pHsu545/mNk0Jl7gbxS+pH+KfN9mz7geC435ilW
3o8+jW2vEBYnw+837p8ed/ajJztqKjYSyHDPqk5Lfxqvv26Hz84LFHh8W6Wu
kXcA5R5+Lmu6nwIWH4z2HNMfQAVJu9h0n1LAtdFN6YTtAPL6HJhUQ6LANeuT
/O/kBpCO7buzDaEU+OFiF5a8fQDNxTWYtk5RIG5qVuLSlQG0SY+VdvE8Fa5W
7l168XgAZR1BD3TzKeAoU/jw0fsBtOCwSevCZgrsJFSGlafhtlfxHwzneyWq
TT83VQ0g/We3uiLsyZDFXmZwuWsAFZmFCnz+SoZPm2MFOmcHkET165OzXWTA
bOMp5nyDKNhbHqs0pcCF67sLO3cOoouaojzfEylQLfei7YriIDoX7WZZ3kKB
fMdG/ueeg8jOflnmowgVHja/ebrlyCDaSpi5lGBMhehEnpHqU4PI453hgIY5
Fbbd2cZu5z+IHslcyi/zJYNdoWQPFjWIFm4GmSZfwPVf2OkCctYgohqm3LC/
SgbHGInZ4zWDKKhvq/HqFzKAW1KFfc8gmvV3sbNaJIHJHY6fN+YHmXiS4E00
o5wZQopFa0+k55OB7Zd778drQ8jYhN/qohMFprpuKR4KGELOUerzBG0KvNXn
ler4NIRC1n4R9FPA5zs4su523hAaMV85avOFAmF3edI/GQ2h0rlCwarrVEhl
VVb6LDCETuZwznLi8ZQe2IBx7x5CbVdU1x4cxPE9LVvOUGUI1fNcc5UpxePl
4DVho/ohpFY01nl+lQo2C78TiP1DqEOk+KkNHw3cuFZMV5aHkFEH/WmDKRU+
Su+/QxccRp9bziUmVVNA/YjVvYG9w+h5EV2mbIkMT94rv15RH0aSSt7+v9zJ
kJ1hFLrr2DAz349a+QVrOQ8jTl/CrV4eXC9EbJi5e2sYDRSwmUzh5YUsJj4N
wcMoyHlftH8kGbpfyqrS4odRsfZfO09bClzsuolR2EcQf/DwCc61FHBemIp5
Sh5Benkah6llFHA7A4fCYBgJfbMffYHj22HD2cP8rcPIclXI8Sy+PhPrGLdC
RofRrleZ6YpPqaBprPi2WWQEaa8L6Ll4ggpnRpO9jbVHkO4Hr1/896gQsOvN
bkmrEdSp05TWkkKFTYP0XO5LI8ig2Caw7zMVDC30zOfvj6CcNoc3169Q4Uuh
DM/C2xEUQDEUGFKhgvLho/XcSSNIMcnzekAYFbLrxJ5Ilo4g/8cB9o6vqdDn
eILlF88omn352aYR36/8hksBJLFRlJuaNSG0lgqWtrdembSPIGkinzpBggKH
ygv4n0+NoHRh7e3GOF+23KrcvF5/FJ9fQkBqFgUC2pyPvZIbZZ5nmKQ0cvvb
jKKIGyWer2SpUFD5qXG3xyg6VrW5c681Faqe2u24/H4U5U17tvyoogLd1C0t
9/Eocqu+XKaO4+8n55cLUmmjyMZQctEkgwqqz7jNlqpGkThR0k/bhwqxp9d7
VneNorl6geoVAyq09JZtKqCPoh9nI9gkmyiQ89yRp1BiDBnp22/ethXnLxTD
mkT+MVTZ8tI0CNd/ki7HI6uUxtDhD0L3KqkU+GPHurXn6BianBA6qo3Heyy9
LUzqzBgaO5iT1SFFARPTNIvw52Mo+dxhjMWXArLe553HP44hnZXdN9WuUeBu
plRqd90Yumz38Mf2GDLYH/KPds8dQ3GbztTsSaOAzNXYPbb9ePsO/p1omgJL
j3QiydLjaFTR0O+4KM6nmj03Di+NIUtTtSJ/fP2mrMpcT/iMIT4OnS3b8Pkb
uG17cl9wHA2386VbR+J4713r0qc2jnLmhN6Xv6KC7u6clQTTcaQ9eqT14lkq
HLCRc7njNI7W8TQEvzejQqfd0wpH33F0Tzd8WvQdFURUtQlWweNorBI9t+/A
/UOb/ZN1/Dh6bSgtNriI87kX7wwuFowjFYoV3zc2GnSlp/BZNI0jjk9Lo964
/12mnyl5MDyOuK/AOWsbKsQYSHn8YZlARUcoJdIWVGifmtLj5Z9A0V+dWl8J
UAGjNx/csmkCLU0f2fCumQpKuxumDcQn0PdT2VperVRwpDTcfEqcQCe4drYM
1FPh4PaQtcmKE2hSiRTYHU+F3x8/Jy5rTqBbQjNXPQKpcGJHRDflyASSuxnx
6KomXn7gCnpiPoGOPX/d5IwoYN/7IK/q1ASq1ZA9NMtGgQeGV9j2XZhAn6rk
7jRL4fxEfdfEPU/8+TXDxPKHZOCPlCpdvTOBbCPnZZTLcLwvf1Rxwn8Cfb3W
d0aanQrbXz1YnWudwPl2mvo1vD39kqVjT3omUMGu/Z/VXSmQ917to9P3CRQc
K7UxcCsVfoxOK/cUTaDP7v2DQ0FUmOx++VA5cwJ5sZYse8zi/m7V96kgcQLN
hzXbxG+kwYM7hif6Xk8gLsvPa87vpoFt67a3RlETyPPQQ+NDl2gwU3tcN5Jj
Et1M1LYr20qDlagKNf6tk6j6u73Oej0a1D/xZqvePYlYyxHXUx4a9L+YTjAV
mETyW1Xfy/dS4avgvY0VjAm0r+LDfilXKkid6kqUGptAja4FyaoUnI/pZXC8
pEyigxFhq9tPUSGi2SOIpDyJGMOSTy5eowL3WPGdToNJJPno5a9APXz9+0Nt
2LQnUavGbWHncipsfDy7ptByEiXVKfH8wv2pol6LNfH0JOL8NDzJu4MGiUtX
Ku28JxHHcM90AgPf7zctrhGuk+iYgafbGjw/0L9IuZ26N4lsdpf9vTNFBVGX
2USn55Oo+S791OMenE9/tnniHTrJ5HvxOaVLN79PIlcuNe0balR4y20UdPnr
JJL26s2Y5aXCE9lsmtnHSTSi+7Ku+ScFTtW3az4uxsdv++0w3KfA0ZAKOeus
SVReMecSvZsC2+vKBwLWTSEX53cOGTxUOMSgy6aJTKFW6QWONd/+4+sjY793
TaFpv1f1rI8pwNsZDObkKaTiUn67z5sCr5ciDwUoTaGLm75lPVehgMd3Y5ta
rSlUocKlqnyGAt/aebmFj06hW7U/D9xox+0hrSOnzHFb6NbXfUepYGatxHOZ
Ywpt4zr2pPMnFVgiNDqyf06iZ3cbz20ep0KN+NXmvJ5JZKy6J3fImgZv44v4
tsxPIrvCFPLHIBqEPfmVxDM+icKuhO85XUGDbV5NfKv2UyiUa5/o/TWycNyC
18fywhRidE3F/wEabO8Jj8j2nELvD91j23KRBnz+Jvd33ZlCIc2+5rpXafBe
3bJBPW0Kqa5E5lG30EB0U4FwLZpCfkvYiyN1VBAzPGXAlTCFquZE/OlleD7v
npQLfDqF1NhZxXpxfA/5ciKV69UUGs9pB3dhKizI3RK4+2EKaR85lBhtS4Wy
ePJxx8opdEKpXfDZOSrs+D0YxtE0hRx2aK558o0K4puOzsX+nkLyPkmFMXep
YKuffpVlcAotDShPRuLxLnqrak/K9BRyM3YP4xXH4/NFE8eFlSm0QdtvKi4a
58vBp+bfCU4z+coDetfzJu5pZvnTdJOLG0SnkZ9j3RPxPArMlHx90Cc1jZSM
OAJHtuD7EX+g4qvnNBJfz8nhsBPXo+EFHzkuTqNM6oEnT3B/cnfyTi66M42u
jOUNJOF6X7Xb2Pna02lEzco2K/uKt+/2mCupfBp9bRrxMWalQijLcZtr7dPo
xV+LKZEGXO8wMjXO902j/vb+F/tHKPD88ARxlDGNuB/8ePKwigItBz0qpsam
0dT8NekFbpwvmxS5Z+vOoDcd5xdt83D+li6uNmI0gwrWvNgRFofznYWEj2zq
M6j+KAtffzMFJKxv+u0+MYMco1TuGf6igPyLdYdHHGaQ4odLmKA2Hv+9+9vb
5WbQMOXcyQWcfxKSj9aMss2go3O+XOYOuD6v+x75on4aNbOa6rXhfLXjY9QJ
57xpZJih8GDhN45ve5MFlEOmkdZu1ti6Yjyf5Dsdsz09jfY/233XIY4KPfJ/
TthZTqNaF8v+5DkqxG39yX6WOo2wWJqA5R+cX9jdcCsznEbzJdzWSJ0GktJL
o4dU8fWzrbxyxZsGrTd3v2jWnka/lPK4UnfIQn9+bfRSxDQqIxyOKcL928V6
Wr40dhqt5zmle0tMFlh3uBYHp0wj1zOucfsYNHCdtfk2wz+DPk8GbTopSIMD
Rhx/WTfPIN27f5zDb9DgnJuBb97eGVSuvry3OoMG5W3E88LiM8hV/l4gaw8e
Tw5rONg9Z1DUoRExGz5ZmLwcWml6ewbdUDESuDtBA7NvLuFUvxkU1jf0NCeU
Bn0pqMY/aAZ5KdPv8tjSgBbqWkq9OIOehAjTvhdSwd/K2NgjbAZt60wxudxE
BdirUX3q0wwSzKl59yYJt7XeHatLmkHS2lY9p87gtotWdHkWXt/CO8YR5wNZ
jxZWigtn0Ay8vlosRYU1X1zPllbNoNrr1kEFe6gw67jsadA8w4y/HXHHB61+
zyADq8CbPpeo8MYyQf7u5AyaNT793X8TDWQZllsjFmaY8d9TEnHNZWAGqTbJ
WCdfo8G4eoAssM+iXI7obT77aSBP2XQ5lTaLshfPteg70ODxUp7SrMosasyQ
y5W9RYPSjeaHv2rNIpfd8Vkn0mnwyH5waP7wLBoTp66c6Mf5W9x+Dm/pWbT9
2GbF21pUMB3RuNvHP4tUbMJGPcWo4EA/Kyi4aZYZj2IxfH1aO/D+6t88kVol
g9qp8alDZrPM84ObFplOETazSIi9JOeyJBWSothqzjvOIvn2nPe5O6jwp/N7
LPftWfQ527RR8SoVElzX6Ve6zqLOELvf4f5U0D+4oEfxnkVRZ5vMnR/i+mzm
fu1Vv1k0fHTX/UFcL3/2YU02fzGLrAkZZhxvcDxTd7agps2iP39e3yvZToN7
IdRH2VGz6G7l8aNWeP595xAgVPd2FqFxaSuT71Q4yTWCqSfOMvmqej7nGam8
WWRREXXOHedjLh8GCCe7ZlGRR/RnLxwfuqtt+7KbZ1HL9t9BL/B8oDvuIpL5
fRbZ8Uv8KnKnwrkbeoezSmeRbdgXrsj7uB4Qet18bmAWnVg6lZ2I6/2AOJMj
XevnUFxS2ntCNp6/ZU0ecmyZQ013TdLP1eDxnlgiBzxzSG77yhcjXhpIf+B4
7jUxi3YdZBsx30yDNSY+yh9Z5ph8gmOtruVTxizTPwpDFgeI4nPo6rr1U8df
0eBN+FMPy71zqEvnaslcFu4fwYdofrQ55DSn+nLsAw2cj9/YiZTnkPPF1xQV
NxpcekQz8DSZQ71p3CedcH7Zb8BzIMFpDhHPTPofxvXLrprgOAX9OeSXJFb/
3JMKdtbeegzNOab/SkxI6QtbziG1yk2P7ulS4cPFPe9tTs2h7pE3Y+GcVPh7
n9FlemkOTV8r2v+EDZ9/7ugG9ttzSFdInLiaQYH9ChlHYr3mkFLX3YSgVQq8
d1p7MfXhHMqUDLgYcZgKweXLgpsC5pBR8LKl02MqPDpiznAtnkOlH4EYj/e/
77hKwVTOHOqkPlMUeksFctwlZ0LaHLrLkoodbsT5Z19UQU3IHBoCDs79ZBp8
U7W1n42eQyL7zfu3GtFg4UfUtOOXOXRlfqZ0NY0GzzwVzPZFzKGO8vW8s/40
6OaLvLOufg6FbtNJJYjh61+xV+JP6xyqNJ2UebmNBipa9yrVqubQd/nm9WRW
GuiKupde7J5DX1XdysNxvvWVU1+Ja26Oyb/UawR0B5f+t//r3m3fKTU+h7w1
FjIHvaiw4s++eHBgDmnxOk79MaTCL7Xlw7XsdCYfFJ2MPJK5ho5uJFSNI0Fc
vzcG6X/cQGfm2+7nVIFUAh31WWp8+6RIhcj4vIP3d9CRXkVI5VdvPF+bkgx8
pOiIS+J7rf5tPH+KDzh8kaUjs71cp1UiqOBGPX/wpQgdKWvu5+NIx/FOiaUk
XpmOFpw8fw3N4/HbIKGQoEFHBYNju+TP0WByLPvpmA4dOZvyT7Y20aAk8/PJ
mSN0FJsuYTLeQYO4i2t0lk3pqF78eabVR5w/35la0LGkoy9L2uFfcLw9GU80
OmZHRzMnrY+L4vzCbP27bR/O4M//Edzq5EeFY/ab+lNd6Ojh8fIPaz7ieCBr
/53TnY76q/R8W3C9co7+SmSHNx39DDX4uB/XK4GCu3dduUlHokZS/GM5VLg6
QpuuvEtHip8NDm14QYWG8B7JET86cq0gln3H4/1Vtcnmmnd0ZHf4XXU+zp+v
/nIfigqmo33fq4dD8fzckuaySy+Ajg49OtsvrIrzKaN+zsF6OvpopVmkidun
I3zNrFvpaPOWBeuHOH9fu20lwLOGjjZIS4mGPaICZ+ea23UddJThNz4wUUKF
ysu3Z7nL6eguj3OfIq43dm2myoYW0tFUtt3by114fqj+cmM2gY5ki/rVr1RS
4TyZLESOpKNmo1GVQpzfkU887wqIoaO/VHt9NyoNOhVLR058w/vfG31a0J4G
Is/XU4oz6GidtoDReCwNVHkqdch5+HqWJ4Zf+oTrmbUiSvvH6Mh8yTD0ahgN
9ldEuP+dpKML69fUHQqkgUmqzacbIgyUR+dyPBON46fE3/vaAgzU1exKYnlM
g/kbEtb2dDpKaruVsnSeBntWBNwKBuhIWC/rda0hDdpJ3x8f7KEjyw0RgrbK
NLjV0yH9Z4mOSpu99T/z02BkvXu+PwsD2R6J4iTi/sRh+P55tRAD/fDlO5/9
F+djnHavKKIMdIjsdbi0ggrLqbxn8nkZKLvHXgxicfw955yynouBXumPfzyA
691k3aWtueIMdHFzpl8t7i9mUzaUS5IMtHtHa+0xXyoMJwwMrsow0FTqqYml
67ien5u5xqrEYJ7vSPHzqV6QZSCGqmz2MTz/2X/YszudzEC/4ukq+SpUKLW5
3XYFY6AbypVBrMeosEVYq4VygIH66gu2bsL952CrfG62KgPdkx/T/XucCk+/
d34b1mWgwMgJ6at4fll+9uBX4jkGohOr7E0kqCDws+SK+w0G2tJ47VXxDSrk
NB+84+7CQJO/Lw4q4OMPkL3Er3SJwTxfCZ8467NyGX++7sZtOr4+jJwLVbHe
DJSiPPvde4YKG+LfVpd4MtBvkTgddQEaTFjkbx46je+X0Q2zrTi/ko5BFz7r
M9DN5B3rv7RT4ZJ/3lZdWwa6/3BkU5Axni82B+/VMWIw99/tc7MfjwMD2W2U
VXu/SoMUvaCn904wkHOLvqr9Cg0Kfk38LjJnIKMKoV1XNGUh8rWTEMcxBmp9
q/9GzlQWlla3DX2OYCBf7tf3HtyXBYXAL9GBHxgoWjgk74yWLPyVbzgHYQyU
6elc9rmLBsZpA1UO0Qw0t/X098FWGvB3q9fXPWIg4vFJ8eK7NEiakOcZecBA
lnpmxe2eNLh6+OjG8KcMlOPtJGVlivNFrXPs+28zkMSzMN5aJRp80W7ZKX6X
geQfuAYM6NAgyrZfaOINvr/HSyz+8NHgGDFB8WgMA6WyrXspgvtXLm3yl2Is
AwnsiNLWwfHBdO8Fv3vPGGj/fNqwKO5vPo27pExeMFB4XAt1+RUViG+ktXhe
M9BA/HQA2FFhcFejvnIQA2mN3WjcuJcKgiciglYZ+P5V/ji7/iwR6mvcOjZx
zaNRJzFtjRIiSMkWRnJtnEcvS+ueLrYTQUTXylhu5zwKce++l9JChE1G1KNK
pHl0lt37lX8YEQa1ZmJ8VObRjTOGPjMuRHA3ObYzWG8eicX3JM9aEiFnHY/r
6LF59O9+saPOpvFi9vMolHGoSOAwEV7vDKi1cJ1H9c8iGnW34s+/2XGr/vo8
em+hLJ3ylwCDJqlNEn7zaPWzg3lsBgFivP3kUl/NI+8nc8r7EghQ9fssp2j0
PPI9mT51rY4AhA9rRZ9/m0evv1w9FoG3d+3dDb+1gD9/SmWA6wQRDCcGHV7V
zCPrCzZTSbeIMBWelkP8NY9a2X/ksoUQYUHeI7pmYB6JNo8Rnv8gQqT7uLzP
3DxaZtevaJ/Fy+liN2U5FtDwcS++nGUisMyQguc2LCDVdUNWWUtEcKU6/Q3Y
sYBoDk8FU9eRwCua85MLaQHnn6/j3RRIQEvY7bJddQHdPj3UrnyRBNenlGUE
Dy2gPQVFexY/k+D8j9zMX8cXULVx51h/CgnaixiyyacXkLAO2X7HJRKk1cxe
qnBfQMHWMhuvsJCgczmGmnFrAZUt67tsx8c7A5u2JT9bQDyo8NtDLhKc0g7R
yXi3gOIvz4oPBpJw/v2tpCJuAe01+u4eOE2Cwmfli0mZC8hXZ13QezUynA9R
39deuoBGbsYoaxmQwSKZwSvUtICkXhhY3MDLA52c/Sx6FpDg4JfnvyTJMBHV
Y+I2ibdXm7k5YQ0ZGrrbA0NWF1CoTnRVzCwJBO6qq7OuW0Qns1+lSHWTgKR/
/zcmuohCIh5mXqslwYbSJJUnMovoU2+N+9FIEkQ/feHYo7SIliQ6wwkeJGAM
dErf0VtEhL3i6jnnSTC3r8R1xmwRhdmXuuUcJ0GZQVzN5dOLSDXk+DVNAgk6
VDetK3VfRGl3lfJKhojQF2yZYHt7EZVMbe0svEeEs+ucYrkCFtH63B8q4TQi
BEi2iuWELyIvget2l/4QYEHl1apm4iISSTg1KvCaANNdLWLNOYso6LT1rQvB
BDASENiZUrmI/n2vo852TtH+5yIaH3LgNXhJALUDxMbtA4tIP/BTQ88tAph3
H9KVpC+iX+0CSlcdCPDnwInLy5xL6FJlS9x3TQLYaTDce4SWUMGOdy36GAGG
C+ZsWiSWELplHDZlQIBiRw/jn7JLyF8zuEPm2X/vQ7efHtRcQik9a+4Q2giw
8tZAutJoCf27n1/5i/vLOdsl9O97QWZ3112iuS6hwpoH+7rZSNAlYxu+/+YS
SvSnOj8yJ0G4m6pHkP8Saj412nfyMQmeVZ+zyX23hJ4xrhXlFJOgdygsnJaA
2xYlOkFtJLhruC/5as4S+pnkLxg+RYL591dOV1Yuoa8l7maKrGR4s9Gzkdi2
hFzZZgqyOkgQZ5AsFj64hLDDIrt0AN/vzwPW2+eXkMK6weeLD0kwekbxayLP
Mip6qcC51pQE1ly8skdElhFs0XHtk8T91V+SfWHPMjL8aXv4Do5HD3gNd1/d
t4wOxms8CnUnwoelAwlaesto7XGP/VmSRFC/6dix3XwZ5cv++JvGSoSEbY2M
csdl9O/9RFNrS+87V5eRtULsEYdAAhwbfNfh/2AZbf8SHWHvSoCvPPEljiHL
qO3rTklZfP887O67Gn5aRhO5kXp5hQTw6Xy/oJe+jJ45Wc98EyXCL9a6B0al
y6jh3jxH6hUiBJofkndqXkZKqZKGtSlE8FkJl3jRt4zipiVGXPKJsEWu0qNq
bhmVFWnbS+cQQbFnzxFh7hV0ijWSWobbdw9dK3fdvILsJQZjCDtJEHOCyBay
ZwVRVdr/CoaS4E6QwNAGpRW061JiVcQwCWIlbHUtD66grcLyeoGdJOCSuSdB
t1hBT36IV3UcI8HG1nsEO6cVxHn7Dm28gAj0x3S/nT4r6MuG1516/+G1h3BV
vN8Kqm17xMd2E8d3fzmlg29XkOuF3kfBxUQIad85Nxu/grLyJC4JSpMgqkt0
b1ruCrrEaDgscZ8EH2x/zt6vWUHr59ReO1Xh/R25fvtc5woqO0WvOstBBt7k
D5PW4ytIPOFgZpAGGbwqxCO3sqyigMe+edvtyKDqKcgit2EVXTBgm682I0Pr
c7+0k7tWUa9IV4QBmQznRG0VjOVw2/2b7dlWHB/WCxS8115FMXSTUz9dSWD1
o6Es02wVJTZeO9e5iQQvH5+W7HFcRbbCGRbpGUSwUdJh3em1iv7KHN150pwI
+0W2VGQ/XkUFyQI/XhKIkP92u4vY21VEeXFqJFOGCFbBedwvE1bRv+87Z73y
K9mWv4p4X9s5j/z3PRTfqNqM2lWkondOZmkvEQoako3Odq8ino0K6rfHCTCC
te/rmFpFGRfMrFWLCVAmZDdoycYCWtKD1i7JeDw7vZEz5GOBw9uLuGe+EUDL
kea2R4gFKq+brrlbSgBeCbtqqhgLPHCJzjjykQAb2nZPiEqxwL/vm1ikzqer
UFjAdHDdhpvOBMh7prFNVYkFDJxklztxfEi61R6vo4nXz6Wm368lwH29Pl8r
fRbIyy8YeEokgmpkyRdvUxZgX5x6lX6KCB45skZR1iywn2wYu3oZx8O3+663
nGGBFBelt8b2RNgYRTu8yZUFRA2sCrdhRMhc29Bk68UCH55sGXpB/C/ediuk
3mYBl6KvDEVOIpi8fHBn4xMWcDDWtZjD83eW1Aj1WBA+Xw5+0aZIPH5Cwq5W
hLFA1tKPHMtrBND3FxrfEcMCp85eHDE8SYC1HrzB8UksYMaQ0L18EI+/j5KY
SDYL9JglVFpZE0A6NXZ9QBHe3utQ4w84Hhc/8J5Tq2GBjoVHlfGdBEiR5Qyt
bmYBxqqW3HlFIvS8l0x37GKBv22+aS1J+HwN7jvyD7FAjatLPLaC4+NBubK8
aRZQS1K9VKFLgiGh6BmfZRZ4pztdbOhFAs/YTD5tblZwMhz3icfx6qFz+t4t
G1ihrruR+9x1EuRKd0/WbGWFix77tpP0SZB3bwTL2c0KRltJiTacJLhgUTyW
SmaFwfkvF85U4XigdXLJX4kV/gh9mpiLIkLneuvA91qsEN3qvbozkwhr7tww
eXGEFVZLcm8+wuuvPPH3DTjOCuv9H3TU4f4s9oW+v8KOFWT+nvTlxp9/W7a1
res8K7yK7Y8zxu0YxW9anB6soNS4YYM/EGHMzeKVoi8rvBeP5OuYIIIGWXL+
ymO8fy2/Lcl4PjjQ8/UxvGQF86bhdh0eErjZCTpvCf9vvubBSc1E+O0+jHw/
s8JP44E2z2h8/Ot7i4q+sYIEo1es2BH3j8UQGZ08Vji09ayoqw7uDw5k18Yy
Vqg6WtD2UIMIasSZ9Zr1rPDggalCgB4RpMc0sZF2VrhPiEpbxf1L3rzq5ZV+
VpiPu/r2ymci2Cu+al0zxQp7mnY51ePj+9k40961xApfDpYv8GqRgNckOfUl
Nxvc/PhacjPOh6Ttz4wdE2SDNbnbOPa8IYEi52TSbjE2UOrYPD6djuPDl3oJ
dmk2cJY1u9j1lwTvomVcJ2TZoG/NxamVARKU38rPGVFjg4kYDpo0nu+MU5dk
GQfZYHLz5bJqPD/O7mdZFTzGBpXtB9XW4es7ZB+kr2bLBi11O7EU3N8JX2Xa
tc6zgbcX50uveAL4Jq9/cd2DDSIcJF7HKhDgrbqjSvotNpCzFVp7XJAAd3Vi
88efsMGN8EwTj20EQA9nLqu/YsN1iJhDLi8B/mqNJz2MZINfEV+KJ4kE8LpZ
Y9WXyAb6rj/9XnoT4LmAq51+FhuUnhYarKghQLRFREFKMRt8X5MZTJLC90c1
a3XPDzZod2Ndux7Hqw++6TkJv9hgI7t8/RshHP/PeV2i9bNBT7G1yLNXBKid
r6wvnWID7eM/nLkkCfBrMoNkvcIGTbGWLco1MuB6/5sj2xp2UHim8bArSgYa
6kuXUoTZYc/WO7dJKTLAw3bYwFmcHbhJeZ2qczJQj3lsJ5PYYVbwx2d7nM94
JgjnzCmxg6R2/z1TfH3uOKYe+qPNDpS/+/pHhwhwep/80UkjdpD64LBwmkGA
8bJbviIn2eHffYszt+o3nHZih0KHhGstRrg+sVi51eXBDqvnK2YZx4mgn/3A
/+oddhhvFwtpw/ncEvtRHkcDBlJ02mW5lkWRqYe7oh9Ize9UZOrrHtXWxRgF
Rbi/4j3cRmQg4R3u0ZtFFWF+L6/Dnx0MFPzEtIb9rwJT/w938yk/qlUAyiMZ
t35uBnos2s9/NEcBsq+9P79vno4caRfmN4UqgLcvt/O5EToa/Fqk8/e5AvN8
Jco71dTVXwHoMR9a9WrpyGHp3be37xTgYk2lZRXQUVXn4zfvMxWY5yWstceD
dccUmOcrd2VdW8Y3KULVZ+OH61/Q0a5vT5YiMEUQ678hyX6HjlgqByyi7iky
z5/Gl8Qzh1MV4bfZOnsRe7z8EHt8fpYi6MTYXvQy+p/Ne/Jp7bD6/2zt91Yn
3El0dN4X+5j2VRG+bt97y3ArHZlMerL6xylCvEJj8TIPHRmrCcTuSFRknh9y
+31asX+vCAfqiGsle+aQzJb2DN0jipByeXCd1Y85lGfjue/iVQXmeShrSLuH
pLwCeA2eNY+OmUMxQjX26zcqgG+czosdwXNolNFgc0ZMAaTOVsqY+84hswbe
p19oChCgtm3AzHkOvSmOZLl3UAH+RLyZKTGbQxPlbhoCJxWY578/jEmsyi4K
0BFx4FMEcQ71Be3ectRNAfbPt1g6bJ5D5MYnyw5WCszz69qO8RgVigJsu/i9
+cPwLIr8OZJRtEMBHrGyOe9smkVNi16qQcJ4fa1Jn/z8WRT9/rFq/B95iB5n
+Xrt8yza3lx4ZD2ShxdpKqzFAbMoOfCZrkuGPCw/PP0JfGZRorKSYVOVPKzL
/0A94jCLLsk2OLSxKzB/76gU6flmrKwAa9fvcq+Qn2XO37Sl83S22Czym6Gf
jimVh/u3bJV0OWeRh/yrZtlEebAkFa+7NjaD4ic3jf95/T+7xjfzAuux/9W3
PGDVW75Bntmew4+3n8j1csz+VIRrTlEi5JjjeSifWM4RLMccbwGFJ6ooT445
n/joypPX+uSY85U6oRzt0C7HXI+rI28kojLlmOtlU2RlF/JKjrmeBXovIzaG
yjHXO6JgDZ1RJsfcj3/j+7df4y4cJhYf5Zj7aW/f7qt4V46530ITHEsxt+SY
/vCv/J+/vH/mHKD7SI7pT4s62c+T78sx/c2G82P6Nyc5pj+OGO6f1TGSY/rr
zpi8Ja8Dckx//mf/83dBmfAnpMNyzHhoL9GsOm4mx4yXT5Of7pHPyjHj6d/4
/sXbm5VeUvoHOWY8CtSUFsa/k2PG6z/7Xzz/W49/8a5MXUxbkyzHxIN/+/UP
Lzg8xlstQI6JJ//25x/exLahfFqOHBOPFjv237tdKcfEK+e3vHlXu+WYeDY8
oirJ+VeOiXeemErF5nQ5Jh4KpNh4X30hx8TLf/v9D0//jfcf3v7r7x8eR0z5
Fcc2yjHxuv6zyV4HhhwTz9e/ePisTlueifcxLwyNcr/Kg+Flka0fLf+H18p8
R62ar02jjQYrmUcEFGHVxYdv1X6aiZ+MuVucEwenkXxzI+GjsSLz92ZzrwOk
lOOKsJI89T520//Kj4DXaeHlKUTxOvrVWE8RCA9jq2J7ptCxN0v5v7Rx+8Mw
38aKKWZ+EeV9YDD/dYrZ/zHzhx8zgqcQtm22Mv6nAtPm351xW48gz6z/b33/
tSdUkVbRUijH7O/f+v0bzz9/+Dfef/H8bz6BqzuKJ+PlmPM9ucP07eUSOeZ6
zKiLBg93yjHX61//4SjqamPQNBIyDLn987Y8074QL6po2CsPfrvcpAWvb4MC
FprngbUaYNNiOwC822Drt+uaj/swkOc6eMnMbSvTbhPZJzzYuoVp/5hUtrip
8T/75syGT4KfRZj2+1PZu2ME/mffG+IX3e+5mWkbSVro/ujcxLQ3GahXnNb9
n71G5CHffKIw05ZAUgX+wv+z5we0WHbdEGLaT60C76f/3ci0o6rJ8/pH/mc/
M81z/Z0iyLRTuQY7L2/7n80zkd8tHLIBJNQIG7RZNOBP/nZa3PJ6pv1gbcEv
9TP/s08aKLl/eiPAtOk/Tc/XnlvHtLcFT5IZ+9YybbFJe3lxbn6mbes2y3Vm
aQ1z/U+RRPs/T/LCjh6PDq2teP+3yZe51/KCx++pFE15Dfg69fG4ozQPaMz+
vK5hoAHXVUgjv524IevgVLa6hwaoTu0PVL/PBe0bD99Te64BUZPnRMPecwKF
dM56f6wG/KjzYl3K4cDntXaPapEG/M6m+1m1sMO0wo9l5Q4NkC6fJDeKsMOu
4HQVJQ5NcDsekCUrzwY+ej/Z923XhILtAWYJuD7hO9OoqaCjCWrqtfJ8gSww
4NK2Rt5WE142ZH7ljV5FIt8P6ck+0IRq9+T60l/L6Oi1qu2095rQe+bI/F3B
JUQOJg9QsjVhmkdZzzN4Ab3/6yBF7tYEp8Bb8xGn59GqpH4pQVgLmtyjsJf9
dFRkJckus18LVvylnuamz6Ge/YEf91zSArlVX4ve+7NId8xGT/KjFnwKTpL9
qjyLWC4Qd4uv/q+82NhzRtTqADziqb7z4PwcHs9uPFvfHoCLyjVBewzp6JDx
fYHN7QdAQKLOqkKOge4deS8sJKYNu47eunpeZB6xrR/ZtsFGG1pt5dM0Dy0g
14b7eeteaINxyPdTIj6LSNmB35a/VBvim0bujcctoQu206xrFrSZ8399sCaS
m6wDtZmX/BosVlHIb+vfnGY68E7lr12TNgsYbaz2ZX+sAxw5p8pPsON6ybct
lzVJB/hZV0h/ClghYFB/frVZB9rauB6ew/WI9nld6ZVlHTh36Fn3mDo7rKMZ
OC/t1oXLScW2ARIcoO+wVW1RXRdOP5/K2vSHA1CCtvv8GV24G8C7JbOUE/jf
+Rxg+Or+vx1Yuf2tXeRqtgP1D3VEvs90O6C1p3fFr35gevoz8cnXzW4HItUq
nm+bxXFg0uNlAV8PuB0o0VWKjKjnPLDw4kHFL7fcDqQfyS4V6eI6cP/T5bbP
z90OuEVUbLswhfuAQo/Up09f3A4I3llwuWc+z4EXn5aGfWJ0P7CoMIDVcxXv
gSfcSYc+8rkf2PcwUo91K9+BHcvuqX+Udj9wQuq618H9/AdeHLKc/EHD/cC8
aV+sfCoE4HxYfuSZ8OPHe1N3eH6F8WH5uTQkPeW9kzs8v8P4sPIAxoeVFzA+
rDyB8UNWLFBqYBI9oPy19MQ7f/cDRrserXo9C8HnzbPOCzcWg/N3bFT/c+g0
gn/wypdTCoHiB56V3jV5F+N+4PDbF0k9LxH8oz5H3n9vlIDzEwLubU2WkoTz
7dvmlpzfhOCzT3mvYuUtBef3J57VWfYYwbdg2bGbJVMabv+C//0zuxYi+AD6
0/xA
       "], {{
         {GrayLevel[0.5], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1: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
+7N78GxEHss4xjOBiUxiMlOCdlivJzPlWcxmDnOZx3wWsJBFLGYJS1nGclaw
klWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkD/4k7/4m0Mc5ghH
OcZxTnCSU5zmDGc5x3kucJFLXA7GQP97c0u+zR3+4V/+4y73uM8DHvKIxzzh
Kc94zgte8orXvOEt73jPBz7yic984Svf+E7wAPF/hCQUoQnDD4Slj3b2JaIc
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zPTTnv7Bs005J7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWo
TBWqUo3q1OCn4HkijeUmNKUZP9KcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70
pBe9g/Ggb7AP6B/Uz88MYCC/MIhf+Y3fGcwQhjKM4YxgJKOCsto/kKnyNKYz
g5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vYyz72c4CD/BH0WdsHcUY+yznOc4GLXOIyV7jKNa5zg5vc4jZ3+Id/
+Y+73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7wUP8/xGS
UIQmDL8Gv28JK4cjPBGISCQiE4Wo/G69wcSV4xGfBCQkEYlJQlKSkZwUpCQV
qUlDWtKRngxkJBOZyUJWspGdHORkSPDsPHgGL5emDGUpR3kqUJFKVKYKValG
dWpQk1rUpg51qUd9GtCQRjSmCU1pxo80pwUtaUVr2tCWdrSnAx3pRGe60JVu
dKcHPelFb4bpz3AGyAP5hUHBmPBbsL8ZHPSdocH6DGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZ
xGa2sJVtbGcHO4N+BO8++Fs+FPRHHs0R+SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4R/+5T/uco/7POAhj3jME57yjOe84GWwz7VzLO/lD3zk
UzAGlo0P3p9FcE4RjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKS
jOSkICUT1D0xuHbJOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
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
ac5wlnOc5wIXucRlrnCVa1znBje5xW3ukD64XnBffsBDHvGYJzzlGc95wUte
8ZqMymXirfyO93wgs2VZ+Cp/4zshYjpnCUkoQhOGHwhLOMITgYhEIjJRiEo0
ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjay
k4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapT
g5rUojZ1qEs96tOAhjSiMU1oSjN+pDktaEkrWtOGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8/8TMDGMgvDOLXYF86LrIxRB7KMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAg/zBn/zF3xziMEc4yjGOc4KTnOI0ZzjL
Oc5zgYtc4jJXuMo1rnODm9ziNnf4h3/5j7vc4z4PeMgjHvOEpzzjOS94ySte
84a3vOM9H/jIJz7zha984zshYjn3CUkoQhOGHwhLOMITgYhEIjJRiEo0ohOD
mMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc
5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKQV3OjxxUCeozzRXc
/8rNaUFLWtGaNrSlHe3pQMegfcrkoafci970oS/96M9P/MwABvJL0B9l8jFM
Hs4IRjKK0YxhbNBf6xRgvDyBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9gajIX2FWK7vIOd7GI3e9jLPvZzgIP8
wZ/8FYyhskU4Kh/jOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHf/iX
/7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN74TIrbzkpCE
IjRh+IGwhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjTjR5rTgpa0
ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/rzEz8zgIH8wiB+5Td+ZzBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CD/MGf/MXf
HOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mPu9zj
Pg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOyHiOP8JSShCE4Yf
CEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlI
SzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShL
OcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM36kOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPz/xMwMYyC8M4ld+43cGM4ShDGM4
IxjJKEYzhrGMYzwTmMikYJ+6VhZjqjyN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GBnMM7aVYK/5L85xGGOcJRjHOcE
JznFac5wlnOc5wIXucRlStpmKa7LN7jJLW5zh3/4l/+4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+U1qbygTvNuI6lk3LEVYOR3giEJFI
RA7+zyKiUt56FYLng3Jc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZ
yUJWspGdHOQkF7nJQ17ykZ8CFKQQhamojZUoLZcJ+kg5Kgf3zVSXa1CTWtTm
/wClrgnB
            "]]]}, {}, 
         {GrayLevel[0.5], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[PolygonBox[CompressedData["
1:eJwNxrVaAmAAQNFfZ5idfSUWWxTsABMT7A5sRRG7u1/PM5zv3spEOpYqDyGU
keSvIoSIRqny1dRQSx31NNBInCaaSZCkhVbaaKeDTrropodeUqTpo58BBhli
mAwjjDLGOBNMkiXHFNPMMMsc8yywyBLLrLDKGutssEmeLbbZYZc99jngkCMK
HHNCkVNKnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//AP6Jj4Q
            "]]]}, {}, 
         {GrayLevel[0.5], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{6093, 4, 5, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 
            6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 
            6090, 6091, 6092}}]]}, {}, 
         {GrayLevel[0.5], Opacity[0.3], EdgeForm[None], 
          GraphicsGroupBox[
           PolygonBox[{{6188, 2, 3, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 
            6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 
            6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 
            6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 
            6479}}]]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, 
         {GrayLevel[0.5], PointSize[0.003666666666666667], Thickness[Large], 
          LineBox[{1, 6189}], LineBox[{6190, 6, 7, 8, 9, 10, 11, 6191}], 
          LineBox[{6192, 32, 6193}], LineBox[{6194, 35, 6195}], 
          LineBox[{6196, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6197}], 
          LineBox[{6198, 59, 6199}], LineBox[{6200, 61, 62, 6201}], 
          LineBox[{6202, 65, 66, 67, 6203}], 
          LineBox[{6204, 72, 73, 74, 75, 76, 6205}], 
          LineBox[{6206, 78, 79, 80, 81, 82, 83, 84, 85, 86, 6207}], 
          LineBox[{6208, 88, 89, 90, 91, 92, 93, 94, 6209}], 
          LineBox[{6210, 106, 107, 108, 109, 6211}], 
          LineBox[{6212, 111, 112, 113, 114, 115, 116, 117, 6213}], 
          LineBox[{6214, 124, 125, 126, 127, 128, 6215}], 
          LineBox[{6216, 134, 135, 136, 6217}], LineBox[{6218, 138, 6219}], 
          LineBox[{6220, 141, 142, 143, 6221}], 
          LineBox[{6222, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 
           158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 
           171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 
           184, 185, 186, 187, 188, 189, 190, 191, 6223}], 
          LineBox[{6224, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 
           203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 
           216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 6225}], 
          LineBox[CompressedData["
1:eJwl1VVUFwYUB+A/2FioqAgWomKLjd1gByqKhWBioet2uk5jaS7s2IylLmw3
Yx12bCZ2YNc+zh6+e+7b7+Hee25UWkbi+KBAIDBVSQwPBI7pj3OCk5wik9Oc
4SznOM8FLnKJy1whi6tc4zo3uMktbnOHu9zjPgG5QQSTg5zkIjd5yEs+QshP
AQpSiMKEUoSiFCOM4pSgJOGUIoJISlOGspSjPFFUIJqKVKIyMVShKtWoTg1q
UovaxFKHutSjPg1oSCPiaEwTmtKM5rSgJa1oTRva0o72xJNABzrSic50oSvd
6E4PembPjl70pg9J9KUfyfRnAAMZxGBSGEIqaQxlGMMZwUhGkc5oxjCWcWQv
TQYTmMgDPMhDPMwjPMpjPM4TPMlTPM0zTOJZJjOF53ieF3iRl3iZV3iV13id
N3gz6P+dncZ0ZvAWb/MO7/Ie7zOTWcxmDnOZxwd8yEd8zHwWsJBFLGYJS1nG
clbwCZ+yklWsZg2f8Tlf8CVf8TVrWcc3fMt3fM96NrCRTWxmC1vZxg/8yHZ2
sJNd/MTP/MKv/Mbv/MGf/MXf7GYPe9nHfg5wkEMc5gj/8C9HOcZxTnCSU2Ry
mjOc5RznucBFLnGZK2RxlWtc5wY3ucVt7nCXe9wnEOz+CSYHOclFbvKQl3yE
kJ8CFKQQhQmlCEUpRhjFKUFJwilFBJGUpgxlKUd5oqhANBWpRGViqEJVqlGd
GtSkFrWJpQ51qUd9GtCQRsTRmCY0pRnNaUFLWtGaNrSlHe2JJ4EOdKQTnelC
V7rRnR70JJFe9KYPSfSlH8n0ZwADGcRgUhhCKmkMZRjDGcFIRpHOaMYwlnGM
J4MJ2bn+xn/sured
           "]], LineBox[{6228, 1154, 1155, 1156, 6229}], 
          LineBox[{6230, 1197, 1198, 6231}], 
          LineBox[{6232, 1200, 1201, 1202, 1203, 1204, 1205, 6233}], 
          LineBox[{6234, 1227, 1228, 6235}], 
          LineBox[{6236, 1244, 1245, 1246, 6237}], 
          LineBox[{6238, 1270, 1271, 1272, 1273, 1274, 6239}], 
          LineBox[{6240, 1301, 1302, 6241}], LineBox[{6242, 1319, 6243}], 
          LineBox[{6244, 1321, 1322, 1323, 6245}], 
          LineBox[{6246, 1325, 6247}], 
          LineBox[{6248, 1340, 1341, 1342, 6249}], 
          LineBox[{6250, 1344, 1345, 1346, 1347, 1348, 1349, 6251}], 
          LineBox[{6252, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 
           6253}], LineBox[CompressedData["
1:eJwN1WObkAkAheE3zEw2JjfZ1qLWRm0b1sicybZt27btJtu2beP+cD//4Fwn
okpU+cgYQRBES2R4EDQMCYJGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nG
dGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtbiWYb
29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrX
ucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R1BaBDEICaxiE0IoYQR
h7jEIz4JSEgiEpOEpCQjOSlISSpSE04a0pKO9GQgI5nITARZyEo2spODnOQi
N3nISz7yU4CCFKIwRShKMYpTgpKU4gM+5CM+pjRl+IRP+YzP+YIv+Yqv+YZv
+Y7v+YEf+YmfKUs5fqE8v1KBilSiMr/xO3/wJ3/xN//wL//xP1WoSjWqU4Oa
1KI2dahLPeoTSRQNaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs9
6EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOY
ySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtRLON7exg
J7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm
t7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o4gzP6JSSxiE0IoYcQhLvGI
TwISkojEJCEpyUhOClKSitSEk4a0pCM9GchIJjITQRayko3s5CAnuchNHvKS
j/wUoCCFKEwRilKMKJ/4Hm48+XA=
           "]], LineBox[CompressedData["
1:eJwV0Mk2AmAAgNHfyiu09RSUDJUQiiKpjJWZShrMU4S3di3u+jvnm6i1Cs2x
EEKRdiSEyfEQpogSY5o4M8wyxzwJkqRYIM0iSyyTYYVV1siSY50N8hTYZIsi
25TYoUyFKrvssc8BhxxRo06DY0445YxzLrjkimuatGhzQ4dbuvToM+COex54
5IlnXnjljXc+GPLJFyO++eH3v+HnHwSVJH8=
           "]], 
          LineBox[{6258, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941,
            6259}], 
          LineBox[{6260, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954,
            1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 
           1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 
           1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 
           1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 
           1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 6261}],
           LineBox[{6262, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 
           2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 
           2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 
           2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 
           6263}], LineBox[{6264, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 
           2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 
           2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 
           2088, 2089, 2090, 2091, 2092, 2093, 6265}], 
          LineBox[{6266, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106,
            2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 
           2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 
           2129, 2130, 6267}], 
          LineBox[{6268, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149,
            2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 
           2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 
           2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 
           2183, 2184, 2185, 2186, 2187, 6269}], 
          LineBox[{6270, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206,
            2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 
           2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 
           2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 
           2240, 2241, 2242, 2243, 6271}], 
          LineBox[{6272, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265,
            2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 
           2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 
           2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 
           2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 
           6273}], LineBox[{6274, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 
           2318, 2319, 6275}], 
          LineBox[{6276, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335,
            2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 
           2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 6277}], 
          LineBox[{6278, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380,
            2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 
           2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 
           2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 
           2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 6279}], 
          LineBox[{6280, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437,
            2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 
           2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 
           2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 
           2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 
           2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 6281}], 
          LineBox[{6282, 2502, 2503, 6283}], 
          LineBox[{6284, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513,
            2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 
           2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 
           2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 6285}],
           LineBox[{6286, 2551, 2552, 2553, 2554, 6287}], 
          LineBox[{6288, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574,
            2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 
           2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 6289}],
           LineBox[{6290, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 
           2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 
           2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 
           2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 
           2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 
           2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 
           6291}], LineBox[{6292, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 
           2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 
           2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 
           6293}], LineBox[{6294, 2734, 2735, 2736, 6295}], 
          LineBox[{6296, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746,
            2747, 2748, 2749, 2750, 2751, 6297}], 
          LineBox[{6298, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768,
            2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 
           2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 
           2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 
           2802, 2803, 2804, 2805, 2806, 6299}], 
          LineBox[{6300, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 
           6301}], LineBox[{6302, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 
           2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 6303}],
           LineBox[{6304, 2851, 2852, 2853, 6305}], 
          LineBox[{6306, 2855, 6307}], 
          LineBox[{6308, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865,
            2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 
           2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 
           2888, 2889, 2890, 2891, 2892, 2893, 2894, 6309}], 
          LineBox[{6310, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905,
            2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 
           2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 6311}], 
          LineBox[{6312, 2934, 2935, 2936, 2937, 2938, 2939, 6313}], 
          LineBox[{6314, 2960, 2961, 6315}], 
          LineBox[{6316, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971,
            2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 
           2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 
           2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 6317}], 
          LineBox[{6318, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030,
            3031, 3032, 3033, 3034, 3035, 3036, 3037, 6319}], 
          LineBox[{6320, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048,
            3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 6321}], 
          LineBox[{6322, 3072, 3073, 3074, 3075, 3076, 6323}], 
          LineBox[{6324, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086,
            3087, 3088, 3089, 3090, 3091, 6325}], 
          LineBox[{6326, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 6327}], 
          LineBox[{6328, 3109, 3110, 3111, 6329}], 
          LineBox[{6330, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123,
            3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 
           3135, 3136, 6331}], 
          LineBox[{6332, 3158, 3159, 3160, 3161, 3162, 3163, 6333}], 
          LineBox[{6334, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173,
            3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 
           3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 6335}], 
          LineBox[{6336, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215,
            3216, 3217, 3218, 3219, 3220, 6337}], 
          LineBox[{6338, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249,
            3250, 3251, 3252, 3253, 3254, 3255, 6339}], 
          LineBox[{6340, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268,
            3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 
           6341}], LineBox[{6342, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 
           3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 
           3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 
           3329, 3330, 3331, 3332, 6343}], 
          LineBox[{6344, 3346, 3347, 3348, 3349, 6345}], 
          LineBox[{6346, 3354, 6347}], LineBox[{6348, 3360, 6349}], 
          LineBox[{6350, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370,
            3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 
           6351}], LineBox[{6352, 3393, 6353}], LineBox[{6354, 3396, 6355}], 
          LineBox[{6356, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407,
            3408, 3409, 3410, 3411, 3412, 6357}], 
          LineBox[{6358, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439,
            3440, 3441, 3442, 3443, 3444, 6359}], 
          LineBox[{6360, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465,
            3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 
           3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 
           3488, 3489, 3490, 3491, 3492, 3493, 3494, 6361}], 
          LineBox[{6362, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511,
            3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 
           3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 
           3534, 3535, 3536, 3537, 3538, 3539, 3540, 6363}], 
          LineBox[{6364, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 
           6365}], LineBox[{6366, 3571, 6367}], 
          LineBox[{6368, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582,
            3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 
           3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 
           3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 
           3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 6369}],
           LineBox[{6370, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 
           3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 
           3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 
           3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 
           3675, 3676, 3677, 3678, 3679, 3680, 6371}], 
          LineBox[{6372, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700,
            3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 
           3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 
           3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 
           3734, 3735, 3736, 3737, 3738, 3739, 3740, 6373}], 
          LineBox[{6374, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752,
            3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 
           3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 
           3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 
           3786, 6375}], 
          LineBox[{6376, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796,
            3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 
           3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 
           3819, 6377}], 
          LineBox[{6378, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840,
            3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 
           3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 
           3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 
           3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 
           3885, 6379}], 
          LineBox[{6380, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895,
            3896, 3897, 3898, 3899, 3900, 6381}], 
          LineBox[{6382, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914,
            3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 
           3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 
           6383}], LineBox[{6384, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 
           3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 
           3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 
           3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 
           3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 
           3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 
           4003, 4004, 4005, 4006, 4007, 4008, 6385}], 
          LineBox[{6386, 4021, 4022, 6387}], 
          LineBox[{6388, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033,
            4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 
           4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 
           4056, 4057, 4058, 4059, 4060, 6389}], 
          LineBox[{6390, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076,
            4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 
           4088, 4089, 4090, 4091, 6391}], 
          LineBox[{6392, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117,
            4118, 4119, 4120, 4121, 4122, 6393}], 
          LineBox[{6394, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136,
            4137, 4138, 4139, 4140, 4141, 4142, 6395}], 
          LineBox[{6396, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154,
            4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 
           4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 6397}],
           LineBox[{6398, 4178, 4179, 4180, 4181, 4182, 4183, 6399}], 
          LineBox[{6400, 4189, 4190, 4191, 6401}], 
          LineBox[{6402, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204,
            4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 
           4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 6403}],
           LineBox[{6404, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 
           4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 
           4254, 4255, 4256, 4257, 4258, 4259, 6405}], 
          LineBox[{6406, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272,
            4273, 4274, 4275, 6407}], 
          LineBox[{6408, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294,
            4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 
           4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 
           4317, 6409}], 
          LineBox[{6410, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327,
            4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 
           4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 
           4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 
           4361, 4362, 4363, 4364, 4365, 4366, 4367, 6411}], 
          LineBox[{6412, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381,
            4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 
           6413}], LineBox[{6414, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 
           4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 6415}], 
          LineBox[{6416, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421,
            4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 
           4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 
           4444, 4445, 4446, 6417}], 
          LineBox[{6418, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457,
            4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 
           4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 
           4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 
           4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 
           4502, 4503, 4504, 4505, 6419}], 
          LineBox[{6420, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527,
            4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 
           4539, 4540, 4541, 4542, 6421}], 
          LineBox[{6422, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560,
            4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 
           4572, 6423}], 
          LineBox[{6424, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593,
            4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 
           4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 
           4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 
           4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 6425}], 
          LineBox[{6426, 4636, 6427}], 
          LineBox[{6428, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646,
            4647, 6429}], 
          LineBox[{6430, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667,
            4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 
           4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4689, 
           4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 
           4701, 4702, 4703, 4704, 6431}], 
          LineBox[{6432, 4709, 4710, 4711, 4712, 4713, 6433}], 
          LineBox[{6434, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724,
            4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 6435}], 
          LineBox[{6436, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744,
            4745, 6437}], 
          LineBox[{6438, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757,
            4758, 4759, 4760, 4761, 4762, 6439}], 
          LineBox[{6440, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778,
            4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4787, 4788, 4789, 
           4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 
           4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 
           4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 
           4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 
           6441}], LineBox[{6442, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 
           4846, 4847, 4848, 4849, 4850, 4851, 6443}], 
          LineBox[{6444, 4853, 4854, 4855, 4856, 6445}], 
          LineBox[CompressedData["
1:eJwV0lc7EGAAQOGPQiLKimRViIysKLOs7JGSvfceDZsrv9p4Xbx/4Dwnb35n
eDsihHBNWUYIN0kh3HJHSA4hgkge8ZgooonhCbE8JY54npFAIs95QRLJpJBK
Gi9JJ4NXZPKaLLLJIZc83vCWd+RTQCHvKaKYD5RQShnlfKSCSqqopoZP1FLH
Z75QTwONNNFMC1/5RitttNNBJ9/popseeumjnwEGGWKYH4zwk1+M8psxxplg
kimmmWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkD/85R//OeKYE04545wL
Lrl6aOmLe9pnMGE=
           "]], LineBox[CompressedData["
1:eJwV09dCCGAAQOE/m2RURmQUskK2rBQq3HkED8BT2CNb9sqWKHtvsjOzd7as
yCg+F9/1uToJEyaNnxgRQigmJS6EyTEhTGEq05jODGYyi9nMIYe5zGM+C1jI
IhazhFyWsozlrGAlq1jNGtayjvXksYGNbGIzW9jKNraTzw4K2MkuCiliN3vY
yz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5zlPMBS5yictc4SrXKOE6N7jJLW5z
h1Luco/7POAhj3jME57yjOe84CVlvOI1b3jLO97zgY+U84nPfOEr36jgOz+o
5Ce/+M0fqqjmLyE2hAhqUJNa1KYOdalHfRoQSUOiaERjmtCUaGKIpRnNaUFL
4mhFa+JpQ1va0Z4EEulARzqRRGe60JVudCeZHvSkFyn0pg996Ud/BjCQQaQy
mCEMZRjDSWME6WQwklGMJpMsshnDWMb9b/njH+Y5enk=
           "]], LineBox[{6450, 5198, 6451}], 
          LineBox[{6452, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225,
            5226, 5227, 5228, 6453}], 
          LineBox[{6454, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244,
            5245, 5246, 5247, 6455}], 
          LineBox[{6456, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 
           6457}], LineBox[{6458, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 
           5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 
           5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 
           5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 6459}],
           LineBox[{6460, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 
           5312, 5313, 5314, 5315, 5316, 5317, 6461}], LineBox[CompressedData["
1:eJwV1eN70AsABeBftrfV8rJtLNvLrmVt2bZ5bZt1UffmLsKybdvG24f3/AHn
ec5zIqJjo2LiBUEQJyLDg2BrSBBsI47t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlQWgQxCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRkIIZQwMpKJcDKThaxk
Izs5yEkEuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFaoS
STWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOCKFrSita0oS3taE8HOtKJznSh
K93oTjQ96EkvetOHvvSjPwMYyCBiiGUwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoy3uBN3uJt3uFd3uN9PuBDPuJj
PuFTPuNzvuBLvuJrvuFbvuN7fuBHfuJnfuFXlrOC3/idP/iTlaziL/5mNWtY
yzrWs4GNbOIf/uU//mczW9jKNuLYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
EoTZP/FJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUAIoYSRkUyEk5ksZCUb2clB
TiLIRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVIqlGd
GtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBZE0ZJWtKYNbWlHezrQkU50pgtd6UZ3
oulBT3rRmz70pR/9GcBABhFDLIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJU
pjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpa97tRXvgI7jQNg
           "]], 
          LineBox[{6464, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5790,
            5791, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 
           5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 
           5813, 5814, 5815, 5816, 5817, 5818, 6465}], 
          LineBox[{6466, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837,
            5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 
           6467}], LineBox[{6468, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 
           5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 
           5870, 5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 
           5881, 5882, 5883, 5884, 5885, 5886, 5887, 6469}], 
          LineBox[{6470, 5890, 6471}], 
          LineBox[{6472, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903,
            6473}], 
          LineBox[{6474, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918,
            5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 
           5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, 
           5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 6475}], 
          LineBox[{6476, 5957, 5958, 5959, 5960, 6477}], 
          LineBox[{6478, 5969, 5970, 5971, 5972, 5973, 5974}]}, 
         {GrayLevel[0.5], PointSize[0.003666666666666667], Thickness[Large], 
          LineBox[CompressedData["
1:eJwNw0VWAlAAAMDvKVx7JTe2ErYIooiB2N0KInYXdl+PmfemLpaqT9aEEKI2
1IbQaJPNtthqm+12GDFqzLiddtltj7322e+ACQdNmnLItMOOmHHUrGOOO+Gk
OafMO+2Ms84574KLLrnsiquuue6Gm2657Y677rlvwaIHljy07JHHnnjqmede
eOmV19546533PvjokxWfffHVN9/98NMvv/3x1z//rQJnHj3z
           "]]}, 
         {GrayLevel[0.5], PointSize[0.003666666666666667], Thickness[Large], 
          LineBox[{6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081,
            6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 
           6093}]}, 
         {GrayLevel[0.5], PointSize[0.003666666666666667], Thickness[Large], 
          LineBox[{6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103,
            6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 
           6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 
           6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 
           6479}]}}}], {{}, {}}}, {{}, {{}, {}, 
       {RGBColor[0, 0, 1], PointSize[0.004583333333333334], Thickness[Large], 
        LineBox[CompressedData["
1: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
tvQo4UESeMuzfHsXs4CkTn0qTx0lQdVIH5fXfwsoarRe3WKcBDn7/nnM+y6g
2ef33ZOnsPFotK803mMBmbdTDp+exeqDd36c4oyV1xW9OWaOhN2vfsVrmCyg
PafEfvAukcD4QhkpV3cBLWrtCDm7jI0fe8scChQXUPkXfnc/RnUotvh2rE18
Af3h8QryZFYH0sqjpzrL82ht/klvvwaX69g8kjIOeXWIUx02H9qDqx2YR0t2
4p3cXOog4Nhz783febSDfUL4H7c6cImmLfQUzqNdUgf7d/Crg+HjSz/Fvsyj
8q/Monu2qoOMqmR9VPw8GrEdDXyMmfij0W0fZu1BnbFYzAa2oSxdcfNob36+
Xx1mJik95VPP59EvUR+1DHl1qHYJ5lp5MI/W5stMcpIbmm7Oo9YQz9NBOHW4
6Tz3e8JtHmUnK16cp2K/T4zWMzjNo6bBS2OmmurQcuLn13fH59E/maMxznvV
oce7vtDp0Dzi3+148YWBOjyxOlKTdHAexQbzr4xiNrv+pNqUMo/W5uvopWtf
/kHA6jv5M8veQh2SL9nFMqnMo1tv2FKuWqvDM/upp3fF55HcjT/nUxzVQS21
35ODfx797c3P13FSh6n/ju/rYJxHiZdeo0FXLL534brQ6By6c+sYsfiiOuT/
VPe+0DuHeDkuH/t3WR3+Y3ei7uqcQ2vzh+4GTJx6VTmHbslU6Q/eVocHuXI7
JMvn0F8vUc++O+pwhvvWU66cOaS3OUJew18dToi+c3+WModqvyi3Sj1ShziN
T3qU5Dlkp3o8D2EWD5I7tD1xDgmcWpXxfawO513QKAqbQ9p21yRcwtXB/eC/
m9H35tDafCYpRnGGD9fn0M0tfX/2RKuDSYS/NM5jDt0I1OSS+KgODE9LuSMd
5tDp83ffJMarw3j9u+BXpnOo5GLY/HySOri8dsi7oDOHNPHvg+Qy1MH389DE
PtwckmKYfLI7Rx08LR4sxclj5bs8f+Sah8VL95WOpOQcWptfxXvU/Usw5xxi
Ke6686JUHTIzTH6YTs4iJ8MOM9FadfALn04cHpxFTUqP+P+rV4fPKzuNDv2b
RXkUhs31DeoQbrojubZ8Fvn9Kdl2o00dhgtTw4+nzqK6lWLewl51GDtJMw5L
mEWe9WcfmvarQ1fk6Bhn3Cxam+81Kx2PvIJm0edtvVadE+qwvWaLi8elWZQT
zyhjsoj1Hwr9io/HLKL+Ttt5e0kdjN44+AWem0WZq2f3JC5j8SvRuFtgOov8
MxRrO1nJYNl2g36HhP3/wbmyZV4y6N+hR7DgsPrlFB7az08GTYt/9513z6K1
+WfcB5vnkeAs2v4uJPjmFjIEDrXzBc/OoDKjYbvObWSQpdO/7RyfQeaBYUsR
MmQwZ9c+bTgwgxJ+1BoFypKhktecpFQ1g57vDv0QtYsMaH5/x5vMGZT58bsj
nxoZWOwP27IlzKAiTbFrz/FkCNuqT5h4N4PW5sOVBTFQrz+eQVxcLx650ckw
xRabknh1Bo2+c3v1Zh8ZWsVfJJW5zqCn27znyQfI4Jhw7Z+w7Qz6GKhxxsmA
DFwX6vTfGMwgw1JqYNtBMuwU5vUD6gyynns4G2dKBmK+QPtFhRnE4b0i4WeJ
xWOf72U6/wxam5/HbFe/N5plBo0rqKwu2JPhmIyHddXiNEolpX5XOk6GCrsP
x9o7ppGQbt5/XmfI0JhmdtAUplGEaczdfRfIcODCH37D3GmULhNm/RVzsEr9
rvbv06g1zsdtCXOO0xVGy6RptBhXM5blSYbMwzupta+mUVmDWuC4Nxl+0CjL
ozenkS7nHuEjPmSwUShxcL88jZ4oLOQP3yLDiXAwyXabRmvzC49ru/Z420+j
XR5j55zuk6GDVHQ68Mg0Euloqef3J4PzUohM6j7MH0kNHwLJsKAfUbmqOY2m
2/b6kx+RIeI3b9zn3Vh7ih7iep5ixyvLzJSweRqFigpGSjzH8qfFIb6JYxrp
bX1tmBdOBlVLxmh+hmlEtuLLf/6SDCoHjASvd02hG2HKZR5RZMirn3rhVTOF
+D5rQW00GU6ePO21LW8K3TZwIF/8SAYOXaVsntwpdO2DTYhkDBlGJXgPo6wp
tDZ/cubvzwWtF1NIdgdhKv4rGV64F+uq3p1CVimDXBPJZLjrz3hz2GMKufnu
lRROJ4OCKSnA4egUCmy5ljWbTQatGSeG30ZT6EAOI+vjHCyfbu4W09KZQn4r
FcJkRAYpexslmR1TaCCp/dXvQjLMucUof5CaQtwXdKLmf5CBMTB48BDLFLK4
3pvJUEqGW0L6V06tTKLxUd5ayTIy4H/eB4HpSbQ2//O/4IK6392T6ELr1r9d
VWRwaeVNcW+YRMmqDtfNa8lAejGdY/9jEtUEK5+4+5sM2kw2mqdgErHguPjs
GsiQoeZyYjBhEsnnWNs7NJNB6MbiVM2jSXT3XXddTTsZCHrjQm/9J5GqHDvD
jQ6s/A9Hg877TSL7E64G/zATZAi4yZuTSMz3ZqNDF9Yf3zE8TnKcRKeCZCac
+sgQlZxzwkdvEoVNW0X9HiKDw2uimhV1EglQbuSUjpJhwJFx+JbiJFqb3/pX
11EhSWQSXY0ZzmGYI0MtkiE+4ZhEgVe0q7YvYuUZeqT3TkwgOUe0RYmBAk6t
r9sVfk+gq2cPjX1ho8DQaRt8b8UEerg1rWs/BwXYy++zRxZPoN8pTJWOnBR4
/bbC+cDnCeScNrpbRYACVWpbPhnETiDBuhczTpjpzf1NXx5OoFZXl2t8ohTQ
23/IJuX+BLqd8xgvsYUCBQyqHW99JtDa/Nzf7eIFRNcJ1PVSWjZIkgIRDloR
do4T6MhYlVDlNgocPkQxkTedQJM5LfuFZCng0XswPsdoAiWqTXxUl6NAW7eX
/inaBLqe7GwZqUABhl/ZI8PbJ5C7aiZ3gDJWP2HW8gebJ9BAYevSTlUKfJhK
8innmUB7vWRuV+2hQFp7/r6B0XGk8agz6CcJq58/QeloxzhSqD309BWFAs2M
IqYt5ePI8W9Ap4MGBZAWc3RU8TiSjn4jukeTAvJOO4OH8sfR2vzj8irlh8R3
4yi4JVwh6AAF+PivyQ4/wWwyYnHdgALH9Q40ptwYR6rTV6X6jSkQP+1/Is1+
HJ2ZllE4dYQCW03bBe9bjCMbWxEOPnMK6Ei0Ti8dHkeFWr9ZRS0oUClxvnNI
fRwl3kzIenOUAt+USi8UqoyjTbkugua2FPBW1P7FIziO5lVy05IdKXDnJTnL
kn0cHbtwldfpBAV45uYyL8yMofX503u8kkLHx1DFP1GJPU4UKBsKda5uG0PV
S55j7mcpEEf6+EqiZgzlPu/IG3WlwLPkN+b6hWOowyDp+q/zFFBxs/5Gyx5D
edd2dgp4UOBGelNe5csxZP8tUFvrCgX2K2+f5A8bQyW/ymIlr1KgXYfrnPKz
MVQg94v5F2aZu1Zs3T5jyNcvvcrahwLWZrM9kx5jiMu3Tln1DgU2m57XopuP
IddnHTxXHmD516gcsmg8hvC6bu4r/hRIip8OYdMZQ2vzww2E3xYd3TmGhDo+
ZvcGYbavETTePIYEzJf7akIpoKTnMlfKNIYiN/NxPXxBgcJt9jKylaPI4s70
sa2RFHi597iXV/Yoaj7/3y6lNxRY/O32KyN+FJ1m0I8IfksBzsyjrr7nR9HO
u3IBX2Io0LHr7Ngll1FU5W3cJ/CJAqfGCecaVEbR5vZB2/wvFJD+VJBSKTOK
anfdMhdKoADRP/H5Sb5RtDa//eXKC63e0RFkQH+a25tCAfUXu5e21o+gG7VN
27zTsXziXhacTRxBJ6LyO0qyKDDbpKMiGDuCKut9k32yKZDYYjwb4TeCLpQJ
HQrPwX73W6l+pj2CDuo5XJ0uoMB1QbZj0+QR9K5n17mGQqx8+R/pIvgRFP7k
c7DTDwp8sk+85ys+gh5Zbqm/XUQBf8ofQaGBYRT53ZHaV0qBqL2PbUlpw2hI
xz/oQhUFtJpltri8GkYzCme9/tRg+3d4cMbt3DBam7+PBqTacoyGkfDyo4Cp
JixethYMlurD6IvqTkflv1g8TrAbXmMaRpPhRbUtHdh48a/2tEf2ENrPWxxa
1U+B04JGz1OzhlBa71PuZsyelyQ/XPof32oaTSX9j2Vb+5I/nR9CbTWfMn3G
sf769J/Bc9oQIurt1/g+Q4F63VT4IzuErrzw/6s8TwFLuV+aIgxDaG39AX+E
gcSHpUGkEXn98KZlCtSev9r/vmEQscy4P3/PQIX9n7+MpOYMIr5m06sCzFQQ
3qcoui9iEOUct+4nsFGBVcHf1PPhICrr17g4w04F1bN81klGg8hKgczbxUuF
L4WXntVpDSI2rrpXS3xU2JZ+5dAEeRDRanGJcfxUGLnVgsKHB9Cg/qZAmggV
NrdpkKfyBtAz5tBBwlYquAc1+w1GDiAuKfU35pJUOPuHO0Tk+ABaW09R/+e6
k8OhAeSX9DVwhxwVbs2ztmzaP4DYdp92YthBhRRR6b2ZMgPo86XpugIFKjhk
R6nJL/cjY7d77n93UaF3U8Ud/M9+xFPhoXFOlQrn/+VI/YvrRwVGt+RD1KjQ
4iJ7vtenH+Fe/lfqR6RCwqtnzSft+9G1r7WqjWQqmKqEyZvp96O550uT22lU
wH9Y2XNRuB9Fu7tejNlLhUcH/o3U1/WhyZFVn25dKmTp25d6lvQhv4TPJ3v0
qKBWXnCU/qsPqVaYKW/Tp8LyH4ZKt8I+tLZ+5NT9mjzO631oNk+ay+MwFbaf
lHcPMe5DlA6T6TwzKpSU7zr7R7kPzRvV8ERYUuF0jrDpw+lepOjA1nvclgqv
SSJP0/72ovNMB4/ePIbV5+aIcHJFL6rPCRxOtKfCuSnLbTWvelGqy1CZykls
+3Nbdic86kUS8krHT5yiwnR4ela1SS9ytjXp1jxLhYhj0Y/fUnvROyRtMe9C
BcUPWx91CPaiVjfHQ8LnqfDLYtZghK8Xra2H4fZ28fDv7UE/yQYCzh5UsE/2
sR+v6UGxvD8k2C5ix0P15fhSaA+KTnlO++lNhfu2AjJ7MW96YpdciTnGIvJX
9LMeZLyIztVhLirTZRa06EGnNvtyWN2gQp5gT8SseA+S3uHOpHGHCrSCaJaw
yX/ILEVB7O59LB97+T7tafiHevflGpzyp4KcRfzznJh/KNCaysLxmAoGsX3D
xTb/0Np6Ho96B0lezO7hV6d0Mb9ibDA2OfoP6X57wnsIs9KhjoXXlv/Qokvi
5xDMTZKZha3c/5CHjNKs52sqMEtEjV/40422pOwaCYuiwo9D+ly0b92IRXaL
5d5oKhTb/3CfuNONRAebJLfEUCHxVuPhcJdu9FyONY03lgqupDNhT491o1WO
H8kin6mg/7t80gLfjb7N5T/2+EIFlurFTUui3ei/I9+OPU3A8t9ElZbQ1oXk
X+pr/0yhwjeB4gr/gi50eGskd0ka1t9wdnwlYV1obf3SH5xEVOrlLgQWz8V3
5VBBw3W2reJ4F0o6+0BREVFB+7qXrt/OLpTfpitlWUiFYR7NGIfeTsSXpEOZ
LMPqU7yyOeZfJ9r5OeUKsZwKH+8j35GuTlSo3u124v993vve5rJOxHv5P2pA
FRXC37+8cvNtJ8q6+ki2q54K/G8eKPI5daJ4g/19u1uoIO9lskvMrhNtZr13
43grFSpDZZsuHO5Ea+uvdL4MLkoqYP//2euObzeW/8tPIr8IdyJ9tuC84B4s
n9maxVsWOtAD1trHVv1UuJJ9uGJ3Xwdi01qROzhIhTte3pwupR1I4W0p9/UR
KkhlpdvaRncgVu8v5hUTWP4KnTYqu92Bnj8E/T0zVOisE7140KUDzRyeO3ly
jgp2JRdTXuI7kK3PY/m7y1Ro+xf6SoOtA3nl1exqZqSBwWib6LmhdlR3LOCv
OgsNQlNd3+n1tKNBlln9Sszld/ON0v60o7X1ZdPlsovNz9vRW9aa0ffcNEjh
/PT90fl2dFtS60YLHw3m5QIudhq1o2tDQSwXN2HlO6lWP8W1oyW6qHvsFhq4
9S0qHdrcjriO1wUrSdGAqt+eb93Rhk6U/S2V2kEDe45sv9vZbWg8/bxl3E4a
6J1prnjysg2trXeTfUtU89nfhh5Upgdk4WjAedOd58W/VpS7vehtKJUG7uY1
jL2lrcho2IU3jE6DinnDCxbJrWiS6U6gryYNhlksNT8dbEUT1D3fWHVp0JrE
YNnQ34KmCjty1A7SYMuSR5VoWQuS0FV/QDxMA+UHnPpnP7egtfV3Djurvh47
0IKibEWmGK1p8LUnKEpk5C/qGSJV+x+jgcnZFhuPb3+R9r++v0GONLicNF09
5f0XDfwa+OhwigYXYqo9W5T+ol+RZaPJzjS4Iy7TbzHxB+XKJYz2umL7Z+hN
TH35B908JmH2zh2LZ8Mvtjcuf9DaekCOsxMjxP1/0LvoO+ayN2lgapKEez7T
jP7Lf9Rj4E8DjZ9iN24MN6P4H9PxgQE0UMdnfKrqa0YdT8zzqQ9p8M3hiTRn
YzOKM7VM83tEg90Vcedxz5oRI0XfOeE5DSBYU+uAVTNaW49I4L79JRePlZfu
WXjhLQ3k7++7UbfQhODS233LMVj7BMTkvCqakFWNbC6Kp0GTH2PFbEITajTP
bdmcSAObOe92EacmlLXlWnBdBg1ms6p/bFptRPbCGm4v82gQFzVWOTPTiHxl
o3XO5NPg738NtMPjjWhtfSTD+KZQ2/eN6M3Hgvv1xTRoHjxe9uleIwoYVvWN
LaNBD7fdS1HBRlS5def8WD3WfmI2IYWrEV3urRjx+U2D4pHj/GbMjahbV0iR
owHbvq10S0NgAxJ4L/6rs40GS56bX9/nakBr6zMNS5kXuDkb0LbHaoMLmF/L
TliHsDcgRm3UyNtPgyfCdMMLz3+jSL57+9QnsfbHNxj92f8b/WwPFi5bpMHn
HU0BbMq/UVWh55z6Cg3OWd+Nrub+jRRz5Fj2MtLB0zSDPTG7Hv03Jy78hoMO
+C0FqQ5e9WhtvWgk18896dr1yCVG381fiA6aj4WGBATqUdg27sF9InQgb7+0
TwXVoWp9wrEQcTposZz4gLesQzkfF1VjZOhwqpB21la1Dm17npqaIEsHgfxo
oolwHWq3Ke2/JUcHhV0VJVrdtSj46VnD/TvocFn8CovQiVrESpbgVVGgQ9cM
7tbTLbXIQCuw1x/7PUbxb7jNXA0qevh30yZs+zjK0RVBVLO+v02nG/A/j9Wg
wZ2v8gsl6JCuVPCrQqIG9Z4e+7ksTIcOn1WH6IVqFCKoc9xIkA5LqnY+Rp3V
6+1VezD+6mBQNZoicJy1Y6PDY2UXju+Xq5GfgNtuDSY6nD/9I9bTuHo9vn6N
wg7JGtXoUnxN+ft5Gvg7mgnxyVSjTWIJTsHTWP4R7VjedFShBQHB4++GaRBz
4w+HqXUV0medOps6RIP7u+dm4gwxX8g4aDGBjUfvHPc+24e5qrcnDiuv2EEm
oVmran1/btq9U0X0KuSxTXHp6TINuDSml37KV6FzhAmNCKz+Y14mLfsVqtbb
Y/O8y/bgjioklBDmeJufDsf76FPbH1Ws/+6SFb+H/KAC7X8ozl3Igx0/mRfP
m45XoHNfyFw2S9h4VO1l1mNfsb7/+H1Kwp0OFYi5+AqPKWab0F5DMbMKxHRY
8+XAFA1eTL/5iTtYsd4e0YB7C9foFWg5IhuXieXrNptJUpB6xXp+DxbHzgaS
K1D1ZNdqay8Nuv8TSxdqLUdBH8JVrZqx8fJj97PWr+Xr/ansjVj2NK4cZdC4
jzWW02B1mb013LYMZXHOfsqspIEm81vzgzOlSEFdXnV7DTY+7nvuluVUur49
gUVVR6OkBL1aFuX+1USD6DM7PUROlaCFAKvdjn+w8bBU32fvuWJ0v6pbMBzr
j+ZfD01ddyhGRlSG4e+Y9av1WZ67/UIp05p3xtppsHVAnS00pQjJZixKDnTQ
IC1gR8mZTUXI9b/y2oFOGgxQz4ZvuvQTxb2PHljowurX2eE3yfoTpQSLiCV1
02CzQAxRMKsQzR1rnXrbQ4OQ9wG7Qm4WIuee6BcMWDwutHSX6psVomzjy8/0
MPPslzq39UTBevwad8n1kmPz0Y5VmZY9AzQg833OEfDLR3++6ly7hFm2v7th
3DQfGahzSNVhNmVazNzHkYd2itxM8sDyscm7xOTpE0DBC/SEayM0UGpN8WII
RUi+1F5We4wGE37x99O6c9En3c0rEuM0YCyoLxJXyUG4PnUGA2y8sRBUW022
zFrPjy9X/mPO1M1CmhfqYAzz/jCRkS1aWai9idGcD8sn0ydGIblbspCrb8Yb
X8zTpKuH24bSUQip0fwJM9bfzloJi5ikIdcryg9MOekw97lb+mdiKmr6YMv7
jZsOTfiSTfwjKev5S6r1jgm1TkHbA3xyhgToYOsw80TGLxlV9TIX0rD+Ll8g
8p/R0ySkRZQ5u2cLtj39BXXT8SSUvM3hwirm8YNLAmzeiWhZ/NH8Xkk67HF8
oychkLA+nohdYTn930I8ymr4ufWLPB32SifnSXd/Rpsb7Fz3KNPhfUrx2zrL
WDRlQ+9o3EOHX6nhICT9Ca2tv68cmN4ZNPwB3au8dT6YRoeyn3g+cbZ36P23
FavBA3RoF85twa6xkdLgHucOXTr0t5zInQmPRqlup43u6tHhc9S7IzOf3yIz
qufNH4Z0MOcf/f3hchQirOxW8z1CB+GHF/eKPv8Pra3/v+G6eWyw8BWa5fy+
rcyBDt8Ff9ZduB6GaHcCjiqeo8O2OnJZ9IUwFIerdDqGucTi/s/CM2GIIV+2
9Crm6maXtF0mYSi2vexZMuY41bl6g6MhyJvJZKvfday8mer2FbZgtPb9gT0T
f+gzuMdoWPvG2ZAAOtTO8cr7bHqMroqkbGvFPDezKXPEyh9Fz5Hvkp9h9fVQ
E8oT9EMDyc2/Ql/QIcKz6sUl3TtoIKFzPu4dHZTfFw2729xGa9876HosMeTl
cgsxH9hV/TUGi3dUJuWmyTUkq1N5OOIrHWaHRLKNxb2QeoxzAjGDDnlKnh1W
Y57oZW50xKYsOpTeWcrUtPJAM9jdzc9vdJDp/eM92X8KnX4ia0ovooN+h/5m
aU1HtPa9BZHb+ll+XmZo/EHXW68aOsyrR/yWAm0kKR2qldVAh9iq+8XPtQVQ
kC9P1kgrHbaiodmkZFUtowrLPrleOoTfT6u3/YXXGnXuV3zWTwfqTLitxxma
1tr3Hfj/iz4suWW/1t3bfc8eLNBBxbf58/Lz/VpHCwdLxZbo0GxqeDw3+IDW
A8PLdcUsGhDDcb8el2Gk5XZ7+7VcXg0onpZmlp0x0mLaV24PfBrgK9Afo33F
SGvtexLbI09pp349qGW45fR0rvSGM3d8tIuQ2fh/H4H20fe7NMDm9L6wtysG
WpL6iawBeA145vnBOQk7217xvPwjkaCxXp+171eEWYpXL3zcq9XFzxInoasB
cY+8f03Ya2iNnXcu5dDXgMt3SP2llgpal38bcN820YCFH3U6w8eWNYuMjMo8
rTXA+hqDp9mILCo+8fFNiq0GuAvgj/htOojWvpdBMjGq2SpxFKVWvqZ4ndWA
fmFq42feUyjpUZHyJQ8NYBZ+bTrT6IzO/Zcib3tZA8oquOZ23XFDSqLx5YtX
NeCkW9HliduXUSy3+RFZfw3wNyrvM5TyRmvf5/BMNtU8GOqNfizu0RN/qLGe
T/uSDljpPtEAyZVe95P8dxAdX2LU8lIDWs0vrArW3UGnTkhqk/7TgDfKf6/o
KN9DfvKnAuuiNOCuAevr4Ao/9ONg66xFrAZ0/kqzUicEoLXvg5QwNTEbdj9C
BT05sDtTY71/+CtY43wwT2zmSNSWeYzMD4xqI8x7HqWGZb4JQrY7HxwTzNcA
Y85XN63bgtHZSz/6nIs0IDyt+bp3VCialrjnNFOjAaoiu/vGCc/R2vdJPj7c
LMDi9hzhSvIdBH9rrPfn9yEn9/k1acCWkP2JZp/DUd0NkeRLrRrgfPtqSZ7q
S9S2wyTcuxurH1fBPQ/VV+jIyNiVoV4NqNk+OiC87T8kQQDF/hENiB74ER+8
KwK5+597+npCA744tXhNRkWhg9Uf2JoXNOA72zHzU+/fIFZhnvFQBk34vNP8
Ze2paCSReeeJDo8meIiP/Sx4F40MUm1Ci3g1Yetl76MWOdHo5s2s2Mt8muvj
Y3voZLi5gCb4MT3q4+p+j5wHvmqrS2hCPfn2XOLnD2h/OP/2NGlNSA9kv3dj
awx6NOzPUKOoCY+l7ymGH45BU5+KQlmVNMGieheNXPwJ7b1WmBCN1wSjxD1f
gpxikZaWZBJZXXN9PBcJOZRwea8mOEok52g8jUMTmglPpvZrQv5IttuOqjhE
O3ZVI0hXE3ZtFvshYhiPnjErXh420ITAsgmk9f4L+ntXNrftiCaQ6kd9yuO+
IvW9KqU3j2oCNRtK+H4kIA91nYCvjpqAcpKrGa8kojjWhhZOZ02YufboyK3q
RIST7bJ2ddOElAneC/VziSjRjm/M8bzm+vlqyTmZ0/miJogqMC1zbk5GERO+
EzPXNUH9hemeRttkpML2osf6liaM7FcZYGRJQRE/ubPJDzQh0Sc6YoSQgqa+
6pKuB2iuny9PlK0obwvUhIgagRfTkylIsd/YSzdEE6Q1VDppNqnoWcjpi//C
NOE1q1uKVUkqirFRoOW81lw/Pz97eu790ltNYE9IuKJxNw01cOK/aL/XhOTm
j3rdYWloRxkjE+GDJgRf2D6yUpqGNj0Zp/vHaIKPqoq5TFI6euyrX+STpAm6
PgN+lw5nIOmE9KcymZpgtlrpMdeZgV5k4BPiczVhu/Gj7X9+Z6JI671+YsWa
0CCj8pONIwtJhLhK8pdiv68wmmWLZaGAX7tH8jGvXW9wmdtanyzXhFfvD9RP
m2ajd2lCwjWNmiCc3yhgXpWNRC9Jxy21aMJqbGyU1tlvKP7cNXSrRxOc58qk
F8K+oYPpXCo6/Zrw44YRQ97W72iTdT15YEwTfq7uOZdm/R3tHpYQGJ7SXL8e
utR2zq+EUQvcHm8Sj9XPQZvSeZmtmbUgk2rV7WGRg/hpD382YDb6m7606piD
9J52xZSxaMEFFzHuIFouOqReV5AqqAUdGfRSwdBcxCWlZf5D5P+aOu94rP7/
/9ubKCstiowQIqPOuS4iKlKJVFQoIkJkVLTQkIZkRBkhI6GQrNfL3rJ3Vkb2
3qPf6327fc/5/P683y6u6zrnep3n8/F8jeeDAvnFX9y7KQeAQFcDJ4swBf6a
My+iHALAeiZaKRqxxfemH6/aAWCinev9JkmBsb3pylFbILBP4Og9LUsh9d3Q
iIrcpcMU6JHN2qf9GoLsgaruV4iZlKMNPP0hoO2Ps49AvOefjhMN4lc9V17l
IxZh5NUb5swH746WWBUdp8AZpwrdL6r5YL3EdN1PnwJZj6gxn3qeD1ifzGTU
GlPgj5ETceW++aB2itN/AfF1f9NjR/zywa/SFxIi5ymQ06FCp7w/HyzFb/a9
a06BdG7vovewFwBzg33PhawopH7VH458keJMgfsxtYerzwtArs5AieptCize
/plu9kUBmHtRKmiNWPLj96qSVwWAV+27Xwli6WjP2GT2QjCHp2afekyBzktb
HjCrFYJJ+3uxRk8pcP6O+4vLfoUg40KG6qU3FKhaNKJl9b4QPDpYwJTlT4Hb
6XnymcYKwegZeUXNUAq8s88+1Jq7CAiz2aRdCqeQ+lzIwo4inEiBwiydbRn+
RcD0t4KOZRIFXs4bAZtDi8Cg0mC+/FcK1DoRytYQXwTaQtujOpLR+JB4Gp/D
XwzOftula5pNQfHsYz7nyWLQJxiqvyufAvPsl3vOuBeDEwXfT+YVU6B35ohq
Xmgx6Pyi1Xa8nAJTTv1r3J5fDHIaJed1qimw0z9Pk4a+BPxe1f/N0UiB37pY
zM2ES4Cu6sLMoRYKWX+8eHDJU6ePAjd7SpTtf1EC7OoK6bcPUmDW2QrpAP8S
0NbFcGMFsXzo7jNzISXAvUvstOlfCjRTUJYWGikBvMrHCx7OU6B5Zy9NOFMp
aMz/uTS0TIGThVu7pmRLwa/HRWdv0VBh3WY0trVLwdGeGV1XOip8qSvvpOhW
Cq6fUS60YaLCjSrs3q+YUtA8IaAszkaF4gxtleYlpcAh/mZTPgcV7uCIFs8d
KwWDhTzPezdR4eyC8/IZxjIg/brtWj0PFS7vYTxUdbkMPIrvrhLaSoUXnCQ8
gHkZsFAaO2WMmHWb2k7Vq2WgxPDnsweIiXrN9LqluowQFU58TaffVlQGxL8q
zUiKUGFg+5f6/NYy0BtbIvBrNxUGDdTO8KyUAbF47b+uYlSYfudF+R3RcjCq
T7NeK0GFj4c1yrFT5eCyYGSXljQVuoRlZhleLwfuLJ4NmCz6vtb69a0e5aD/
4mReiBwVbt5by13vUw7WnwvOvpWnQibZUFvppHLw+9ndmBwlKry11Ap+lpaD
bVcOsySpUFF99+dL1WQ5GCiN+02PUeFndhbbbwwV4MKqoe0BChUWSNAtuGyu
APCqv0wOlQqr676wFp6vAIy3wh676VCheepW36yLFaDVVu5AAmLe8/ukFU0r
wDXrv2cqERP17qEPzqtBx6jQ6tlZ8+nPFYDtJu7WfooKT/IzJqVmVACjLrYV
4TNUqPApfdGxuAJob/N0nDegwicXd/Q+n60AO50+uA8Yo88bcLYyZK4EjfoD
MOgiel1CMdhxZyUwjN9wEbxMhcbjlMJkmUrQc1zEXdOMCuVaud9pHa0EZ/LB
E65rVBiplJrtea0SsB1NTf9qTYUa7lO6ylaVQC0p8Po44iI1i8fyPqh+V3h/
0vsmFWaMtzof+1gJVht+H+S9RYWjB6atL6ZUAt4VJ+EiZyp8ZvLKmaOiEuhF
O/OtuVIhUJfdadBSCT74yD9zu0OF+itNylkrlcDllV9BxH0qPK2/L2qNpQpU
8ul33npIhT/lU3+EcleBadMvXzoeIZ755LesWQX2/1CrvvccjU+N0l9j2lXg
2BPJT8OIPd6M8PQcrwKcZYW8ar5Ucj6CZSYhq8iPCh12hIZaeVUB3qJrrGFv
qfCElw+l9lkVKFmit7kSgMbLBYloxddVYLfuibem76hw5oDF4ejUKnD5nbmo
ahi6v3eyzRh+VgFNmy65lg9UeKa1429bQRV4fjCWoyycCpXE71fIdVQBKpV3
YyiaCr/TqBUeHqoCBR2Zi3qfqbBJf0dT71wVSF7re70/AX3+89NbfzJWgyEP
8+3+SVRYvnBzwIG/GlD13uYVpVChdOjQm1jxagDOJkS+T6PCO+llTwr3VwOp
W+bBeAYV6nEq+yQdqQa5eXbeh7Ko8IVgaPOJC9WgPjkl428eFTqeWsgoR1w4
n+HGDKgw/KqY6KptNTgkp6P7rRBdH4/1eKF7NVC5s4OnrJQKl6Irob1nNXj2
8VqZZDl6fi/Nqjm9qAY/I3dvkaymwoBq60rh4GrguetC3pdaKgzO1xoJiqwG
aa/Ns441UKFqqevmoS/VQHnLelt4MxVyms66q/2oBm0KHN1+bVSoqeG/52FR
NXjz2cfj+m8qDJlsGjtWh/7fqyWCv4cKr0DGZe6WanA87YDTjT4qjA1r8y76
Ww1CnQ0K/IZQvPn7ib5gqhooLKRa+Q1TYYv+q89SC9UgpnTgre4oFeqOHlau
Zq8BO5b/bE+aRn+f3xUqv7kGpFi9kGWYpUITHrouUb4a8FmHQVd2DsW/G88c
MmRrwMomlp7KVSos7qDIf9tfA2TbLOfvrFGh6+PT9fvka4ABj97BnetU6MSs
THNeswYY99vlJzCqw3qjCxq62jUg8bh6zjTi8xT/nmb0uvmK+fmDTOrkfFwA
A8NwCoc6FL0mcK7HuAbce38gQ3eTOhyM6n+1er4GSOZse3z9/+OMzIaoZ4jj
hCy/nH5YA7LevIp3FVGHSsaTDELPa4FgdIBx/HZ1uP4s2ORLQC2YYfP0TOZV
h28qPCXtQ2vJ99NX7hS7HVkLUh8+T85lU4fqDaz8aYjhIa/xj4gZbp16//5z
Lfn9G52tZTWSasHiqeMXgmjVYXj/rknsay2wXwrsqaRRh/ZDKo8HvteS98es
vztvMrMWeKoPz79eosJsWiF3upxakBvQ+b52gQp394e/jCysJe+/s5wNR3hl
LbBjqvtXPUmFU3GJP7vra4Fj1a0KjzEqNPKV/+XZXkv+vlSjyUdx3bUgU5mN
UxD9/j0F0lbMo+j7MIq+3InGB9e21aTBiVpy/Mi40EXyztaCu8LMciZdVLhd
KcwpnbYObPX597i6BcWPozP3/OjryPEpsC589zVTHRh0cRiJaKLCy21zzJqC
dYC773ucBxrvIXQHfFUE6sjxv9uzeu3m1jpQ7vUhq7uKSs4v0zCIs7uj50Xc
0lvNVLoOnKVR3r2riArnmw6tGsvUkc9bntZM9lnZOoAnVj5VQCxy2kX0PaUO
7I6Y8DTLpsLM8pbhh+p15PNMc9qIY1azDrwK2cLfl4niNQOH7PkzdeBHvYZw
+DcqtJivyZQwqiPjhfMYfdi7C3XglPluodCv6Hk7FXiX5VodiA2SkuqMp8Ij
qZtKG6zryHhU4bfHq8mhDvj2zR04ieKViRIfZ5xrHZiYiAkTjETXa3eqydOj
jox3hxaHfIN86sDGLylWpvdIT/Sp5JU/Q9yaa3AqmAo9qee1wt/WkfGUleeY
iGB0HejIkspofkWFCdlvb/bE1AGt81n7zRG/61VZf51WR8bvypKW2Jb8OnA0
RF/F8wkVegd8nYirqgNjER+kXbyo8KKUlNFacx2ZH+7dD28d6K4DC6H+yRIo
f5yPGo2KmK0DH8MPWTx1R/Hw7VcZh8U6Mv/ohtDctFyvA8WFjI3VLii/JmRs
rGytB82DfF4RKJ+d7Qz36UBM5DdV3lXL80L1II07Psbuv3z3f+sXqS0pX+rt
0Pjxl+UIVa4Hgw9tbLktqdBHS/SSvlo9mU8duPt43Cn1QF6mawxaoPHaylR3
6Ww96PYuc/1qivIlPuNcer6ezNchcQtfWq7Wg/aT9736UD53qmscanaqB/7m
5c8sDamQjSmogdurntQDejyre5Lf14MdxcYCgXpofBwzYpAJrQe1m2nP2CDm
0S8zqUDcMrk+dQExVuTAV/qtntQjU7BF+HFBPeAqVBG6qYV+3w+JSQcb64HU
sTP7itWpsD3qd5N3dz2pdwpreJvuDNcD894Bw5tID7k9PB6oydEArivKzygc
RONf0kQ5j7OB1FMxVNGQA9wNQPBY7wFbxMT6UaxrEnPSAXS9OpNzfgcbQP/O
M96WMihfeUxz8x9uIPXc33mFPKMjDYB/pXl/ghQanwYN/a/MG0CuSZZ6ENKD
NRd3Rvo4NZB6sds61LvqVQOITBEINNhJhTYDSot0/g1gT1D7juEdVGj3qqfy
ydcGUp9e7u10bMxvALctvH1wfiqcjImzLepArzdm/6DdTIWvE9sDtgw1kPrX
rYUngGW6AeBDswwvuajk+hlfRcmnchYq/FbaaBq+qxE83L03pAXpa5nuMMC7
u5HU2+P9E//YJBrBnwb1/i+M6H7fsDM7YtQIns/FGfzeoECfHiWFIatGUs9/
eMg30vq0ERT6RNKJTVNgJXVyrPRFI7g9biDAOkWBcZ/bX8v5NwLtsuXPyRMU
+PW097X0r41k/YClt/C2FzYCkbCPDyi9FHggN8pBcaQR0KTsChpopsCliRNl
JXONZL3yVRIeHltpBNXHh4dv11PI9UWGNZ8JWVTfFGmYqT9SaQKtpRuZkkUU
KLT7pf8+rSayXtpy3fLcpFkT4GE6+moxiwLvhau31Lo2AUf1qs8b6ahefaVZ
lx7aRNZj3HQBxTk/moCg7uYb3Z8psDwuJmb9TxNocNhervER1aMvNfU1p5vI
+u+ZjTHH0aUmUDVUS1cVQiHXT03H0uUevaNAduVJ89cqzeAov3T3d18KbF5d
8avRbibrzT0yot5FVs2AuVvtj+1DVE/aVYioujeDkOthjVEeFEiPZ62nPmsG
owrBypJ30OttVn5nw5vJ+rad0lArnNUMRCQcvAPtKbDEz2UaX28GOu/Mj2lY
oPreK7ExkbaFrKdtKvds/k7fArJT0+jlERPrxQlDRw4+N6PArkmd+y/PtICQ
oXpc3pAC/0obiQOnFrKe17/rHuce2QKKlsrjFHQoULH3qm98XQso2bxD14RK
gS5jZR3af1vI+YI4nPFb31QLMOt/8gw7RCHXt/dwle7VU6HAftWx0HJqKzkf
UTLMUj5q2krOVyyymBjZvWkFEpnZNs4iFFi6O3d0/Gsr0FPsnKvcjurjGWmr
isZWcj5k0kUh6WNfK4i6y/Y+kpdCrt/nTn/ZdoCbAmvSjSVwxTaA4do8LcwU
eNN11KVbr42cfwkprik94dMG1v851vKu4vALz3m+1eA2oLvX2k9rCYdJlGGB
pLI2cr5HSEex8VNbGxAHllY3JnByvwGv8F5W62EcvrEsrVWTaQdPR/N+lvTi
UFNMxMnvaDs5v1T8GvfkeNQOmNRY0lWbcPhZ9/6LH+/agWOio9e5ehzu9G+Z
6iptJ+ez0mRigiVa28Gk97anxWU4uZ9i1UZL6UQRDhPX5tTEZDuAyjaP9ZM5
OHzXtTIpfqKDnD8rNlYylnvaARLVSn32puDwQ5UH87+2DsDHetud5TMOuZrK
CudHOsj5OQfRMcbh8Q4gvpOhqSsaJ/d/hDmdfHodcdEG4N5n2AmO2t7MSAvB
4bD9Js3l0E5yvrB0KMVtIbcTMIsx7Yt7iZP7T/LnL6W8eYbD9MhpBjnx3+Bv
p+/Qp8c4dPlmdc3l5G9yvvJjAabn/vo3EHIYqY9ww8n9L+xPGpOf2uNIj7nT
ca7+Bj9otgRm2KHrrzQbPcfcRc6X6nK3x45f6gJmCvtyP1jgsHByLzdu2QWu
7E6TaTXHIWe0krNEURc5H8u9/LzLpr4LjC31feMwxsn9OhNSi5bSRjhk5+Fg
E6F2gx1qlMpLeuj+Hfrzb8irm5z/5brokvsjqRskFw17f9XAyf1CUrvNtKsx
HHa3bQze4OoB/T/zG7apoOuZOvpXc28POf/sx1n3AR7tAblbS9NiZXByv1L7
yIaBjDgO9zjZFp306gEPttWkruzB4Y2Un2HV73vI+e6QDjn21qIeMKBEY58v
hJP7pR49mvi7mw+H3sU8cU8Ze0FN8E3+lzw4dO48toNLuJecbzd5oGH9+Wgv
oF3J1LvBgpP7s0KiokRc6XEY/Tx2ieNpL5jm/iRl8A+DfefWu9Xjesn5/dqq
a9enyntBSafQvN4CRu4Po6OJHz08g8FRN2uqAkcf0JrKmTYax+CF4LV1WqU+
cj2hY2n+r5x+HxB8+/3MvX6M3L9Wue/Otge9GDyy8nHIyL8POHoOfvjcgUH2
tc+yt4r7yPUNr4Odt44194Hc5F2J0/UYuV/uq7iaiFwdBql7d3UeEfoDDHPk
hw5XYFDNdVv+OeM/wI7OPsujECP35x3y3ezmXoDBwZ5dy1YWfwCW9rb3JGKL
paELv6/9Iddfbkb635RM+gPUawa93LIw+GkoweIQ+AN+Z3wJfJ+JkfsFefoP
8D5Lx6BBqsTeruU/IEDsxc8t3zEYfqTyevjOfiA3YfElIRmDQbcuSj/f00+u
D3FUWPd5avcDAbnQG/WJGLlfUcNqmwOMx2B2Sj4/5V0/qPnM2fYuGoNPXl26
u/SzH6wde/8cj8TI/ZF+f26xq31E16f6823Hn36wZbuK5Z0PGDSd/Gz2erqf
XL+qEnssrKowAAbTQ+8ZBmLkfky1B0HdHf4YjAzjZUl4OABunIhZOf8Kg/Y+
TS++lw6Q62eW/N2h1nUDYN1RXM/mKUbuB6UdT3g28gSD3wdfageMDYAWjUYj
Hh90P2p3SXxSGwT5RUMG+t4Yud/UemyPVf1jDJ6yC6zZ/HIQdFqwUzIeYJDG
qfVReuAgqHLYyqKGmNjfep+1pxbzwODzwdrbffOD4GtUm3LYXXQ/fSJ6tDWH
AIvI6VrMDSP31zbKOp7+6YpBF43eiZlzQ0DnolqoHeIzkDdA8fYQuX441H9+
64+8IRAmdnBj1gkj9/OeczdRf4m4IevQuNzAEOh8GqGwfAuDdf+2TGdL/wWM
27e/eeOIkfuHR0/IZIsipmv1tB13+At2yQYm/HHAoLVXPU1dzF9wyW2BoQ0x
sV+ZOSi8mgf9/SJf+rfPI3/BhcbpS48RR1snbMk5MAwqY8R8NdDnE/uhie8n
KtHIw2s4DL4KSig5OGPQb7PSJrMHw+T13Pt3qf973jCYi7pafRddL7Efu/nc
TNZLxIKWbMY1NcNg2v2PRSzim0cdGs7Kj4As6Zul0u4Yud97m2hW4H3E5jrx
eTYmI0Cf/z0fwx2M3D8eoni1KBzdf2J/+fm65Vfv72FQKEKO68zCCOgwEV9R
88Sgh2Z81hPmUTBD/86yHjGxf73R1O/gFPp9XwRtRBnfGAVTLqMBuY/Q/U3y
2aL9aZQcL8R++a0l0gmRaDw9ylcS7qwYBamtbWYn0XjLnWQ06JwcJcencmAL
3a+9Y+B3CLv19RcYuX9/Msx5f4IfBq+ocud52I0Bqx8C/eWvMfhGj7Iv+f4Y
CGKczVl6g5HnAy72XS1hRc9H2AlKPNY0BnQXjBpZgtH4STsizMc+Tj5POivb
BlrFx8EZUU6P5+j5I84nWIi7HKkKx+D0UnZHgvk4YNL21smKwuBdb46u2w/H
UT6LsN34hJHnIWJGuXkkYjE4dZmG9vKfcRD1+u6sQhwGu16XJ1/eMgHkFD7O
X0rAyPMWowYpXm0oXmQXVbIlH5kATl8sNqK/YLB6+PVUtesEGV8yhcc2bfk0
AW7cTfdRS8XI8x8Rmrxhw4g3trB8DK+aAJim0iNdFK+mcErnRdpJYCHiE7OC
4hlx/uTXyfR9V1G841ln8c9TmCTjn8PjoPvHL02CSrewugkUH8V8dycavZoE
ZnJpN2JzMfK8i5Ck1psTAIN7jFXNsaxJsKxa08oCMZjStThb+HuSjLd07ns6
U9mmgKA6U5R6MUaet9n2feGtawkGlbov3X0sMwVS1P2KzpdjkO12e1+z8hQo
0lx4HorivcO5K0u3KVOgNcRM9GklRp73uXlnRZyvBuULA+1P765OAbOXY0q8
tRi0W0/VrvKdIvNLyIQtx8zrKRChwe2c0ISR54tsr3z2GkWczUNbHR08BbgZ
qrmjm9H7R9pYCOROAbH5TRqnUb4izjd5vymZ/fob5a9fM+G7JqaA7+Hkrvvd
KD6V6fz+vTAF/sh4xHD0YOT5qmM3VdYByn8TFi4c/SLTIJDZ529HH7q+4Myg
h9rTIJvT+PblAYw8v7XxOqVsEjFxvuvy07UgjUEMLtm9v7FqN03m29NR28WH
nk4DtjwapZxhjDw/Jvpykk1yBIMVCfbxT4KngZLxldZfiOtOUJrEcqaBS3y0
KxXlb+K8WvmCXbDrBAb/unycVhiZBo8/rI04TmFQgPbkis7kNGAKOEhXjZg4
Dyeu8kq6B+kBkQKdwFO7Z0CmR0aj2RwGE87uY71yeAb0i/sxH0L6gTh/Z/Kh
uE1/EbGG0hNNwxkwnXzrzRripdduwrEeM6T+KLrInyPxdAZc1fdnDVvFyPOB
Fnt5IkoQm1m1n815OQMml7WNNq+h+8M1prieNQO4TPgwKtIzxPlDnzq9TYY0
OKT51v8gsHcGQKWdDzbR4dDdN9w9anwGXEspiJpB/I51i74CzSyo1HhQfYoB
J88/ni1KS5lGLGKmek5UeBa4ZW36msyEw8eKx/0mFGeBcccmbwWkr4jzlmuG
aZ/5WHHINz4da2g8C/yqJ+l/oNfpr4+F69yeRfXAxoVwxMR5zrNXXuh8Qzx5
5Eo/U9AscHjkMV2O+J51jFRB+v/ejzhPase8knYMsVy2WQRsmAU2XW4nnBFn
bFJOsFycBbnbKjsHEBPnWb28B3+wsyG9H6hke4h7DhybpH0rj3gqvUySXXUO
ePT28mQgJs7LsneFyLcgFqiYrPXXnUP6QerBMuJ+emfuhjtzYMMkeOw1O06e
z638lGL5GbF0avKWmadzYKg4chNAfP7j1q1vc+ZAn8gHa2sOnDwPXNQsde4e
Yp9zZolY8Ryw32n47Pl/3NP61GVjDniHqb/QRfqVOG9M8JXjnNce0s6DtzJZ
V4wRK5iJFVwWmSf1bu6z79RcbB4YzNa+k+DCyfPOU/GPZqUQf98dvHSeOg8k
BQa/7kccxncWn3afB9/sQyRWERPnr5fsbmeyb8JhIIfjryuP5oGftpTrDsRr
4xOmOzLmQULUlq21iInz3e//bu2YQEzXqcJxqmgebDt7fi8DN9LbiW5/5Gfm
wZ3lqN1fEBPnySkWeet1iD8xCb+0YVoATNVtrYuIyywclmgPLABll+O/tiEm
zq9fW1A1sUHvr3xLTwyjLADXtjR6EcQj5aHsD4wXyOsnzst/vF34hR7dT/v7
I1emHyyA3SY+iiHo9yizr9bYn7AA5B35Xtuj8UGcz/8R3z6SjMabwzkxFYnq
BUBVjBIMZUb1xadk75buBfCTwYElBo13oh9Amv99fntGHC4bxvAbcC6SzwsW
E0cN51sEqbfeLP5B9cX9twq7hLcuAo38EyPJiIl+BD7hqheV0PM2zZn0w+XE
Ivijxx8lTotDsW/zIPXqIlAMWPX4g55fov/BNczWmRlx1O+cEdOHi0AvcIPZ
YQODO+buFU8lL4I3V28P70fPP9FvYVirSngRxQedvonTzj8WyXghYnu0Fa9c
JOOLQd6jr20N6PNof8jZIe57dDK+fHwRXLyRKia3jJH9HzolZo9MLWEwYrB2
7e/KIrgZIRvxBvGdPV9pdokugTMppxNDUHwj+k0YnzU6PTmPwZrMSHVprSVg
pNmdL4nYdYv8eyvTJTBhH2gwiOIj0d+ieTr+lCjiwpDk1XDfJbB2MVprCMVT
OzsWCfOAJfAzueLpQ8REPw3h1qJfOIrPzrYsVpJgCdADS0fHMQzuPC0g+qB/
icwHRP+PzkhV7iSUL25eblThXVgCnCcSmOpQPuHmOxIrvXUZSOtqn41D+Yjo
N6L+vfWRJMpfRh/p7pgeXQa27b2LpzuR3j/cOxltugyeaE/LhrRhZD8U6pm4
4foWDG6O7/qU7rQMMpfn7JkRNzD98nntvUzmW3X6idCzkcvAy0v7QD2q34h+
LIEPqtKCUX72+zcW7FiwDNZcvmkfRPlbWd6l1aR+GezA4gI/VWNkfxj3Anpn
WIX+/vfPnjHWFSAjmfE0GuV/m+PK8yFsK2A++0x1OGKiH83n3Yx9j5FeCK2g
rxnUWAGMcVdABNITIT5X51ROrwCWPf2rwoiJfjdcU9bsumUYLD9eG3vg7grY
HHAzNbIU6bdAoaKA4BUQn/z1ezDSJ0R/HefcGkVexAvycYdef18BF8a7L31G
euZr689tdd0rIIef2re1CCP793Q8P3CpE9WnEt+ceX+ProAbbeOn4hDbMbFN
KAqt/m8/oJWFyHnRVSDKuff2j3yM7B90t3hVIx4xlUanbX7vKoiJHJSMQnxg
4eyONpNVILNduawU6S+iP9Hz9ucf7yOue9l7RurmKjAEkhliiENtlO6rv1sF
V5gP0NUh/Ub0Q1KNrTxnjHgo9JKLcvoq2HJzgD89B43PXaIvcqtXgdChG3t7
sjGy35JTkNZ7ccT/4jpCNNdWwa/tka6aSB9aPRV0VWdaA3ZihnHTPzGyv1Pe
VpVUOsTPozdTq/E1YFYy9YQR6Uvhhwef7T6yBpS3PGHr+4GR/aPk3fiSmzMw
aHLDqs/ZZQ18/GFT0Yj0akfdDPbXdw3AX+ZjY2kY2a/KwuD9eSHENd36bE+S
1gC2LU3QFeldxwXlQpumNRBu944RID1M9MNSGKg1u4KYelZFIaR/Dfz2XLfc
irg8bPhCBs86qa/Tzfg+hm5bB0dv/1nO+IqR/bjCZH6WxiFmTnN88XvnOsh0
29f+DrFE83px0pl1MNgqrXMe6XWi31dHSMbRJaTn37dm8Fy5vg7e81+atUIc
mDod/+vZOsiPbztNg/Q/0V+sL/gU25F4DB4yq4n9lLoOLlrvXNFF9QLL3va6
XrgOrnDuiYj6jJH9y/Ky/w0GoPrigEbnFYEl9H57OQL0Y9B4ODW9uLCyDgZO
3tWSQUz0S6s/sfn+KKpPuhJaebT2bwCvZ0ekVlD94nlrvVZKcwP0coUzCyAm
+rEJH3tafzQSxc/MdA9tyw0wel8yNygC6UWbyr02LzeAwEsJ4xRUHxH93uIY
r6adRjwChN98CdsA2xVkNhgRV8rLGV4r3CDrK6KfnHwBJdAkFMXvfyW2f1s3
gI2xaPZBxJs/cMoFsv4DUw6rC6OoPiP612V7bnOzQhy9Un3TZc8/8DQ9xzwz
CNXP4NnvzdR/YO4o72kzVN8R/fHopgP/3XuH6o9X5Wlzdv9A2/3MYjwAxZs7
KzX3Xf4BmFw+WfcWI/vxLTTk7nbxR/fHU/pg4Jd/oIXS+UQC1Y9qi3qV+3/+
A1772K+8QPUl0e+PmE/xfnzpw5e+f2Dk18Su+y8xeM7F7twhOhqopdVg14zq
VaK/4D13XI6KmF9T55EZBw38d5k2s8kX1c+eYV3dAjTw7vlTPOnPUf6z36Vq
tpeG9B+0PtqbbitOA3mntpySRkz0N2x/lBIgjtgpIbmvFfH0lBiLKOJcnTvD
rho0UOLB3r+PUH1N9FMk5m+mguyeOOjRwKey9Ptvo3p8blDu4c0rNFA3eCdb
KGKiX+OK/IlNZxErBiUteNvRQMFY3Jcf8danwsXfPWlg3NySR58XRvaHVJpO
+UCPXrejUQv49IIGinIdXNBF7O+2BwRH0UD/q4MDvqi+J/pPGtfQ5qciTvtI
kzn+mQYe42V5XItYq9YxpiP7f9cvXs1i6F9IA82+9UXvQPeH6H9p9szskA7i
xN5XmptKaaCA6uPWF4ivHd4v+bGTBqb/5opc8cPI/pt9KZZYPPq9TprgV9On
aODglMZdgH7vJPd7tDtmaaD9LddLV9B4yMGrKBsLNDCYo4XWGY0Xot8nAy3X
Kw00vugFDVKz2GlhV+CW9/fR+AvjMdR/tJsWepzgn/mGxi/RT1RGO+d8J2IX
gcKiCsTHrJPo5hDLP/8mzydGC4nnYdLj6IUANVp43WGgUho9b0Q/0+zo6M1n
0fMaQ5leUThFC2eTuq9tRc//ju3z+3rP08JPl6woW1D8IPqpPuC9aN2B4g+/
ayM17yotpLY7fkxMQnrJff79Jmta0t/yRwzHI1M3WnigIaGqEsVPon/rAftH
V1+g+Mx+PzxM0JcWBuwTV7qN8oGIyq/O4iBaSNbzKslFOz/QQq6z/k6+KN8R
/WL/WXk9fI7yI6uwFR1nCi28b8kixI/y94Gki1ccvtPC3kDdPnqU34n+tG5K
F6ISkR6gj6RfCiqmhYJKd59y1aPf7+Q5vbRftKQ/J9/pU+Vp7bSwYs304LFW
jOyXu/grvX4R6RNnGJhuNUELif3vFDk9F4tJWvg+N2VPCeLizbOf4qdp4e0a
1RuP/9M7/9efN55t8uuOfgx+UPEqTKWng6Zu3iweSC+t6ctNNbLRQUJfnbh6
/3aSAB1ckJkIu4b0F9EPuPdDB8OmSQxKCcPHxvvoIC/95m+esxhUYHHLP4rT
QX6/wrQEpDeJ/sPMDeUu5YjDxAqYkxBHP7vbWImY93OXaSNiQq9+6Hidm3Wa
DsoNWfgdQfqZ6IccjN/5qYz0us0vxVt+V+ng0GJ6YRfS9/FpHb0eDnSQqA+E
33Rvlr5DB28ppZhWovqB6L8cu8HldAfVG8tAP8/eiw6Kf889OsWDw5ycEsP7
b9DnaYWdS+XFyf7OtwJ7FkQEcNhZHbaRFUcHg8K+PY7ZisO05UJHk3Q6yMNq
zO6wHSf7Rw/pXjxCtxOHzxaOvwOADvpNPfiVhXhfcJZqZBkdJNY7lDPH7dOa
6eDMTn7/tj042c96j920DYsYDl+UfLX6MEQHf/l7uuWIo/pB8yb/nXE6+LXz
XyavJE72y2b+IndRWxqHUjuHu5QZ6GEks17oWVkcLlDFdoQL0UNifWb8tvbp
GsSpZ333fkFM9Ocm2OySvQXjNnp4MSzdOAtxmuV7ZkN5enjg3msJTlWc7P8t
t+QeqXEIhxcWDC5Y69DDjPmgdUEch7d23SrO0KWH1WGMNimIif7jv0VHZx2p
OFzcOXNVyJweWuwLe++vjq4nqsVf+zY9vDG4yiupiZP9zZOtz17/ifit9mv7
yrv0cJNZhDKHFg41jz8brfShh8R6Vbrhjp6r7+jhta4apgAdnOynPvnUy4Dt
GLqeAptTAh/R9wnhDC1F3Lr2MWDiKz2UPlikK6aLk/3aTbzCxc7q4dBcliVH
oQh9fv50RjFiAet7csYV9NDhCcvYu5Po+5c3WdxrpIc/awwYmE/hZP94j0Fb
jkeIGdO7wjP+0MOJHxEq6mdwqFo/dddtnB5e7WhWTjTAyf70Lul5AQKGOMxw
UtFgXaeHWhwnP84i/qubqLmDjwES63mxxq/mz/EzQCWBJLM4xEQ/fA++Z9OZ
iDt1w0N3CjBAnkkspQLx6isjpjf7GeCjl6YSNqY42W/f0sA8RuMSDkOKtjft
ojBA82TTf2OIBWuhIccJBsgoRbe79jJO9vt/9Sg9NPQKDivnZe4IWjDAiymF
h6LMcHiXli78nyUDHHq8Mj2OmPATGN9pq7dsjsOLgzolK4/Q/zu8YmK+isPH
TqrqrE8YoJBmSc4ZxIRfgbeET9bFazj8hz0RHvnIADkfqiqKW+Iw+ZbZJZFE
Bri4/HNQyAon/RBecVh9LEUs2gfC6rIYYNHG0R2613F4Ke/xB/lfDDBU47hh
lzVO+jEc/LzcrWSDw6r6GbXUZgaYNvwj/zZiLxOp+MZJBkisr0657PsRPMMA
ra2KE94jJvwf+JInO+MQlx9Pe2I4ywD1thsEJyF+T2MQcp2LEVZIrxdX38RJ
f4lXdkHKO+1xyJPoKOYrwAjzElcfPEGsMe2trCPFCLMEbtosOuCkf0WP/tnE
9444DJaXbsw5xAj9vWbYL9/CoV3p50PcRxmhwXFW9f1OOOmfcQ1bdU1E3B4g
W0q5xAh98q89PuCMw4cRK2IeFuj/JU0nrBET/hyhlDM+84gLWpJKOR8wQlPZ
EdHQ2zjcLGMwMY04MFSvJxxxd6ArHu/DCFMCcnf1ISb8QN4s6qgdd8FJv5C4
jxmxvYglaxRi/0Qywpss9Q+ZXXHSb0RPo1PhPWLMbZwpJ5sRPlLMSd3phsbr
kVBZ/0JGeBWWKZkgJvxOiPXwa9/qXk63McLgb3FpPYgP6egtaPYzQo260x5b
3XHST2XlgZPQJcS6MkX5akuMMDJ8+59AxNtfclqzMzJBWSeDkD7EhF9L65s1
s2130Hi7mFPvy8+E4pKMkQ7ie8Jl6+ViTLD38/RyLGLCHyY9yju+FbHRsViV
ckUmeEou4wPjXRwKUX0vBxxlgtY0MU63EBP+NHI28GQw4nsj7+5xGTDBxYYO
yTzEsXJRZSJWTNC9gk996z2c9L8JK6d/JoLYR2rMpNfxfxzGsTujy4cJSpZk
x2kgJvx1zA/suqqN2NPu7jDdGybIefdYoCFiZ8M9oR9imaDEBzWKHWLCz6e+
/6rjXcSOAvwKiilMkP1MmfQDxMcY5Q7bljDBkJMPdCMRE35Cddl/mGMRSyjG
JZ3/xQS7dU06UxHvPCkvsm+QCQaJ/eurREz4FWnYSfK1I77EQGV+MsEE77S/
qO1CfCv1SAQtEzOkasYlMnjgpB8Swee0f72N42SGo771vzcjHuDqL1ETYyb/
n/Bbis1w/dGCWLR45kugDDP5+ddqjdYVNZnhBJOR0FvEhJ9TWsjMpZf/8cK2
6Bd6zOT1RtS3dGlYMEPHoiAVA8SEfxRxP7PFtUIf2THDB55vXBT/ux4Rgz6d
R8wwi9cllAsx4U/Vcvlv0ir6PY8JXhm66scMaQ83BMwh/t1XLHgkkhnuV6cM
FCAm/LAu7JCqykbcbO8zaZTEDDfvOnk4EXFb3rHhs5AZ6qUrmHkjJvy2ouxY
9rsijhqPZ9GqZoYw8476VcRbFuaKDnUxw40ZC44ANB4Jfy+j9UNJcogdr3sN
v55En+cGhlPQeF9vWXHHV5nJ54XwD+PsdtwIQM+Tye+/L0d4WGC9Cv/xefR8
Dv6k2a8uyAJ9kikTHxETfmW+BpoBc+j59uo2pD2lyAJdms69UUBcG8rUf0SJ
BVb4yVwWRZxZ/cvAQ42FjBeEP5rA+VcblxFne3CEHD3DArltt9XGo/hT7ax+
77sRC7TSu8XsiJjwYzvgtWUmH8WzmMubTx6zZyHj3Y/hGBFOdxbYxVlulY7i
IeH3NnLt2JG9iP3UBel1X7DAYInF1DQUP3tHNwfcCmWBDxPYkmdQfCX85Zxv
BCS9QUwt27i1J54F7pbV2C6MeH4q7VddHgs8f/dHZgiK34SfXYfKcvN5xAJ9
VjV6xSywtpbWdg9iq5OGC2xdLGS+SG5qELzXywIFpZy2SiIm/PR6cjZdEkV8
R+t5m2sfC1S6PbCPH/Gn4RKVtHUWOFQpnKqI8g/h13d/sUVjGuUrr/snjzEx
scKfGVhdBGJjh1Tfnq2ssO/Yz/2qKL8R/oADRYdtf6L85yu883a0JCus3vHr
nwjiaYsdzVwHWaHUJ6nfOMqfhB/hhT1CNn4ovypGWlaq6LFCq+owwXiUfx/l
BXTqnmGFvc3mtCcRE/6HgbwBX0wscLj1G4343ZuscJ9c41cDlM8/rqZy1zmw
QsuSzAYZxIS/4lrvUpMoyv9jCrfx9Oes8FjShdtXkF7Aj/N0ewWwwh35SxuR
SE8Q/o1hWhqipUhvtPaFyD+MZYW68o5rUojvuw3MtWWywrJ7BRLpJjjpD+lK
cQg6gpj+Z7bSsQJW+H2jSWz2ItJzPgpKYr9Z4eqDssM1SO8Q/pOnVT+yQcTy
r36r8nSxwq1VavrZiH2/CMzt6WUl9RThfyl9oMrj8DkcWohveNykZYMeVz7f
/2uE4vMhEY1IPjY4aMkQdQLpMcJfk1lmZSrzLIrvhvVvC8XYoMR2x/hVpOe+
8xw5ai3PBvUUrSu3ICb8O3v3SlxVQvqPLWXrAtNxNvjWr91t62mUb4euHpfX
Y4PfaWvmOpBeJPxCs4WNWlL10d/n+Zxcvs4GhX4p7IxGevMmm5nx8ZtskPbf
ER1lxIRfaaCQ13FZpE+VA+LO5HuxwYdhQdq2SM/WX43L8vNngzcckgQMT+Ck
H6oD77fchOM4HNL/meMYwQYP7a7H9yK+4GVQceEHG3QZqRAQRvqZ8Fu9P6Uj
PKiN/j8n0Lgjmw2u1PqFpyO2tt1SM1PGRurv6xLOc5otbPDH/WM0WkifE36v
03yyYrsQh/ZzeB/qZINODfZHupGeN2u6fKhghg0+Bh5KPRo46TdLPSzWp4+4
R7OEsp2WHTrk8Np/RPVBT41WtDIXOyTOLxN+tioJR+teUlC+iLm/sibGDm/E
/HxviuqNXYf2UCMl2WE9lY2bCTHhlwuxyGNFh1F98ZfryU4tdhjxANeKRPVL
/L6DJW3H2SGjFrfoLsSEP29WYoEKvRp6HmQneV5cYYeLA4n0B1D9M+I7+SDL
nh3Sy6brdynjpP+vXu07b03ErXr1vut32eEEbeWu0oM4TFH5ZPo2gB2qeuUe
jFLESb/hW0JRF+8hnvU73OEWxA5tLffuNUN8pqW8vD6cnazXCD/jmjqe8Ux5
9LwHmwg6/2SHSnbm5maI31x52HK+hh2yF/ruf7ofJ/2Tua1eN/1G9Z/kuyOF
b7vQ+4+NfluRwWGHnPxjr2F2SMsinT6N6kXCn/lyBsvan304PC1jfGmGngN2
0l6QuCmF9AFtr2wyAwdc0a1Su4iY8IPG92Ul9kjg8Hbd6/a2XRxw5o0tLEL1
6Z1i2+VTkhxQT6DsQ+9enPSbLhl65zeK6lnCj/pvM8dRWcSfTB8GJJ/kgHnS
B7cYovqX8Le+88DEaHI3iuffNjo1jDjg+BexiE+Ib4zwlJaZc0CHx47BTiJo
vFcFdVrZcJD1dItJqqujIwd8FOf6eBNiwm97LhFYTOzC4aQI6701Jw44sXhE
tgGxqIzZnrAXHPDuuACr+w6c9Pe+fz1UaxnV8yp6YbvOh3DAr3+f12sjnkrh
T6r5zAETwrcdHxLCSf/w6h9bbP9tRfmc/Wvl9zwOmJWWEJMriPTwwxLj5QIO
GNmf/esUYsKf/GcuNsUsgPSNGH2mUhcHvNC9ulLEh/TtVM5Ttn4OeE35XrMS
YsL/XGk4Yp2JF/3/YeXjlssc8HDGXk6FLej+P63bY83KCZt0R07E8+Ckv3pu
zL1uHsTb4VhDMC8nvHFd6mQENw73MDWJpshyQmJ9mPB355yfYxREbP067H4h
YoukigZWxE0JH/yeKHCS8ymFpVZOp3U4oddXK5FeVpz0k396xrb0IGKt0OD8
gnOccF/zJ8WrLOj9h46PF1hwwjsVPthtZpz0q9dsjc2bYkL5SjS4WP0OJ2zW
7xPyR2xdfiqq+AH6/nHOX1cYcZiamBGe68cJy6c8VmIY0Oev15umhnLC6cfL
xjg9iiccPbJD4Zzw+Mu65XY6lL9jvDKUkjihQXO7lg8tYhrbNzkZnJDo1+DG
paoQXcwJub0DY/n+YdDz45nqpCpOaNPrIGS6gUF9lrs0WXWccD5aTv3POgb9
uP2VzEY5YdvdiwanVjH4J0i4X2yME86VVKOSDIPFB588+I74xP1PB/YjrpFb
bxKc4iTnrzoSBYa+MXPBZ6MR3zyXMKjzZmLlAzsX5Ky3UOP9b31186jKTh4u
GHlLmMZ3EYO37KLsE3ZzwTcjai7l8xj8+jyHh38fFwz+Ab3n5jCoYoZfajjI
BSOada5XzKL3y1EqTsK4oC3nyJltiHm9nku8PM4FUwuMLlROY1AkOvdSpDEX
bDGsz7SYwuBJiyCz1yZc0Kaak48R8R0PYwqTDRd04hMwS5nA4PzMqbRoJy74
ze3hu/RxDJpdm7qq94gLyhXV51PGMNjtstfI8xkXvKxZcPLlKAafbRtaSnzJ
BaXO9P1iRRzyNidt6TMXzHRQ5vX+i0EthznbhTguyMfE9tAKschvx4ef4rmg
wul7b88iVmV6PTaVxEXOLy7sY2yJLeKCm5z3OcQOYDDRuuDxzTIuGD5qWaWN
eIv+m7rkavT9l330CvvR60NbRb90c0HVW9/vLvdhkMfi9fvBIS5Y9OT2bSnE
/w+Hx42j
         "]]}}, {{}, {}}}, InsetBox[
      StyleBox["\<\"Excluded\"\>",
       StripOnInput->False,
       LineColor->GrayLevel[0],
       FrontFaceColor->GrayLevel[0],
       BackFaceColor->GrayLevel[0],
       GraphicsColor->GrayLevel[0],
       FontSize->24,
       FontColor->GrayLevel[0]], Scaled[{0.7, 0.95}]]}, InsetBox[
     TemplateBox[{
       StyleBox["\"FASER2-FPF\"", 15, StripOnInput -> False]},
      "PointLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    AbsoluteThickness[1.6], 
                    Thickness[Large], 
                    RGBColor[0, 0, 1]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"PointLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{"Directive", "[", 
               RowBox[{
                 RowBox[{"PointSize", "[", "0.004583333333333334`", "]"}], 
                 ",", 
                 RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                 RowBox[{"Thickness", "[", "Large", "]"}], ",", 
                 
                 TemplateBox[<|"color" -> RGBColor[0, 0, 1]|>, 
                  "RGBColorSwatchTemplate"]}], "]"}], "}"}], ",", 
           RowBox[{"{", #, "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", 
             RowBox[{"{", 
               RowBox[{"{", 
                 RowBox[{"False", ",", "Automatic"}], "}"}], "}"}]}], ",", 
           RowBox[{"Joined", "\[Rule]", 
             RowBox[{"{", "True", "}"}]}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.2, 0.15}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{-3.8532825104055375`, -35.465437109347306`},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
       TagBox[
       "\"\\!\\(\\*SuperscriptBox[\\(\[Epsilon]\\), \\(2\\)]\\)\"", HoldForm],
        TraditionalForm], None}, {
      FormBox[
       TagBox[
       "\"\\!\\(\\*SubscriptBox[\\(m\\), \\(V\\)]\\) [GeV]\"", HoldForm], 
       TraditionalForm], None}},
   FrameStyle->Directive[
     GrayLevel[0], 23],
   FrameTicks->FrontEndValueCache[{{
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}, {
       Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
        15.954589770191003`, RotateLabel -> 0], 
       Charting`ScaledFrameTicks[{Log, Exp}]}}, {{{{-29.933606208922594`, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "13"}]}, "Superscript", SyntaxForm -> 
           SuperscriptBox], TraditionalForm], {0.01, 
         0.}}, {-20.72326583694641, 
         FormBox[
          TemplateBox[{"10", 
            RowBox[{"-", "9"}]}, "Superscript", SyntaxForm -> SuperscriptBox],
           TraditionalForm], {0.01, 0.}}, {-39.14394658089878, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-36.841361487904734`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-32.23619130191664, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-27.631021115928547`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-25.328436022934504`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.815510557964274`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-29.933606208922594`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-20.72326583694641, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-39.14394658089878, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-36.841361487904734`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-34.538776394910684`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-32.23619130191664, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-27.631021115928547`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-25.328436022934504`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-23.025850929940457`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-18.420680743952367`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-16.11809565095832, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-13.815510557964274`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-11.512925464970229`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}}, {{{-2.995732273553991, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.05\"", ShowStringCharacters -> False], 
            0.05`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.10\"", ShowStringCharacters -> False], 
            0.1`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TagBox[
           InterpretationBox[
            StyleBox["\"0.50\"", ShowStringCharacters -> False], 
            0.5`15.954589770191003, AutoDelete -> True], NumberForm[#, {
             DirectedInfinity[1], 2}]& ], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox["1", TraditionalForm], {0.01, 0.}}, {1.6094379124341003`, 
         FormBox["5", TraditionalForm], {0.01, 0.}}, {2.302585092994046, 
         FormBox["10", TraditionalForm], {0.01, 0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.605170185988092, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}}, {{-2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-2.3025850929940455`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {0., 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 0.}}, {
        2.302585092994046, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.01, 
         0.}}, {-4.605170185988091, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.506557897319982, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-3.2188758248682006`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.8134107167600364`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.659260036932778, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.5257286443082556`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-2.4079456086518722`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.6094379124341003`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-1.2039728043259361`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.916290731874155, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.5108256237659907, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.35667494393873245`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.2231435513142097, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 
         0.}}, {-0.10536051565782628`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        0.6931471805599453, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.0986122886681098`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.3862943611198906`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.791759469228055, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        1.9459101490553132`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.0794415416798357`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.1972245773362196`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        2.995732273553991, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.4011973816621555`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.6888794541139363`, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        3.912023005428146, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.0943445622221, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.248495242049359, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.382026634673881, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.499809670330265, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}, {
        4.605170185988092, 
         FormBox[
          TemplateBox[{0, 0}, "Spacer2"], TraditionalForm], {0.005, 0.}}}}}],
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   ImageSize->Large,
   Method->{
    "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
     "DefaultGraphicsInteraction" -> {
      "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
       "Effects" -> {
        "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
         "Droplines" -> {
          "freeformCursorMode" -> True, 
           "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
     "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
       Directive[
        RGBColor[0.368417, 0.506779, 0.709798], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.880722, 0.611041, 0.142051], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.560181, 0.691569, 0.194885], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.922526, 0.385626, 0.209179], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.528488, 0.470624, 0.701351], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.772079, 0.431554, 0.102387], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.363898, 0.618501, 0.782349], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[1, 0.75, 0], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.647624, 0.37816, 0.614037], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.571589, 0.586483, 0.], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.915, 0.3325, 0.2125], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
        AbsoluteThickness[1.6]], 
       Directive[
        RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
        AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
     "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> Scaled[0.05], 
     "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> True, 
     "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}},
   PlotLabel->FormBox[
     StyleBox[
      TemplateBox[{
       "\"\\!\\(\\*SubscriptBox[\\(N\\), \\(events\\)]\\) \[GreaterEqual] \"",
         "2.3`"}, "RowDefault"], 18, 
      GrayLevel[0], StripOnInput -> False], TraditionalForm],
   PlotRange->{{-3.853282510405546, 
    2.347654056361624}, {-35.465437109347384`, -13.871612595677659`}},
   PlotRangeClipping->True,
   PlotRangePadding->{{0, 0}, {0, 0}},
   Ticks->{
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0], 
     Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
      15.954589770191003`, RotateLabel -> 0]}],
  InterpretTemplate[Legended[
    Graphics[{{{}, 
       GraphicsComplex[CompressedData["
1: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
RRXV/qLLlZ58g1/RB6LG3pr93r/o28ZeGGUKG0CB9vuXfzh+0RNLC36SKAaw
eY+cw4P8ObrlHg/l5xYG8P38Vr442zn6Wpaxxl0uBuDXJsTCOz5LZ7twa9dw
kAFEKvH1tl6cpVteN95YGmUAK3qjzBfUZ+m89NjvVukGsF5yPsimbYZ+Lu2r
1+cHBiBvsz93OmiGXvWm9bH/awM4L6cfniw8Q/f1S5kybjOAQ4sp7bvLpulS
pNe7m78bwPjtOgGC8zSdt6F8KXXOALyCxz4//z1FN8v5rUjlM4Qn9y/zBV6b
okf336NPixnC7ijLKhHTKbqgwJOnCeqGELTWbmf355/0kvlPpVuNDWFC+kJT
fsxP+m8ni9jBbYYg2k5OdFz/kz5rPpjxeJ8hzM5sSvxTO0lXg4BMk1BDuL62
L+2a9yQ98KZzDfcpQ2jr4j60m3OSnv7M/fvNTEPQOVU2ab1jgn76rq/b4XuG
8KN6xevG1XH65osxeqx0QxhnafHi6Rmj46LqJRsbDKFOxIXkLzNGX17kL3Ib
MATrzl/LAx6j9MiC9denFwzh9R/jArt7P+g7fxK9gNUIVn5XSfBQvtO3S78e
HNYyAt4bGk4eR0bod/Zf8XuAGcE9d9b8ocfDdF0hct5GJyMoXvyq4jD/jT5t
2Ezp9DcCU6Ujis8Nv9F3tpQL+MQbAVf9eIv4ya/0moKXA7hsI/imNjYcUz1E
D++6xedabQQD7p3MQ6xD9G828kemOo3g/CEhM+dNX+gDCek/7P4YwXE1h6bC
hEH60TUKt76tNQZJN+dgybcDdC3bqekNesZwukRXMUxwgN6WGn3K19sYMh6l
EJZ39NMzhTh5ms4ZA82sMy884zM9+f3TP2W1xnD2TFJsQkUf3X/UcOHLjDFU
pWvmHDfrpZueMpakbjVhcO5g88Yj4aaM8Vulc31iLpky5oufHU6VyDNlrPdK
J5Xy+bEpYz9/+e9+NZ2jBorAlHGev/z3vE7eNxXDmkwZ+vjLf/X1l//q8y//
1fdf/nsff/nvff3lv/f5l//e99/97CnoFvi4+wdd29veKPWVKbzo/2zjQRyl
F+VIeSt/M4XWN3kFeMdRuphK7W//MVOGvVmfDg4u48Fg4ZbJk3ChcfpS1p8p
YQIGBfJVWQU3kL1OTm93WodBxHbdhE8Ck/T7FdWZKTIYdLS1i9yrnKSzH7GL
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
/eEdtMr+z5vDYpcNGWyf6cCRfWaVqWHv0soFVplv5zaFj1kGDB7X+vjop+Iq
Nwk4mfE+1Gdw4WTnW2XDVU5o3u1qXqu3qq/CnjFX+1W2PucaEd6py2DVA/1c
VzxWmWujx9WSMR0Gf5cfUmoOWeU6nHfpCG6V7/UNm7MmaDM4/vmhNhnhVfbO
HHUzytFisGWY3+RO1VVW3DkZefSxJoNZtAN5L5qs8heBmcz8Og0Gv5wMVn21
ZZVvN/8q6+9WZ3BsYZjlH69Vdj/3+4PoTzUGmx044akVvspyG1em7FlXGWeF
Z26XojIYmNlk+DQpDI6icxpbWJIZbBLO6xyxm/Rf9pd8CJ38sPU3G2gIx4t1
nSX+f66/RGRocN/FQHYojVJXfZRN/N/eX2Kcymms94EdAupff9w5pQryeXmK
5/vZGf1yY15Fz76OsTP+f93sggWTziI7RAlKiygUE+GPQfrLC2wcIBnd2H3D
jQiOf976DwpwwGT/22mzXlXQMkz8pCPNAUION3ctzKrCy+HLEcFKHIx+A+7q
50frNDmAp/S58kNdIgxIHagXxVC9Sc3PuWNGBHGyltkRWw7YJLyfXIcR/1/3
l0z8Cb8ufY4DXDwPJueeJ/5v7y+RjHiu1jDKwejXOPSRWW7dAgdwvbJ5ksNC
BErGR41gVk6IzApsO/JbFdqqnVzq13BC1p02zd3fVGG6knR2vRQn+N0VqnNs
U4UkfOS546qcQGibbVDZ8z/fX7JrrU19SBAnXGjNzz6XRoTD0uvdGqI4gSWm
bXvtM1Wo2V5jJX+BEyRaj1c7ORMhQT/oVvBVTkZ/ZW/xKYXmO5yM/rX/bn9J
bdQXcal2TqiX+DqqnkH8T/0lkWfDrjZPcDL0GRB3LVd5iZPh7//d/hL69rrP
wWQuxnqHyZklg8ZccNNB9TleiAgC1eltBtZcoDNqqeerRoSWnySmKzu4gKPp
5nu2rH/9Jf/6S/7/3V9CffywTCONB46o1x6uf0T811/yr7/k/9ZforBnhPeG
Ox8ILE2mfd9GhKXodya8R/lgpWXPzmZX4r/+kn/9Jf/6S/71l/zrL/nXX/Kv
v+Rff8m//pJ//SX/+kv+9Zf86y/511/yr7/kX3/Jv/6Sf/0l//pL/vWX/Osv
+ddf8q+/5H9Bf4leanPwLJEdG/5FqNrJSYLgnIDAF7LsmBkr1yujSyRo4H20
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
Rhyv6VjDeBdEJ1E1mz0jGsT//X1XWvfJw1+eLDQwWlK6H/xcwUzgO2E32L+R
bDNFqE8zrnIJ3yoWEj1deez6f3/POsoSKawVx38e8Kcegnqol4jfLrWchexX
HsxMamIQ7w8tKYNPxfH6xq9e0qfo5Ouq5Qnz7aB/lBuezgI/ebRp2m3eMljP
qnzJYcCHPGGOq7oVzB8qJBsP/GiYveS3LmahXxFG17YGU4R3vkZXfilcL0aZ
DAG+P3+zUUXVEvDo8Dz/j8spwvC4/IJazEL6izLoZ9Up8sj2nqyRMQsdEXpV
8wzi5iZdBboZ7Gdqtsl9cdivk4dUNRYB3vvs/+guQpH0UyGzLPShH810/8wD
/s7/1XyBYQj9tCh2VAHw4X3KfGUTCvD6ac14LOz/3SvDs7EeC/mR7t38ccAv
Ye3fGZostPOEWOHHPRQ5mTv13VydhVhbpks04fkfLd4YZriAhR64c9faJ1Bk
/6jVV2NtFvoZc6U79iRFzs3/dsWCzkI5W9ZpDqVQpCbp5+QSVdjPcwebZoF/
L6v+8stEhYUe6+/JPyfBJD/WvXzCmAd4tqW14jToVX2/4YNmc4F/VhhccYpi
ksqQe6I2c1ioaW27SdpGJgkT+C2yWIGFpO4WVyU5Av+47VVYJgf7+d1zZmDx
f7+fdSJ1sSwLLQl25boLgP9zZzTpSwNf+hu2WeTB82evrtWUZKH/ez9aWiCo
h87PQsZWeblvbECfGqc6aoiyELcnsG0tgyKqK+htTHEWmh7Q/patD/gfsqOD
IQz7udDLunr2/yPqy+Oh+v7/FbPYShKiIhWz3JGyZEnnCkn2JUuJpCSVpayt
KtpRCBEhW0glkiVOREVRKUVStiyFGTNmi/zO+/H4fXz/vI87c+45r/N6PZd7
zz0XgwK/z62qYn/BjTz212erMPhoZ5rNSpG/wPSCyoH+Tcg/jJX2rf0nBO0r
GM5VxhjEHXtfSnGEQKb6iNCulw51c8v6VYRC8NvbJEnxIx2Cmz1DylUSeJSt
LL6rmArnRMS3EMslcLOTB9Ijl9Bge4HnO8UZIaBtZvdaouvH57C+yU4JgcOB
68nmK5B/Vb1lRGAKwVT7+uUzu5FeNq115Y0LQZ6F8YZx5Ge+SChgMn+EwNze
6ANXH/EXcNnY9FkI6pyxmc71GPyw/I525xchaPFP7H/iiMEftBSPji4hEEvz
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
TqrVS5lUKOf7uS6wg4zHFvfxhmao8PCzv/umvpLx9ZLuRFyOBhWL++sWDpDx
46LP3ejlVEgxGnp6YoSMK10LzPz7igK9VmX14w/JuFHo1Yr0Tg14IcjT/2YR
GecbnPBb360B2TvnNvzII8+vRymQ5fbpZ5Hx3ILA31ZxVHjv04qbUelk3HNS
Zsf+NhS/I1EhN9r44Etcpf8I8quNx6sLJV7zgUI3c8UjO8T/Z3NiN7Xwwbod
wmV/DmCwP+e7+v63fDCzv2TjKksMJozKRHxv4oMwt3+uV5H/zTC5+fdhIx/U
7b6c0TREh59Ic78+3iLjnZeCKg7vp0GvT+ra51/wgVXrpx1ESIeFfVvq1j3n
A25u7J/9LXS4EHui+PoZH/z+W6hyWArpH17fYekaPuiT3Ki1bIoOR6X6tB8+
5QPBtpXHEwmIf3vNW+zK+GD34fXOVHEMXtR0yDtbzgfln9s2/Eb6I3hjUY7K
Iz7QNK1aOoLy6bHuIc3JB3zQz1YYNkD5rfzn6NG6Yj7wX6RsFoTGl21/zyv2
Ph80aPobM8IwmLiTI+ZRwAfFDt3MylQMkqkqnXgeH/xvP6m83iQ/fg4fvOsc
/dZRjsHT1Kq8niw+WD/+W1ML6afme7XLizL5oCJhU4ZRJ9LbQc3LzdL4QO2x
hdO6SQwafziGh9/hg6NJvDwxdPx564CWRiof7Ej/E/z4MwbTfa2PsW/xgd3d
1gjDbxg88H2pb30iHxy5n+4z0oXBsBT+3yPxfJB2Ymmm5CIGjA+PENeP5YNA
qcnA9gUM+HLrWqlrN/nA+XLFuPQQBpdOlvouv4bqyTPEn9ODwSOjZwzfXeaD
D8Qzpldvo3j4dO9JucgHeboZ50UOIrzSle4Oj+aD5ujij+bID2Y/Iu43Oc8H
n8KbbwkR3geKvTwqd5OMT/n5W2/XpMGlaSVqTtfJ+KZIEbpCPxXe9E7MTbtI
xkVj21nd96hw5etLyzvOkXHjytGn4nSk91e3PCafJuNV3h/q6pFeL/ZV0jMP
J+P5nFAPwQsKfP3aJizkGBkX6HS6/KulwDWy341a/Mh4XnJU0WgKBa6IrW7L
OkrGq817l51E9ZG1MlOWv4+M90ZPXtlkT4WXXq8iGLmTcYkYQymSAQ1uTNcn
KXuS8d8Z8cVv7tDg1sbHZDdnMm6H9d2tP0WD9hSxD6k+fLD5ccOOb0ifPqIb
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
ArvB0gXpiQmxOI/8yfnvzTlf3vbT7OwksIg8QGvSwyBubKX4KnoSNAoX03En
DG5Ida54ETkJDh1tS44+gsGZSLdpK7dJ4LmFyDlkjM6vX7a4wXESXHMIndAR
x6Aq3Vh7k80kaBVNi9v1kQ6TjIVBH56Kzb//9/MJYB2pEZt/n+Lo7lPp69+I
4er7W2oDB2hQjmvGt/0ohlvDvSoHZ2jQ9Jpf9vMnYvjvzVYWxlp0WChe9mjl
QzF8rbeX++VgOnx3U0T2ZJEYLlFkH2MVRYdLDuvUMbLFcPq60EdvEL8FTbYv
vHBHDNdbXhjk0keHcS091z+niOG7pC/u2OpBh4f9NzV8zhPD42MNLfxGabDZ
gOK+LlEM9742Xic8SYNL8+oztn6fAN+zBNzDKP5fL/6d/dk/ATprWti2v+jw
8ZfI/cfixHCjkNg7H49TYVdcYnHtFTF8/Pst+wUzFKhBNse2LZsEXYYVuoVo
PnfHyf0/os47nqv3//+ZTUmDhEq21zkvW6V4vlBIZbRINFCU0VBRZhpUIntE
JCOE7FVc9t57z5c9UkJJ/a7373b79P3zup3jnGs8n8/H/fFyznXCP7Hj/Njb
F72EeequrfLOXRvmIKlmW9CiDoGan9wNdGWeAxbJv5sDNxDI366S9r59Fv73
fWudfWiUsWkWiuVUdHmxHuj6aXpdqZkFKd6PYR043/y92RUKymZB2Gr5Kw/m
ix+JGaM8hbP/nhfQsKjU7gyeheCfpU9kcX1aPDnsZ5s3CxmcLOYFWD/vzD8L
2Jc5C7l8kUIj+HjZF6sFyqdZ4DjyaIKC+SctpWhba/wsaO6+2PBJiESCu0ua
iOhZWENNWOOmSKJKVS/vx+GzwM1yzWHnIRJl8Vew2T6ehTN303OX1pKIJ5GL
jeo3C3tY1tA+43o0dHS9utDzWYhgPCD1KIFAFwp1nZo8Z6EpWTh+FPPASZG7
fbpms7DluOEOEexvldXenLp2ZxYOXvqt3+yD6x/7IFu65SxQuta6mWJ/rbV1
xpfLbhZq7plbtuD60Jwo3VTuOAtJfSrzgqdIFJVzLCLsyizkp1OerPwkkGsw
wSl9bha+rVV+WILb/LIxRuMXZkGIhdg0PE+gPIdcnhqdWWhxubLciftfeW9t
x7bjs3D70TsJVpz/z29YeBocnYVyiZi0wDrc/yB3pQiYhQldv3At7B9uyGXY
yCvMQqg5R/427Oc62ysFH8rO/vv+QKO9a91n6iwMHPxgknYZ3z/Q5dYf0VlY
y/fMwwzrqa6HFIX5KTNt+OadFwqcYsjT+sr3nkfMtGdLhYlOpmJIj2Ogco8j
M01iTE2WY1QMubSFMobZMP97P2HGTzOB3ZiZJhcVUXQ6WAytHWl2BiNmWu2e
k8O0l2LIruCYlaU+87/9VvjzMwt7VmbAvmmlbHcdBR2oE7MxW5yBfcmP5/Vx
f3bSKy+2Ts7AZC+n6CtbPL6Frtm3X2dAQUA/6aom1pPt70WM6DPw2OrVhF8k
5ju+h0AWz8B3mQM7i51xfHJ1vPLunwHri20Fm8r/28/52t/Vipl/v5+GDx69
ztU1A6dZ3Q2X8fyeYdItOdYyA85tRlsVmEgUKJTPYV83A8xxvZyHMU+rCHOt
V389Axag5mqB9YXL0eWrxYsZYAjcX5uAeXxp0e8Hi/MM9M5NnYgrIFFh5mnB
4SczMKBuRufA+vqWPChp/2AGolKOWLdmk+ikcOvEG5sZqG47zMSdT6IC/0Ex
dusZsI0/1mReSSITx/NVpPkMCDosBp6qwjzfZ7I53HgGIm87uwjcItHVccoF
dqMZ6M86yj40QaCZtuYucb0Z+N/zBt8Jh95afzwfN8Yrt2sT6ITCscNJX2aA
Kp7n9qyFguK/zYa4HGemJVjXPo75I4pqjk09+aLFTHvMHPVk+1UxxFMtdivg
NDPtmlC0dMWCGDr52sVV9Srzv+ftJ3T3XWy3Zqa9lHYIsq2gIJtojoZLdsy0
NVO/r51JoSDv7MP9m28w03axi+7dJEAg2ctykn2HmWkfxLynrmK+TtlWuybk
IDPtSCt7xVc7AmX/oR5IkWWmBRk5VHt/oSDOh96lkWrMNJrr+Q7RZgpypzxf
LlRmpl2/tdlIVpiCWGh2N0olmP89H+xsNefbJs5M04u5tFEtVQw18or9eSHC
/G+/V1s93y2B+5hp+mxHJUdfiaKQH3vXja4y0Wyebs4kY0TQi77jvCVbZ+AR
JLx8j3n2YkLCPWG2GShoKd2nTmL9NPdpcls7A9vXJiblY//MvCXb3pcBx0Pc
z7E9dOyP+fLqv61Mg/GmWIuhwyQ6xi0nrLs4DUfdTj5WjSHRJ4c39IzJaVj/
YMm3oh7z/bJ8yPmv0/Cx3Krkay/mN9mr0hz0aWA0Os+RGkciuSMKLhb901CU
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
+7j33/mtiswKOfbuL1624KnptvR/uDbv4R11tX+4+8Li+QuF/+FN2U825Xm8
/ceXMy21Nf4/jNcX5Goe7f7Hn+ojS6K3/cPeU8m1bRe7/uIxwQT7HRb/8AJh
yQduY6/+4hGpt0o6xf9waMIdds/oy7+YGgm21v7/cEqoVVNu0j/snCm4P/7k
P3zIccWjE9nt/8534ZquNpd/WMdv6AV6UtP49/nuymEvl936i8evWfY099z8
iwnBJ557I+v+4q+5er+Sw5v+YhU7q7AzvDt/ceWQoJfquta/eL/CB87zlx1/
8ZOU3fMNR1/8xcznl88+F3n5F7cGDWUFOnT/xb+SB+Pz9v3Da81opbSP7/7i
uRpbhus1ev/iSdfRr5rxf/7irl8HbXTO/cOLd7x99PDS9F+c1Dt1wd2I/Rd7
mH/8wvDm/Lvfyfq88aV/uPrXm9Zjk7y/eP79yEe+ksTfvNyU9Ep447x/mGWV
3dNt8g9nNBmmRqb8w+U3rp4du/8PC/itUvy9i+8vppJnvtW69Q9reN/Pzu//
h9lD0buPGP37859LbfSZUQF24//+vMiIPOiv3s6gvYTPLjudTOGHs4+09AAW
//SYW+pN4YPWNfNetzJo59XWfB9jKFyZYxaeep9Bb79/bub5egrzi+pUb29i
0F0Zqu8GUiisTdwsLsAMelI+eo5XDoVrWrbyzWtm0AtLRNdrx1H4zaIU9L2R
QW+9vzNr5AiFC352f38G9TUb4294h1C43E3MK+YOg/7f74MoUkdsFeHzAxRa
rgw5weffZz7wvAef93/f1/U+tVjL5C6DvqF4xOmzEQV6yf36B3CQj9tKDxUK
j79W/1DewqBt3M0nzqtTWFBf/a4ufL6Fndc6hgGFGy7tWdhfy6DjX3roFa2k
MBp7dySsgUEf/fBlscZ7Euu6lxqK1zPo//0+stnO/a12dQzaMVj98bqjJF5n
bqrTAPX//V6LZd6X1em34f36axMW1ZG4YuJAmVAFgx4Y0hkLtqfwoZTpFtty
Bt3+LvHlO0MK98lMPTp9lUGvslS/nsWisKr4V4GuMgb9WESsY3gthe3lbYcU
ATd7sTbS/hSuXhl4tBGe97//X1B063fLA9fgvH4b874GURhbOjcsv86gD2Rs
nCo+TGFHD5PFY4BDu5Ibxc9RWMaVFaIK6x2YfnYwtp/C210fh/jVwP6srSrc
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
PCrfJt1uS2LhkE9l/ssJOmrPPt0YQ9BzxSdVd3QIWtLP72PsfBJn2DpuSFtG
0PrROxVdYP759ybN+64N+V3bQpX3g4nRkRHvUZKgez8Z3vw1h8QHli23XQT1
HSVP6ubdZuJAo+qzTRTwm7FPpeQtJu43SC3w04Tz4YpnhvtB3eVYJtIiaLep
jByLFCa+n3U4J48F/eY/rt9yhIlH6vuGm5QIek/e+NcP55jYNYs/Y99igt5V
ksLeC3x3XT5a1EIR/M/pVbVD+5k4mK7YN3/Jv/5snwqtHwD8eEegfaE/Ewuv
iZiZrQz86DH6Y9sYE6cKbfGslydo9zYtvueQf452XhDOVCDofrvu4l+wPrmd
lpKBKpCPhftFyi1gfgxXaS6A9do36Oo8CyQx1+6IkKkq5Dl3/4D7h0jsIDf6
bjUT6nrFNzY+IfGk0YP8saXgT5ardVzsJLHVzUqnO2oE3VimoVcE/izWnvQO
1AB+j3nyQAD6QTvaYihbHfwDK6fxiTiF1ef5DkjB/ZkqsysTr5L4wllUNLQI
8rh2y/vaxyQOPKNNes4j6EWqDsNt4C/PtRR9qJYm6LrRnxtkiuA8bJ1leqUI
WoE9tV2ogsQth71PnpgLerR1QmwP8MMvkUPGYlDfukQ84VEa+C22r67zbNjv
Z0XqieBXMkdmvSuWgP01KnPdJkzi0B1DssckoZ+pjAguh4kLt5ilv54Febf+
8B+mDYlzlVLMdebAvH5ft2nvVhL3+eaoc8RBP7Kc73nchfnXHSjTkyFoqebh
bHng08JJw0Wz5xP00mMibzRcKMx35eWbObC+2eu6Nm32pfCrHnZgP9QPW3W6
FLTC/B0punlHlqCFf3+0uybNwvV3d43vWkjQ+0qNK1NIFg57+KAneQFBh181
eqm0moW9ywVHaTnwZ6OpE5+GKVxk6BwWPhP4edaFQ3eKKByTdEDdSQz8P7VV
Ty4V8o98f3OhKEEbWF4QVE6k8M6tub8WCYMeH146qhFI4ZtrWz+1i4Afkrg1
Nw/4IV7iPuMP1B/xKa9V9oP3LSBerBYC/df7snWXF4WFTEOq1GH9rqojNTuN
Kex6wLcxZAbM9xrv6TI9Cmcc9/TLFgT/EPOu8Rbwt1Rnr1CjAPidFRFGYo0k
PpP67OwgP0Fvu3/zThv02wnGxS3L+GD/c61e1PyXRwsZwhJQ/7Fe/Ls75Nmj
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
9cjk8g4u7PQYvSh4lkSnhn/y09q58Fi5sEUT66NtRPNrpUYuaJZLnfP5S6De
JxErwn9w4WBsccV17Dfs/f0HjrXg8WPe6Upg//bX4vYp4+9cUBfalWjeSqB1
17X2LSjnwvSIPXPPS8zfodGf+0q5MEyP0RXB/SD06dY0pfdceG6akvIJ66Ug
nfxU0wourLA+2gz4+TZamuMVxVzYcqfx+hDW89YCa3MX1nOhvN7b6xDW57cL
jh0Z/soFcO175K5For4PplWRn7jg9uHYxPdHJKr9LSNw5wsXih9OZLs+IVEv
eau6uub/x3/9xTwHz49cSBZJakd4/Yt3iH9Ne8uF644Diw6c/O/znWUuF99w
QTK1I6MMkcjL37zUKo8Ld3felH/KIZH3wpKRBblcOGe60vh4D67fo1JBxEsu
1N3V/UuhY74t2ZDrlM+Fr6m1x8NpJHJrVJDqfcaFdbkPSNE3JArcsJVTno3X
46azZfYIiTY4T8Tce8zF9eVm2zJNoEUdKl0BmVxwMfzqyX9MIO4LVYXLd7iQ
T4bHLEjD+KxOnnM8nQuTlwOorW4Eov+KKDdIw8/jXN1zV45AfjXlmrIPubDW
Os65EdfDJLd+e30yF3Ynxuyqb6Cgw5WbDrHuc2H7SLm+YRUFucWHNmcncf/9
Hk3c2nnY+zIXLpTXOMetJ5C6ccTQpQgufMu6c6F+BYHMFokOPLvKhXt6TU96
dXD/EzLcvzOMC32iWvJrLAiUvfnIvvLr+PkuIWlz9xHIPc3kosxFjOdx12+1
cQR60XlkHy2EC1sVM4gYrE+COjyf8qK4YH32+Vj1HwLdz05cZhbHhbQbq4bj
SBI9Fs6+rHCLC/xzojkzMiSaLjdzOJXAhdzQq2d2Yf4anX+/cuAGjh8zY3f6
fQKlng4YrArG+PTsd3qE66+57sflV4FcuNTflGI0SqANodJRvv7cf+//kodK
2+4FcOHjyJOjzhjvopIbmTtOc2HzzeybPdgvC+ZWL13ly4WnzBQBN+w3KvPv
m8z15kLivI7BR7jeOrQ9vGKPc6FfXtKcuYWKFglNiWV7cMFD95H6czsqYm1Z
09B8ggvitlZCG/So6O/mD1eCjnHhzSukA6N4fBDvN3flgn36QYEr2F+Z797i
q+mM1xfkvjEN93eK99ktgodxfu6aTdt8INBWUwl/f3su6MfnG565QaDuHYlv
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
lzVJB/hZV0h/ClghYFB/frVZB9rauB6ew/WI9nld6ZVlHTh36Fn3mDo7rKMZ
OC/t1oXLScW2ARIcoO+wVW1RXRdOP5/K2vSHA1CCtvv8GV24G8C7JbOUE/jf
+Rxg+Or+vx1Yuf2tXeRqtgP1D3VEvs90O6C1p3fFr35gevoz8cnXzW4HItUq
nm+bxXFg0uNlAV8PuB0o0VWKjKjnPLDw4kHFL7fcDqQfyS4V6eI6cP/T5bbP
z90OuEVUbLswhfuAQo/Up09f3A4I3llwuWc+z4EXn5aGfWJ0P7CoMIDVcxXv
gSfcSYc+8rkf2PcwUo91K9+BHcvuqX+Udj9wQuq618H9/AdeHLKc/EHD/cC8
aV+sfCoE4HxYfuSZ8OPHe1N3eH6F8WH5uTQkPeW9kzs8v8P4sPIAxoeVFzA+
rDyB8UNWLFBqYBI9oPy19MQ7f/cDRrserXo9C8HnzbPOCzcWg/N3bFT/c+g0
gn/wypdTCoHiB56V3jV5F+N+4PDbF0k9LxH8oz5H3n9vlIDzEwLubU2WkoTz
7dvmlpzfhOCzT3mvYuUtBef3J57VWfYYwbdg2bGbJVMabv+C//0zuxYi+AD6
0/xA
        "], {{{
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.3]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1: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
+7N78GxEHss4xjOBiUxiMlOCdlivJzPlWcxmDnOZx3wWsJBFLGYJS1nGclaw
klWsZg1rWcd6NrCRTWxmC1vZxnZ2sJNd7GYPe9nHfg5wkD/4k7/4m0Mc5ghH
OcZxTnCSU5zmDGc5x3kucJFLXA7GQP97c0u+zR3+4V/+4y73uM8DHvKIxzzh
Kc94zgte8orXvOEt73jPBz7yic984Svf+E7wAPF/hCQUoQnDD4Slj3b2JaIc
ichEISrRiE4MYhKL2MQhLvGITwISkojEJCEpyUhOClKSitSkIS3pSE8GMpKJ
zPTTnv7Bs005J7nITR7yko/8FKAghShMEYpSjOKUoCSlKE0ZylKO8lSgIpWo
TBWqUo3q1OCn4HkijeUmNKUZP9KcFrSkFa1pQ1va0Z4OdKQTnelCV7rRnR70
pBe9g/Ggb7AP6B/Uz88MYCC/MIhf+Y3fGcwQhjKM4YxgJKOCsto/kKnyNKYz
g5nMYjZzmMs85rOAhSxiMUtYyjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trOD
nexiN3vYyz72c4CD/BH0WdsHcUY+yznOc4GLXOIyV7jKNa5zg5vc4jZ3+Id/
+Y+73OM+D3jIIx7zhKc84zkveMkrXvOGt7zjPR/4yCc+84WvfOM7wUP8/xGS
UIQmDL8Gv28JK4cjPBGISCQiE4Wo/G69wcSV4xGfBCQkEYlJQlKSkZwUpCQV
qUlDWtKRngxkJBOZyUJWspGdHORkSPDsPHgGL5emDGUpR3kqUJFKVKYKValG
dWpQk1rUpg51qUd9GtCQRjSmCU1pxo80pwUtaUVr2tCWdrSnAx3pRGe60JVu
dKcHPelFb4bpz3AGyAP5hUHBmPBbsL8ZHPSdocH6DGcEIxnFaMYwlnGMZwIT
mcRkpjCVaUxnBjOZxWzmMJd5zGcBC1nEYpawlGUsZwUrWcVq1rCWdaxnAxvZ
xGa2sJVtbGcHO4N+BO8++Fs+FPRHHs0R+SjHOM4JTnKK05zhLOc4zwUuconL
XOEq17jODW5yi9vc4R/+5T/uco/7POAhj3jME57yjOe84GWwz7VzLO/lD3zk
UzAGlo0P3p9FcE4RjvBEICKRiEwUohKN6MQgJrGITRziEo/4JCAhiUhMEpKS
jOSkICUT1D0xuHbJOclFbvKQl3zkpwAFKURhilCUYhSnBCUpRWnKUJZylKcC
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
ac5wlnOc5wIXucRlrnCVa1znBje5xW3ukD64XnBffsBDHvGYJzzlGc95wUte
8ZqMymXirfyO93wgs2VZ+Cp/4zshYjpnCUkoQhOGHwhLOMITgYhEIjJRiEo0
ohODmMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjay
k4Oc5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKVKIyVahKNapT
g5rUojZ1qEs96tOAhjSiMU1oSjN+pDktaEkrWtOGtrSjPR3oSCc604WudKM7
PehJL3rTh770oz8/8TMDGMgvDOLXYF86LrIxRB7KMIYzgpGMYjRjGMs4xjOB
iUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAg/zBn/zF3xziMEc4yjGOc4KTnOI0ZzjL
Oc5zgYtc4jJXuMo1rnODm9ziNnf4h3/5j7vc4z4PeMgjHvOEpzzjOS94ySte
84a3vOM9H/jIJz7zha984zshYjn3CUkoQhOGHwhLOMITgYhEIjJRiEo0ohOD
mMQiNnGISzzik4CEJCIxSUhKMpKTgpSkIjVpSEs60pOBjGQiM1nISjayk4Oc
5CI3echLPvJTgIIUojBFKEoxilOCkpSiNGUoSznKU4GKQV3OjxxUCeozzRXc
/8rNaUFLWtGaNrSlHe3pQMegfcrkoafci970oS/96M9P/MwABvJL0B9l8jFM
Hs4IRjKK0YxhbNBf6xRgvDyBiUxiMlOYyjSmM4OZzGI2c5jLPOazgIUsYjFL
WMoylrOClaxiNWtYyzrWs4GNbGIzW9gajIX2FWK7vIOd7GI3e9jLPvZzgIP8
wZ/8FYyhskU4Kh/jOCc4ySlOc4aznOM8F7jIJS5zhatc4zo3uMktbnOHf/iX
/7jLPe7zgIc84jFPeMoznvOCl7ziNW94yzve84GPfOIzX/jKN74TIrbzkpCE
IjRh+IGwhCM8EYhIJCIThahEIzoxiEksYhOHuMQjPglISCISk4SkJCM5KUhJ
KlKThrSkIz0ZyEgmMpOFrGQjOznISS5yk4e85CM/BShIIQpThKIUozglKEkp
SlOGspSjPBWoSCUqU4WqVKM6NahJLWpTh7rUoz4NaEgjGtOEpjTjR5rTgpa0
ojVtaEs72tOBjnSiM13oSje604Oe9KI3fehLP/rzEz8zgIH8wiB+5Td+ZzBD
GMowhjOCkYxiNGMYyzjGM4GJTGIyU5jKNKYzg5nMYjZzmMs85rOAhSxiMUtY
yjKWs4KVrGI1a1jLOtazgY1sYjNb2Mo2trODnexiN3vYyz72c4CD/MGf/MXf
HOIwRzjKMY5zgpOc4jRnOMs5znOBi1ziMle4yjWuc4Ob3OI2d/iHf/mPu9zj
Pg94yCMe84SnPOM5L3jJK17zhre84z0f+MgnPvOFr3zjOyHiOP8JSShCE4Yf
CEs4whOBiEQiMlGISjSiE4OYxCI2cYhLPOKTgIQkIjFJSEoykpOClKQiNWlI
SzrSk4GMZCIzWchKNrKTg5zkIjd5yEs+8lOAghSiMEUoSjGKU4KSlKI0ZShL
OcpTgYpUojJVqEo1qlODmtSiNnWoSz3q04CGNKIxTWhKM36kOS1oSSta04a2
tKM9HehIJzrTha50ozs96EkvetOHvvSjPz/xMwMYyC8M4ld+43cGM4ShDGM4
IxjJKEYzhrGMYzwTmMikYJ+6VhZjqjyN6cxgJrOYzRzmMo/5LGAhi1jMEpay
jOWsYCWrWM0a1rKO9WxgI5vYzBa2so3t7GBnMM7aVYK/5L85xGGOcJRjHOcE
JznFac5wlnOc5wIXucRlStpmKa7LN7jJLW5zh3/4l/+4yz3u84CHPOIxT3jK
M57zgpe84jVveMs73vOBj3ziM1/4yje+U1qbygTvNuI6lk3LEVYOR3giEJFI
RA7+zyKiUt56FYLng3Jc4hGfBCQkEYlJQlKSkZwUpCQVqUlDWtKRngxkJBOZ
yUJWspGdHOQkF7nJQ17ykZ8CFKQQhamojZUoLZcJ+kg5Kgf3zVSXa1CTWtTm
/wClrgnB
              "]]}]}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.3]], 
           GraphicsGroup[{
             Polygon[CompressedData["
1:eJwNxrVaAmAAQNFfZ5idfSUWWxTsABMT7A5sRRG7u1/PM5zv3spEOpYqDyGU
keSvIoSIRqny1dRQSx31NNBInCaaSZCkhVbaaKeDTrropodeUqTpo58BBhli
mAwjjDLGOBNMkiXHFNPMMMsc8yywyBLLrLDKGutssEmeLbbZYZc99jngkCMK
HHNCkVNKnHHOBZdccc0Nt9xxzwOPPPHMC6+88c4Hn3zxzQ+//AP6Jj4Q
              "]]}]}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.3]], 
           GraphicsGroup[{
             
             Polygon[{{6093, 4, 5, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 
              6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 
              6089, 6090, 6091, 6092}}]}]}, {}, {
           EdgeForm[], 
           Directive[
            GrayLevel[0.5], 
            Opacity[0.3]], 
           GraphicsGroup[{
             
             Polygon[{{6188, 2, 3, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 
              6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 
              6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 
              6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 
              6131, 6132, 6133, 
              6479}}]}]}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, \
{}, {}, {}, {}, {}, {}, {}, {}}, {{}, {}, {
           Hue[0.67, 0.6, 0.6], 
           Directive[
            PointSize[0.003666666666666667], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0.5]], 
           Line[{1, 6189}], 
           Line[{6190, 6, 7, 8, 9, 10, 11, 6191}], 
           Line[{6192, 32, 6193}], 
           Line[{6194, 35, 6195}], 
           Line[{6196, 48, 49, 50, 51, 52, 53, 54, 55, 56, 6197}], 
           Line[{6198, 59, 6199}], 
           Line[{6200, 61, 62, 6201}], 
           Line[{6202, 65, 66, 67, 6203}], 
           Line[{6204, 72, 73, 74, 75, 76, 6205}], 
           Line[{6206, 78, 79, 80, 81, 82, 83, 84, 85, 86, 6207}], 
           Line[{6208, 88, 89, 90, 91, 92, 93, 94, 6209}], 
           Line[{6210, 106, 107, 108, 109, 6211}], 
           Line[{6212, 111, 112, 113, 114, 115, 116, 117, 6213}], 
           Line[{6214, 124, 125, 126, 127, 128, 6215}], 
           Line[{6216, 134, 135, 136, 6217}], 
           Line[{6218, 138, 6219}], 
           Line[{6220, 141, 142, 143, 6221}], 
           
           Line[{6222, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 
            159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 
            172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 
            185, 186, 187, 188, 189, 190, 191, 6223}], 
           
           Line[{6224, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 
            204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 
            217, 218, 219, 220, 221, 222, 223, 224, 225, 6225}], 
           Line[CompressedData["
1:eJwl1VVUFwYUB+A/2FioqAgWomKLjd1gByqKhWBioet2uk5jaS7s2IylLmw3
Yx12bCZ2YNc+zh6+e+7b7+Hee25UWkbi+KBAIDBVSQwPBI7pj3OCk5wik9Oc
4SznOM8FLnKJy1whi6tc4zo3uMktbnOHu9zjPgG5QQSTg5zkIjd5yEs+QshP
AQpSiMKEUoSiFCOM4pSgJOGUIoJISlOGspSjPFFUIJqKVKIyMVShKtWoTg1q
UovaxFKHutSjPg1oSCPiaEwTmtKM5rSgJa1oTRva0o72xJNABzrSic50oSvd
6E4PembPjl70pg9J9KUfyfRnAAMZxGBSGEIqaQxlGMMZwUhGkc5oxjCWcWQv
TQYTmMgDPMhDPMwjPMpjPM4TPMlTPM0zTOJZJjOF53ieF3iRl3iZV3iV13id
N3gz6P+dncZ0ZvAWb/MO7/Ie7zOTWcxmDnOZxwd8yEd8zHwWsJBFLGYJS1nG
clbwCZ+yklWsZg2f8Tlf8CVf8TVrWcc3fMt3fM96NrCRTWxmC1vZxg/8yHZ2
sJNd/MTP/MKv/Mbv/MGf/MXf7GYPe9nHfg5wkEMc5gj/8C9HOcZxTnCSU2Ry
mjOc5RznucBFLnGZK2RxlWtc5wY3ucVt7nCXe9wnEOz+CSYHOclFbvKQl3yE
kJ8CFKQQhQmlCEUpRhjFKUFJwilFBJGUpgxlKUd5oqhANBWpRGViqEJVqlGd
GtSkFrWJpQ51qUd9GtCQRsTRmCY0pRnNaUFLWtGaNrSlHe2JJ4EOdKQTnelC
V7rRnR70JJFe9KYPSfSlH8n0ZwADGcRgUhhCKmkMZRjDGcFIRpHOaMYwlnGM
J4MJ2bn+xn/sured
            "]], 
           Line[{6228, 1154, 1155, 1156, 6229}], 
           Line[{6230, 1197, 1198, 6231}], 
           Line[{6232, 1200, 1201, 1202, 1203, 1204, 1205, 6233}], 
           Line[{6234, 1227, 1228, 6235}], 
           Line[{6236, 1244, 1245, 1246, 6237}], 
           Line[{6238, 1270, 1271, 1272, 1273, 1274, 6239}], 
           Line[{6240, 1301, 1302, 6241}], 
           Line[{6242, 1319, 6243}], 
           Line[{6244, 1321, 1322, 1323, 6245}], 
           Line[{6246, 1325, 6247}], 
           Line[{6248, 1340, 1341, 1342, 6249}], 
           Line[{6250, 1344, 1345, 1346, 1347, 1348, 1349, 6251}], 
           Line[{6252, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 6253}], 
           Line[CompressedData["
1:eJwN1WObkAkAheE3zEw2JjfZ1qLWRm0b1sicybZt27btJtu2beP+cD//4Fwn
okpU+cgYQRBES2R4EDQMCYJGNKYJTWlGc1rQkla0pg1taUd7OtCRTnSmC13p
Rnd60JNe9KYPfelHfwYwkEEMZghDGcZwRjCSUYxmDGMZx3gmMJFJTGYKU5nG
dGYwk1nMZg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHejawkU1sZgtbiWYb
29nBTnaxmz3sZR/7OcBBDnGYIxzlGMc5wUlOcZoznOUc57nARS5xmStc5RrX
ucFNbnGbO9zlHvd5wEMe8ZgnPOUZz3nBS17xmje85R1BaBDEICaxiE0IoYQR
h7jEIz4JSEgiEpOEpCQjOSlISSpSE04a0pKO9GQgI5nITARZyEo2spODnOQi
N3nISz7yU4CCFKIwRShKMYpTgpKU4gM+5CM+pjRl+IRP+YzP+YIv+Yqv+YZv
+Y7v+YEf+YmfKUs5fqE8v1KBilSiMr/xO3/wJ3/xN//wL//xP1WoSjWqU4Oa
1KI2dahLPeoTSRQNaEgjGtOEpjSjOS1oSSta04a2tKM9HehIJzrTha50ozs9
6EkvetOHvvSjPwMYyCAGM4ShDGM4IxjJKEYzhrGMYzwTmMgkJjOFqUxjOjOY
ySxmM4e5zGM+C1jIIhazhKUsYzkrWMkqVrOGtaxjPRvYyCY2s4WtRLON7exg
J7vYzR72so/9HOAghzjMEY5yjOOc4CSnOM0ZznKO81zgIpe4zBWuco3r3OAm
t7jNHe5yj/s84CGPeMwTnvKM57zgJa94zRve8o4gzP6JSSxiE0IoYcQhLvGI
TwISkojEJCEpyUhOClKSitSEk4a0pCM9GchIJjITQRayko3s5CAnuchNHvKS
j/wUoCCFKEwRilKMKJ/4Hm48+XA=
            "]], 
           Line[CompressedData["
1:eJwV0Mk2AmAAgNHfyiu09RSUDJUQiiKpjJWZShrMU4S3di3u+jvnm6i1Cs2x
EEKRdiSEyfEQpogSY5o4M8wyxzwJkqRYIM0iSyyTYYVV1siSY50N8hTYZIsi
25TYoUyFKrvssc8BhxxRo06DY0445YxzLrjkimuatGhzQ4dbuvToM+COex54
5IlnXnjljXc+GPLJFyO++eH3v+HnHwSVJH8=
            "]], 
           
           Line[{6258, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 
            6259}], 
           
           Line[{6260, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 
            1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 
            1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 
            1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 
            1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 
            1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 
            6261}], 
           
           Line[{6262, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 
            2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 
            2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 
            2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 
            6263}], 
           
           Line[{6264, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 
            2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 
            2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 
            2090, 2091, 2092, 2093, 6265}], 
           
           Line[{6266, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 
            2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 
            2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 
            2129, 2130, 6267}], 
           
           Line[{6268, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 
            2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 
            2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 
            2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 
            2183, 2184, 2185, 2186, 2187, 6269}], 
           
           Line[{6270, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 
            2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 
            2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 
            2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 
            2240, 2241, 2242, 2243, 6271}], 
           
           Line[{6272, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 
            2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 
            2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 
            2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 
            2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 
            6273}], 
           
           Line[{6274, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 
            6275}], 
           
           Line[{6276, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 
            2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 
            2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 6277}], 
           
           Line[{6278, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 
            2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 
            2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 
            2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 
            2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 6279}], 
           
           Line[{6280, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 
            2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 
            2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 
            2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 
            2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 
            2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 6281}], 
           Line[{6282, 2502, 2503, 6283}], 
           
           Line[{6284, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 
            2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 
            2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 
            2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 
            6285}], 
           Line[{6286, 2551, 2552, 2553, 2554, 6287}], 
           
           Line[{6288, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 
            2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 
            2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 
            6289}], 
           
           Line[{6290, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 
            2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 
            2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 
            2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 
            2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 
            2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 
            6291}], 
           
           Line[{6292, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 
            2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 
            2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 6293}], 
           Line[{6294, 2734, 2735, 2736, 6295}], 
           
           Line[{6296, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 
            2747, 2748, 2749, 2750, 2751, 6297}], 
           
           Line[{6298, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 
            2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 
            2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 
            2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 
            2802, 2803, 2804, 2805, 2806, 6299}], 
           Line[{6300, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 6301}], 
           
           Line[{6302, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 
            2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 6303}], 
           Line[{6304, 2851, 2852, 2853, 6305}], 
           Line[{6306, 2855, 6307}], 
           
           Line[{6308, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 
            2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 
            2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 
            2888, 2889, 2890, 2891, 2892, 2893, 2894, 6309}], 
           
           Line[{6310, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 
            2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 
            2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 6311}], 
           Line[{6312, 2934, 2935, 2936, 2937, 2938, 2939, 6313}], 
           Line[{6314, 2960, 2961, 6315}], 
           Line[{6316, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 
            2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 
            2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 
            2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 6317}], 
           
           Line[{6318, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 
            3031, 3032, 3033, 3034, 3035, 3036, 3037, 6319}], 
           
           Line[{6320, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 
            3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 6321}], 
           Line[{6322, 3072, 3073, 3074, 3075, 3076, 6323}], 
           
           Line[{6324, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 
            3087, 3088, 3089, 3090, 3091, 6325}], 
           Line[{6326, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 6327}], 
           Line[{6328, 3109, 3110, 3111, 6329}], 
           
           Line[{6330, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 
            3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 
            3135, 3136, 6331}], 
           Line[{6332, 3158, 3159, 3160, 3161, 3162, 3163, 6333}], 
           
           Line[{6334, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 
            3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 
            3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 6335}], 
           
           Line[{6336, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 
            3216, 3217, 3218, 3219, 3220, 6337}], 
           
           Line[{6338, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 
            3250, 3251, 3252, 3253, 3254, 3255, 6339}], 
           
           Line[{6340, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 
            3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 
            6341}], 
           
           Line[{6342, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 
            3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 
            3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 
            3331, 3332, 6343}], 
           Line[{6344, 3346, 3347, 3348, 3349, 6345}], 
           Line[{6346, 3354, 6347}], 
           Line[{6348, 3360, 6349}], 
           
           Line[{6350, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 
            3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 
            6351}], 
           Line[{6352, 3393, 6353}], 
           Line[{6354, 3396, 6355}], 
           
           Line[{6356, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 
            3408, 3409, 3410, 3411, 3412, 6357}], 
           
           Line[{6358, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 
            3440, 3441, 3442, 3443, 3444, 6359}], 
           
           Line[{6360, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 
            3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 
            3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 
            3488, 3489, 3490, 3491, 3492, 3493, 3494, 6361}], 
           
           Line[{6362, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 
            3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 
            3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 
            3534, 3535, 3536, 3537, 3538, 3539, 3540, 6363}], 
           Line[{6364, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 6365}], 
           Line[{6366, 3571, 6367}], 
           
           Line[{6368, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 
            3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 
            3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 
            3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 
            3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 
            6369}], 
           
           Line[{6370, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 
            3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 
            3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 
            3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 
            3676, 3677, 3678, 3679, 3680, 6371}], 
           
           Line[{6372, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 
            3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 
            3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 
            3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 
            3734, 3735, 3736, 3737, 3738, 3739, 3740, 6373}], 
           
           Line[{6374, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 
            3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 
            3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 
            3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 
            3786, 6375}], 
           
           Line[{6376, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 
            3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 
            3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 
            3819, 6377}], 
           
           Line[{6378, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 
            3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 
            3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 
            3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 
            3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 
            3885, 6379}], 
           
           Line[{6380, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 
            3896, 3897, 3898, 3899, 3900, 6381}], 
           
           Line[{6382, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 
            3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 
            3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 
            6383}], 
           
           Line[{6384, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 
            3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 
            3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 
            3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 
            3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 
            3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 
            4005, 4006, 4007, 4008, 6385}], 
           Line[{6386, 4021, 4022, 6387}], 
           
           Line[{6388, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 
            4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 
            4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 
            4056, 4057, 4058, 4059, 4060, 6389}], 
           
           Line[{6390, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 
            4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 
            4088, 4089, 4090, 4091, 6391}], 
           
           Line[{6392, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 
            4118, 4119, 4120, 4121, 4122, 6393}], 
           
           Line[{6394, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 
            4137, 4138, 4139, 4140, 4141, 4142, 6395}], 
           
           Line[{6396, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 
            4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 
            4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 
            6397}], 
           Line[{6398, 4178, 4179, 4180, 4181, 4182, 4183, 6399}], 
           Line[{6400, 4189, 4190, 4191, 6401}], 
           
           Line[{6402, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 
            4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 
            4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 
            6403}], 
           
           Line[{6404, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 
            4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 
            4255, 4256, 4257, 4258, 4259, 6405}], 
           
           Line[{6406, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 
            4273, 4274, 4275, 6407}], 
           
           Line[{6408, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 
            4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 
            4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 
            4317, 6409}], 
           
           Line[{6410, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 
            4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 
            4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 
            4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 
            4361, 4362, 4363, 4364, 4365, 4366, 4367, 6411}], 
           
           Line[{6412, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 
            4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 
            6413}], 
           
           Line[{6414, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 
            4403, 4404, 4405, 4406, 4407, 4408, 6415}], 
           
           Line[{6416, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 
            4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 
            4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 
            4444, 4445, 4446, 6417}], 
           
           Line[{6418, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 
            4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 
            4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 
            4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 
            4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 
            4502, 4503, 4504, 4505, 6419}], 
           
           Line[{6420, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 
            4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 
            4539, 4540, 4541, 4542, 6421}], 
           
           Line[{6422, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 
            4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 
            4572, 6423}], 
           
           Line[{6424, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 
            4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 
            4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 
            4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 
            4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 6425}], 
           Line[{6426, 4636, 6427}], 
           
           Line[{6428, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 
            4647, 6429}], 
           
           Line[{6430, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 
            4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 
            4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4689, 
            4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 
            4701, 4702, 4703, 4704, 6431}], 
           Line[{6432, 4709, 4710, 4711, 4712, 4713, 6433}], 
           
           Line[{6434, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 
            4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 6435}], 
           
           Line[{6436, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 
            4745, 6437}], 
           
           Line[{6438, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757, 
            4758, 4759, 4760, 4761, 4762, 6439}], 
           
           Line[{6440, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 
            4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4787, 4788, 4789, 
            4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 
            4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 
            4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 
            4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 
            6441}], 
           
           Line[{6442, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 
            4848, 4849, 4850, 4851, 6443}], 
           Line[{6444, 4853, 4854, 4855, 4856, 6445}], 
           Line[CompressedData["
1:eJwV0lc7EGAAQOGPQiLKimRViIysKLOs7JGSvfceDZsrv9p4Xbx/4Dwnb35n
eDsihHBNWUYIN0kh3HJHSA4hgkge8ZgooonhCbE8JY54npFAIs95QRLJpJBK
Gi9JJ4NXZPKaLLLJIZc83vCWd+RTQCHvKaKYD5RQShnlfKSCSqqopoZP1FLH
Z75QTwONNNFMC1/5RitttNNBJ9/popseeumjnwEGGWKYH4zwk1+M8psxxplg
kimmmWGWOeZZYJEllllhlTXW2WCTLbbZYZc99jngkD/85R//OeKYE04545wL
Lrl6aOmLe9pnMGE=
            "]], 
           Line[CompressedData["
1:eJwV09dCCGAAQOE/m2RURmQUskK2rBQq3HkED8BT2CNb9sqWKHtvsjOzd7as
yCg+F9/1uToJEyaNnxgRQigmJS6EyTEhTGEq05jODGYyi9nMIYe5zGM+C1jI
IhazhFyWsozlrGAlq1jNGtayjvXksYGNbGIzW9jKNraTzw4K2MkuCiliN3vY
yz72c4CDHOIwRzjKMY5zgpOc4jRnOMs5zlPMBS5yictc4SrXKOE6N7jJLW5z
h1Luco/7POAhj3jME57yjOe84CVlvOI1b3jLO97zgY+U84nPfOEr36jgOz+o
5Ce/+M0fqqjmLyE2hAhqUJNa1KYOdalHfRoQSUOiaERjmtCUaGKIpRnNaUFL
4mhFa+JpQ1va0Z4EEulARzqRRGe60JVudCeZHvSkFyn0pg996Ud/BjCQQaQy
mCEMZRjDSWME6WQwklGMJpMsshnDWMb9b/njH+Y5enk=
            "]], 
           Line[{6450, 5198, 6451}], 
           
           Line[{6452, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 
            5226, 5227, 5228, 6453}], 
           
           Line[{6454, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 
            5245, 5246, 5247, 6455}], 
           Line[{6456, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 6457}], 
           
           Line[{6458, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 
            5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 
            5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 
            5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 6459}], 
           
           Line[{6460, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 
            5313, 5314, 5315, 5316, 5317, 6461}], 
           Line[CompressedData["
1:eJwV1eN70AsABeBftrfV8rJtLNvLrmVt2bZ5bZt1UffmLsKybdvG24f3/AHn
ec5zIqJjo2LiBUEQJyLDg2BrSBBsI47t7GAnu9jNHvayj/0c4CCHOMwRjnKM
45zgJKc4zRnOco7zXOAil7jMFa5yjevc4Ca3uM0d7nKP+zzgIY94zBOe8ozn
vOAlQWgQxCM+CUhIIhKThKQkIzkpSEkqUpOGtKQjPRkIIZQwMpKJcDKThaxk
Izs5yEkEuchNHvKSj/wUoCCFKEwRilKM4pSgJKUoTRnKUo7yVKAilahMFaoS
STWqU4Oa1KI2dahLPerTgIY0ojFNaEozmtOCKFrSita0oS3taE8HOtKJznSh
K93oTjQ96EkvetOHvvSjPwMYyCBiiGUwQxjKMIYzgpGMYjRjGMs4xjOBiUxi
MlOYyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoy3uBN3uJt3uFd3uN9PuBDPuJj
PuFTPuNzvuBLvuJrvuFbvuN7fuBHfuJnfuFXlrOC3/idP/iTlaziL/5mNWtY
yzrWs4GNbOIf/uU//mczW9jKNuLYzg52sovd7GEv+9jPAQ5yiMMc4SjHOM4J
TnKK05zhLOc4zwUuconLXOEq17jODW5yi9vc4S73uM8DHvKIxzzhKc94zgte
EoTZP/FJQEISkZgkJCUZyUlBSlKRmjSkJR3pyUAIoYSRkUyEk5ksZCUb2clB
TiLIRW7ykJd85KcABSlEYYpQlGIUpwQlKUVpylCWcpSnAhWpRGWqUJVIqlGd
GtSkFrWpQ13qUZ8GNKQRjWlCU5rRnBZE0ZJWtKYNbWlHezrQkU50pgtd6UZ3
oulBT3rRmz70pR/9GcBABhFDLIMZwlCGMZwRjGQUoxnDWMYxnglMZBKTmcJU
pjGdGcxkFrOZw1zmMZ8FLGQRi1nCUpa97tRXvgI7jQNg
            "]], 
           
           Line[{6464, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5790, 
            5791, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 
            5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 
            5813, 5814, 5815, 5816, 5817, 5818, 6465}], 
           
           Line[{6466, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 
            5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 
            6467}], 
           
           Line[{6468, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 
            5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 
            5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 
            5883, 5884, 5885, 5886, 5887, 6469}], 
           Line[{6470, 5890, 6471}], 
           
           Line[{6472, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 
            6473}], 
           
           Line[{6474, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 
            5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 
            5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, 
            5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 6475}], 
           Line[{6476, 5957, 5958, 5959, 5960, 6477}], 
           Line[{6478, 5969, 5970, 5971, 5972, 5973, 5974}]}, {
           Hue[0.9060679774997897, 0.6, 0.6], 
           Directive[
            PointSize[0.003666666666666667], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0.5]], 
           Line[CompressedData["
1:eJwNw0VWAlAAAMDvKVx7JTe2ErYIooiB2N0KInYXdl+PmfemLpaqT9aEEKI2
1IbQaJPNtthqm+12GDFqzLiddtltj7322e+ACQdNmnLItMOOmHHUrGOOO+Gk
OafMO+2Ms84574KLLrnsiquuue6Gm2657Y677rlvwaIHljy07JHHnnjqmede
eOmV19546533PvjokxWfffHVN9/98NMvv/3x1z//rQJnHj3z
            "]]}, {
           Hue[0.1421359549995791, 0.6, 0.6], 
           Directive[
            PointSize[0.003666666666666667], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0.5]], 
           Line[{6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 
            6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 
            6093}]}, {
           Hue[0.37820393249936934`, 0.6, 0.6], 
           Directive[
            PointSize[0.003666666666666667], 
            AbsoluteThickness[1.6], 
            Thickness[Large], 
            GrayLevel[0.5]], 
           
           Line[{6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 
            6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 
            6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 
            6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 
            6479}]}}}], {{}, {}}}, {{}, {{{}, {}, {
          Hue[0.67, 0.6, 0.6], 
          Directive[
           PointSize[0.004583333333333334], 
           AbsoluteThickness[1.6], 
           Thickness[Large], 
           RGBColor[0, 0, 1]], 
          Line[CompressedData["
1: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
tvQo4UESeMuzfHsXs4CkTn0qTx0lQdVIH5fXfwsoarRe3WKcBDn7/nnM+y6g
2ef33ZOnsPFotK803mMBmbdTDp+exeqDd36c4oyV1xW9OWaOhN2vfsVrmCyg
PafEfvAukcD4QhkpV3cBLWrtCDm7jI0fe8scChQXUPkXfnc/RnUotvh2rE18
Af3h8QryZFYH0sqjpzrL82ht/klvvwaX69g8kjIOeXWIUx02H9qDqx2YR0t2
4p3cXOog4Nhz783febSDfUL4H7c6cImmLfQUzqNdUgf7d/Crg+HjSz/Fvsyj
8q/Monu2qoOMqmR9VPw8GrEdDXyMmfij0W0fZu1BnbFYzAa2oSxdcfNob36+
Xx1mJik95VPP59EvUR+1DHl1qHYJ5lp5MI/W5stMcpIbmm7Oo9YQz9NBOHW4
6Tz3e8JtHmUnK16cp2K/T4zWMzjNo6bBS2OmmurQcuLn13fH59E/maMxznvV
oce7vtDp0Dzi3+148YWBOjyxOlKTdHAexQbzr4xiNrv+pNqUMo/W5uvopWtf
/kHA6jv5M8veQh2SL9nFMqnMo1tv2FKuWqvDM/upp3fF55HcjT/nUxzVQS21
35ODfx797c3P13FSh6n/ju/rYJxHiZdeo0FXLL534brQ6By6c+sYsfiiOuT/
VPe+0DuHeDkuH/t3WR3+Y3ei7uqcQ2vzh+4GTJx6VTmHbslU6Q/eVocHuXI7
JMvn0F8vUc++O+pwhvvWU66cOaS3OUJew18dToi+c3+WModqvyi3Sj1ShziN
T3qU5Dlkp3o8D2EWD5I7tD1xDgmcWpXxfawO513QKAqbQ9p21yRcwtXB/eC/
m9H35tDafCYpRnGGD9fn0M0tfX/2RKuDSYS/NM5jDt0I1OSS+KgODE9LuSMd
5tDp83ffJMarw3j9u+BXpnOo5GLY/HySOri8dsi7oDOHNPHvg+Qy1MH389DE
PtwckmKYfLI7Rx08LR4sxclj5bs8f+Sah8VL95WOpOQcWptfxXvU/Usw5xxi
Ke6686JUHTIzTH6YTs4iJ8MOM9FadfALn04cHpxFTUqP+P+rV4fPKzuNDv2b
RXkUhs31DeoQbrojubZ8Fvn9Kdl2o00dhgtTw4+nzqK6lWLewl51GDtJMw5L
mEWe9WcfmvarQ1fk6Bhn3Cxam+81Kx2PvIJm0edtvVadE+qwvWaLi8elWZQT
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
/w+Hx42j
           "]]}}}, {{}, {}}}, {
       Text[
        Style["Excluded", 24, 
         GrayLevel[0]], 
        Scaled[{0.7, 0.95}]]}}, {
     DisplayFunction -> Identity, GridLines -> {None, None}, DisplayFunction -> 
      Identity, DisplayFunction -> Identity, DisplayFunction -> Identity, 
      DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, 
      AxesOrigin -> {-3.8532825104055375`, -35.465437109347306`}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
         HoldForm["\!\(\*SuperscriptBox[\(\[Epsilon]\), \(2\)]\)"], None}, {
         HoldForm["\!\(\*SubscriptBox[\(m\), \(V\)]\) [GeV]"], None}}, 
      FrameStyle -> Directive[
        GrayLevel[0], 23], FrameTicks -> {{
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}, {
         Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", 
          WorkingPrecision -> 15.954589770191003`, RotateLabel -> 0], 
         Charting`ScaledFrameTicks[{Log, Exp}]}}, GridLines -> {None, None}, 
      GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], ImageSize -> Large, 
      Method -> {
       "AxisPadding" -> Scaled[0.02], "DefaultBoundaryStyle" -> Automatic, 
        "DefaultGraphicsInteraction" -> {
         "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
          "Effects" -> {
           "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
            "Droplines" -> {
             "freeformCursorMode" -> True, 
              "placement" -> {"x" -> "All", "y" -> "None"}}}}, 
        "DefaultMeshStyle" -> AbsolutePointSize[6], "DefaultPlotStyle" -> {
          Directive[
           RGBColor[0.368417, 0.506779, 0.709798], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.880722, 0.611041, 0.142051], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.560181, 0.691569, 0.194885], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.922526, 0.385626, 0.209179], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.528488, 0.470624, 0.701351], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.772079, 0.431554, 0.102387], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.363898, 0.618501, 0.782349], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[1, 0.75, 0], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.647624, 0.37816, 0.614037], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.571589, 0.586483, 0.], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.915, 0.3325, 0.2125], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.40082222609352647`, 0.5220066643438841, 0.85], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[
           0.9728288904374106, 0.621644452187053, 0.07336199581899142], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.736782672705901, 0.358, 0.5030266573755369], 
           AbsoluteThickness[1.6]], 
          Directive[
           RGBColor[0.28026441037696703`, 0.715, 0.4292089322474965], 
           AbsoluteThickness[1.6]]}, "DomainPadding" -> Scaled[0.02], 
        "PointSizeFunction" -> "SmallPointSize", "RangePadding" -> 
        Scaled[0.05], "OptimizePlotMarkers" -> True, "OptimizePlotMarkers" -> 
        True, "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& ), "CopiedValueFunction" -> ({
            Exp[
             Part[#, 1]], 
            Exp[
             Part[#, 2]]}& )}}, PlotLabel -> Style[
        Row[{
         "\!\(\*SubscriptBox[\(N\), \(events\)]\) \[GreaterEqual] ", 2.3}], 
        18, 
        GrayLevel[0]], 
      PlotRange -> {{-3.853282510405546, 
       2.347654056361624}, {-35.465437109347384`, -13.871612595677659`}}, 
      PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, Ticks -> {
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0], 
        Charting`ScaledTicks[{Log, Exp}, {Log, Exp}, "Nice", WorkingPrecision -> 
         15.954589770191003`, RotateLabel -> 0]}}], 
    Placed[
     Unevaluated[
      PointLegend[{
        Directive[
         PointSize[0.004583333333333334], 
         AbsoluteThickness[1.6], 
         Thickness[Large], 
         RGBColor[0, 0, 1]]}, {
        Style["FASER2-FPF", 15]}, LegendMarkers -> {{False, Automatic}}, 
       Joined -> {True}, LabelStyle -> {}, LegendLayout -> "Column"]], {0.2, 
     0.15}, Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{3.9201090257640295`*^9, 3.9201090872650204`*^9, 
  3.921653027926696*^9, 3.9216576579379454`*^9},
 CellTags->"Sensitivity-computation",
 CellLabel->
  "Out[372]=",ExpressionUUID->"032f3bf6-6350-4d27-9c30-43db7f57b35d"]
}, Open  ]],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.920043072729986*^9},ExpressionUUID->"9ed6bad3-bf28-43a6-a3d6-\
f02372bd0bc0"],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{
  3.920041766217311*^9},ExpressionUUID->"9268ac82-e548-42f7-9781-\
4f750cf4444a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Deleting generated cells", "Title",
 CellChangeTimes->{{3.9025559465149946`*^9, 
  3.9025559494966087`*^9}},ExpressionUUID->"ffb96111-011a-40fa-9682-\
858963d62183"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"FrontEndTokenExecute", "[", "\"\<DeleteGeneratedCells\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"FrontEndTokenExecute", "[", "\"\<SelectAll\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "FrontEndTokenExecute", "[", "\"\<SelectionCloseAllGroups\>\"", "]"}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.9025559062888603`*^9, 3.9025559062888603`*^9}, {
   3.902555964086707*^9, 3.902555989355214*^9}, 3.9027635395877576`*^9, {
   3.902767344895295*^9, 3.9027673476276693`*^9}, {3.902889573287343*^9, 
   3.902889583599063*^9}, 3.9039719548816566`*^9, {3.918148939669592*^9, 
   3.918148941687619*^9}, 3.9200483052977896`*^9},
 CellLabel->"In[19]:=",ExpressionUUID->"f52ba2e2-b5c4-48a5-92ca-6113d843928f"]
}, Closed]]
},
WindowSize->{1117, 673},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
ShowCellTags->True,
Magnification:>0.9 Inherited,
FrontEndVersion->"13.2 for Microsoft Windows (64-bit) (November 18, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"83359829-682c-4d24-a2db-c528ca8bf717"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Acceptance"->{
  Cell[5786, 156, 317, 7, 77, "Title",ExpressionUUID->"294691d8-aa8b-4eec-b72c-7eddbed8edd7",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[6128, 167, 227, 5, 75, "Chapter",ExpressionUUID->"961be1c9-94c9-4c1d-89d7-f8d7b8cbf72d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[6358, 174, 3805, 97, 228, "Input",ExpressionUUID->"7e8395d1-58ed-4ab9-b1bf-c7ebe3e9a552",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[10200, 276, 318, 6, 75, "Chapter",ExpressionUUID->"cf63fabc-7a3b-4498-8bf8-f69a301f20dc",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[10521, 284, 4554, 122, 281, "Input",ExpressionUUID->"2c1cafc9-37d9-434e-bd2d-c0787bc6f55b",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[15112, 411, 594, 10, 75, "Chapter",ExpressionUUID->"94b059cc-5312-4be8-9749-b24e1b58194e",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[15731, 425, 297, 6, 72, "Section",ExpressionUUID->"1caa4f1c-1d68-4c34-a8aa-219c84a8ceb7",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[16053, 435, 3159, 73, 176, "Input",ExpressionUUID->"3e580ec6-f8ab-4835-a08c-150bfb38f985",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[19215, 510, 1634, 33, 70, "Output",ExpressionUUID->"d69e6648-66f0-4f32-9cab-7f681b39c40c",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[20898, 549, 285, 6, 72, "Section",ExpressionUUID->"8f111b29-8491-4838-ab0f-75131d945ac9",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[21208, 559, 291, 7, 60, "Subsection",ExpressionUUID->"5ab83283-5bb4-4ea2-aaa0-a73f4f043e82",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[21524, 570, 18408, 473, 1033, "Input",ExpressionUUID->"70174eea-746d-446e-811b-01df40fa5c0d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[39935, 1045, 356, 7, 70, "Print",ExpressionUUID->"ff83b4f9-fec5-45e1-99cd-d9cb264e498a",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40294, 1054, 267, 5, 70, "Output",ExpressionUUID->"9590ee69-4295-4215-83d3-ca35fb2c260b",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40622, 1066, 214, 5, 72, "Section",ExpressionUUID->"04c8f572-467e-4c76-8fac-f5585da995c8",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40861, 1075, 3239, 79, 218, "Input",ExpressionUUID->"bfe2aed5-8f0a-4cad-a1aa-1740c3919a79",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[44103, 1156, 35261, 738, 70, "Output",ExpressionUUID->"d8cb6cd9-2f0f-499e-a27f-2d3970fee00a",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[79425, 1901, 287, 6, 74, "Chapter",ExpressionUUID->"c2195567-c72b-45b8-82f4-a09212ef8e72",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[79715, 1909, 1483, 34, 107, "Input",ExpressionUUID->"25a5ddb0-4a9b-4ac7-bc67-62ae0c80c611",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81247, 1949, 306, 6, 77, "Title",ExpressionUUID->"6bf41310-9786-4a2d-9c45-da72c297facc",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81578, 1959, 285, 6, 75, "Chapter",ExpressionUUID->"09993897-08e0-4d65-9fda-c55a83b4e5d6",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81888, 1969, 4647, 115, 279, "Input",ExpressionUUID->"14cf246a-dfe6-4f84-bced-6779a027f776",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[86538, 2086, 780, 15, 70, "Output",ExpressionUUID->"3e0f81a7-f9c3-4b2e-b76a-bcae9169ee8d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[87321, 2103, 341, 7, 70, "Print",ExpressionUUID->"d6c73a9a-4d07-4011-be7b-4e7e03115bef",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[87665, 2112, 330, 7, 70, "Output",ExpressionUUID->"deadec39-f5df-4058-941f-4d25476fe9a9",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[88044, 2125, 238, 5, 75, "Chapter",ExpressionUUID->"bf5cb1ca-586b-421c-9b8f-bcdda79a4c7d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[88307, 2134, 2050, 50, 279, "Input",ExpressionUUID->"8ccbe0c0-5799-4a13-b89d-58d5d3aa1550",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[90360, 2186, 1203, 34, 70, "Output",ExpressionUUID->"b5ff23f9-94c1-49d3-89cd-89ff2a752ca5",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}]},
 "Acceptance-computation"->{
  Cell[91903, 2236, 308, 6, 75, "Chapter",ExpressionUUID->"90e03790-1066-4abb-8908-35a37e0278c1",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[92214, 2244, 425, 10, 39, "Input",ExpressionUUID->"18b4049e-6a0e-4546-98b8-9c919573bc3b",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[92676, 2259, 362, 6, 75, "Chapter",ExpressionUUID->"ddc91657-c605-432a-9fc4-3dde27689d78",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[93063, 2269, 10758, 261, 539, "Input",ExpressionUUID->"c815bc21-895a-435e-aff8-c368c51a223c",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[103824, 2532, 415, 10, 40, "Output",ExpressionUUID->"eba4ff10-44f5-4a71-9a25-f92fe8d38c7b",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[104242, 2544, 22023, 516, 373, "Output",ExpressionUUID->"e80eab28-5250-43df-a126-041d081a6cd1",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126268, 3062, 543, 12, 42, "Output",ExpressionUUID->"d44069a0-a118-44d1-8844-6a685899a82d",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126814, 3076, 1836, 37, 85, "Output",ExpressionUUID->"a1113a4c-c0b6-4713-bdfc-160856f775b3",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[128699, 3119, 573, 10, 75, "Chapter",ExpressionUUID->"2ed58b5e-8fa1-4a99-b81c-130884bcdd21",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[129297, 3133, 18011, 461, 960, "Input",ExpressionUUID->"480fd17b-5a11-467d-8339-95713cf8a148",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147311, 3596, 502, 11, 31, "Print",ExpressionUUID->"b58d83b6-48cc-41d6-939b-ad652ac08a0f",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147816, 3609, 638, 14, 42, "Output",ExpressionUUID->"d494d169-3108-4284-b953-8e6e06fc0e82",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[148457, 3625, 772, 17, 38, "Message",ExpressionUUID->"77ac2976-6dc1-4ac5-a6a8-e9eef74b714e",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149232, 3644, 521, 12, 40, "Output",ExpressionUUID->"f0d99251-4284-49d8-83a7-be0d46d71aa2",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149756, 3658, 521, 12, 40, "Output",ExpressionUUID->"1b75b067-c941-411a-921f-dca0310d83ef",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[150280, 3672, 881, 19, 38, "Message",ExpressionUUID->"ceb376f9-d694-4181-964e-cdf8e55f5506",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[151164, 3693, 151031, 2759, 747, "Output",ExpressionUUID->"d53b2f5a-1257-4cb8-93ba-301ba62b2cc4",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302525, 6467, 330, 6, 72, "Section",ExpressionUUID->"1ee4b6fc-436c-44ba-9c25-aac28ca9c035",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302880, 6477, 388, 7, 60, "Subsection",ExpressionUUID->"0a1f8dc1-244c-4013-a4f6-a6748a821672",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[303600, 6493, 13021, 315, 720, "Input",ExpressionUUID->"6acd5b9d-3d21-4c1b-bfa2-65d6c8a2ce8a",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[316658, 6813, 262, 5, 60, "Subsection",ExpressionUUID->"e409be1f-14c9-48b7-a089-70f654ff54f3",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[316945, 6822, 17911, 451, 778, "Input",ExpressionUUID->"0da87de1-0190-4840-a5aa-6c481e91b34e",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[334859, 7275, 329, 8, 40, "Output",ExpressionUUID->"4ae583ea-cb5f-4272-9fbc-78bd8e140f81",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[335191, 7285, 167952, 3626, 2258, "Output",ExpressionUUID->"abf7e606-cc83-4055-8670-f5bf5d9414ac",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[503192, 10917, 284, 5, 60, "Subsection",ExpressionUUID->"6ff9d28c-eed8-4817-92f4-3f387708a5b0",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[503501, 10926, 5864, 133, 425, "Input",ExpressionUUID->"cf1b132c-0605-4069-a715-693b632def22",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[509368, 11061, 740, 16, 38, "Message",ExpressionUUID->"98e0a502-6f93-479a-939d-fefb04691c21",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[510111, 11079, 742, 16, 38, "Message",ExpressionUUID->"d1c3ff7a-4224-4396-a879-a2007e910dab",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[510856, 11097, 341, 7, 42, "Output",ExpressionUUID->"6a7a4e4d-4d2a-43fa-8443-6ab5efc2151e",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[511200, 11106, 44737, 863, 345, "Output",ExpressionUUID->"dfeb818f-88f8-41c1-9b99-4f314875a047",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[555986, 11975, 309, 6, 60, "Subsection",ExpressionUUID->"9568fedf-30f9-450d-900b-5ab61536bd06",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[556298, 11983, 5726, 125, 228, "Input",ExpressionUUID->"f14e7503-0c2b-42e6-82b3-09c8d2837343",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[562061, 12113, 335, 8, 60, "Subsection",ExpressionUUID->"c29e3e81-7da0-4ea9-b871-a5deff1aa7dc",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[562399, 12123, 7757, 194, 391, "Input",ExpressionUUID->"372d3cc6-07f2-41da-ad5e-4f1e21f8559a",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}]},
 "Number-of-events-computation"->{
  Cell[91624, 2227, 254, 5, 77, "Title",ExpressionUUID->"ec7d1ed4-b833-4ca9-b86b-68ef0bdfdc5e",
   CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}],
  Cell[92676, 2259, 362, 6, 75, "Chapter",ExpressionUUID->"ddc91657-c605-432a-9fc4-3dde27689d78",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[93063, 2269, 10758, 261, 539, "Input",ExpressionUUID->"c815bc21-895a-435e-aff8-c368c51a223c",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[103824, 2532, 415, 10, 40, "Output",ExpressionUUID->"eba4ff10-44f5-4a71-9a25-f92fe8d38c7b",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[104242, 2544, 22023, 516, 373, "Output",ExpressionUUID->"e80eab28-5250-43df-a126-041d081a6cd1",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126268, 3062, 543, 12, 42, "Output",ExpressionUUID->"d44069a0-a118-44d1-8844-6a685899a82d",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126814, 3076, 1836, 37, 85, "Output",ExpressionUUID->"a1113a4c-c0b6-4713-bdfc-160856f775b3",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[128699, 3119, 573, 10, 75, "Chapter",ExpressionUUID->"2ed58b5e-8fa1-4a99-b81c-130884bcdd21",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[129297, 3133, 18011, 461, 960, "Input",ExpressionUUID->"480fd17b-5a11-467d-8339-95713cf8a148",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147311, 3596, 502, 11, 31, "Print",ExpressionUUID->"b58d83b6-48cc-41d6-939b-ad652ac08a0f",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147816, 3609, 638, 14, 42, "Output",ExpressionUUID->"d494d169-3108-4284-b953-8e6e06fc0e82",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[148457, 3625, 772, 17, 38, "Message",ExpressionUUID->"77ac2976-6dc1-4ac5-a6a8-e9eef74b714e",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149232, 3644, 521, 12, 40, "Output",ExpressionUUID->"f0d99251-4284-49d8-83a7-be0d46d71aa2",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149756, 3658, 521, 12, 40, "Output",ExpressionUUID->"1b75b067-c941-411a-921f-dca0310d83ef",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[150280, 3672, 881, 19, 38, "Message",ExpressionUUID->"ceb376f9-d694-4181-964e-cdf8e55f5506",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[151164, 3693, 151031, 2759, 747, "Output",ExpressionUUID->"d53b2f5a-1257-4cb8-93ba-301ba62b2cc4",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302244, 6458, 256, 5, 75, "Chapter",ExpressionUUID->"0f308b41-d607-4d23-bea6-f98cdbbab013",
   CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}]},
 "Number-of-events-computation+sensitivity"->{
  Cell[91624, 2227, 254, 5, 77, "Title",ExpressionUUID->"ec7d1ed4-b833-4ca9-b86b-68ef0bdfdc5e",
   CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}],
  Cell[91903, 2236, 308, 6, 75, "Chapter",ExpressionUUID->"90e03790-1066-4abb-8908-35a37e0278c1",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[92214, 2244, 425, 10, 39, "Input",ExpressionUUID->"18b4049e-6a0e-4546-98b8-9c919573bc3b",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[92676, 2259, 362, 6, 75, "Chapter",ExpressionUUID->"ddc91657-c605-432a-9fc4-3dde27689d78",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[93063, 2269, 10758, 261, 539, "Input",ExpressionUUID->"c815bc21-895a-435e-aff8-c368c51a223c",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[103824, 2532, 415, 10, 40, "Output",ExpressionUUID->"eba4ff10-44f5-4a71-9a25-f92fe8d38c7b",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[104242, 2544, 22023, 516, 373, "Output",ExpressionUUID->"e80eab28-5250-43df-a126-041d081a6cd1",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126268, 3062, 543, 12, 42, "Output",ExpressionUUID->"d44069a0-a118-44d1-8844-6a685899a82d",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[126814, 3076, 1836, 37, 85, "Output",ExpressionUUID->"a1113a4c-c0b6-4713-bdfc-160856f775b3",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[128699, 3119, 573, 10, 75, "Chapter",ExpressionUUID->"2ed58b5e-8fa1-4a99-b81c-130884bcdd21",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[129297, 3133, 18011, 461, 960, "Input",ExpressionUUID->"480fd17b-5a11-467d-8339-95713cf8a148",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147311, 3596, 502, 11, 31, "Print",ExpressionUUID->"b58d83b6-48cc-41d6-939b-ad652ac08a0f",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[147816, 3609, 638, 14, 42, "Output",ExpressionUUID->"d494d169-3108-4284-b953-8e6e06fc0e82",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[148457, 3625, 772, 17, 38, "Message",ExpressionUUID->"77ac2976-6dc1-4ac5-a6a8-e9eef74b714e",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149232, 3644, 521, 12, 40, "Output",ExpressionUUID->"f0d99251-4284-49d8-83a7-be0d46d71aa2",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[149756, 3658, 521, 12, 40, "Output",ExpressionUUID->"1b75b067-c941-411a-921f-dca0310d83ef",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[150280, 3672, 881, 19, 38, "Message",ExpressionUUID->"ceb376f9-d694-4181-964e-cdf8e55f5506",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[151164, 3693, 151031, 2759, 747, "Output",ExpressionUUID->"d53b2f5a-1257-4cb8-93ba-301ba62b2cc4",
   CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302244, 6458, 256, 5, 75, "Chapter",ExpressionUUID->"0f308b41-d607-4d23-bea6-f98cdbbab013",
   CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302525, 6467, 330, 6, 72, "Section",ExpressionUUID->"1ee4b6fc-436c-44ba-9c25-aac28ca9c035",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[302880, 6477, 388, 7, 60, "Subsection",ExpressionUUID->"0a1f8dc1-244c-4013-a4f6-a6748a821672",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[303600, 6493, 13021, 315, 720, "Input",ExpressionUUID->"6acd5b9d-3d21-4c1b-bfa2-65d6c8a2ce8a",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[316658, 6813, 262, 5, 60, "Subsection",ExpressionUUID->"e409be1f-14c9-48b7-a089-70f654ff54f3",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[316945, 6822, 17911, 451, 778, "Input",ExpressionUUID->"0da87de1-0190-4840-a5aa-6c481e91b34e",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[334859, 7275, 329, 8, 40, "Output",ExpressionUUID->"4ae583ea-cb5f-4272-9fbc-78bd8e140f81",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[335191, 7285, 167952, 3626, 2258, "Output",ExpressionUUID->"abf7e606-cc83-4055-8670-f5bf5d9414ac",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[503192, 10917, 284, 5, 60, "Subsection",ExpressionUUID->"6ff9d28c-eed8-4817-92f4-3f387708a5b0",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[503501, 10926, 5864, 133, 425, "Input",ExpressionUUID->"cf1b132c-0605-4069-a715-693b632def22",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[509368, 11061, 740, 16, 38, "Message",ExpressionUUID->"98e0a502-6f93-479a-939d-fefb04691c21",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[510111, 11079, 742, 16, 38, "Message",ExpressionUUID->"d1c3ff7a-4224-4396-a879-a2007e910dab",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[510856, 11097, 341, 7, 42, "Output",ExpressionUUID->"6a7a4e4d-4d2a-43fa-8443-6ab5efc2151e",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[511200, 11106, 44737, 863, 345, "Output",ExpressionUUID->"dfeb818f-88f8-41c1-9b99-4f314875a047",
   CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
  Cell[555986, 11975, 309, 6, 60, "Subsection",ExpressionUUID->"9568fedf-30f9-450d-900b-5ab61536bd06",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[556298, 11983, 5726, 125, 228, "Input",ExpressionUUID->"f14e7503-0c2b-42e6-82b3-09c8d2837343",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[562061, 12113, 335, 8, 60, "Subsection",ExpressionUUID->"c29e3e81-7da0-4ea9-b871-a5deff1aa7dc",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[562399, 12123, 7757, 194, 391, "Input",ExpressionUUID->"372d3cc6-07f2-41da-ad5e-4f1e21f8559a",
   CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
  Cell[570205, 12323, 311, 6, 72, "Section",ExpressionUUID->"7d9414c6-173d-4020-8288-2252992857f1",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[570541, 12333, 282, 5, 52, "Subsubsection",ExpressionUUID->"50da66da-b4fd-4c78-8af0-d2d0bf37a480",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[570848, 12342, 11651, 272, 408, "Input",ExpressionUUID->"6962c164-b0d4-438c-bc89-a951513665ff",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[582502, 12616, 344, 8, 40, "Output",ExpressionUUID->"8722ac7a-1e95-4557-8b8c-0bdf338bb66c",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[582849, 12626, 349, 8, 40, "Output",ExpressionUUID->"5b9fe57a-6086-42a5-b353-585bb031eff6",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[583201, 12636, 5215, 111, 894, "Output",ExpressionUUID->"ad3edb42-8acb-4803-8f54-769fd77f9e1f",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[588465, 12753, 232, 4, 60, "Subsection",ExpressionUUID->"f2457af1-76a9-47ab-b482-5799da6309cc",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[588722, 12761, 20824, 494, 952, "Input",ExpressionUUID->"fe3b5af1-2caa-4f01-a4d7-4be7307a3eac",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[609549, 13257, 56382, 1038, 373, "Output",ExpressionUUID->"38ae0e1d-0b79-433b-81da-d01da49fcde1",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[666016, 14304, 262, 5, 100, "Title",ExpressionUUID->"a1ac207f-e5a6-41ed-9016-23014b2a6c3e",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[666303, 14313, 213, 4, 75, "Chapter",ExpressionUUID->"61d66c6b-87da-4009-946a-eb32cc005fd8",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[666541, 14321, 7872, 168, 389, "Input",ExpressionUUID->"5ff1e429-21ed-463f-b582-04b4f7f4c30e",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[674416, 14491, 335, 6, 32, "Print",ExpressionUUID->"7238b77b-420f-4e25-8116-a4e9d1df83b5",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[674754, 14499, 671, 12, 77, "Output",ExpressionUUID->"834e7819-a02e-4c8f-995d-1f681f65324d",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[675474, 14517, 209, 4, 75, "Chapter",ExpressionUUID->"87d344ed-2d96-4345-98c4-a81cc45c1c16",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[675708, 14525, 221, 4, 72, "Section",ExpressionUUID->"cd6a76b8-81e9-467a-97b6-be4172b2931e",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[675954, 14533, 3610, 82, 228, "Input",ExpressionUUID->"1f4946c3-23ce-4e70-bc72-93b0971707fc",
   CellTags->"Number-of-events-computation+sensitivity"],
  Cell[679567, 14617, 313, 7, 41, "Output",ExpressionUUID->"9a31912e-1d96-458e-a452-7015a24bd277",
   CellTags->"Number-of-events-computation+sensitivity"]},
 "Number-of-events+sensitivity"->{
  Cell[5786, 156, 317, 7, 77, "Title",ExpressionUUID->"294691d8-aa8b-4eec-b72c-7eddbed8edd7",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[6128, 167, 227, 5, 75, "Chapter",ExpressionUUID->"961be1c9-94c9-4c1d-89d7-f8d7b8cbf72d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[6358, 174, 3805, 97, 228, "Input",ExpressionUUID->"7e8395d1-58ed-4ab9-b1bf-c7ebe3e9a552",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[10200, 276, 318, 6, 75, "Chapter",ExpressionUUID->"cf63fabc-7a3b-4498-8bf8-f69a301f20dc",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[10521, 284, 4554, 122, 281, "Input",ExpressionUUID->"2c1cafc9-37d9-434e-bd2d-c0787bc6f55b",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[15112, 411, 594, 10, 75, "Chapter",ExpressionUUID->"94b059cc-5312-4be8-9749-b24e1b58194e",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[15731, 425, 297, 6, 72, "Section",ExpressionUUID->"1caa4f1c-1d68-4c34-a8aa-219c84a8ceb7",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[16053, 435, 3159, 73, 176, "Input",ExpressionUUID->"3e580ec6-f8ab-4835-a08c-150bfb38f985",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[19215, 510, 1634, 33, 70, "Output",ExpressionUUID->"d69e6648-66f0-4f32-9cab-7f681b39c40c",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[20898, 549, 285, 6, 72, "Section",ExpressionUUID->"8f111b29-8491-4838-ab0f-75131d945ac9",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[21208, 559, 291, 7, 60, "Subsection",ExpressionUUID->"5ab83283-5bb4-4ea2-aaa0-a73f4f043e82",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[21524, 570, 18408, 473, 1033, "Input",ExpressionUUID->"70174eea-746d-446e-811b-01df40fa5c0d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[39935, 1045, 356, 7, 70, "Print",ExpressionUUID->"ff83b4f9-fec5-45e1-99cd-d9cb264e498a",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40294, 1054, 267, 5, 70, "Output",ExpressionUUID->"9590ee69-4295-4215-83d3-ca35fb2c260b",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40622, 1066, 214, 5, 72, "Section",ExpressionUUID->"04c8f572-467e-4c76-8fac-f5585da995c8",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[40861, 1075, 3239, 79, 218, "Input",ExpressionUUID->"bfe2aed5-8f0a-4cad-a1aa-1740c3919a79",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[44103, 1156, 35261, 738, 70, "Output",ExpressionUUID->"d8cb6cd9-2f0f-499e-a27f-2d3970fee00a",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[79425, 1901, 287, 6, 74, "Chapter",ExpressionUUID->"c2195567-c72b-45b8-82f4-a09212ef8e72",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[79715, 1909, 1483, 34, 107, "Input",ExpressionUUID->"25a5ddb0-4a9b-4ac7-bc67-62ae0c80c611",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81247, 1949, 306, 6, 77, "Title",ExpressionUUID->"6bf41310-9786-4a2d-9c45-da72c297facc",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81578, 1959, 285, 6, 75, "Chapter",ExpressionUUID->"09993897-08e0-4d65-9fda-c55a83b4e5d6",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[81888, 1969, 4647, 115, 279, "Input",ExpressionUUID->"14cf246a-dfe6-4f84-bced-6779a027f776",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[86538, 2086, 780, 15, 70, "Output",ExpressionUUID->"3e0f81a7-f9c3-4b2e-b76a-bcae9169ee8d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[87321, 2103, 341, 7, 70, "Print",ExpressionUUID->"d6c73a9a-4d07-4011-be7b-4e7e03115bef",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[87665, 2112, 330, 7, 70, "Output",ExpressionUUID->"deadec39-f5df-4058-941f-4d25476fe9a9",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[88044, 2125, 238, 5, 75, "Chapter",ExpressionUUID->"bf5cb1ca-586b-421c-9b8f-bcdda79a4c7d",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[88307, 2134, 2050, 50, 279, "Input",ExpressionUUID->"8ccbe0c0-5799-4a13-b89d-58d5d3aa1550",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
  Cell[90360, 2186, 1203, 34, 70, "Output",ExpressionUUID->"b5ff23f9-94c1-49d3-89cd-89ff2a752ca5",
   CellTags->{"Acceptance", "Number-of-events+sensitivity"}]},
 "Sensitivity"->{
  Cell[679953, 14632, 189, 3, 100, "Title",ExpressionUUID->"20138663-2b9a-41fa-8718-2e1c02355f2d",
   CellTags->"Sensitivity"],
  Cell[680167, 14639, 188, 3, 75, "Chapter",ExpressionUUID->"e53fa63b-a742-40cf-a205-b2502f696dbd",
   CellTags->"Sensitivity"],
  Cell[680380, 14646, 7076, 186, 520, "Input",ExpressionUUID->"99f6e797-c44c-4cdb-b806-3efcbdcad495",
   CellTags->"Sensitivity"],
  Cell[687459, 14834, 383, 7, 33, "Print",ExpressionUUID->"e8af3040-2df8-4c6d-8041-d7858d04414c",
   CellTags->"Sensitivity"],
  Cell[687845, 14843, 1049, 33, 242, "Output",ExpressionUUID->"ad763097-288e-42fc-9d69-b2bc43b15d15",
   CellTags->"Sensitivity"]},
 "Sensitivity-computation"->{
  Cell[688943, 14882, 316, 7, 75, "Chapter",ExpressionUUID->"8558a057-a38a-454c-bfce-bde3419e907e",
   CellTags->"Sensitivity-computation"],
  Cell[689284, 14893, 209, 4, 72, "Section",ExpressionUUID->"d2e4b5e5-7ca9-46d1-8935-925aa00d1a4f",
   CellTags->"Sensitivity-computation"],
  Cell[689518, 14901, 5390, 115, 314, "Input",ExpressionUUID->"c04809c2-412f-4207-902a-ca107db71530",
   CellTags->"Sensitivity-computation"],
  Cell[694911, 15018, 314, 6, 33, "Print",ExpressionUUID->"9bff1712-0f41-43a1-99df-af56ff75cb81",
   CellTags->"Sensitivity-computation"],
  Cell[695228, 15026, 280, 5, 41, "Output",ExpressionUUID->"f222d813-2ddf-4d19-898f-a67ef93d8532",
   CellTags->"Sensitivity-computation"],
  Cell[695511, 15033, 407, 7, 42, "Output",ExpressionUUID->"01210029-07be-4412-a717-8a972d6d50a5",
   CellTags->"Sensitivity-computation"],
  Cell[695967, 15046, 220, 4, 72, "Section",ExpressionUUID->"8dbf4156-fa28-4b8c-98ea-b1e3be065ffb",
   CellTags->"Sensitivity-computation"],
  Cell[696212, 15054, 15618, 391, 823, "Input",ExpressionUUID->"712e0550-86f1-4004-ba68-1c8c28691518",
   CellTags->"Sensitivity-computation"],
  Cell[711833, 15447, 353, 7, 33, "Print",ExpressionUUID->"67f75f75-6bdf-4c51-9eb3-7754f10a3628",
   CellTags->"Sensitivity-computation"],
  Cell[712189, 15456, 1171, 27, 148, "Output",ExpressionUUID->"d9e895c7-6407-435e-82e8-01d90752e3cc",
   CellTags->"Sensitivity-computation"],
  Cell[713363, 15485, 26080, 535, 383, "Output",ExpressionUUID->"6d9cc519-9fb3-4f46-b93a-f9d0d6cee093",
   CellTags->"Sensitivity-computation"],
  Cell[739632, 16030, 25905, 530, 383, "Output",ExpressionUUID->"ef95126c-7e30-4ee4-8b52-daca294a94ea",
   CellTags->"Sensitivity-computation"],
  Cell[765598, 16567, 300, 6, 75, "Chapter",ExpressionUUID->"ca66427b-19d6-4877-8ebb-41db99aeba92",
   CellTags->"Sensitivity-computation"],
  Cell[765923, 16577, 255, 5, 72, "Section",ExpressionUUID->"a59ae6cb-9828-417c-bdd1-fff95cb38e4f",
   CellTags->"Sensitivity-computation"],
  Cell[766203, 16586, 4693, 112, 167, "Input",ExpressionUUID->"dfa47edf-f1da-4b2e-b4e4-0bdbee1c1674",
   CellTags->"Sensitivity-computation"],
  Cell[770899, 16700, 162722, 2735, 445, "Output",ExpressionUUID->"5c357d86-b3ec-4792-8f11-bfcc264269ac",
   CellTags->"Sensitivity-computation"],
  Cell[933624, 19437, 416, 7, 42, "Output",ExpressionUUID->"393d1f0b-f7c4-4380-bc51-e3afb090b9af",
   CellTags->"Sensitivity-computation"],
  Cell[934089, 19450, 208, 4, 72, "Section",ExpressionUUID->"15df64ef-f8bc-45f8-9d3a-b2b9fc3a4c63",
   CellTags->"Sensitivity-computation"],
  Cell[934300, 19456, 2587, 67, 210, "Input",ExpressionUUID->"d222b99d-aa87-4a70-9775-f512810f7932",
   CellTags->"Sensitivity-computation"],
  Cell[936924, 19528, 207, 4, 72, "Section",ExpressionUUID->"b9b04a85-a4aa-45a1-9921-706d27f2c6b8",
   CellTags->"Sensitivity-computation"],
  Cell[937156, 19536, 14525, 363, 678, "Input",ExpressionUUID->"140a9c48-3c60-400f-bb3d-41932b0b01fa",
   CellTags->"Sensitivity-computation"],
  Cell[951684, 19901, 1568, 42, 132, "Output",ExpressionUUID->"510a32e1-d810-458d-82e9-3aba15763ef0",
   CellTags->"Sensitivity-computation"],
  Cell[953255, 19945, 601652, 10094, 367, "Output",ExpressionUUID->"032f3bf6-6350-4d27-9c30-43db7f57b35d",
   CellTags->"Sensitivity-computation"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Acceptance", 1556700, 30095},
 {"Acceptance-computation", 1561207, 30152},
 {"Number-of-events-computation", 1568075, 30221},
 {"Number-of-events-computation+sensitivity", 1571774, 30256},
 {"Number-of-events+sensitivity", 1581885, 30365},
 {"Sensitivity", 1586381, 30422},
 {"Sensitivity-computation", 1587058, 30433}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 207, 3, 88, "Title",ExpressionUUID->"cc091cd5-168d-44d1-9a83-ebb576c10ceb"],
Cell[CellGroupData[{
Cell[812, 29, 4738, 117, 419, "Input",ExpressionUUID->"c8a7c6bd-754e-4c81-b344-1b6f8cd06de4"],
Cell[5553, 148, 184, 2, 70, "Output",ExpressionUUID->"214ebb13-b06d-4440-863e-668d2fb07baf"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[5786, 156, 317, 7, 77, "Title",ExpressionUUID->"294691d8-aa8b-4eec-b72c-7eddbed8edd7",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[6128, 167, 227, 5, 75, "Chapter",ExpressionUUID->"961be1c9-94c9-4c1d-89d7-f8d7b8cbf72d",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[6358, 174, 3805, 97, 228, "Input",ExpressionUUID->"7e8395d1-58ed-4ab9-b1bf-c7ebe3e9a552",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[10200, 276, 318, 6, 75, "Chapter",ExpressionUUID->"cf63fabc-7a3b-4498-8bf8-f69a301f20dc",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[10521, 284, 4554, 122, 281, "Input",ExpressionUUID->"2c1cafc9-37d9-434e-bd2d-c0787bc6f55b",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[15112, 411, 594, 10, 75, "Chapter",ExpressionUUID->"94b059cc-5312-4be8-9749-b24e1b58194e",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[15731, 425, 297, 6, 72, "Section",ExpressionUUID->"1caa4f1c-1d68-4c34-a8aa-219c84a8ceb7",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[16053, 435, 3159, 73, 176, "Input",ExpressionUUID->"3e580ec6-f8ab-4835-a08c-150bfb38f985",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[19215, 510, 1634, 33, 70, "Output",ExpressionUUID->"d69e6648-66f0-4f32-9cab-7f681b39c40c",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[20898, 549, 285, 6, 72, "Section",ExpressionUUID->"8f111b29-8491-4838-ab0f-75131d945ac9",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[21208, 559, 291, 7, 60, "Subsection",ExpressionUUID->"5ab83283-5bb4-4ea2-aaa0-a73f4f043e82",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[21524, 570, 18408, 473, 1033, "Input",ExpressionUUID->"70174eea-746d-446e-811b-01df40fa5c0d",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[39935, 1045, 356, 7, 70, "Print",ExpressionUUID->"ff83b4f9-fec5-45e1-99cd-d9cb264e498a",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[40294, 1054, 267, 5, 70, "Output",ExpressionUUID->"9590ee69-4295-4215-83d3-ca35fb2c260b",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[40622, 1066, 214, 5, 72, "Section",ExpressionUUID->"04c8f572-467e-4c76-8fac-f5585da995c8",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[40861, 1075, 3239, 79, 218, "Input",ExpressionUUID->"bfe2aed5-8f0a-4cad-a1aa-1740c3919a79",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[44103, 1156, 35261, 738, 70, "Output",ExpressionUUID->"d8cb6cd9-2f0f-499e-a27f-2d3970fee00a",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[79425, 1901, 287, 6, 74, "Chapter",ExpressionUUID->"c2195567-c72b-45b8-82f4-a09212ef8e72",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[79715, 1909, 1483, 34, 107, "Input",ExpressionUUID->"25a5ddb0-4a9b-4ac7-bc67-62ae0c80c611",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[81247, 1949, 306, 6, 77, "Title",ExpressionUUID->"6bf41310-9786-4a2d-9c45-da72c297facc",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[81578, 1959, 285, 6, 75, "Chapter",ExpressionUUID->"09993897-08e0-4d65-9fda-c55a83b4e5d6",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[81888, 1969, 4647, 115, 279, "Input",ExpressionUUID->"14cf246a-dfe6-4f84-bced-6779a027f776",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[86538, 2086, 780, 15, 70, "Output",ExpressionUUID->"3e0f81a7-f9c3-4b2e-b76a-bcae9169ee8d",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[87321, 2103, 341, 7, 70, "Print",ExpressionUUID->"d6c73a9a-4d07-4011-be7b-4e7e03115bef",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[87665, 2112, 330, 7, 70, "Output",ExpressionUUID->"deadec39-f5df-4058-941f-4d25476fe9a9",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[88044, 2125, 238, 5, 75, "Chapter",ExpressionUUID->"bf5cb1ca-586b-421c-9b8f-bcdda79a4c7d",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[CellGroupData[{
Cell[88307, 2134, 2050, 50, 279, "Input",ExpressionUUID->"8ccbe0c0-5799-4a13-b89d-58d5d3aa1550",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}],
Cell[90360, 2186, 1203, 34, 70, "Output",ExpressionUUID->"b5ff23f9-94c1-49d3-89cd-89ff2a752ca5",
 CellTags->{"Acceptance", "Number-of-events+sensitivity"}]
}, Open  ]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[91624, 2227, 254, 5, 77, "Title",ExpressionUUID->"ec7d1ed4-b833-4ca9-b86b-68ef0bdfdc5e",
 CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[91903, 2236, 308, 6, 75, "Chapter",ExpressionUUID->"90e03790-1066-4abb-8908-35a37e0278c1",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[92214, 2244, 425, 10, 39, "Input",ExpressionUUID->"18b4049e-6a0e-4546-98b8-9c919573bc3b",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[92676, 2259, 362, 6, 75, "Chapter",ExpressionUUID->"ddc91657-c605-432a-9fc4-3dde27689d78",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[93063, 2269, 10758, 261, 539, "Input",ExpressionUUID->"c815bc21-895a-435e-aff8-c368c51a223c",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[103824, 2532, 415, 10, 40, "Output",ExpressionUUID->"eba4ff10-44f5-4a71-9a25-f92fe8d38c7b",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[104242, 2544, 22023, 516, 373, "Output",ExpressionUUID->"e80eab28-5250-43df-a126-041d081a6cd1",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[126268, 3062, 543, 12, 42, "Output",ExpressionUUID->"d44069a0-a118-44d1-8844-6a685899a82d",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[126814, 3076, 1836, 37, 85, "Output",ExpressionUUID->"a1113a4c-c0b6-4713-bdfc-160856f775b3",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[128699, 3119, 573, 10, 75, "Chapter",ExpressionUUID->"2ed58b5e-8fa1-4a99-b81c-130884bcdd21",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[129297, 3133, 18011, 461, 960, "Input",ExpressionUUID->"480fd17b-5a11-467d-8339-95713cf8a148",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[147311, 3596, 502, 11, 31, "Print",ExpressionUUID->"b58d83b6-48cc-41d6-939b-ad652ac08a0f",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[147816, 3609, 638, 14, 42, "Output",ExpressionUUID->"d494d169-3108-4284-b953-8e6e06fc0e82",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[148457, 3625, 772, 17, 38, "Message",ExpressionUUID->"77ac2976-6dc1-4ac5-a6a8-e9eef74b714e",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[149232, 3644, 521, 12, 40, "Output",ExpressionUUID->"f0d99251-4284-49d8-83a7-be0d46d71aa2",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[149756, 3658, 521, 12, 40, "Output",ExpressionUUID->"1b75b067-c941-411a-921f-dca0310d83ef",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[150280, 3672, 881, 19, 38, "Message",ExpressionUUID->"ceb376f9-d694-4181-964e-cdf8e55f5506",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[151164, 3693, 151031, 2759, 747, "Output",ExpressionUUID->"d53b2f5a-1257-4cb8-93ba-301ba62b2cc4",
 CellTags->{"Number-of-events-computation", "Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[302244, 6458, 256, 5, 75, "Chapter",ExpressionUUID->"0f308b41-d607-4d23-bea6-f98cdbbab013",
 CellTags->{"Number-of-events-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[302525, 6467, 330, 6, 72, "Section",ExpressionUUID->"1ee4b6fc-436c-44ba-9c25-aac28ca9c035",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[302880, 6477, 388, 7, 60, "Subsection",ExpressionUUID->"0a1f8dc1-244c-4013-a4f6-a6748a821672",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[303271, 6486, 326, 5, 25, "Input",ExpressionUUID->"2bfa388f-f1bd-4f23-866d-cac7503aea34"],
Cell[303600, 6493, 13021, 315, 720, "Input",ExpressionUUID->"6acd5b9d-3d21-4c1b-bfa2-65d6c8a2ce8a",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[316658, 6813, 262, 5, 60, "Subsection",ExpressionUUID->"e409be1f-14c9-48b7-a089-70f654ff54f3",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[316945, 6822, 17911, 451, 778, "Input",ExpressionUUID->"0da87de1-0190-4840-a5aa-6c481e91b34e",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[334859, 7275, 329, 8, 40, "Output",ExpressionUUID->"4ae583ea-cb5f-4272-9fbc-78bd8e140f81",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[335191, 7285, 167952, 3626, 2258, "Output",ExpressionUUID->"abf7e606-cc83-4055-8670-f5bf5d9414ac",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[503192, 10917, 284, 5, 60, "Subsection",ExpressionUUID->"6ff9d28c-eed8-4817-92f4-3f387708a5b0",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[CellGroupData[{
Cell[503501, 10926, 5864, 133, 425, "Input",ExpressionUUID->"cf1b132c-0605-4069-a715-693b632def22",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[509368, 11061, 740, 16, 38, "Message",ExpressionUUID->"98e0a502-6f93-479a-939d-fefb04691c21",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[510111, 11079, 742, 16, 38, "Message",ExpressionUUID->"d1c3ff7a-4224-4396-a879-a2007e910dab",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[510856, 11097, 341, 7, 42, "Output",ExpressionUUID->"6a7a4e4d-4d2a-43fa-8443-6ab5efc2151e",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}],
Cell[511200, 11106, 44737, 863, 345, "Output",ExpressionUUID->"dfeb818f-88f8-41c1-9b99-4f314875a047",
 CellTags->{"Acceptance-computation", "Number-of-events-computation+sensitivity"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[555986, 11975, 309, 6, 60, "Subsection",ExpressionUUID->"9568fedf-30f9-450d-900b-5ab61536bd06",
 CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
Cell[556298, 11983, 5726, 125, 228, "Input",ExpressionUUID->"f14e7503-0c2b-42e6-82b3-09c8d2837343",
 CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}]
}, Open  ]],
Cell[CellGroupData[{
Cell[562061, 12113, 335, 8, 60, "Subsection",ExpressionUUID->"c29e3e81-7da0-4ea9-b871-a5deff1aa7dc",
 CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}],
Cell[562399, 12123, 7757, 194, 391, "Input",ExpressionUUID->"372d3cc6-07f2-41da-ad5e-4f1e21f8559a",
 CellTags->{"Number-of-events-computation+sensitivity", "Acceptance-computation"}]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[570205, 12323, 311, 6, 72, "Section",ExpressionUUID->"7d9414c6-173d-4020-8288-2252992857f1",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[570541, 12333, 282, 5, 52, "Subsubsection",ExpressionUUID->"50da66da-b4fd-4c78-8af0-d2d0bf37a480",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[570848, 12342, 11651, 272, 408, "Input",ExpressionUUID->"6962c164-b0d4-438c-bc89-a951513665ff",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[582502, 12616, 344, 8, 40, "Output",ExpressionUUID->"8722ac7a-1e95-4557-8b8c-0bdf338bb66c",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[582849, 12626, 349, 8, 40, "Output",ExpressionUUID->"5b9fe57a-6086-42a5-b353-585bb031eff6",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[583201, 12636, 5215, 111, 894, "Output",ExpressionUUID->"ad3edb42-8acb-4803-8f54-769fd77f9e1f",
 CellTags->"Number-of-events-computation+sensitivity"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[588465, 12753, 232, 4, 60, "Subsection",ExpressionUUID->"f2457af1-76a9-47ab-b482-5799da6309cc",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[588722, 12761, 20824, 494, 952, "Input",ExpressionUUID->"fe3b5af1-2caa-4f01-a4d7-4be7307a3eac",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[609549, 13257, 56382, 1038, 373, "Output",ExpressionUUID->"38ae0e1d-0b79-433b-81da-d01da49fcde1",
 CellTags->"Number-of-events-computation+sensitivity"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[666016, 14304, 262, 5, 100, "Title",ExpressionUUID->"a1ac207f-e5a6-41ed-9016-23014b2a6c3e",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[666303, 14313, 213, 4, 75, "Chapter",ExpressionUUID->"61d66c6b-87da-4009-946a-eb32cc005fd8",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[666541, 14321, 7872, 168, 389, "Input",ExpressionUUID->"5ff1e429-21ed-463f-b582-04b4f7f4c30e",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[674416, 14491, 335, 6, 32, "Print",ExpressionUUID->"7238b77b-420f-4e25-8116-a4e9d1df83b5",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[674754, 14499, 671, 12, 77, "Output",ExpressionUUID->"834e7819-a02e-4c8f-995d-1f681f65324d",
 CellTags->"Number-of-events-computation+sensitivity"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[675474, 14517, 209, 4, 75, "Chapter",ExpressionUUID->"87d344ed-2d96-4345-98c4-a81cc45c1c16",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[675708, 14525, 221, 4, 72, "Section",ExpressionUUID->"cd6a76b8-81e9-467a-97b6-be4172b2931e",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[CellGroupData[{
Cell[675954, 14533, 3610, 82, 228, "Input",ExpressionUUID->"1f4946c3-23ce-4e70-bc72-93b0971707fc",
 CellTags->"Number-of-events-computation+sensitivity"],
Cell[679567, 14617, 313, 7, 41, "Output",ExpressionUUID->"9a31912e-1d96-458e-a452-7015a24bd277",
 CellTags->"Number-of-events-computation+sensitivity"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[679953, 14632, 189, 3, 100, "Title",ExpressionUUID->"20138663-2b9a-41fa-8718-2e1c02355f2d",
 CellTags->"Sensitivity"],
Cell[CellGroupData[{
Cell[680167, 14639, 188, 3, 75, "Chapter",ExpressionUUID->"e53fa63b-a742-40cf-a205-b2502f696dbd",
 CellTags->"Sensitivity"],
Cell[CellGroupData[{
Cell[680380, 14646, 7076, 186, 520, "Input",ExpressionUUID->"99f6e797-c44c-4cdb-b806-3efcbdcad495",
 CellTags->"Sensitivity"],
Cell[687459, 14834, 383, 7, 33, "Print",ExpressionUUID->"e8af3040-2df8-4c6d-8041-d7858d04414c",
 CellTags->"Sensitivity"],
Cell[687845, 14843, 1049, 33, 242, "Output",ExpressionUUID->"ad763097-288e-42fc-9d69-b2bc43b15d15",
 CellTags->"Sensitivity"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[688943, 14882, 316, 7, 75, "Chapter",ExpressionUUID->"8558a057-a38a-454c-bfce-bde3419e907e",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[689284, 14893, 209, 4, 72, "Section",ExpressionUUID->"d2e4b5e5-7ca9-46d1-8935-925aa00d1a4f",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[689518, 14901, 5390, 115, 314, "Input",ExpressionUUID->"c04809c2-412f-4207-902a-ca107db71530",
 CellTags->"Sensitivity-computation"],
Cell[694911, 15018, 314, 6, 33, "Print",ExpressionUUID->"9bff1712-0f41-43a1-99df-af56ff75cb81",
 CellTags->"Sensitivity-computation"],
Cell[695228, 15026, 280, 5, 41, "Output",ExpressionUUID->"f222d813-2ddf-4d19-898f-a67ef93d8532",
 CellTags->"Sensitivity-computation"],
Cell[695511, 15033, 407, 7, 42, "Output",ExpressionUUID->"01210029-07be-4412-a717-8a972d6d50a5",
 CellTags->"Sensitivity-computation"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[695967, 15046, 220, 4, 72, "Section",ExpressionUUID->"8dbf4156-fa28-4b8c-98ea-b1e3be065ffb",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[696212, 15054, 15618, 391, 823, "Input",ExpressionUUID->"712e0550-86f1-4004-ba68-1c8c28691518",
 CellTags->"Sensitivity-computation"],
Cell[711833, 15447, 353, 7, 33, "Print",ExpressionUUID->"67f75f75-6bdf-4c51-9eb3-7754f10a3628",
 CellTags->"Sensitivity-computation"],
Cell[712189, 15456, 1171, 27, 148, "Output",ExpressionUUID->"d9e895c7-6407-435e-82e8-01d90752e3cc",
 CellTags->"Sensitivity-computation"],
Cell[713363, 15485, 26080, 535, 383, "Output",ExpressionUUID->"6d9cc519-9fb3-4f46-b93a-f9d0d6cee093",
 CellTags->"Sensitivity-computation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[739480, 16025, 149, 3, 43, "Input",ExpressionUUID->"aa260324-a45a-4788-81af-30747aa0b564"],
Cell[739632, 16030, 25905, 530, 383, "Output",ExpressionUUID->"ef95126c-7e30-4ee4-8b52-daca294a94ea",
 CellTags->"Sensitivity-computation"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[765598, 16567, 300, 6, 75, "Chapter",ExpressionUUID->"ca66427b-19d6-4877-8ebb-41db99aeba92",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[765923, 16577, 255, 5, 72, "Section",ExpressionUUID->"a59ae6cb-9828-417c-bdd1-fff95cb38e4f",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[766203, 16586, 4693, 112, 167, "Input",ExpressionUUID->"dfa47edf-f1da-4b2e-b4e4-0bdbee1c1674",
 CellTags->"Sensitivity-computation"],
Cell[770899, 16700, 162722, 2735, 445, "Output",ExpressionUUID->"5c357d86-b3ec-4792-8f11-bfcc264269ac",
 CellTags->"Sensitivity-computation"],
Cell[933624, 19437, 416, 7, 42, "Output",ExpressionUUID->"393d1f0b-f7c4-4380-bc51-e3afb090b9af",
 CellTags->"Sensitivity-computation"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[934089, 19450, 208, 4, 72, "Section",ExpressionUUID->"15df64ef-f8bc-45f8-9d3a-b2b9fc3a4c63",
 CellTags->"Sensitivity-computation"],
Cell[934300, 19456, 2587, 67, 210, "Input",ExpressionUUID->"d222b99d-aa87-4a70-9775-f512810f7932",
 CellTags->"Sensitivity-computation"]
}, Open  ]],
Cell[CellGroupData[{
Cell[936924, 19528, 207, 4, 72, "Section",ExpressionUUID->"b9b04a85-a4aa-45a1-9921-706d27f2c6b8",
 CellTags->"Sensitivity-computation"],
Cell[CellGroupData[{
Cell[937156, 19536, 14525, 363, 678, "Input",ExpressionUUID->"140a9c48-3c60-400f-bb3d-41932b0b01fa",
 CellTags->"Sensitivity-computation"],
Cell[951684, 19901, 1568, 42, 132, "Output",ExpressionUUID->"510a32e1-d810-458d-82e9-3aba15763ef0",
 CellTags->"Sensitivity-computation"],
Cell[953255, 19945, 601652, 10094, 367, "Output",ExpressionUUID->"032f3bf6-6350-4d27-9c30-43db7f57b35d",
 CellTags->"Sensitivity-computation"]
}, Open  ]],
Cell[1554922, 30042, 147, 3, 43, "Input",ExpressionUUID->"9ed6bad3-bf28-43a6-a3d6-f02372bd0bc0"],
Cell[1555072, 30047, 147, 3, 43, "Input",ExpressionUUID->"9268ac82-e548-42f7-9781-4f750cf4444a"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1555280, 30057, 171, 3, 88, "Title",ExpressionUUID->"ffb96111-011a-40fa-9682-858963d62183"],
Cell[1555454, 30062, 785, 16, 60, "Input",ExpressionUUID->"f52ba2e2-b5c4-48a5-92ca-6113d843928f"]
}, Closed]]
}
]
*)

