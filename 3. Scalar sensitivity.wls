#!/usr/bin/env wolframscript
(* ::Package:: *)

(* ::Title::Closed:: *)
(*Just launch the code below to run the notebook (shift+enter)*)


(* ::Input:: *)
(*ClearAll["Global`*"]*)
(*ParallelEvaluate[ClearAll["Global`*"]];*)
(*(*EnsureFreshKernels[]:=Module[{},*)
(*(*Check if the marker variable is defined in any kernel*)If[MemberQ[ParallelEvaluate[$KernelInitializationDone],True],*)
(*(*If yes,close and relaunch kernels*)*)
(*CloseKernels[];*)
(*LaunchKernels[];*)
(*];*)
(*(*Set or reset the marker variable in all kernels*)*)
(*ParallelEvaluate[$KernelInitializationDone=True];]*)
(*EnsureFreshKernels[];*)*)
(*CloseKernels[];*)
(*LaunchKernels[];*)
(*BlockEvaluation[tag_]:=Block[{},*)
(*nb=EvaluationNotebook[];*)
(*NotebookFind[nb,tag,All,CellTags];*)
(*SelectionEvaluate[nb]*)
(*]*)
(*dropdownDialog[list_,phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],PopupMenu[Dynamic[choice],list],Button["OK",DialogReturn[choice]]}]]*)
(*infoDialog[phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],Button["Proceed",DialogReturn[choice]]}]]*)
(*If[(DirectoryQ[FileNameJoin[{NotebookDirectory[],"Auxiliary data"}]]//ToString)=="False",CreateDirectory[FileNameJoin[{NotebookDirectory[],"Auxiliary data"}]]];*)
(*choiceslist={"Tabulated Nevents+sensitivity","Sensitivity only (tabulated Nevents must be produced before)","Acceptance"};*)
(*taglist["Acceptance"]="Acceptance";*)
(*taglist["Tabulated Nevents+sensitivity"]="Number-of-events+sensitivity";*)
(*taglist["Sensitivity only (tabulated Nevents must be produced before)"]="Sensitivity";*)
(*computationchoice=dropdownDialog[choiceslist,"Do you want to compute the tabulated number of events and then sensitivity, or just sensitivity (if the tabulated number of events has been already produced)?"];*)
(*tagselected=taglist[computationchoice]*)
(*BlockEvaluation[tagselected]*)


(* ::Title::Closed:: *)
(*Preliminary definitions*)


(* ::Chapter::Closed:: *)
(*Various directories*)


(* ::Input:: *)
(*LLPdirName="Scalar";*)
(*(*Set the directory for the search where tabulated acceptances are located*)*)
(*directory["Acceptances"]=FileNameJoin[{NotebookDirectory[],"Acceptances"}];*)
(*(*Set the directory for the search where tabulated angle-energy distributions are located*)*)
(*directory["Distribution"]=FileNameJoin[{NotebookDirectory[],"spectra/New physics particles spectra",LLPdirName}]; *)
(*(*The directory storing production weights of the given LLP*)*)
(*directory["Production weights"]=FileNameJoin[{NotebookDirectory[],"phenomenology",LLPdirName,"Production probabilities"}]; *)
(*(*Directory to which various auxillary datasets will be stored*)*)
(*directory["Auxiliary"]=FileNameJoin[{NotebookDirectory[],"Auxiliary data",LLPdirName}]; *)
(*If[!DirectoryQ[directory["Auxiliary"]],CreateDirectory[directory["Auxiliary"]]];*)
(*(*Directory containing decay widths of the LLPs*)*)
(*directory["Decays"]=FileNameJoin[{NotebookDirectory[],"phenomenology",LLPdirName,"decay widths"}]; *)


(* ::Chapter::Closed:: *)
(*Parameters and various functions*)


(* ::Input:: *)
(*dropdownDialog[list_,phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],PopupMenu[Dynamic[choice],list],Button["OK",DialogReturn[choice]]}]]*)
(*infoDialog[phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],Button["Proceed",DialogReturn[choice]]}]]*)
(*selectionDialog[list_,phrase_]:=DialogInput[{choice={}},Column[{Row[{phrase}],Pane[TogglerBar[Dynamic[choice],list,Appearance->"Vertical"->{Automatic,5}],ImageSize->{Automatic,Automatic},Scrollbars->{False,True}],Button["OK",DialogReturn[choice]]}]]*)
(*(*chbar*)*)
(*chbar= 6.6*10^-25*3*10^8;*)
(*(*Masses of various SM particles*)*)
(*{mSM["Bplus"],mSM["Kplus"],mSM["PiPlus"],mSM["h"],mSM["Bs"]}={5.279,0.495,0.139,62.5,5.366};*)
(*(*Fragmentation fractions at the LHC. For the moment, the same fractions are assumed to be at the FCC-hh*)*)
(*fbtob0["LHC"]=fbtobplus["LHC"]=fbtob0["FCC-hh"]=fbtobplus["FCC-hh"]=0.324;*)
(*fbtobs["LHC"]=fbtobs["FCC-hh"]=0.09;*)
(*(*Fragmentation fractions at SPS. From SHiP physics paper*)*)
(*fbtobs["SPS"]=0.11;*)
(*fbtob0["SPS"]=fbtobplus["SPS"]=0.411;*)
(*fstokplus["SPS"]=0.5;*)
(*fstok0l["SPS"]=0.25;*)
(*(*Fraction of K^+/- decaying in-flight at SPS, from https://arxiv.org/pdf/2004.07974.pdf*)*)
(*fractionDecayInFlightKplusKminus=(0.29+0.07);*)
(*(*Fragmentation fractions at FermilabBD. Assumed to be the same as at SPS*)*)
(*fbtobs["FermilabBD"]=0.11;*)
(*fbtob0["FermilabBD"]=fbtobplus["FermilabBD"]=0.411;*)
(*(*Fragmentation fractions at Serpukhov. Assumed to be zero*)*)
(*fbtobs["Serpukhov"]=0.;*)
(*fbtob0["Serpukhov"]=fbtobplus["Serpukhov"]=0.;*)
(**)
(*(*Fragmentation fractions at LHC fixed target*)*)
(*(*Calculated for c quarks and estimated for b quarks*)*)
(*fbtobplus["LHC-fixed-target"]=0.4;*)
(*fbtob0["LHC-fixed-target"]=0.4;*)
(*fbtobs["LHC-fixed-target"]=0.1; *)
(*(*copied for SPS*)*)
(*fstokplus["LHC-fixed-target"]=0.5;*)
(*fstok0l["LHC-fixed-target"]=0.25;*)


(* ::Chapter::Closed:: *)
(*LLP phenomenology: prodution probabilities, decay widths*)


(* ::Section:: *)
(*Scanning for tabulated distributions*)


(* ::Input:: *)
(*(*Define the file pattern*)*)
(*pattern="DoubleDistr_*_*_*.m";*)
(*(*Search for files matching the pattern in the directory and its subdirectories*)*)
(*matchingFiles=FileNames[pattern,{directory["Distribution"]},Infinity];*)
(*(*List of LLPs, production modes, and facilities for which the tabulated distributions have been computed at the previous stage of using SensCalc*)*)
(*ExtractedProductionParameters=Function[filename,parts=StringSplit[FileNameTake[filename],"_"];*)
(*{parts[[2]],parts[[3]],StringDrop[parts[[4]],-2]} ];*)
(*(*combinations selected LLP, production channel, facility for which the tabulated distributions are present*)*)
(*DistrCombinations=(ExtractedProductionParameters/@matchingFiles)//Sort;*)


(* ::Section:: *)
(*Production weights*)


(* ::Input:: *)
(*FacilitiesList={"SPS","FermilabBD","LHC","FCC-hh","Serpukhov", "LHC-fixed-target"};*)
(*intProd[filename_,m1_,m2_]:=If[mLLP<m1-m2,Evaluate[Interpolation[Import[FileNameJoin[{directory["Production weights"],filename}],"Table"],InterpolationOrder->1][mLLP]],0.];*)
(*BrhtoSS[mLLP_,\[Alpha]_]=2*10^-2*\[Alpha]^2 Sqrt[1-4*mLLP^2/125^2];*)
(*(*Value of \[Alpha] corresponding to the given Br(h\[Rule]SS)=0.01*)*)
(*\[Alpha]valBrhToSS[mS_,BrhToSS_]=\[Alpha]/.Solve[BrhtoSS[mS,\[Alpha]]==BrhToSS,\[Alpha]][[2]];*)
(*Print["Exclusive/inclusive production of dark scalar in decays B->\!\(\*SubscriptBox[\(X\), \(s\)]\)+S"]*)
(*SelectedBrChoice=dropdownDialog[{"Exclusive","Inclusive"},"Select the description of the scalar's production by decays of B via mixing (see 1904.10447):"]*)
(*Do[*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"B-mixing",Facility]=\[Theta]2*(fbtob0[Facility]+fbtobplus[Facility])intProd[If[SelectedBrChoice=="Exclusive","BtoXsStotal.dat","BtoXsSinclusive.dat"],mSM["Bplus"],mSM["PiPlus"]];*)
(*(*Factors of 2 and 1/2 are due to the production of scalars in pairs. \[Alpha] is the quartic coupling defined by Subscript[L, int] = \[Alpha]/(2v)S^2H^+H*)*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"B-quartic",Facility]=2*\[Alpha]valBrhToSS[mLLP,BrhToSS]^2*(fbtob0[Facility]+fbtobplus[Facility])*intProd["BplustoXsSStotal.dat",mSM["Bplus"]/2,mSM["PiPlus"]/2];*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"Bs-quartic",Facility]=2*\[Alpha]valBrhToSS[mLLP,BrhToSS]^2*fbtobs[Facility]*intProd["BstoSS.dat",mSM["Bs"]/2,0.];*)
(*If[MemberQ[{"LHC","FCC-hh"},Facility],*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"h-quartic",Facility]=2*10^-2*\[Alpha]valBrhToSS[mLLP,BrhToSS]^2 Sqrt[1-4*mLLP^2/125^2];*)
(*];*)
(*,{Facility,FacilitiesList}];*)
(*(*________________*)*)
(*(*Bremsstrahlung*)*)
(*(*________________*)*)
(*bremfacilities=Select[DistrCombinations,#[[2]]=="Bremsstrahlung-mixing"&][[All,3]];*)
(*Print[bremfacilities]*)
(*BremProd[Facility_]:=Module[{},*)
(*If[MemberQ[bremfacilities,Facility],*)
(*datbrem[mLLP_,\[Theta]LLP_]=Import[FileNameJoin[{directory["Production weights"],"Pbrem_"<>LLPdirName<>"_"<>Facility<>".m"}],"MX"];*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"Bremsstrahlung-mixing",Facility]=datbrem[mLLP,\[Theta]LLP][[1]]*\[Theta]2;*)
(*ELLPmin["Bremsstrahlung-mixing",Facility]=Evaluate[datbrem[mLLP,\[Theta]LLP][[2]]];*)
(*ELLPmax[mLLP_,\[Theta]LLP_,"Bremsstrahlung-mixing",Facility]=Evaluate[datbrem[mLLP,\[Theta]LLP][[3]]]*)
(*]*)
(*]*)
(*Do[*)
(*BremProd[Facility],{Facility,FacilitiesList}]*)
(*(*Production from K at beam dump experiments with thick target. Assumed to be the same independently of target's material. Also, the fraction of Subscript[(K^0), L] decaying at rest is assumed to be the same as the fraction of charged kaons*)*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"K-mixing","SPS"]=*)
(*\[Theta]2*(fstokplus["SPS"]*intProd["KplustoPiS.dat",mSM["Kplus"],mSM["PiPlus"]]+fstok0l["SPS"]*intProd["K0LtoPiS.dat",mSM["Kplus"],mSM["PiPlus"]]);*)
(*(*For LHC-fixed-target same procedure as for SPS*)*)
(*PmotherToLLP[mLLP_,\[Theta]2_,BrhToSS_,"K-mixing","LHC-fixed-target"]=*)
(*\[Theta]2*(fstokplus["LHC-fixed-target"]*intProd["KplustoPiS.dat",mSM["Kplus"],mSM["PiPlus"]]+fstok0l["LHC-fixed-target"]*intProd["K0LtoPiS.dat",mSM["Kplus"],mSM["PiPlus"]]);*)
(**)
(*WeightsCombinations=Cases[Keys[DownValues@PmotherToLLP][[All,1,#]]&/@{4,5}//Transpose//Sort,_?(MemberQ[DistrCombinations[[All,{2,3}]],#]&)];*)
(*Print[Keys[DownValues@PmotherToLLP][[All,1,#]]&/@{4,5}//Transpose//Sort]*)
(*Print[DistrCombinations[[All,{2,3}]]]*)
(*Print[WeightsCombinations]*)
(**)
(*Print["If there are production weights to all available distributions:"]*)
(*IfCondDistrToWeights=DistrCombinations[[All,{2,3}]]==WeightsCombinations*)
(*If[!IfCondDistrToWeights,Module[{missingCombinations},*)
(*(*Identify missing combinations*)*)
(*missingCombinations=Complement[DistrCombinations[[All,{2,3}]],WeightsCombinations];*)
(*(*Print a message if there are missing combinations*)*)
(*If[missingCombinations=!={},Print["The following required combinations are missing from the provided weights:"];*)
(*Print[missingCombinations];];];*)
(*(*Show an info dialog*)*)
(*infoDialog["You have not provided the production probabilities PmotherToLLP to all the generated tabulated distributions! Please do this first to avoid problems"];];*)
(**)
(*(*Scaling of the lower bound: Subscript[(\[Theta]^2), lower bound] ~ ((\!\( *)
(*\*SubscriptBox[\(N\), \(ev\)]*)
(*\*SubscriptBox[\(|\), \(\[Theta]\  = \ 1\)]\))^(-\[Beta]/2))*)*)
(*LowerBoundScaling["B-mixing"]=LowerBoundScaling["Bremsstrahlung-mixing"]=LowerBoundScaling["K-mixing"]=1;*)
(*LowerBoundScaling["B-quartic"]=LowerBoundScaling["Bs-quartic"]=LowerBoundScaling["h-quartic"]=2;*)


(* ::Section:: *)
(*Scalar lifetime and branching ratios*)


(* ::Subsection:: *)
(*Lifetimes*)


(* ::Input:: *)
(*(*Decay length of the scalar - following Winkler*)*)
(*c\[Tau]LLP[mLLP_,\[Theta]2_]=1/\[Theta]2 Interpolation[Select[Import[FileNameJoin[{directory["Decays"],"ctaus.dat"}],"Table"],#[[1]]!=2.&],InterpolationOrder->1][mLLP];*)
(*ldecayLLP[mLLP_,\[Theta]2_,ELLP_]=c\[Tau]LLP[mLLP,\[Theta]2]*Sqrt[ELLP^2-mLLP^2]/mLLP;*)


(* ::Chapter::Closed:: *)
(*Loading necessary routines*)


(* ::Input:: *)
(*If[Length[inecessary]==0,*)
(*NotebookEvaluate[FileNameJoin[{NotebookDirectory[],"codes/generic.nb"}]];*)
(*NotebookEvaluate[FileNameJoin[{NotebookDirectory[],"codes/for-sensitivities.nb"}]];*)
(*inecessary={1,2,3};*)
(*]*)


(* ::Title::Closed:: *)
(*Specifying the experiment*)


(* ::Input:: *)
(*SetDirectory[NotebookDirectory[]];*)
(*(*Parent directory*)*)
(*NotebookDirectory[]//ParentDirectory;*)
(*ExperimentDirectoriesList=Select[FileNames["*",directory["Acceptances"],1],DirectoryQ];*)
(*(*List of available experiments (for which the geometry has been implemented)*)*)
(*ExperimentsListTemp=Table[FileNameTake[ExperimentDirectoriesList[[i]],-1],{i,1,Length[ExperimentDirectoriesList],1}];*)
(*ExperimentsListTemp2=Join[Partition[ExperimentsListTemp,1],Table[{TrueQ@FileExistsQ@FileNameJoin[{directory["Acceptances"],ExperimentsListTemp[[i]],ToString@StringForm["Acceptance_``_for_``.m",ExperimentsListTemp[[i]],LLPdirName]}]},{i,1,Length[ExperimentsListTemp]}],2];*)
(*Print["List of available experiments:"]*)
(*ExperimentsList=Select[ExperimentsListTemp2,#[[2]]==True&][[All,1]]//Sort*)
(*If[Length[ExperimentsList]==0,Print["No experiment is available, generate first the acceptance for the given experiment using module 1"]]*)
(*Print["Selected experiments:"]*)
(*dropdownDialog[list_,phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],PopupMenu[Dynamic[choice],list],Button["OK",DialogReturn[choice]]}]]*)
(*SelectedExperimentList=If[Length[ExperimentsList]!=0,selectionDialog[ExperimentsList,"Select the experiments:"]]*)
(*icounter=1;*)


(* ::Chapter::Closed:: *)
(*Running block for next sections*)


(* ::Input:: *)
(*BlockEvaluation[tag_]:=Block[{},*)
(*nb=EvaluationNotebook[];*)
(*NotebookFind[nb,tag,All,CellTags];*)
(*SelectionEvaluate[nb]*)
(*]*)
(*If[tagselected=="Number-of-events+sensitivity",*)
(*Do[*)
(*BlockEvaluation["Number-of-events-computation+sensitivity"];*)
(*,{icounter,1,Length[SelectedExperimentList],1}],*)
(*If[tagselected=="Acceptance",*)
(*Do[*)
(*BlockEvaluation["Acceptance-computation"];*)
(*,{icounter,1,Length[SelectedExperimentList],1}]*)
(*]*)
(*]*)


(* ::Title::Closed:: *)
(*Number of events*)


(* ::Chapter::Closed:: *)
(*Particular experiment*)


(* ::Input:: *)
(*SelectedExperiment=SelectedExperimentList[[icounter++]];*)


(* ::Chapter::Closed:: *)
(*Cross-sections, acceptances*)


(* ::Section:: *)
(*Cross-sections, acceptances*)


(* ::Input:: *)
(*dataAcceptances=Import[FileNameJoin[{FileNameJoin[{directory["Acceptances"],SelectedExperiment,ToString@StringForm["Acceptance_``_for_``.m",Sequence@@{SelectedExperiment,LLPdirName}]}]}],"MX"];//AbsoluteTiming*)
(*{FacilityGivenExperiment,FullAcceptanceData0,BrVis[mLLP_]}=dataAcceptances[[#]]&/@{1,3,5};*)
(*LogLogPlot[Evaluate[BrVis[mLLP]],{mLLP,0.02,10},Frame->True,ImageSize->Large,FrameStyle->Directive[Black, 22],PlotStyle->{{Thickness[0.003],Blue},{Thickness[0.003],Darker@Red},{Thickness[0.003],Darker@Darker@Green},{Thickness[0.003],Black}},GridLines->Automatic,PlotRange->{{0.1,10},{0.01,1.2}},Frame->True,ImageSize->Large,FrameLabel->{"m [GeV]","\!\(\*SubscriptBox[\(Br\), \(vis\)]\)"},PlotLabel-> Style[Row[{"For ",SelectedExperiment}], 20, Black]]*)
(*(*___________________________*)*)
(*(*Interpolation of the tabulated azimuthal acceptance, extracting Subscript[\[Theta], min/max], etc.*)*)
(*(*___________________________*)*)
(*{AzimuthalAcceptanceInt[\[Theta]LLP_,zLLP_],\[Theta]minExpAll,\[Theta]maxExpAll,\[Theta]minExp,\[Theta]maxExp,zminExp,zmaxExp,zmin\[Theta][\[Theta]LLP_],zmax\[Theta][\[Theta]LLP_]}=Block\[Epsilon]Azimuthal[FullAcceptanceData0];*)
(*(*Logarithmized data with full acceptance, and also decay acceptance and full acceptance interpolations*)*)
(*{FullAcceptanceData,DecayAcceptanceInt[mLLP_,\[Theta]LLP_,ELLP_,zLLP_],FullAcceptanceInt[mLLP_,\[Theta]LLP_,ELLP_,zLLP_],InGridm\[Epsilon],InGrid\[Theta]\[Epsilon],InGridE\[Epsilon],InGridz\[Epsilon],\[Epsilon]vals,\[Epsilon]azvals,mmin\[Epsilon],mmax\[Epsilon]}=Block\[Epsilon]Decay[FullAcceptanceData0,zminExp,BrVis];*)
(*CrossSectionData=dataAcceptances[[4]]//Transpose;*)
(*NpotGivenExperiment=Select[CrossSectionData,#[[1]]=="Npot"&][[1]][[2]]//N;*)
(*(*infoDialog[Row[{"The number of proton collisions is ", NpotGivenExperiment,". You may change it at the stage of computing the sensitivities"}]]*)*)
(*(*Total number of b Overscript[b, _] and h*)*)
(*ProbMother["B-mixing"]=ProbMother["B-quartic"]=ProbMother["Bs-quartic"]=Select[CrossSectionData,#[[1]]=="Pb"&][[1]][[2]];*)
(*ProbMother["h-quartic"]=Select[CrossSectionData,#[[1]]=="Ph"&][[1]][[2]];*)
(*ProbMother["K-mixing"]=If[FacilityGivenExperiment=="SPS" ||FacilityGivenExperiment=="LHC-fixed-target",fractionDecayInFlightKplusKminus,0.];*)
(*ProbMother["Bremsstrahlung-mixing"]=1.;*)
(*{{"\!\(\*SubscriptBox[\(\[Chi]\), \(b\\\  or\\\  \*OverscriptBox[\(b\), \(_\)]\)]\)","\!\(\*SubscriptBox[\(\[Chi]\), \(h\)]\)"},{ProbMother["B-mixing"],ProbMother["h-quartic"]}}//TableForm*)
(*Row[{"Search for "<>LLPdirName<>" at ", SelectedExperiment, " located at ",FacilityGivenExperiment,". \!\(\*SubscriptBox[\(N\), \(collisions\)]\) = ",NpotGivenExperiment}]*)
(*{{"Quantity","\!\(\*SubscriptBox[\(\[Theta]\), \(min\)]\), rad","\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\), rad","\!\(\*SubscriptBox[\(\[Theta]\), \(min\)]\)(\!\(\*SubscriptBox[\(\[Epsilon]\), \(dec\)]\)), rad","\!\(\*SubscriptBox[\(\[Theta]\), \(max\)]\)(\!\(\*SubscriptBox[\(\[Epsilon]\), \(dec\)]\)), rad","\!\(\*SubscriptBox[\(z\), \(min\)]\), m","\!\(\*SubscriptBox[\(z\), \(max\)]\), m"},{"Description","Min angle covered by experiment","Max angle covered by experiment","Min angle where \!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)\[NotEqual]0","Max angle where \!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)\[NotEqual]0","Min long. displacement of the decay volume","Max long. displacement of the decay volume"},{"Value",\[Theta]minExpAll,\[Theta]maxExpAll,\[Theta]minExp,\[Theta]maxExp,zminExp,zmaxExp}}//TableForm*)


(* ::Input:: *)
(*Graphics[Annotation[{{{{},{},Annotation[{Directive[Opacity[1.`],AbsoluteThickness[2],Thickness[0.003`],RGBColor[0,0,1]],Line[{{-3.912022878599409`,0.`},{-3.910116873755105`,0.`},{-3.9082108689108006`,0.`},{-3.9043988592221917`,0.`},{-3.8967748398449737`,0.`},{-3.881526801090539`,0.`},{-3.851030723581669`,0.`},{-3.7900385685639293`,0.`},{-3.657793598191707`,0.`},{-3.534312277988117`,0.`},{-3.4132531711180336`,0.`},{-3.281933403911208`,0.`},{-3.1593772868730143`,0.`},{-3.0265605094980783`,0.`},{-2.8961659454566493`,0.`},{-2.774535031583852`,0.`},{-2.6426434573743127`,0.`},{-2.5195155333334047`,0.`},{-2.398809822626004`,0.`},{-2.2678434515818613`,0.`},{-2.14564073070635`,0.`},{-2.013177349494096`,0.`},{-1.8831361816153498`,0.`},{-1.7618586639052352`,0.`},{-1.6303204858583784`,0.`},{-1.5075459579801533`,-1.1102230246251565`*^-16},{-1.5054672831642946`,-1.1102230246251565`*^-16},{-1.5033886083484356`,0.`},{-1.4992312587167178`,0.`},{-1.4909165594532823`,0.`},{-1.4742871609264114`,0.`},{-1.4410283638726695`,0.`},{-1.4389496890568108`,0.`},{-1.4368710142409518`,0.`},{-1.432713664609234`,0.`},{-1.4243989653457987`,2.2204460492503128`*^-16},{-1.4077695668189278`,0.`},{-1.374510769765186`,0.`},{-1.3724699420326631`,0.`},{-1.3704291143001401`,0.`},{-1.3663474588350946`,0.`},{-1.3581841479050034`,0.`},{-1.3418575260448207`,0.`},{-1.3398166983122979`,0.`},{-1.337775870579775`,0.`},{-1.3336942151147295`,0.`},{-1.3255309041846381`,0.`},{-1.3092042823244556`,2.2204460492503128`*^-16},{-1.3071634545919328`,2.2204460492503128`*^-16},{-1.30512262685941`,2.2204460492503128`*^-16},{-1.3010409713943645`,0.`},{-1.292877660464273`,0.`},{-1.2908368327317503`,0.`},{-1.2887960049992273`,0.`},{-1.2847143495341817`,0.`},{-1.2765510386040906`,0.`},{-1.2745102108715678`,0.`},{-1.272469383139045`,-0.0034004759259180623`},{-1.2704285554065222`,-0.01752458955086915`},{-1.2683877276739994`,-0.031880534010941076`},{-1.2663468999414766`,-0.046475550356730275`},{-1.2643060722089539`,-0.061317223759016805`},{-1.260224416743908`,-0.09177273776838274`},{-1.2581835890113853`,-0.10740367796917458`},{-1.2561427612788623`,-0.12331552853384295`},{-1.2520611058138167`,-0.15602117780384425`},{-1.2438977948837255`,-0.2252653708104741`},{-1.2419938991850876`,-0.24221433912192775`},{-1.2400900034864497`,-0.25948867716785884`},{-1.2381861077878118`,-0.2771004663750354`},{-1.2362822120891739`,-0.281039798366729`},{-1.234378316390536`,-0.28226601041788496`},{-1.232474420691898`,-0.2834960690233669`},{-1.228666629294622`,-0.28596779329337346`},{-1.2267627335959839`,-0.28720949291567677`},{-1.224858837897346`,-0.28845510700956695`},{-1.2210510465000701`,-0.2909581476890519`},{-1.2134354637055185`,-0.29601196859533535`},{-1.2115315680068806`,-0.29728547283443196`},{-1.2096276723082426`,-0.2985630325311911`},{-1.2077237766096047`,-0.29984466580937297`},{-1.2058198809109668`,-0.3011303909070707`},{-1.203915985212329`,-0.30239809524146816`},{-1.202012089513691`,-0.3029490624915232`},{-1.200108193815053`,-0.3035013843262359`},{-1.198204298116415`,-0.3040550648270671`},{-1.1963004024177768`,-0.30461010809147737`},{-1.1943965067191389`,-0.30516651823301144`},{-1.190588715321863`,-0.30628345568253307`},{-1.1829731325273114`,-0.3085339159075233`},{-1.1810692368286735`,-0.3091000107365029`},{-1.1791653411300356`,-0.3096675059399166`},{-1.1772614454313977`,-0.3102364057798182`},{-1.1753575497327597`,-0.3108067145351913`},{-1.1734536540341218`,-0.31137843650203717`},{-1.171549758335484`,-0.31195157599346257`},{-1.169645862636846`,-0.3123494504313912`},{-1.1677419669382079`,-0.31270602973484624`},{-1.1658380712395697`,-0.313063416132819`},{-1.1639341755409318`,-0.3134216117415925`},{-1.160126384143656`,-0.3141404390910155`},{-1.1525108013491043`,-0.3155878982011493`},{-1.1506069056504664`,-0.31595181812148193`},{-1.1487030099518285`,-0.3163165644323216`},{-1.1448952185545525`,-0.31704854494894935`},{-1.1429913228559143`,-0.31741578353428657`},{-1.1410874271572764`,-0.3177838572692894`},{-1.1391835314586385`,-0.3181323625723268`},{-1.1372796357600006`,-0.3183469588233275`},{-1.1353757400613627`,-0.31856201022559216`},{-1.1334718443627247`,-0.3187775178426839`},{-1.129664052965449`,-0.3192099059901247`},{-1.122048470170897`,-0.3200802039830939`},{-1.1199842516544973`,-0.32031737519552245`},{-1.1179200331380978`,-0.3205550929248573`},{-1.1137915961052989`,-0.32103217349729424`},{-1.1055347220397005`,-0.3220824483947125`},{-1.103470503523301`,-0.3223832852157306`},{-1.1014062850069015`,-0.32268483448191837`},{-1.0972778479741023`,-0.32329007796732634`},{-1.0890209739085042`,-0.324509198416225`},{-1.0869567553921047`,-0.32481578842216174`},{-1.0848925368757052`,-0.3251231062684426`},{-1.0828283183593057`,-0.32543115390746014`},{-1.080764099842906`,-0.32573993329791257`},{-1.0786998813265063`,-0.326039739163881`},{-1.0766356628101068`,-0.3261672198878869`},{-1.0745714442937073`,-0.32629498033557075`},{-1.0725072257773078`,-0.32642302115657185`},{-1.0704430072609084`,-0.3265513430021958`},{-1.0683787887445089`,-0.32667994652541965`},{-1.0642503517117097`,-0.3269380012249617`},{-1.0559934776461115`,-0.327457519672915`},{-1.053929259129712`,-0.327588113364134`},{-1.0518650406133125`,-0.32771899401753724`},{-1.049800822096913`,-0.32785090961016766`},{-1.0477366035805133`,-0.32805486881771323`},{-1.0456723850641136`,-0.32825929121337555`},{-1.0436081665477142`,-0.32846417794406596`},{-1.0394797295149152`,-0.3288753490145494`},{-1.0374155109985157`,-0.32908163566457127`},{-1.0353512924821162`,-0.3292883912701024`},{-1.031222855449317`,-0.3297033140045644`},{-1.0291586369329173`,-0.32991148347026683`},{-1.0270944184165178`,-0.3301201265650439`},{-1.0250301999001183`,-0.33032924446566825`},{-1.0229659813837189`,-0.3305388383522879`},{-1.0209017628673194`,-0.33071885654156546`},{-1.0188375443509199`,-0.33084649919454995`},{-1.0167733258345204`,-0.3309744219472625`},{-1.0147091073181207`,-0.33110262545030705`},{-1.0064522332525225`,-0.331618260036405`},{-1.004388014736123`,-0.3317478771087622`},{-1.0023237962197236`,-0.331877778870302`},{-0.9981953591869244`,-0.33213843911220875`},{-0.9899384851213261`,-0.3327496359374146`},{-0.9880111986388114`,-0.33291154309908333`},{-0.9860839121562968`,-0.3330737888972225`},{-0.9822293391912673`,-0.3333992994584373`},{-0.9745201932612086`,-0.3340544179389305`},{-0.9591019014010913`,-0.33523211187397406`},{-0.9282653176808564`,-0.3374909021011388`},{-0.9263380311983418`,-0.3376421296785215`},{-0.9244107447158271`,-0.3377936719352876`},{-0.9205561717507977`,-0.33809770329927935`},{-0.9186288852682831`,-0.3382501938170853`},{-0.9167015987857684`,-0.33840300183544625`},{-0.9147743123032537`,-0.3385187244318531`},{-0.9128470258207391`,-0.3386245386588837`},{-0.9109197393382245`,-0.33873056824715125`},{-0.9089924528557097`,-0.33883681365788115`},{-0.9051378798906804`,-0.33904995379703784`},{-0.9032105934081657`,-0.33915684945333263`},{-0.901283306925651`,-0.3392639627878319`},{-0.8974287339606216`,-0.33947884435918013`},{-0.8955014474781069`,-0.3395866135326401`},{-0.8935741609955923`,-0.3396946022575323`},{-0.8916468745130776`,-0.3398028110049181`},{-0.8897195880305628`,-0.3400116720861136`},{-0.8877923015480482`,-0.3402235896411119`},{-0.8858650150655335`,-0.34043596106442575`},{-0.8820104421005042`,-0.3408620697940054`},{-0.8800831556179896`,-0.3410758092466122`},{-0.8781558691354748`,-0.34129000686023714`},{-0.8743012961704455`,-0.34171978089572774`},{-0.8723740096879309`,-0.3419353594876255`},{-0.8704467232054162`,-0.3421514005806245`},{-0.8685194367229014`,-0.3423679052672241`},{-0.8665921502403868`,-0.3425008991460736`},{-0.8647027108412082`,-0.3425391202023884`},{-0.8628132714420296`,-0.34257741500839173`},{-0.8590343926436723`,-0.34265422645030885`},{-0.8571449532444937`,-0.342692743377386`},{-0.8552555138453151`,-0.3427313346364806`},{-0.8514766350469578`,-0.3428087407363289`},{-0.8495871956477792`,-0.3428475558706344`},{-0.8476977562486006`,-0.3428864459240626`},{-0.8458083168494219`,-0.3429254110441402`},{-0.8439188774502433`,-0.342967168459792`},{-0.8420294380510647`,-0.343106673500032`},{-0.840139998651886`,-0.3432464618953903`},{-0.8363611198535288`,-0.34352689121403684`},{-0.8344716804543502`,-0.3436675333723596`},{-0.8325822410551715`,-0.34380846135588006`},{-0.8288033622568143`,-0.34409117728516897`},{-0.8269139228576357`,-0.3442329664780568`},{-0.825024483458457`,-0.3443750439903905`},{-0.8231350440592784`,-0.34451741044954065`},{-0.8212456046600998`,-0.3446600664844111`},{-0.8193561652609211`,-0.3447718842347844`},{-0.8174667258617425`,-0.34487884145750014`},{-0.8136878470633853`,-0.3450933976144319`},{-0.8061300894666708`,-0.3455250894153601`},{-0.8042406500674921`,-0.3456335524044783`},{-0.8023512106683135`,-0.3457422323204647`},{-0.7985723318699562`,-0.34596024476411313`},{-0.7910145742732417`,-0.34634801247066216`},{-0.7891251348740631`,-0.34644532697550107`},{-0.7872356954748845`,-0.3465428350219347`},{-0.7834568166765272`,-0.3467384333559038`},{-0.7815673772773486`,-0.34683652445389523`},{-0.77967793787817`,-0.34693481071439736`},{-0.7777884984789913`,-0.34703329254494764`},{-0.7758990590798127`,-0.34715143493609146`},{-0.7740096196806341`,-0.34730879415081994`},{-0.7721201802814555`,-0.34746647580343565`},{-0.7683413014830982`,-0.34778280927089494`},{-0.7664518620839196`,-0.347941462514477`},{-0.764562422684741`,-0.348100441053434`},{-0.7607835438863837`,-0.34841937689467123`},{-0.7588941044872051`,-0.3485793356400596`},{-0.7570046650880264`,-0.3487396225670506`},{-0.7551152256888478`,-0.34890023840173195`},{-0.7532257862896692`,-0.34896121096008115`},{-0.7513363468904906`,-0.34901714312430454`},{-0.7494469074913119`,-0.3490731842063268`},{-0.7456680286929547`,-0.34918559399710886`},{-0.7436182664760145`,-0.3492467512319385`},{-0.7415685042590743`,-0.349308037705079`},{-0.7395187420421341`,-0.349369453697584`},{-0.7374689798251938`,-0.3494309994911525`},{-0.7354192176082535`,-0.3494926753681301`},{-0.7333694553913133`,-0.3495668585020299`},{-0.7313196931743731`,-0.34967115859641756`},{-0.7292699309574329`,-0.34977568361361183`},{-0.7272201687404927`,-0.34988043406224545`},{-0.7251704065235525`,-0.34998541045220266`},{-0.721070882089672`,-0.35019604310190955`},{-0.712871833221911`,-0.3506274936670051`},{-0.6800756377508674`,-0.35226584243265724`},{-0.6780258755339272`,-0.352312027627649`},{-0.675976113316987`,-0.3523583097281399`},{-0.6739263511000468`,-0.3524046889419554`},{-0.6718765888831065`,-0.3524839034396989`},{-0.6698268266661662`,-0.3525762764271431`},{-0.667777064449226`,-0.3526688475112739`},{-0.6636775400153456`,-0.35285458574355516`},{-0.6616277777984054`,-0.3529477537813651`},{-0.6595780155814652`,-0.35304112169518664`},{-0.657528253364525`,-0.35313468993254243`},{-0.6554784911475847`,-0.35322845894203725`},{-0.6534287289306444`,-0.3533328428344687`},{-0.6513789667137042`,-0.3534699606046883`},{-0.6472794422798238`,-0.35374509747036154`},{-0.6452296800628836`,-0.35388311796497635`},{-0.6431799178459434`,-0.354021440769902`},{-0.6411301556290032`,-0.35416006658925436`},{-0.6390803934120629`,-0.3542989961289736`},{-0.6370306311951226`,-0.35443823009682873`},{-0.6349808689781824`,-0.3545777692024245`},{-0.6329311067612422`,-0.3546496459229111`},{-0.630881344544302`,-0.35471809024595374`},{-0.6288315823273618`,-0.35478667970684324`},{-0.6267818201104216`,-0.35485541462333425`},{-0.6226822956765411`,-0.3549933220978356`},{-0.6206325334596008`,-0.35506249529505407`},{-0.6185827712426606`,-0.3551318152262953`},{-0.6165330090257204`,-0.3552012822130239`},{-0.6144832468087802`,-0.3552499936444188`},{-0.6125704166257249`,-0.3552915659590668`},{-0.6106575864426695`,-0.35533321960389264`},{-0.6068319260765588`,-0.35541677153444917`},{-0.5991806053443374`,-0.3555848585307539`},{-0.597267775161282`,-0.35562779717921833`},{-0.5953549449782267`,-0.35567250011104873`},{-0.591529284612116`,-0.3557621689356959`},{-0.5896164544290605`,-0.3558071351800345`},{-0.5877036242460052`,-0.35585218954734404`},{-0.5838779638798945`,-0.35594256335797353`},{-0.5819651336968392`,-0.35598788315576707`},{-0.5800523035137839`,-0.3560332917854818`},{-0.5781394733307286`,-0.35535771249743436`},{-0.5762266431476731`,-0.3545808983732286`},{-0.5743138129646177`,-0.3538032016175155`},{-0.5724009827815624`,-0.35302462191475403`},{-0.5685753224154517`,-0.3514648124131582`},{-0.5666624922323964`,-0.3506835819904854`},{-0.5647496620493411`,-0.3499014673730906`},{-0.5628368318662857`,-0.3491184682526895`},{-0.5609240016832303`,-0.348650899933889`},{-0.5590111715001749`,-0.3483728409846508`},{-0.5570983413171195`,-0.34809432716423255`},{-0.5532726809510089`,-0.3475359324408988`},{-0.5513598507679536`,-0.34725605030245194`},{-0.5494470205848982`,-0.34697571082176437`},{-0.5456213602187875`,-0.3464136573579928`},{-0.5379700394865661`,-0.3454299533008248`},{-0.5360572093035108`,-0.34518783217270743`},{-0.5341443791204554`,-0.3449453062416173`},{-0.5322315489374001`,-0.3447023749291734`},{-0.5303187187543447`,-0.3444590376564967`},{-0.5284058885712892`,-0.3442152938442116`},{-0.5264930583882339`,-0.34401082606143346`},{-0.5245802282051786`,-0.34383295037699446`},{-0.5226673980221233`,-0.34365476584598936`},{-0.5207545678390679`,-0.3434762719873366`},{-0.5188417376560126`,-0.3432974683193962`},{-0.5150160772899018`,-0.34293892962630607`},{-0.5131032471068464`,-0.34275919363508894`},{-0.5111904169237911`,-0.34257914590244953`},{-0.5092775867407358`,-0.3424288857519984`},{-0.5073647565576804`,-0.34228545937915333`},{-0.5054519263746251`,-0.342141779020733`},{-0.5035390961915697`,-0.3419978442635562`},{-0.49971343582545896`,-0.34170920989749376`},{-0.4978006056424036`,-0.3415645094595319`},{-0.49588777545934826`,-0.3414195529646598`},{-0.4939749452762929`,-0.3412838126080478`},{-0.4920621150932375`,-0.3411947789429848`},{-0.48998896209242054`,-0.3410980994376239`},{-0.4879158090916036`,-0.34100122866808597`},{-0.4837695030899697`,-0.34080691189666795`},{-0.48169635008915274`,-0.34070946517337286`},{-0.4796231970883358`,-0.3406118257430704`},{-0.4754768910867019`,-0.34038203989679694`},{-0.47340373808588493`,-0.3402562763352344`},{-0.471330585085068`,-0.3401302676398616`},{-0.4671842790834341`,-0.33987751305967856`},{-0.45889166708016627`,-0.33930905557108565`},{-0.4568185140793493`,-0.33914167174334325`},{-0.45474536107853236`,-0.3389739686432755`},{-0.4526722080777154`,-0.33880594571558537`},{-0.45059905507689846`,-0.33863760240421603`},{-0.4485259020760815`,-0.33846893815234835`},{-0.44645274907526455`,-0.3382999524024023`},{-0.4443795960744476`,-0.33823195265004297`},{-0.44230644307363065`,-0.3381726229390117`},{-0.4402332900728137`,-0.3381131736315955`},{-0.43816013707199675`,-0.33805360449384414`},{-0.4360869840711798`,-0.3379939152913782`},{-0.43401383107036284`,-0.33793410578938915`},{-0.4319406780695459`,-0.3378741757526381`},{-0.42986752506872894`,-0.337837125363943`},{-0.42779437206791193`,-0.33782911962120044`},{-0.425721219067095`,-0.3378210973284036`},{-0.42364806606627803`,-0.3378130584514715`},{-0.421574913065461`,-0.33780500295625465`},{-0.41950176006464407`,-0.3377969308085332`},{-0.4174286070638271`,-0.33778884197401765`},{-0.41535545406301017`,-0.3377732461418815`},{-0.4132823010621932`,-0.33766796212883987`},{-0.41120914806137626`,-0.3375624707376024`},{-0.4091359950605593`,-0.33745677158163556`},{-0.40706284205974236`,-0.3373508642737719`},{-0.4049896890589254`,-0.3372447484262102`},{-0.4008433830572915`,-0.33703188955760616`},{-0.39877023005647455`,-0.3369103412357084`},{-0.3966970770556576`,-0.3367853805693372`},{-0.3925507710540237`,-0.33653472778368365`},{-0.39047761805320674`,-0.3364090347746056`},{-0.3884044650523898`,-0.33628309676034246`},{-0.38633131205157284`,-0.3361569132942658`},{-0.3842581590507559`,-0.33614215097706307`},{-0.38218500604993894`,-0.3361806002588048`},{-0.380111853049122`,-0.33621913081748417`},{-0.3759655470474881`,-0.3362964364658477`},{-0.37389239404667113`,-0.33633521190660426`},{-0.3718192410458542`,-0.336374069326445`},{-0.3676729350442203`,-0.33645054201889424`},{-0.3655997820434033`,-0.33648873358486947`},{-0.36352662904258637`,-0.3365270058731293`},{-0.3614534760417694`,-0.33656535905738905`},{-0.35938032304095247`,-0.3366037933117508`},{-0.35734501712347155`,-0.3366416049500576`},{-0.35530971120599064`,-0.3366216366042996`},{-0.35327440528850973`,-0.3365732032101334`},{-0.3512390993710288`,-0.3365246734916618`},{-0.3492037934535479`,-0.33647604726200353`},{-0.347168487536067`,-0.33642732433393324`},{-0.3430978757011052`,-0.33632958763193327`},{-0.34106256978362437`,-0.33628044394970985`},{-0.33902726386614346`,-0.33623114739047333`},{-0.33699195794866255`,-0.33618175283294643`},{-0.33495665203118163`,-0.33613226008716973`},{-0.3329213461137007`,-0.33608266896283506`},{-0.3308860401962198`,-0.33603297926928477`},{-0.3288507342787389`,-0.3359831908155115`},{-0.326815428361258`,-0.3360691094210668`},{-0.3247801224437771`,-0.3361831237058174`},{-0.32274481652629616`,-0.3362973833213267`},{-0.31867420469133434`,-0.336526640770063`},{-0.3166388987738534`,-0.33664163971946814`},{-0.3146035928563725`,-0.336755980288296`},{-0.31053298102141075`,-0.33695272266241544`},{-0.3084976751039299`,-0.337051409156937`},{-0.306462369186449`,-0.3371503064829792`},{-0.30442706326896807`,-0.33724941511187684`},{-0.30239175735148716`,-0.33734873551610656`},{-0.30035645143400624`,-0.337418681589693`},{-0.29832114551652533`,-0.337437872328868`},{-0.2962858395990444`,-0.3374571025362615`},{-0.2942505336815635`,-0.3374763722938062`},{-0.2922152277640826`,-0.337495681683608`},{-0.2901799218466017`,-0.33751503078794654`},{-0.28610931001163986`,-0.33755443647453415`},{-0.28407400409415895`,-0.33757466755290216`},{-0.28203869817667804`,-0.337594940260192`},{-0.2800033922591971`,-0.33761525468290865`},{-0.27796808634171627`,-0.33763561090774097`},{-0.2759327804242354`,-0.33765600902156084`},{-0.2738974745067545`,-0.3377324303000175`},{-0.2718621685892736`,-0.337964462223037`},{-0.2698268626717927`,-0.33819702089893233`},{-0.26779155675431177`,-0.33843010764645665`},{-0.26575625083683085`,-0.3386637237882241`},{-0.26372094491934994`,-0.3388978706507242`},{-0.26168563900186903`,-0.3391325495643337`},{-0.2596503330843881`,-0.33932743689227823`},{-0.2576150271669072`,-0.3395152031382373`},{-0.2555797212494263`,-0.33970338730575184`},{-0.2535444153319454`,-0.3398919904039292`},{-0.25150910941446447`,-0.34008101344466485`},{-0.2494738034969836`,-0.34027045744265266`},{-0.2474384975795027`,-0.3404112699258782`},{-0.2454031916620218`,-0.3405037813718107`},{-0.24336788574454088`,-0.34059648988391517`},{-0.24133257982705997`,-0.3406893959003075`},{-0.23929727390957906`,-0.3407824998601553`},{-0.23726196799209814`,-0.3408758022036815`},{-0.23522666207461723`,-0.3409859144846047`},{-0.23319135615713632`,-0.34114792003223315`},{-0.2311560502396554`,-0.3413102819768229`},{-0.22912074432217452`,-0.3414730011604749`},{-0.2272223704385785`,-0.3416250956049618`},{-0.22532399655498248`,-0.34177750225803366`},{-0.22342562267138644`,-0.341930221808303`},{-0.2215272487877904`,-0.34217322076008144`},{-0.21962887490419436`,-0.3424324607637387`},{-0.21773050102059832`,-0.3426922607838247`},{-0.21393375325340624`,-0.34321354630017303`},{-0.198746762184638`,-0.34498187906966543`},{-0.19684838830104195`,-0.34515604370195097`},{-0.19495001441744592`,-0.34532362188229593`},{-0.19305164053384988`,-0.34549154665810017`},{-0.19115326665025384`,-0.3456598188046012`},{-0.1892548927666578`,-0.34582843909901245`},{-0.18735651888306176`,-0.34599740832052905`},{-0.18545814499946572`,-0.34622019519011127`},{-0.1835597711158697`,-0.346506542085173`},{-0.1816613972322737`,-0.34679351534198194`},{-0.17976302334867766`,-0.34708111651102147`},{-0.17786464946508163`,-0.34736934714740314`},{-0.1759662755814856`,-0.3476582088108849`},{-0.17406790169788955`,-0.34796101635392485`},{-0.1721695278142935`,-0.3483398041018225`},{-0.16837278004710143`,-0.34909997301926055`},{-0.1664744061635054`,-0.3494813587934412`},{-0.16457603227990936`,-0.34986361519375697`},{-0.16077928451271728`,-0.35057756477527957`},{-0.15888091062912124`,-0.3509042646823497`},{-0.1569825367455252`,-0.35123169244931274`},{-0.15508416286192916`,-0.35155984993693734`},{-0.15318578897833315`,-0.3518887390118168`},{-0.13799879790956487`,-0.3550552886628062`},{-0.13610042402596884`,-0.35551480658168416`},{-0.1342020501423728`,-0.3559754095223436`},{-0.13230367625877676`,-0.3564371005484088`},{-0.13040530237518075`,-0.3568998827345292`},{-0.1285069284915847`,-0.3573637591664293`},{-0.12660855460798867`,-0.35773540322851627`},{-0.12471018072439263`,-0.3580565035791286`},{-0.12281180684079661`,-0.3583783175099757`},{-0.12091343295720058`,-0.3587008468372878`},{-0.11901505907360455`,-0.35902409338294416`},{-0.11521831130641247`,-0.35971526717032365`},{-0.11331993742281643`,-0.36010217417863416`},{-0.1114215635392204`,-0.36048996656087956`},{-0.10952318965562438`,-0.3608786466876827`},{-0.10762481577202834`,-0.36126821693759364`},{-0.1055661190706707`,-0.36169169628141506`},{-0.10350742236931308`,-0.36245286364353513`},{-0.10144872566795546`,-0.3632536054375389`},{-0.09939002896659782`,-0.3640566411010695`},{-0.09115524216116729`,-0.3669129214286121`},{-0.07468566855030623`,-0.37190910771725544`},{-0.07262697184894859`,-0.37258865975477773`},{-0.07056827514759095`,-0.3728799541094441`},{-0.06850957844623332`,-0.3731609570377961`},{-0.06645088174487569`,-0.373442618291036`},{-0.06439218504351807`,-0.3737249395975697`},{-0.06233348834216043`,-0.37400792269121497`},{-0.060274791640802794`,-0.37478187433199545`},{-0.058216094939445164`,-0.3756986422509604`},{-0.05615739823808753`,-0.3766181432990778`},{-0.054098701536729896`,-0.37754038815006397`},{-0.052040004835372265`,-0.3784653875344361`},{-0.049981308134014635`,-0.3792524330374785`},{-0.047922611432657`,-0.3799614957911749`},{-0.04586391473129937`,-0.38067252447723854`},{-0.0417465213285841`,-0.38210050709760796`},{-0.03968782462722647`,-0.382735048645046`},{-0.03762912792586884`,-0.383304004738077`},{-0.03351173452315357`,-0.38444641395907914`},{-0.03145303782179594`,-0.38501987670456045`},{-0.029394341120438303`,-0.38557107798666435`},{-0.025276947717723038`,-0.38663329361459287`},{-0.023218251016365404`,-0.38716646892678874`},{-0.021159554315007774`,-0.3877010283234898`},{-0.019100857613650143`,-0.38809684361563346`},{-0.01704216091229251`,-0.38837178294342334`},{-0.014983464210934877`,-0.3886473647172769`},{-0.012924767509577245`,-0.38892359061607795`},{-0.010866070808219611`,-0.3892004623239316`},{-0.008807374106861979`,-0.3832556537317375`},{-0.006748677405504347`,-0.37329095530027545`},{-0.004689980704146714`,-0.36340434056717763`},{-0.0026312840027890817`,-0.35359443844311134`},{-0.0005725873014314491`,-0.3438599134792267`},{0.0014861093999261833`,-0.3369487600000443`},{0.0035448061012838157`,-0.33112605860088873`},{0.007662199503999081`,-0.31954588509726706`},{0.009720896205356714`,-0.31378800155049047`},{0.011779592906714346`,-0.30690259442711015`},{0.013838289608071978`,-0.2999070785803362`},{0.015896986309429612`,-0.2929458935925634`},{0.017955683010787246`,-0.28601863457328125`},{0.020014379712144877`,-0.2795047160663318`},{0.022073076413502507`,-0.2763204987079407`},{0.02413177311486014`,-0.2731398575455321`},{0.0260535377823329`,-0.2701739871225875`},{0.027975302449805665`,-0.2672112071854791`},{0.029897067117278426`,-0.2644145799610094`},{0.031818831784751186`,-0.2623827409703757`},{0.03374059645222395`,-0.26035112539371286`},{0.035662361119696714`,-0.25831973275309855`},{0.03758412578716948`,-0.2562885625717328`},{0.039505890454642235`,-0.2541624492214164`},{0.04142765512211499`,-0.2514914424795588`},{0.043349419789587756`,-0.2488224335515408`},{0.04527118445706052`,-0.24615541562396206`},{0.047192949124533284`,-0.2434903819145612`},{0.04911471379200605`,-0.24063266154203816`},{0.051036478459478805`,-0.23682196747609685`},{0.054880007794424326`,-0.2292220716901186`},{0.05680177246189709`,-0.22543278891927432`},{0.05872353712936985`,-0.2220316411558214`},{0.060645301796842604`,-0.2198632890086794`},{0.06256706646431537`,-0.2176954709050461`},{0.07025412513420642`,-0.208004789636466`},{0.07217588980167919`,-0.2050837068207172`},{0.07409765446915195`,-0.20216553738504095`},{0.07601941913662472`,-0.19925026994707018`},{0.07794118380409747`,-0.19666471131583377`},{0.07986294847157022`,-0.19439443123171038`},{0.08178471313904298`,-0.19212494134032868`},{0.08562824247398851`,-0.18758832388082275`},{0.08755000714146127`,-0.1853170458584274`},{0.08947177180893404`,-0.18304490267966575`},{0.0913935364764068`,-0.1807735545683157`},{0.09331530114387955`,-0.17850299944328776`},{0.0952370658113523`,-0.17623323523019363`},{0.09715883047882506`,-0.1745292553653766`},{0.10100235981377059`,-0.17116482196843527`},{0.11637647715355269`,-0.15731998152487844`},{0.11829824182102544`,-0.15566274211912312`},{0.1202200064884982`,-0.1540050646368884`},{0.12406353582344373`,-0.15079006351157073`},{0.1317505944933348`,-0.1446579159005845`},{0.13367235916080755`,-0.1433267347505567`},{0.1355941238282803`,-0.14199476771818784`},{0.13943765316322582`,-0.1393284783393909`},{0.14135941783069858`,-0.13790055464778456`},{0.14328118249817134`,-0.136452934665718`},{0.1452029471656441`,-0.13500462863650575`},{0.14712471183311687`,-0.13355563722861286`},{0.14900862941725357`,-0.1322566586270456`},{0.1508925470013903`,-0.13122565364864802`},{0.1546603821696637`,-0.12916100601441283`},{0.16219605250621058`,-0.12489404532796172`},{0.1640799700903473`,-0.1238107865820876`},{0.165963887674484`,-0.1227657991936534`},{0.16973172284275745`,-0.12092300927330754`},{0.1772673931793043`,-0.11752177159272924`},{0.17915131076344099`,-0.11676323134990933`},{0.1810352283475777`,-0.11600383730679802`},{0.18480306351585113`,-0.11466418991654331`},{0.18668698109998783`,-0.11404025846431484`},{0.18857089868412455`,-0.11341554061729837`},{0.19233873385239797`,-0.11221601406701322`},{0.19422265143653467`,-0.11164627764139956`},{0.1961065690206714`,-0.11107579220037805`},{0.1979904866048081`,-0.11050455718726344`},{0.1998744041889448`,-0.11001631179247355`},{0.20175832177308153`,-0.1095978119633688`},{0.20364223935721826`,-0.10917869853620361`},{0.20741007452549168`,-0.10835160587026502`},{0.2092939921096284`,-0.1079924428393668`},{0.2111779096937651`,-0.10763273185384338`},{0.21306182727790182`,-0.10727247227523243`},{0.21494574486203855`,-0.10691166346493043`},{0.21682966244617524`,-0.10666991561530503`},{0.21871358003031197`,-0.10643930927093602`},{0.2205974976144487`,-0.10620832139122488`},{0.22248141519858539`,-0.10597695143326459`},{0.22436533278272208`,-0.10579888167355032`},{0.2262492503668588`,-0.10564962438670386`},{0.23001708553513223`,-0.10535033205398914`},{0.23190100311926892`,-0.1052040870238361`},{0.23378492070340565`,-0.10506284929058486`},{0.23755275587167907`,-0.10477963444146039`},{0.2394366734558158`,-0.10464432706580569`},{0.24132059103995251`,-0.10453206845431426`},{0.2432045086240892`,-0.10441961079375796`},{0.24508842620822593`,-0.10430695375363933`},{0.24697234379236266`,-0.1041996173113996`},{0.24885626137649935`,-0.1041792820019155`},{0.25074017896063605`,-0.10415890876096177`},{0.2526240965447728`,-0.10413849751855989`},{0.2545080141289095`,-0.10411804820460493`},{0.2563919317130462`,-0.10411186799635616`},{0.25827584929718295`,-0.104106774584076`},{0.26015976688131964`,-0.10410167159319889`},{0.26204368446545634`,-0.1040965590057601`},{0.2639276020495931`,-0.10410003354695808`},{0.2658115196337298`,-0.10410527918775991`},{0.2676954372178665`,-0.10411053474782611`},{0.2697396776197648`,-0.10411624880331766`},{0.27178391802166313`,-0.1041029749499829`},{0.27382815842356145`,-0.10408656212391104`},{0.2758723988254597`,-0.10407011598196377`},{0.277916639227358`,-0.10404678359421289`},{0.2799608796292563`,-0.10398104478949247`},{0.28200512003115463`,-0.10391517579597873`},{0.28404936043305296`,-0.10384917636444643`},{0.2860936008349513`,-0.10376631372210562`},{0.2881378412368496`,-0.1036626051023989`},{0.2901820816387479`,-0.1035586950478933`},{0.29222632204064625`,-0.10345458318832959`},{0.29427056244254457`,-0.1033373307582295`},{0.2963148028444429`,-0.10321626641223992`},{0.2983590432463412`,-0.10309496902830455`},{0.3004032836482395`,-0.10294643043950283`},{0.30244752405013775`,-0.10263965363677538`},{0.3044917644520361`,-0.10233234343916875`},{0.3085802452558327`,-0.10169293845366904`},{0.316757206863426`,-0.10027122972964013`},{0.31880144726532433`,-0.09990688332298496`},{0.32084568766722266`,-0.09954192445036955`},{0.32493416847101925`,-0.09879214058649448`},{0.3331111300786125`,-0.09710844718853812`},{0.3351553704805108`,-0.0966396246344822`},{0.33719961088240913`,-0.09617187499814203`},{0.3412880916862057`,-0.09524072949794432`},{0.34946505329379896`,-0.09325178739060239`},{0.3515092936956973`,-0.09272562050301293`},{0.3535535340975956`,-0.09217702474258603`},{0.35764201490139225`,-0.09107736976724694`},{0.3658189765089855`,-0.08880118260565925`},{0.36786321691088375`,-0.08822704969505689`},{0.3699074573127821`,-0.08765207236942801`},{0.3739959381165787`,-0.08629952608688106`},{0.382172899724172`,-0.08349761951804183`},{0.38421714012607033`,-0.08285037951617846`},{0.38626138052796866`,-0.0821912291157738`},{0.39034986133176525`,-0.08084713993575711`},{0.3923941017336635`,-0.08016354435558402`},{0.39443834213556184`,-0.07943012735652268`},{0.39648258253746016`,-0.07869574870007355`},{0.3985268229393585`,-0.07796040783265967`},{0.40043413130737193`,-0.07738259642452008`},{0.4023414396753854`,-0.07682043410230123`},{0.40424874804339883`,-0.07625751529377617`},{0.4061560564114123`,-0.0757229806795131`},{0.40806336477942573`,-0.07523903641179522`},{0.4099706731474392`,-0.07475440299172699`},{0.413785289883466`,-0.07388452869041785`},{0.4156925982514794`,-0.07351342842494843`},{0.41759990661949287`,-0.07314175774014414`},{0.4195072149875063`,-0.07276154754096054`},{0.42141452335551977`,-0.07236964636749511`},{0.4233218317235332`,-0.0719771509705745`},{0.42522914009154666`,-0.07158406068291762`},{0.4271364484595601`,-0.07138098114582231`},{0.42904375682757356`,-0.07118149526391915`},{0.430951065195587`,-0.07098166843852594`},{0.43285837356360046`,-0.07079379398487921`},{0.4347656819316139`,-0.07061510259875019`},{0.4366729902996273`,-0.07043610208419528`},{0.4385802986676407`,-0.07028581454967135`},{0.44048760703565415`,-0.07027649621299245`},{0.4423949154036676`,-0.07026716017349138`},{0.44430222377168105`,-0.07025780639770245`},{0.4462095321396945`,-0.07021387150179015`},{0.44811684050770795`,-0.07016114553699065`},{0.4500241488757214`,-0.07010832169939858`},{0.45193145724373485`,-0.07009204830451783`},{0.4538387656117483`,-0.07012081400014787`},{0.45574607397976175`,-0.07014963544304581`},{0.4576533823477752`,-0.07016904462564834`},{0.4595606907157886`,-0.07011887544397215`},{0.461467999083802`,-0.0700686130069166`},{0.46337530745181543`,-0.07001825714583768`},{0.4652826158198289`,-0.06995630075940827`},{0.46718992418784233`,-0.0698915621810859`},{0.4690972325558558`,-0.06982670421132313`},{0.47100454092386923`,-0.06980756804639687`},{0.4729118492918827`,-0.06982994899660047`},{0.47481915765989613`,-0.06985237317726578`},{0.4767264660279096`,-0.06983338630178154`},{0.47863377439592303`,-0.06969510596755413`},{0.4805410827639365`,-0.06955658081199739`},{0.48244839113194987`,-0.06941753264905356`},{0.48435569949996327`,-0.06925467626353789`},{0.4862630078679767`,-0.06909153555813104`},{0.4900776246040036`,-0.06873362310888968`},{0.49198493297201706`,-0.06853037712026007`},{0.4938922413400305`,-0.06832678452780828`},{0.49579954970804396`,-0.0681173360882232`},{0.49770685807605736`,-0.06790351449533734`},{0.49961416644407075`,-0.06768933053043773`},{0.5015214748120842`,-0.06742299241685484`},{0.5034287831800976`,-0.0670755759486265`},{0.5053360915481111`,-0.06672761721971343`},{0.5072433999161245`,-0.06635895766692045`},{0.509150708284138`,-0.06591955572268807`},{0.5129653250201649`,-0.0650389763033617`},{0.5205945584922187`,-0.0632808856363296`},{0.5226621896779937`,-0.06280479917303658`},{0.5247298208637687`,-0.0623278833992277`},{0.5267974520495438`,-0.06173631268813584`},{0.5288650832353189`,-0.06114386839693799`},{0.530932714421094`,-0.06054133273339354`},{0.533000345606869`,-0.05988451621588596`},{0.5371356079784191`,-0.05856945527652149`},{0.5536766574646194`,-0.05336287326520288`},{0.5557442886503945`,-0.05274058272253668`},{0.5578119198361695`,-0.05211984775411539`},{0.5619471822077196`,-0.050897455848566815`},{0.5702177069508196`,-0.04851296304796715`},{0.5722853381365947`,-0.04793729652240733`},{0.5743529693223697`,-0.04737026058303298`},{0.5784882316939198`,-0.04625886752636772`},{0.58675875643702`,-0.04417262750722663`},{0.588826387622795`,-0.0436758304767452`},{0.5908940188085701`,-0.04318735007973871`},{0.5950292811801201`,-0.04229356625771641`},{0.5970969123658951`,-0.041906713361850166`},{0.5991645435516701`,-0.041521119406733475`},{0.6032998059232203`,-0.04076826283442124`},{0.6198408554094206`,-0.037828607593798934`},{0.6219084865951956`,-0.0374885191707022`},{0.6239761177809706`,-0.03715659310495601`},{0.6281113801525208`,-0.03649741647693194`},{0.636381904895621`,-0.035199076498313775`},{0.6529229543818212`,-0.03278131237570912`},{0.6548536535337115`,-0.032518968327279574`},{0.6567843526856016`,-0.03225618628806013`},{0.6606457509893819`,-0.03173682761630643`},{0.6683685475969425`,-0.03067443765347239`},{0.6702992467488327`,-0.030411602751400577`},{0.6722299459007228`,-0.030148329168364265`},{0.6760913442045032`,-0.02965307401958013`},{0.6780220433563935`,-0.029408525671300586`},{0.6799527425082836`,-0.029178296697803783`},{0.6838141408120639`,-0.028721788361185763`},{0.6857448399639541`,-0.028503804641722374`},{0.6876755391158442`,-0.028285447299073296`},{0.6896062382677344`,-0.02811491243784672`},{0.6915369374196246`,-0.02795912566177425`},{0.6934676365715149`,-0.0027618219260114357`},{0.695398335723405`,-0.0016199382197898701`},{0.6973290348752952`,-0.00047715393739340776`},{0.6992597340271853`,0.`},{0.7011904331790755`,0.`},{0.7031211323309656`,0.`},{0.7069825306347459`,0.`},{0.7147053272423066`,0.`},{0.7166360263941969`,0.`},{0.718566725546087`,-1.1102230246251565`*^-16},{0.7204974246979772`,0.`},{0.7224281238498673`,2.2204460492503128`*^-16},{0.7301509204574279`,0.`},{0.7455965136725493`,0.`},{0.776487700102792`,0.`},{0.778380552171346`,0.`},{0.7802734042399002`,0.`},{0.7840591083770085`,0.`},{0.791630516651225`,0.`},{0.8067733331996579`,0.`},{0.8370589662965239`,0.`},{0.8976302324902558`,0.`},{1.0290334252144617`,0.`},{1.151672967770036`,0.`},{1.2845731706623524`,2.2204460492503128`*^-16},{1.415051160221162`,0.`},{1.5367654996113396`,2.2204460492503128`*^-16},{1.6687404993382595`,0.`},{1.7919518488965478`,2.2204460492503128`*^-16},{1.7938391791500599`,-2.220446049250313`*^-16},{1.7957265094035721`,-1.1102230246251565`*^-16},{1.7976138396570844`,0.`},{1.7995011699105965`,0.`},{1.8070504909246454`,0.`},{1.822149132952743`,0.`},{1.8523464170089383`,0.`},{1.8542337472624504`,0.`},{1.8561210775159627`,0.`},{1.859895738022987`,2.2204460492503128`*^-16},{1.867445059037036`,0.`},{1.8825437010651336`,0.`},{1.9127409851213288`,-2.220446049250313`*^-16},{1.9147886381926027`,0.`},{1.9168362912638766`,0.`},{1.920931597406424`,0.`},{1.9291222096915193`,0.`},{1.9455034342617097`,0.`},{1.9782658834020908`,0.`},{2.0437907816828527`,-1.1102230246251565`*^-16},{2.1660769280757446`,0.`},{2.168209866170894`,0.`},{2.1703428042660438`,0.`},{2.1746086804563425`,2.2204460492503128`*^-16},{2.1831404328369404`,0.`},{2.2002039375981357`,0.`},{2.234330947120527`,0.`},{2.2364638852156764`,0.`},{2.238596823310826`,0.`},{2.2428626995011247`,0.`},{2.2513944518817226`,0.`},{2.268457956642918`,0.`},{2.270590894738067`,0.`},{2.2727238328332167`,-1.1102230246251565`*^-16},{2.276989709023516`,-1.1102230246251565`*^-16},{2.2855214614041133`,0.`},{2.287654399499263`,0.`},{2.2897873375944124`,-1.1102230246251565`*^-16},{2.294053213784711`,-1.1102230246251565`*^-16},{2.2961861518798603`,0.`},{2.29831908997501`,0.`},{2.3004520280701595`,0.`},{2.302584966165309`,2.2204460492503128`*^-16}}]},"Charting`Private`Tag#1"]}},{}},Association["HighlightElements"->Association["Label"->{"XYLabel"},"Ball"->{"InterpolatedBall"}],"LayoutOptions"->Association["PanelPlotLayout"->Association[],"PlotRange"->{{-2.3025850929940455`,2.302585092994046`},{-4.605170185988091`,0.1823215567939546`}},"Frame"->{{True,True},{True,True}},"AxesOrigin"->{-2.30258509299404`,-4.60517018598808`},"ImageSize"->{576,576/GoldenRatio},"Axes"->{True,True},"LabelStyle"->{},"AspectRatio"->1/GoldenRatio,"DefaultStyle"->{Directive[Opacity[1.`],AbsoluteThickness[2],Thickness[0.003`],RGBColor[0,0,1]]},"HighlightLabelingFunctions"->Association["CoordinatesToolOptions"->({Exp[#1[[1]]],Exp[#1[[2]]]}&),"ScalingFunctions"->{{Log,Exp},{Log,Exp}}],"Primitives"->{},"GCFlag"->False],"Meta"->Association["DefaultHighlight"->{"Dynamic",None},"Index"->{},"Function"->Plot,"GroupHighlight"->False]],"DynamicHighlight"],AspectRatio->1/GoldenRatio,Axes->{True,True},AxesLabel->{None,None},AxesOrigin->{-2.30258509299404`,-4.60517018598808`},DisplayFunction->Identity,Frame->{{True,True},{True,True}},FrameLabel->{{HoldForm["\!\(\*SubscriptBox[\(Br\), \(vis\)]\)"],None},{HoldForm["m [GeV]"],None}},FrameStyle->Directive[GrayLevel[0],22],FrameTicks->{{Charting`ScaledTicks[{Log,Exp},{Log,Exp},"Nice",WorkingPrecision->MachinePrecision,RotateLabel->0],Charting`ScaledFrameTicks[{Log,Exp}]},{Charting`ScaledTicks[{Log,Exp},{Log,Exp},"Nice",WorkingPrecision->MachinePrecision,RotateLabel->0],Charting`ScaledFrameTicks[{Log,Exp}]}},GridLines->{Charting`ScaledTickValues[{Log,Exp}],Charting`ScaledTickValues[{Log,Exp}]},GridLinesStyle->Directive[GrayLevel[0.5`,0.4`]],ImagePadding->All,ImageSize->Large,Method->{"DefaultBoundaryStyle"->Automatic,"DefaultGraphicsInteraction"->{"Version"->1.2`,"TrackMousePosition"->{True,False},"Effects"->{"Highlight"->{"ratio"->2},"HighlightPoint"->{"ratio"->2},"Droplines"->{"freeformCursorMode"->True,"placement"->{"x"->"All","y"->"None"}}}},"DefaultMeshStyle"->AbsolutePointSize[6],"ScalingFunctions"->None,"CoordinatesToolOptions"->{"DisplayFunction"->({(Exp[#1]&)[#1[[1]]],(Exp[#1]&)[#1[[2]]]}&),"CopiedValueFunction"->({(Exp[#1]&)[#1[[1]]],(Exp[#1]&)[#1[[2]]]}&)}},PlotLabel->Style[Row[{"For ","SHIFT-muon-chamber"}],20,GrayLevel[0]],PlotRange->{{-2.3025850929940455`,2.302585092994046`},{-4.605170185988091`,0.1823215567939546`}},PlotRangeClipping->True,PlotRangePadding->{{0,0},{0,0}},Ticks->{Charting`ScaledTicks[{Log,Exp},{Log,Exp},"Nice",WorkingPrecision->MachinePrecision,RotateLabel->0],Charting`ScaledTicks[{Log,Exp},{Log,Exp},"Nice",WorkingPrecision->MachinePrecision,RotateLabel->0]}]*)


(* ::Chapter::Closed:: *)
(*LLP angle-energy distributions for the given experiment*)


(* ::Input:: *)
(*ProductionPatternSelected=Select[DistrCombinations,#[[3]]==FacilityGivenExperiment&];*)
(*Print["Production list:"]*)
(*ELLPmax[mLLP_,\[Theta]LLP_,"Bremsstrahlung-mixing"]=ELLPmax[mLLP,\[Theta]LLP,"Bremsstrahlung-mixing",FacilityGivenExperiment];*)
(*ELLPmin["Bremsstrahlung-mixing"]=ELLPmin["Bremsstrahlung-mixing",FacilityGivenExperiment];*)
(*ProductionListTemp=ProductionPatternSelected[[All,2]]//DeleteDuplicates;*)
(*ProductionList=If[ELLPmin["Bremsstrahlung-mixing"]<ELLPmax[0.02,\[Theta]minExp,"Bremsstrahlung-mixing"],ProductionListTemp,Select[ProductionListTemp,#!="Bremsstrahlung-mixing"&]]*)
(*\[Theta]maxBrem=Abs[\[Theta]LLP/.Solve[ELLPmax[0.02,\[Theta]LLP,"Bremsstrahlung-mixing"][[2]]==ELLPmin["Bremsstrahlung-mixing"],\[Theta]LLP][[1]]];*)
(*Do[*)
(*Module[{prod},*)
(*prod=ProductionPatternSelected[[i]][[2]];*)
(*(*Importing the data with distribution*)*)
(*dirimp=If[prod=="DrellYan",FileNameJoin[{directory["Distribution"],"Pregenerated"}],directory["Distribution"]];*)
(*DistrDataImport[prod]=Import[FileNameJoin[{dirimp,"DoubleDistr_"<>LLPdirName<>"_"<>prod<>"_"<>FacilityGivenExperiment<>".m"}],"MX"];*)
(*(*Min/mass mass of the LLP from the data*)*)
(*mlistDistr[prod]=DeleteDuplicates[DistrDataImport[prod][[All,1]]];*)
(*{mLLPmin[prod],mLLPmax[prod]}=MinMax[mlistDistr[prod]];*)
(*(*Interpolation of the tabulated distribution*)*)
(*DoubleDistrLLPint[mLLP_,\[Theta]LLP_,ELLP_,prod]=10^(Interpolation[distrlogComp[DistrDataImport[prod]],InterpolationOrder->1][Log10[mLLP],Log10[\[Theta]LLP],Log10[ELLP]]);*)
(*If[prod=="Bremsstrahlung-mixing",*)
(*DoubleDistrLLPint[mLLP_,\[Theta]LLP_,ELLP_,prod]=If[ELLP<=ELLPmax[mLLP,\[Theta]LLP,"Bremsstrahlung-mixing"],Evaluate[DoubleDistrLLPint[mLLP,\[Theta]LLP,ELLP,prod]],0.]];*)
(*(*Probability to produce LLP*)*)
(*ProbLLP[mLLP_,\[Theta]2_,BrhToSS_,prod]=ProbMother[prod]*PmotherToLLP[mLLP,\[Theta]2,BrhToSS,prod,FacilityGivenExperiment];*)
(*]*)
(*,{i,1,Length[ProductionPatternSelected],1}]*)


(* ::Section:: *)
(*Importing and interpolating*)


(* ::Input:: *)
(*ProductionPatternSelected=Select[DistrCombinations,#[[3]]==FacilityGivenExperiment&];*)
(*Print["Production list:"]*)
(*ELLPmax[mLLP_,\[Theta]LLP_,"Bremsstrahlung-mixing"]=ELLPmax[mLLP,\[Theta]LLP,"Bremsstrahlung-mixing",FacilityGivenExperiment];*)
(*ELLPmin["Bremsstrahlung-mixing"]=ELLPmin["Bremsstrahlung-mixing",FacilityGivenExperiment];*)
(*ProductionListTemp=ProductionPatternSelected[[All,2]]//DeleteDuplicates;*)
(*ProductionList=If[ELLPmin["Bremsstrahlung-mixing"]<ELLPmax[0.02,\[Theta]minExp,"Bremsstrahlung-mixing"],ProductionListTemp,Select[ProductionListTemp,#!="Bremsstrahlung-mixing"&]]*)
(*\[Theta]maxBrem=Abs[\[Theta]LLP/.Solve[ELLPmax[0.02,\[Theta]LLP,"Bremsstrahlung-mixing"][[2]]==ELLPmin["Bremsstrahlung-mixing"],\[Theta]LLP][[1]]];*)
(*Do[*)
(*Module[{prod},*)
(*prod=ProductionPatternSelected[[i]][[2]];*)
(*(*Importing the data with distribution*)*)
(*dirimp=If[prod=="DrellYan",FileNameJoin[{directory["Distribution"],"Pregenerated"}],directory["Distribution"]];*)
(*DistrDataImport[prod]=Import[FileNameJoin[{dirimp,"DoubleDistr_"<>LLPdirName<>"_"<>prod<>"_"<>FacilityGivenExperiment<>".m"}],"MX"];*)
(*(*Min/mass mass of the LLP from the data*)*)
(*mlistDistr[prod]=DeleteDuplicates[DistrDataImport[prod][[All,1]]];*)
(*{mLLPmin[prod],mLLPmax[prod]}=MinMax[mlistDistr[prod]];*)
(*(*Interpolation of the tabulated distribution*)*)
(*DoubleDistrLLPint[mLLP_,\[Theta]LLP_,ELLP_,prod]=10^(Interpolation[distrlogComp[DistrDataImport[prod]],InterpolationOrder->1][Log10[mLLP],Log10[\[Theta]LLP],Log10[ELLP]]);*)
(*If[prod=="Bremsstrahlung-mixing",*)
(*DoubleDistrLLPint[mLLP_,\[Theta]LLP_,ELLP_,prod]=If[ELLP<=ELLPmax[mLLP,\[Theta]LLP,"Bremsstrahlung-mixing"],Evaluate[DoubleDistrLLPint[mLLP,\[Theta]LLP,ELLP,prod]],0.]];*)
(*(*Probability to produce LLP*)*)
(*ProbLLP[mLLP_,\[Theta]2_,BrhToSS_,prod]=ProbMother[prod]*PmotherToLLP[mLLP,\[Theta]2,BrhToSS,prod,FacilityGivenExperiment];*)
(*]*)
(*,{i,1,Length[ProductionPatternSelected],1}]*)
(*directory["Auxiliary-experiment"]=FileNameJoin[{directory["Auxiliary"],SelectedExperiment}];*)
(*If[!DirectoryQ[directory["Auxiliary-experiment"]],CreateDirectory[directory["Auxiliary-experiment"]]];*)
(*Export[FileNameJoin[{directory["Auxiliary-experiment"],"Double-Distr-Averaged-"<>LLPdirName<>".m"}],{Sum[If[mLLPmin[prod]<mLLP<mLLPmax[prod],Evaluate[ProbLLP[mLLP,1,prod]],0],{prod,ProductionList}],1/Sum[If[mLLPmin[prod]<mLLP<mLLPmax[prod],Evaluate[ProbLLP[mLLP,1,prod]],0],{prod,ProductionList}] Sum[If[mLLPmin[prod]<mLLP<mLLPmax[prod],Evaluate[ProbLLP[mLLP,1,prod]*DoubleDistrLLPint[mLLP,\[Theta]LLP,ELLP,prod]],0],{prod,ProductionList}]},"MX"];*)
(*Do[{GridInFinal[prod],DistrVals[prod]}=BlockGridsValsDistr[prod,DistrDataImport],{prod,ProductionList}];//AbsoluteTiming*)
(*(*____________________________*)*)
(*(*Finding Subscript[E, max](Subscript[m, LLP],Subscript[\[Theta], LLP]) for the angular range at the given experiment*)*)
(*(*____________________________*)*)
(*Do[ELLPmax[mfip_,\[Theta]fip_,prod]=EmaxBlock[prod,8,DistrDataImport,FacilityGivenExperiment],{prod,Select[ProductionList,#!="Bremsstrahlung-mixing"&]}]//AbsoluteTiming*)
(*ptenergies=LogLogPlot[Evaluate[Table[ELLPmax[0.1,\[Theta]LLP,prod],{prod,ProductionList}]],{\[Theta]LLP,\[Theta]minExp,\[Theta]maxExp},Frame->True,ImageSize->Large,PlotLegends->Placed[Style[#,15]&/@ProductionList,Right]];*)
(*ptprodprob=LogLogPlot[Evaluate[Table[ProbLLP[ma,1,0.01,prod],{prod,ProductionList}]],{ma,mmin\[Epsilon],mmax\[Epsilon]},Frame->True,ImageSize->Large,PlotLegends->Placed[Style[#,15]&/@ProductionList,Right]];*)
(*Style[Row[{ptprodprob,ptenergies}],ImageSizeMultipliers->{1, 1}]*)


(* ::Chapter::Closed:: *)
(*Number of events*)


(* ::Section:: *)
(*Number of events *)


(* ::Subsection:: *)
(*Initializing all routines*)


(* ::Input:: *)
(*Do[{OutGrid\[Theta]final[prod],\[CapitalDelta]\[Theta]vals[prod]}=OutGrid\[Theta]Temp[InGrid\[Theta]\[Epsilon],30,prod,\[Theta]maxBrem],{prod,ProductionList}]*)
(*{OutGridzfinal,\[CapitalDelta]zvals}=OutGridszTemp[InGridz\[Epsilon],30,zminExp];*)
(*(*Final energy grid. Mass- and production channel-dependent*)*)
(*If[FacilityGivenExperiment!="ESS",*)
(*StepEtemp[Efip_]=Piecewise[{{0.3,Efip<=2.5},{0.5,2.5<Efip<35},{2,35<=Efip<=50},{4,50<Efip<160},{5,160<=Efip<=400},{25,400<Efip<600},{50,600<=Efip<2000},{200,2000<=Efip<4000},{400,4000<=Efip<7000},{500,7000<=Efip<=50000}}];*)
(*OutGridEnergy[m_,ProdChannel_]:=Block[{},*)
(*emin=If[ProdChannel!="Bremsstrahlung-mixing",N[m],ELLPmin["Bremsstrahlung-mixing"]];*)
(*egridtemp=With[{start=emin,end=ELLPmax[m,\[Theta]minExp,ProdChannel]},*)
(*Log10[NestWhileList[#+StepEtemp[#]&,start,#<=end&,1,\[Infinity],-1]]]//N;*)
(*If[Length[egridtemp]==1,egridtemp=Join[egridtemp,{Log10[2*emin]}]];*)
(*egridtemp*)
(*]*)
(*,*)
(*StepEtemp[Efip_]=0.001;*)
(*OutGridEnergy[m_,ProdChannel_]:=Block[{},*)
(*tabt=Table[e,{e,1.0001m,ELLPmax[m,\[Theta]minExp,ProdChannel],0.001}];*)
(*If[Length[tabt]==1,tabt=Join[tabt,{ELLPmax[m,\[Theta]minExp,ProdChannel]}]//Sort//DeleteDuplicates];*)
(*Log10[tabt]//N*)
(*]*)
(*]*)
(*(*____________________________________________________*)*)
(*(*Block that computes the grid Subscript[\[Theta], S],Subscript[E, S],Subscript[z, S], Subscript[\[Epsilon], Full]\[Times]Subscript[f, Subscript[\[Theta], S],Subscript[E, S]]*)*)
(*(*____________________________________________________*)*)
(*(*The block which sets all the values of Subscript[\[Epsilon], Full]\[Times]Subscript[f, \[Theta],E] for which E < Subscript[E, max] to zero, for Bremsstrahlung*)*)
(*emaxbrem[mLLP_,\[Theta]LLP_]=ELLPmax[mLLP,\[Theta]LLP,"Bremsstrahlung-mixing"];*)
(*BremCutComp=Hold@Compile[{{angleenergy,_Real,1},{mfip,_Real}},Module[{angles,energies,distrvals,d},*)
(*angles=Compile`GetElement[angleenergy,1];*)
(*energies=Compile`GetElement[angleenergy,2];*)
(*distrvals=Compile`GetElement[angleenergy,3];*)
(*d=If[energies<emaxbrem[mfip,angles],distrvals,10^-90.];*)
(*d*)
(*],CompilationTarget->"C",RuntimeOptions->"Speed",RuntimeAttributes->{Listable}]/.DownValues@emaxbrem//ReleaseHold;*)
(*BremCut[OutGrid\[Theta]final_,OutGridEfinal_,distr_,mLLP_]:=Block[{},*)
(*angleenergy=Join[10^Tuples[{OutGrid\[Theta]final,OutGridEfinal}],Partition[distr,1],2];*)
(*BremCutComp[angleenergy,mLLP]*)
(*]*)
(*TableIntegrandDiscret[m_,ProdChannel_,\[Epsilon]DecOp_]:=TableIntegrandDiscretTemp[m,ProdChannel,\[Epsilon]DecOp,\[Epsilon]vals,\[Epsilon]azvals,OutGrid\[Theta]final[ProdChannel],OutGridzfinal,OutGridEnergy,InGridm\[Epsilon],InGrid\[Theta]\[Epsilon],InGridE\[Epsilon],InGridz\[Epsilon],\[CapitalDelta]\[Theta]vals[ProdChannel],\[CapitalDelta]zvals,zminExp,GridInFinal,DistrVals,FacilityGivenExperiment]*)


(* ::Subsection:: *)
(*Generalized acceptances*)


(* ::Input:: *)
(*(*Tabulated acceptance*)*)
(*FactorANUBISceiling=If[SelectedExperiment=="ANUBIS-ceiling",2,1];*)
(*AcceptanceDiscret[m_,ProdChannel_,\[Epsilon]decOp_,decProb_]:=AcceptanceDiscretTemp[m,ProdChannel,\[Epsilon]decOp,decProb,mLLPmin,mmin\[Epsilon],mLLPmax,mmax\[Epsilon],ELLPmax,\[Theta]minExp,TableIntegrandDiscret,BrVis,zmaxExp,zminExp,FactorANUBISceiling,0.]*)
(*Do[mlistAcceptance[prod]=Select[Join[{1.01Max[mLLPmin[prod],mmin\[Epsilon]]},10^InGridm\[Epsilon],{Min[mLLPmax[prod],mmax\[Epsilon]]}],mLLPmin[prod]<=#<=mLLPmax[prod]&]//Sort//DeleteDuplicates;*)
(*,{prod,ProductionList}];*)
(*Do[*)
(*\[Epsilon]GeomTabs[prod]=ParallelTable[{m,AcceptanceDiscret[m,prod,"False",0],AcceptanceDiscret[m,prod,"True",0],AcceptanceDiscret[m,prod,"False",1],AcceptanceDiscret[m,prod,"True",1]},{m,mlistAcceptance[prod]}];*)
(*,{prod,ProductionList}];//AbsoluteTiming*)
(*PlotAcc[ProdChannel_]:=ListLogPlot[Evaluate[{\[Epsilon]GeomTabs[ProdChannel][[All,{1,2}]],\[Epsilon]GeomTabs[ProdChannel][[All,{1,3}]],\[Epsilon]GeomTabs[ProdChannel][[All,{1,4}]],\[Epsilon]GeomTabs[ProdChannel][[All,{1,5}]]}],FrameStyle->Directive[Black, 22],PlotStyle->{{Thickness[0.003],Blue},{Thickness[0.003],Darker@Red},{Thickness[0.003],Darker@Darker@Green},{Thickness[0.003],Black}},GridLines->Automatic,PlotRange->{MinMax[\[Epsilon]GeomTabs[ProdChannel][[All,1]]],{Max[0.9Min[Min[\[Epsilon]GeomTabs[ProdChannel][[All,4]]],Min[\[Epsilon]GeomTabs[ProdChannel][[All,3]]]],10^-5],1.1Max[Max[\[Epsilon]GeomTabs[ProdChannel][[All,2]]],Max[\[Epsilon]GeomTabs[ProdChannel][[All,4]]]]}},Joined->True,Frame->True,ImageSize->Large,FrameLabel->{"m [GeV]","Acceptance"},PlotLabel-> Style[Row[{"From ",ProdChannel}], 20, Black],PlotLegends->Placed[{Style[#, 18]&/@{"<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)>","<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>","c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)>","c\[Tau]<\!\(\*SubscriptBox[\(\[Epsilon]\), \(LLP\)]\)\!\(\*SubscriptBox[\(P\), \(decay\)]\)\!\(\*SubscriptBox[\(\[Epsilon]\), \(decay\)]\)>"}},{0.75,0.2}]]*)
(*Style[Row[Evaluate[Table[PlotAcc[prod],{prod,ProductionList}]]],ImageSizeMultipliers->{1,1,1,1}]*)
(*(*Do[FilenameAcceptance[prod]=ToString@StringForm["Acceptance_ALP-fermion_at_``_From_``.dat",Sequence@@{SelectedExperiment,ExportList[prod]}];*)
(*Export[FileNameJoin[{NotebookDirectory[],"Auxiliary data/ALPs with fermion coupling",SelectedExperiment,FilenameAcceptance[prod]}],\[Epsilon]GeomTabs[prod][[All,{1,2,4,5}]],"Table"]*)
(*,{prod,ProductionList}]*)*)
(*AccAveraged[mLLP_,\[Theta]2_,BrhToSS_]=NpotGivenExperiment{Sum[If[mLLPmin[prod]<mLLP<mLLPmax[prod],Evaluate[ProbLLP[mLLP,\[Theta]2,BrhToSS,prod]],0],{prod,ProductionList}],Sum[If[Max[mLLPmin[prod],mmin\[Epsilon]]<mLLP<Min[mLLPmax[prod],mmax\[Epsilon]],Evaluate[ProbLLP[mLLP,\[Theta]2,BrhToSS,prod]*Interpolation[\[Epsilon]GeomTabs[prod][[All,{1,2}]],InterpolationOrder->1][mLLP]],0],{prod,ProductionList}],Sum[If[Max[mLLPmin[prod],mmin\[Epsilon]]<mLLP<Min[mLLPmax[prod],mmax\[Epsilon]],Evaluate[ProbLLP[mLLP,\[Theta]2,BrhToSS,prod]/c\[Tau]acc*Interpolation[\[Epsilon]GeomTabs[prod][[All,{1,4}]],InterpolationOrder->1][mLLP]],0],{prod,ProductionList}],Sum[If[Max[mLLPmin[prod],mmin\[Epsilon]]<mLLP<Min[mLLPmax[prod],mmax\[Epsilon]],Evaluate[ProbLLP[mLLP,\[Theta]2,BrhToSS,prod]/c\[Tau]acc*Interpolation[\[Epsilon]GeomTabs[prod][[All,{1,5}]],InterpolationOrder->1][mLLP]],0],{prod,ProductionList}]};*)
(*Export[FileNameJoin[{directory["Auxiliary-experiment"],"AcceptanceAveraged-"<>LLPdirName<>".m"}],AccAveraged[mLLP,\[Theta]2,BrhToSS],"MX"];*)


(* ::Subsection:: *)
(*Rough estimates of the upper and lower bounds*)


(* ::Subsubsection:: *)
(*Definitions*)


(* ::Input:: *)
(**)
(*BrhToSSreference=0.15;*)
(*Do[*)
(*factorLowerBound=If[StringContainsQ[prod,"mixing"],1/2,1];*)
(*LowerBoundEstimate[mLLP_,prod]=((NpotGivenExperiment*ProbLLP[mLLP,1,BrhToSSreference,prod]*Interpolation[\[Epsilon]GeomTabs[prod][[All,{1,5}]],InterpolationOrder->1][mLLP])/(2.3ldecayLLP[mLLP,1,ELLP] mLLP/Sqrt[ELLP^2-mLLP^2]))^-factorLowerBound;*)
(*UpperBoundEstimate[mLLP_,prod]=(Abs[Re[Evaluate[-(ProductLog[-1,-2.3*b/a]/b)/.{a-> NpotGivenExperiment*ProbLLP[mLLP,1,BrhToSSreference,prod]*Interpolation[\[Epsilon]GeomTabs[prod][[All,{1,3}]],InterpolationOrder->1][mLLP],b->zminExp/ldecayLLP[mLLP,1,ELLPmax[0.5,\[Theta]minExp,prod]]}]]]),{prod,ProductionList}]*)
(*ProdTest=ProductionList[[2]]*)
(*LogLogPlot[Evaluate[{0.3LowerBoundEstimate[mLLP,ProdTest],1.8UpperBoundEstimate[mLLP,ProdTest]}],{mLLP,Max[mLLPmin[ProdTest],mmin\[Epsilon]],Min[mLLPmax[ProdTest],mmax\[Epsilon]]},Frame->True,ImageSize->Large]*)


(* ::Subsection:: *)
(*Number of events - fast*)


(* ::Input:: *)
(*FactorLowerBound=If[MemberQ[{"ANUBIS-shaft-volume-1","ANUBIS-shaft-volume-2","ANUBIS-shaft-volume-3"},SelectedExperiment]==True,0.1,0.3];*)
(*NeventsDiscret[m_,ProdChannel_,BrhToSS_,\[Theta]2list_]:=Module[{NevDiscret(*,NpotTimes\[Chi]val*)},*)
(*If[Max[mmin\[Epsilon],mLLPmin[ProdChannel]]<m<Min[mLLPmax[ProdChannel],mmax\[Epsilon]],*)
(*integrandtab=TableIntegrandDiscret[m,ProdChannel,"True"];*)
(*NpotTimes\[Chi]val[\[Theta]2_]=FactorANUBISceiling*NpotGivenExperiment*ProbLLP[m,\[Theta]2,BrhToSS,ProdChannel];*)
(*{lowerbound,upperbound}={LowerBoundEstimate[m,ProdChannel],UpperBoundEstimate[m,ProdChannel]};*)
(*brvis=BrVis[m];*)
(*NevDiscret[\[Theta]2_]:=If[brvis!=0,If[FactorLowerBound*lowerbound<\[Theta]2<2upperbound,NpotTimes\[Chi]val[\[Theta]2]*brvis*sumcompile[tableprefac[integrandtab,m,c\[Tau]LLP[m,\[Theta]2],1,0.]],0.],0.];*)
(*Table[{m,\[Theta]2list[[i]],NevDiscret[\[Theta]2list[[i]]]},{i,1,Length[\[Theta]2list],1}],Table[{m,\[Theta]2list[[i]],0.},{i,1,Length[\[Theta]2list],1}]]*)
(*]*)


(* ::Input:: *)
(*distrevents[0.5,0.015,10,100*10^-12.,0.5]*)


(* ::Input:: *)
(*0.1/(100*10^-12.)*)


(* ::Input:: *)
(*distrevents[m_,\[Theta]_,ES_,c\[Tau]_,l_]=DoubleDistrLLPint[m,\[Theta],ES,"B-mixing"]Exp[-l/(c\[Tau]*Sqrt[ES^2-m^2]/m)];*)
(*distr[m_,c\[Tau]_]:=ParallelTable[{l,Quiet[NIntegrate[distrevents[m,Exp[th],Exp[es],c\[Tau],l]Exp[th+es],{th,Log[0.013],Log[0.26]},{es,Log[m],Log[5000]},Method->"AdaptiveMonteCarlo"]]},{l,0.1,300,0.3}]*)
(*d1=distr[0.5,500*10^-12*3*10^8];*)
(*d2=distr[2.5,500*10^-12*3*10^8];*)
(*d3=distr[0.5,100*10^-12*3*10^8];*)
(**)


(* ::Input:: *)
(*d3=distr[0.5,100*10^-12*3*10^8];*)


(* ::Input:: *)
(*lmean[data_]:=Block[{},*)
(*lint[x_]=Exp[Interpolation[Log[data],InterpolationOrder->1][Log[x]]];*)
(*NIntegrate[lint[x]*x,{x,data[[All,1]]//Min,data[[All,1]]//Max}]/NIntegrate[lint[x],{x,data[[All,1]]//Min,data[[All,1]]//Max}]*)
(*]*)
(*lmean[d1]*)
(*lmean[d2]*)
(*lmean[d3]*)
(*ListLogLogPlot[{d1,d2,d3},ImageSize->Large,Frame->True,Joined->True]*)
(*lmean1[data_]:=Block[{},*)
(*lint[x_]=Exp[Interpolation[Log[data],InterpolationOrder->1][Log[x]]];*)
(*NIntegrate[lint[x]*x,{x,data[[All,1]]//Min,16.}]/NIntegrate[lint[x],{x,data[[All,1]]//Min,16.}]*)
(*]*)
(*lmean1[d1]*)
(*lmean1[d2]*)
(*lmean1[d3]*)
(**)


(* ::Subsection:: *)
(*Number of events - slow (using built-in Mathematica functions Interpolation, NIntegrate)*)


(* ::Input:: *)
(*(*Differential decay probability 1/ldecayExp[-l/ldecay], where l is expressed in terms of the longitudinal displacement z and polar angle \[Theta] as z/cos\[Theta]*)*)
(*(*Differential decay probability (1/ldecay)Exp[-l/ldecay], where l is expressed in terms of the longitudinal displacement z and polar angle \[Theta] as z/cos\[Theta]*)*)
(*PdecayDensity[mLLP_,coupling_,\[Theta]LLP_,ELLP_,zLLP_]=Exp[-zLLP/(Cos[\[Theta]LLP]*ldecayLLP[mLLP,coupling,ELLP])]/(Abs[Cos[\[Theta]LLP]]*ldecayLLP[mLLP,coupling,ELLP]);*)
(*(*The integrand determining the differential rate for events*)*)
(*Do[IntegrandLLP[mLLP_,coupling_,\[Theta]LLP_,ELLP_,zLLP_,prod]=DoubleDistrLLPint[mLLP,\[Theta]LLP,ELLP,prod]*PdecayDensity[mLLP,coupling,\[Theta]LLP,ELLP,zLLP]*AzimuthalAcceptanceInt[\[Theta]LLP,zLLP]*DecayAcceptanceInt[mLLP,\[Theta]LLP,ELLP,zLLP],{prod,ProductionList}]*)
(*IntegralLLP[mLLP_,coupling_,ProdChannel_]:=NIntegrate[Abs[IntegrandLLP[mLLP,coupling,\[Theta]LLP,Exp[ELLP],zLLP,ProdChannel]Exp[ELLP]],{\[Theta]LLP,\[Theta]minExp,\[Theta]maxExp},{ELLP,Log[mLLP],Log[ELLPmax[mLLP,\[Theta]LLP,ProdChannel]]},{zLLP,zmin\[Theta][\[Theta]LLP],zmax\[Theta][\[Theta]LLP]},Method->"AdaptiveMonteCarlo"]*)
(*(*IntegralLLP[mLLP_,finv_,ProdChannel_]:=NIntegrate[Abs[IntegrandLLP[mLLP,finv,Exp[\[Theta]LLP],Exp[ELLP],Exp[zLLP],ProdChannel]]Exp[\[Theta]LLP+ELLP+zLLP],{\[Theta]LLP,Log[\[Theta]minExp],Log[\[Theta]maxExp]},{ELLP,Log[mLLP],Log[ELLPmax[mLLP,Exp[\[Theta]LLP],ProdChannel]]},{zLLP,Log[zmin\[Theta][Exp[\[Theta]LLP]]],Log[zmax\[Theta][Exp[\[Theta]LLP]]]},Method\[Rule]"AdaptiveMonteCarlo"]*)*)
(*NeventsInt[mLLP_,\[Theta]2_,BrhToSS_,ProdChannel_]:=FactorANUBISceiling*If[mLLPmin[ProdChannel]<=mLLP<=mLLPmax[ProdChannel]&&BrVis[mLLP]!=0,If[FactorLowerBound*LowerBoundEstimate[mLLP,ProdChannel]<\[Theta]2<2UpperBoundEstimate[mLLP,ProdChannel],NpotGivenExperiment*ProbLLP[mLLP,\[Theta]2,BrhToSS,ProdChannel]*IntegralLLP[mLLP,\[Theta]2,ProdChannel],0.],0.]*)
(*IntegralLLPE[mLLP_,\[Theta]2_,ProdChannel_,ELLP_]:=NIntegrate[Abs[IntegrandLLP[mLLP,\[Theta]2,\[Theta]LLP,ELLP,zLLP,ProdChannel]],{\[Theta]LLP,\[Theta]minExp,\[Theta]maxExp},{zLLP,zmin\[Theta][\[Theta]LLP],zmax\[Theta][\[Theta]LLP]},Method->"AdaptiveMonteCarlo"]*)
(*NeventsDiffIntE[mLLP_,\[Theta]2_,BrhToSS_,ProdChannel_,ELLP_]:=If[mLLPmin[ProdChannel]<=mLLP<=mLLPmax[ProdChannel]&&BrVis[mLLP]!=0&&mLLP<ELLP<=ELLPmax[mLLP,\[Theta]minExp,ProdChannel],If[0.1LowerBoundEstimate[mLLP,ProdChannel]<\[Theta]2<2UpperBoundEstimate[mLLP,ProdChannel],NpotGivenExperiment*ProbLLP[mLLP,\[Theta]2,BrhToSS,ProdChannel]*IntegralLLPE[mLLP,\[Theta]2,ProdChannel,ELLP],0.],0.]*)
(*IntegralLLPz[mLLP_,\[Theta]2_,ProdChannel_,zLLP_]:=NIntegrate[Abs[IntegrandLLP[mLLP,\[Theta]2,\[Theta]LLP,Exp[ELLP],zLLP,ProdChannel]]Exp[ELLP],{\[Theta]LLP,\[Theta]minExp,\[Theta]maxExp},{ELLP,Log[mLLP],Log[Evaluate[ELLPmax[mLLP,\[Theta]LLP,ProdChannel]]]},Method->"AdaptiveMonteCarlo"]*)
(*NeventsDiffIntz[mLLP_,\[Theta]2_,BrhToSS_,ProdChannel_,zLLP_]:=If[mLLPmin[ProdChannel]<=mLLP<=mLLPmax[ProdChannel]&&BrVis[mLLP]!=0&&zminExp<=zLLP<=zmaxExp,If[0.1LowerBoundEstimate[mLLP,ProdChannel]<\[Theta]2<2UpperBoundEstimate[mLLP,ProdChannel],NpotGivenExperiment*ProbLLP[mLLP,\[Theta]2,BrhToSS,ProdChannel]*IntegralLLPz[mLLP,\[Theta]2,ProdChannel,zLLP],0.],0.]*)


(* ::Section:: *)
(*Tests*)


(* ::Subsection:: *)
(*Total number of events*)


(* ::Input:: *)
(*(*This is a comparison between the slow and fast integration methods. For the selected mass and production channel, the numbers of events obtained using the methods should agree within 10%*)*)
(*(*If the agreement is worse, there may be a few reasons*)*)
(*(*1) The grid for the fast method is not dense enough. Try to increase the grid density (OutGrid\[Theta]final, OutGridEfinal, OutGridzfinal) to see whether the agreement improves. Sometimes, even a slightly denser grid for e.g. z may lead to a significant improvement in the agrement*)*)
(*(*2) The Monte-Carlo integrator for the slow method fails to evaluate properly; this may happen if the range of the integration over energies is too large compared to the domain where most of the events actually are (off-axis experiments such as MATHUSLA and ANUBIS). Another symptom is that for the given mass and coupling the integral "jumps", i.e., returns values with large error*)*)
(*(*A separate discussion should be made for the couplings belong to the domain c\[Tau] \[Gamma] << Subscript[z, experiment]. The discrepancy may be significant, and the reason is insufficient grid density for the fast integration method. However, due to the exponential suppression of the number of events, this may be compensated by a tiny shift in the coupling, so the discrepancy should be considered as appropriate.*)*)
(*mtest=If[MemberQ[{"LHC","FCC-hh"},FacilityGivenExperiment]==True,5,0.5];*)
(*ProdTest=If[MemberQ[{"LHC","FCC-hh"},FacilityGivenExperiment]==True,"h-quartic","B-mixing"];*)
(*couplinglist=(*{10^-12,3*10^-12,5*10^-12,10^-11,5*10^-11,10^-10,5*10^-10,10^-9,5*10^-9,10^-8,2*10^-8,4*10^-8,10^-7,5*10^-7,6*10^-7,7*10^-7,8*10^-7,9*10^-7,10^-6,2*10^-6}//N*)Table[10^x,{x,-17.,-3.,0.3}];*)
(*dat1=NeventsDiscret[mtest,ProdTest,BrhToSSreference,couplinglist];//AbsoluteTiming*)
(*dat2=ParallelTable[{couplinglist[[i]],c\[Tau]LLP[mtest,couplinglist[[i]]],Quiet[NeventsInt[mtest,couplinglist[[i]],BrhToSSreference,ProdTest]]},{i,1,Length[couplinglist],1}];//AbsoluteTiming*)
(*Join[{{"\!\(\*FractionBox[SubscriptBox[\(m\), \(LLP\)], \(GeV\)]\)","coupling","\!\(\*FractionBox[\(c\[Tau]\), SubscriptBox[\(z\), \(min\)]]\)","\!\(\*SubscriptBox[\(N\), \(events, fast\)]\)","\!\(\*SubscriptBox[\(N\), \(events, slow\)]\)"}},Join[dat1[[All,{1,2}]],{#[[2]]/zminExp}&/@dat2,dat1[[All,{3}]],dat2[[All,{3}]],2]]//TableForm*)


(* ::Subsection:: *)
(*Differential number of events*)


(* ::Input:: *)
(*(*Variable = "Subscript[E, X]","Subscript[z, X]","Subscript[\[Theta], X]". The number belongs to the column in the tabulated data*)*)
(*iVal:=Association[{"\!\(\*SubscriptBox[\(E\), \(X\)]\)" ->2,"\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)"->1,"\!\(\*SubscriptBox[\(z\), \(X\)]\)"->3}]*)
(*Do[*)
(*\[CapitalDelta]xvals["\!\(\*SubscriptBox[\(E\), \(X\)]\)",prod]:=\[CapitalDelta]Evals;*)
(*\[CapitalDelta]xvals["\!\(\*SubscriptBox[\(z\), \(X\)]\)",prod]=\[CapitalDelta]zvals;*)
(*\[CapitalDelta]xvals["\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)",prod]=\[CapitalDelta]\[Theta]vals[prod]*)
(*,{prod,ProductionList}];*)
(*LegendX:=Association[{"\!\(\*SubscriptBox[\(E\), \(X\)]\)"->"\!\(\*SubscriptBox[\(E\), \(X\)]\) [GeV]","\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)"->"\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\) [rad]","\!\(\*SubscriptBox[\(z\), \(X\)]\)"-> "\!\(\*SubscriptBox[\(z\), \(X\)]\) [m]"}]*)
(*LegendY:=Association[{"\!\(\*SubscriptBox[\(E\), \(X\)]\)"->"\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(dE\), \(X\)]\) [\!\(\*SuperscriptBox[\(GeV\), \(-1\)]\)]","\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)"->"\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(d\[Theta]\), \(X\)]\) [\!\(\*SuperscriptBox[\(rad\), \(-1\)]\)]","\!\(\*SubscriptBox[\(z\), \(X\)]\)"-> "\!\(\*SubscriptBox[\(dN\), \(ev\)]\)/\!\(\*SubscriptBox[\(dz\), \(X\)]\) [\!\(\*SuperscriptBox[\(m\), \(-1\)]\)]"}]*)
(*(*Differential number of events*)*)
(*NeventsDifferentialDiscretProd[m_,ProdChannel_,coupling_,BrhToSS_,Variable_]:=Module[{NpotTimes\[Chi]val},*)
(*ival=iVal[Variable];*)
(*NpotTimes\[Chi]val=NpotGivenExperiment*ProbLLP[m,coupling,BrhToSS,ProdChannel];*)
(*tablegrid0=TableIntegrandDiscret[m,ProdChannel,"True"];*)
(*OutGridEfinalTemp=OutGridEnergy[N[m],ProdChannel];*)
(*\[CapitalDelta]Evals=(Rest[10^OutGridEfinalTemp]-Most[10^OutGridEfinalTemp]);*)
(*\[CapitalDelta]xval=\[CapitalDelta]xvals[Variable,ProdChannel];*)
(*c\[Tau]Val=c\[Tau]LLP[m,coupling];*)
(*brvis=BrVis[m];*)
(*ilist=DeleteDuplicates[{ival,1,2,3}];*)
(*tablegrid1=SortBy[{#[[ilist[[1]]]],#[[ilist[[2]]]],#[[ilist[[3]]]],#[[4]]}&/@tableGridPrefac[tablegrid0,m,c\[Tau]Val,0.],{#[[1]],#[[2]],#[[3]]}&];*)
(*GridQuantity=tablegrid1[[All,1]]//DeleteDuplicates;*)
(*LengthPerVariable=Length[tablegrid1]/Length[GridQuantity];*)
(*tab1=NdiffCompiled[tablegrid1,GridQuantity,LengthPerVariable,NpotTimes\[Chi]val*brvis];*)
(*Join[tab1[[All,{1}]],Partition[tab1[[All,2]]*\[CapitalDelta]xval^-1,1],2]*)
(*]*)
(*NeventsDifferentialDiscret[m_,coupling_,BrhToSS_,Variable_]:=Module[{NdiffInt,LegendList,QuantityMinMax,ValueMinMax},*)
(*prodlisttemp={};*)
(*Do[If[Max[mLLPmin[prod],mmin\[Epsilon]]<m<Min[mLLPmax[prod],mmax\[Epsilon]],*)
(*prodlisttemp=Join[prodlisttemp,{prod}];*)
(*NdiffData[prod]=NeventsDifferentialDiscretProd[m,prod,coupling,BrhToSS,Variable];*)
(*XvalminmaxNdiff=Select[NdiffData[prod],#[[2]]>10^-40&][[All,1]]//MinMax;*)
(*NdiffInt[X_,prod]=If[XvalminmaxNdiff[[1]]<X<XvalminmaxNdiff[[2]],Evaluate[10^Interpolation[{Log10[#[[1]]],Log10[#[[2]]+10^-90]}&/@NdiffData[prod],InterpolationOrder->1][Log10[X]]],0]],{prod,ProductionList}];*)
(*NdiffInt[X_,"Total"]=Sum[NdiffInt[X,prod],{prod,prodlisttemp}];*)
(*LegendList=Join[{"Total"},prodlisttemp];*)
(*QuantityMinMax=Flatten[Table[MinMax[NdiffData[prod][[All,1]]],{prod,prodlisttemp}],1]//MinMax;*)
(*ValueMinMax=Max[Max[NdiffData[#][[All,2]]]&/@prodlisttemp];*)
(*{Table[NdiffInt[X,prod],{prod,LegendList}],LegendList,QuantityMinMax,ValueMinMax}*)
(*]*)
(*mvaltest=If[FacilityGivenExperiment=="ESS",0.04,3];*)
(*couplingvaltest=1.4LowerBoundEstimate[mvaltest,"B-mixing"];*)
(*BrhToSStest=0.0;*)
(*quantity="\!\(\*SubscriptBox[\(\[Theta]\), \(X\)]\)";*)
(*{NdiffTab[X_],LegendList,QuantityMinMax,ValueMinMax}=NeventsDifferentialDiscret[mvaltest,couplingvaltest,BrhToSStest,quantity];*)
(*Do[*)
(*prch=LegendList[[i]];*)
(*NdiffInt[X_,prch]=NdiffTab[X][[i]];*)
(*,{i,1,Length[LegendList]}];*)
(*plotdiff=LogLogPlot[Evaluate[Table[NdiffInt[X,prod],{prod,LegendList}]],{X,QuantityMinMax[[1]],QuantityMinMax[[2]]},Frame->True,ImageSize->Large,PlotRange->{All,{10^-5,2ValueMinMax}},PlotStyle->{{Thick,Black},{Thick,Blue},{Thick,Darker@Red},{Thick,Darker@Darker@Green},{Thick,Darker@Cyan},{Thick,Magenta},{Thick,Blue,Dashing[0.02]},{Thick,Darker@Red,Dashing[0.02]},{Thick,Darker@Darker@Green,Dashing[0.02]}},PlotLegends->Placed[Style[#,20]&/@LegendList,Right],FrameLabel->{LegendX[quantity] ,LegendY[quantity]},FrameStyle->Directive[Black, 18],PlotLabel->Style[Row[{SelectedExperiment,". \!\(\*SubscriptBox[\(m\), \(S\)]\) = ",mvaltest," GeV, \!\(\*SuperscriptBox[\(\[Theta]\), \(2\)]\) = ",couplingvaltest//N,", \!\(\*SubscriptBox[\(Br\), \(h -> SS\)]\) = ",BrhToSStest}],14,Black]]*)


(* ::Title::Closed:: *)
(*Exporting tabulated number of events*)


(* ::Chapter::Closed:: *)
(*Definitions*)


(* ::Input:: *)
(*directory["Nevents"]=FileNameJoin[{NotebookDirectory[],"Tabulated Nevents"}];*)
(*directory["Nevents-LLP"]=FileNameJoin[{NotebookDirectory[],"Tabulated Nevents",LLPdirName}];*)
(*directory["Nevents-LLP-experiment"]=FileNameJoin[{NotebookDirectory[],"Tabulated Nevents",LLPdirName,SelectedExperiment}];*)
(*If[!DirectoryQ[directory[#]],CreateDirectory[directory[#]]]&/@{"Nevents","Nevents-LLP","Nevents-LLP-experiment"};*)
(*Print["Filenames with tabulated \!\(\*SubscriptBox[\(N\), \(events\)]\):"]*)
(*Do[FilenameNeventsInt[prod]=ToString@StringForm["Nevents_``_``_at_``_Npot=``.dat",Sequence@@{LLPdirName,prod,SelectedExperiment,NpotGivenExperiment//CForm//ToString}],{prod,ProductionList}]*)
(*FilenameNeventsInt[#]&/@ProductionList*)
(*mRangeExport["Bremsstrahlung-mixing"]={0.021,0.051,0.1,0.13,0.15,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.225,0.23,0.24,0.25,0.26,0.27,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.4,0.45,0.5,0.6,0.7,0.8,0.85,0.9,0.95,0.99,1.02,1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.99,2.1,2.2,2.3,2.4,2.5};*)
(*mRangeExport["K-mixing"]={0.021,0.051,0.1,0.13,0.15,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.23,0.24,0.25,0.26,0.27,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.995(mSM["Kplus"]-mSM["PiPlus"])};*)
(*mRangeExport["B-quartic"]={0.021,0.051,0.1,0.13,0.15,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.23,0.24,0.25,0.26,0.27,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.8,0.85,0.9,0.95,0.99,1.02,1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.99,2.05,2.1,2.2,2.3,2.4,2.5,2.55};*)
(*mRangeExport["B-mixing"]={0.021,0.051,0.1,0.13,0.15,0.17,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.23,0.24,0.25,0.26,0.27,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.8,0.85,0.9,0.95,0.99,1.02,1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.99,2.1,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.1,3.2,3.3,3.5,3.6,3.7,3.8,3.9,4,4.1,4.2,4.3,4.4,4.5,4.6,4.65,4.7,4.75,4.77,4.8,4.83,4.85,4.87,4.9,4.93,4.95,4.97,5,5.03,5.05,5.07,5.1};*)
(*mRangeExport["Bs-quartic"]={0.021,0.051,0.1,0.13,0.15,0.17,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.23,0.25,0.26,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.5,0.55,0.6,0.65,0.7,0.8,0.85,0.9,0.95,0.99,1.02,1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.99,2.05,2.1,2.2,2.3,2.4,2.5,2.55,2.6,2.65};*)
(*mRangeExport["h-quartic"]={0.021,0.051,0.1,0.13,0.15,0.17,0.2,0.205,0.21,0.212,0.214,0.216,0.218,0.22,0.23,0.24,0.25,0.26,0.27,0.275,0.28,0.285,0.289,0.3,0.32,0.35,0.4,0.45,0.5,0.55,0.6,0.65,0.7,0.8,0.85,0.9,0.95,0.99,1.02,1.05,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9,1.99,2.1,2.3,2.4,2.5,2.6,2.7,2.8,2.9,3,3.2,3.3,3.4,3.5,3.6,3.7,3.8,3.9,4,4.1,4.2,4.3,4.4,4.5,4.6,4.7,4.8,4.9,5,5.1,7.,10.,10.6,12.,15.,20.,30.,40.,45.,50.,55.,60.,61.,62.,62.49};*)
(*couplingsRangeExport=Table[10^x,{x,-20,-3,0.02}]//N;*)


(* ::Chapter::Closed:: *)
(*Exporting*)


(* ::Input:: *)
(*BlockExport[ProdChannel_]:=Block[{},*)
(*mlist=mRangeExport[ProdChannel];*)
(*TabFrom=ParallelTable[Quiet[NeventsDiscret[mlist[[k]],ProdChannel,BrhToSSreference,couplingsRangeExport]],{k,1,Length[mlist],1}];*)
(*Export[FileNameJoin[{directory["Nevents-LLP-experiment"],FilenameNeventsInt[ProdChannel]}],Flatten[TabFrom,1],"Table"]*)
(*]*)
(*Monitor[*)
(*Do[*)
(*prod=ProductionList[[j]];*)
(*BlockExport[prod],{j,1,Length[ProductionList],1}],*)
(*Row[{ProgressIndicator[j,{1,Length[ProductionList]}]," Production mode = ",ProductionList[[j]]," (", j,"/",Length[ProductionList],")"}]]//AbsoluteTiming*)
(*If[icounter>Length[SelectedExperimentList],BlockEvaluation["Sensitivity"]]*)


(* ::Title::Closed:: *)
(*Computing sensitivities*)


(* ::Chapter::Closed:: *)
(*Basic definitions*)


(* ::Input:: *)
(*BrhToSSreference=0.15;*)
(*LLPdirName="Scalar";*)
(*directory["Sensitivity"]=FileNameJoin[{NotebookDirectory[],"Sensitivity domains"}];*)
(*directory["Sensitivity-LLP"]=FileNameJoin[{directory["Sensitivity"],LLPdirName}];*)
(*If[!DirectoryQ[directory[#]],CreateDirectory[directory[#]]]&/@{"Sensitivity","Sensitivity-LLP"};*)
(*directory["Nevents-LLP"]=FileNameJoin[{NotebookDirectory[],"Tabulated Nevents",LLPdirName}];*)
(*dropdownDialog[list_,phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],PopupMenu[Dynamic[choice],list],Button["OK",DialogReturn[choice]]}]]*)
(*infoDialog[phrase_]:=DialogInput[{choice=""},Column[{TextCell[phrase],Button["Proceed",DialogReturn[choice]]}]]*)
(*selectionDialog[list_,phrase_]:=DialogInput[{choice={}},Column[{Row[{phrase}],Pane[TogglerBar[Dynamic[choice],list,Appearance->"Vertical"->{Automatic,5}],ImageSize->{Automatic,Automatic},Scrollbars->{False,True}],Button["OK",DialogReturn[choice]]}]]*)
(*ExperimentDirectoriesListNevents=Select[FileNames["*",directory["Nevents-LLP"],1],DirectoryQ];*)
(*Print["List of available experiments with tabulated \!\(\*SubscriptBox[\(N\), \(events\)]\) for " <>LLPdirName<>":"]*)
(*ExperimentsListNevents=Table[FileNameTake[ExperimentDirectoriesListNevents[[i]],-1],{i,1,Length[ExperimentDirectoriesListNevents],1}]//Sort;*)
(*ExperimentsListNevents//TableForm*)
(*If[Length[ExperimentsListNevents]==0,Print["No experiment is available, generate first the acceptance for the given experiment using module 1"],*)
(*SelectedExperimentList=If[Length[ExperimentsListNevents]!=0,selectionDialog[ExperimentsListNevents,"Select the experiments for which the sensitivity will be computed:"]];*)
(*icounter=1;*)
(*BlockEvaluation[tag_]:=Block[{},*)
(*nb=EvaluationNotebook[];*)
(*NotebookFind[nb,tag,All,CellTags];*)
(*SelectionEvaluate[nb]*)
(*];*)
(*Do[*)
(*BlockEvaluation["Sensitivity-computation"];*)
(*,{icounter,1,Length[SelectedExperimentList],1}]*)
(*]*)


(* ::Input:: *)
(**)


(* ::Chapter::Closed:: *)
(*Importing data and interpolations*)


(* ::Section:: *)
(*Selecting experiment*)


(* ::Input:: *)
(*Print["Selected experiment:"]*)
(*GivenExperimentForSensitivityComputation=SelectedExperimentList[[icounter++]]*)
(*CondANUBIS=MemberQ[{"ANUBIS-shaft-volume-1","ANUBIS-shaft-volume-2","ANUBIS-shaft-volume-3"},GivenExperimentForSensitivityComputation];*)
(*If[CondANUBIS==True,infoDialog[Row[{"One of the modules of ANUBIS-shaft is chosen. The full sensitivity includes three modules. The importing will be over all modules, so for all ot the the sensitivity has to be computed"}]]]*)
(*If[CondANUBIS==False,GivenExperimentForSensitivityComputationList={GivenExperimentForSensitivityComputation},GivenExperimentForSensitivityComputationList={"ANUBIS-shaft-volume-1","ANUBIS-shaft-volume-2","ANUBIS-shaft-volume-3"}];*)
(*PathsNeventsSelected={};*)
(*Do[PathsNeventsSelected=Join[PathsNeventsSelected,FileNames["*.dat",FileNameJoin[{directory["Nevents-LLP"],exp}]]],{exp,GivenExperimentForSensitivityComputationList}];*)
(*(*Filenames=Table[{StringReplace[Last@FileNameSplit@files[[i]],{"e+0"\[RuleDelayed]"*^","e-0"\[RuleDelayed]"*^-"}]},{i,1,Length[files],1}];*)*)
(*(*Creating the directory for exporting sensitivity curves*)*)
(*ExperimentFolder=If[CondANUBIS==True,"ANUBIS",GivenExperimentForSensitivityComputation];*)
(*directory["Sensitivity-LLP-exp"]=FileNameJoin[{directory["Sensitivity-LLP"],ExperimentFolder}];*)
(*If[!DirectoryQ[directory["Sensitivity-LLP-exp"]],CreateDirectory[directory["Sensitivity-LLP-exp"]]]*)
(**)


(* ::Section:: *)
(*Importing and interpolations*)


(* ::Input:: *)
(*Print["List of production channels:"]*)
(*FilenamesNevents=Table[Last@FileNameSplit@PathsNeventsSelected[[i]],{i,1,Length[PathsNeventsSelected],1}];*)
(*FilenameParameters[i_]:=StringCases[FilenamesNevents[[i]],"Nevents_Scalar_"~~mother__~~"_at_"~~experiment__~~"_Npot="~~Npot__~~".dat":>{mother,experiment,Npot}][[1]]*)
(*(*______________________________________________________*)*)
(*(*Importing and interpolation*)*)
(*(*______________________________________________________*)*)
(*ProductionInfoList=Table[FilenameParameters[i],{i,1,Length[FilenamesNevents],1}];*)
(*Join[{{"Mother","Experiment","\!\(\*SubscriptBox[\(N\), \(PoT\)]\)"}},ProductionInfoList]//TableForm*)
(*ProductionChannelsList=ProductionInfoList[[All,1]];*)
(*NpotDefault=Interpreter["Number"][ProductionInfoList[[1]][[3]]];*)
(*NeventsTabulated//Clear;*)
(*\[Epsilon]reco[mLLP_]=If[StringContainsQ[GivenExperimentForSensitivityComputation,"LHCb-downstream"]==True,0.4,If[StringContainsQ[GivenExperimentForSensitivityComputation,"CHARM-lepton"]==True,If[mLLP<0.105*2,0.51,0.85],1]];*)
(*Do[*)
(*Module[{prod},*)
(*prod=ProductionChannelsList[[i]];*)
(*(*The condition if one sums the number of events for the same production mode over several experiments*)*)
(*IfprodExists=MemberQ[Keys[DownValues@NeventsTabulated][[All,1,1]],prod];*)
(*NeventsTabulated[prod]=If[!IfprodExists,Import[PathsNeventsSelected[[i]],"Table"],Join[NeventsTabulated[prod][[All,{1,2}]],NeventsTabulated[prod][[All,{3}]]+Import[PathsNeventsSelected[[i]],"Table"][[All,{3}]]]];*)
(*{mminmax[prod],couplingminmax[prod]}=(NeventsTabulated[prod][[All,#]]//MinMax)&/@{1,2};*)
(*NevMax[prod]=NeventsTabulated[prod][[All,3]]//Max;*)
(*NevInt[mLLP_,\[Theta]2_,BrhToSS_,prod]=If[StringContainsQ[prod,"quartic"],BrhToSS/BrhToSSreference,1]*\[Epsilon]reco[mLLP]*If[mminmax[prod][[1]]<= mLLP<=mminmax[prod][[2]]&&couplingminmax[prod][[1]]<=\[Theta]2<=couplingminmax[prod][[2]],Evaluate[10^(Interpolation[{Log10[#[[1]]],Log10[#[[2]]],Log10[#[[3]]+10^-90]}&/@NeventsTabulated[prod],InterpolationOrder->1][Log10[mLLP],Log10[\[Theta]2]])],0];*)
(*]*)
(*,{i,1,Length[ProductionInfoList],1}]*)
(*{mminmaxOverall,couplingminmaxOverall}=MinMax[Table[#[prod],{prod,ProductionChannelsList}]//Flatten]&/@{mminmax,couplingminmax};*)
(*NevMaxOverall=Max[Table[NevMax[prod],{prod,ProductionChannelsList}]];*)
(*NevIntOverall[mLLP_,\[Theta]2_,BrhToSS_]=Sum[NevInt[mLLP,\[Theta]2,BrhToSS,prod],{prod,ProductionChannelsList}];*)
(*pt[mLLP_,BrhToSS_]:=LogLogPlot[Evaluate[Table[NevInt[mLLP,y,BrhToSS,prod],{prod,ProductionChannelsList}]],{y,couplingminmaxOverall[[1]],couplingminmaxOverall[[2]]},PlotLegends->Placed[Style[#,15]&/@ProductionChannelsList,Right],PlotRange->{couplingminmaxOverall,{10^-2,NevMaxOverall}},Frame->True,ImageSize->Large,FrameLabel->{"\!\(\*SuperscriptBox[\(\[Theta]\), \(2\)]\)" , "\!\(\*SubscriptBox[\(N\), \(events\)]\)[\!\(\*SubscriptBox[\(m\), \(S\)]\),\!\(\*SuperscriptBox[\(\[Theta]\), \(2\)]\)]"},FrameStyle->Directive[Black, 23],PlotStyle->{{Thick,Blue},{Thick,Darker@Red},{Thick,Darker@Darker@Green},{Thick,Black},{Thick,Blue,Dashing[0.02]},{Thick,Darker@Red,Dashing[0.02]},{Thick,Darker@Darker@Green,Dashing[0.02]},{Thick,Black,Dashing[0.02]}},PlotLabel->Style[Row[{GivenExperimentForSensitivityComputation,". \!\(\*SubscriptBox[\(m\), \(S\)]\) = ",mLLP, " GeV, Br(h->SS) = ",BrhToSS}],20,Black]]*)
(*pt[0.6,0.01]*)


(* ::Chapter::Closed:: *)
(*Sensitivity computation*)


(* ::Section:: *)
(*Density plot for number of events*)


(* ::Input:: *)
(*BrhToSSval=0.01;*)
(*(*If the plot is not as smooth as it is desired, increase the value of PlotPoints option*)*)
(*plot=DensityPlot[Evaluate[Log10[NevIntOverall[mLLP,\[Theta]2,BrhToSSval]]],{mLLP,mminmaxOverall[[1]],mminmaxOverall[[2]]},{\[Theta]2,couplingminmaxOverall[[1]],couplingminmaxOverall[[2]]},ScalingFunctions->{"Log","Log"},AspectRatio->0.78,PlotRange->{All,All,{Log10[2.3],Log10[NevMaxOverall]}},ImageSize->Large,FrameLabel->{"\!\(\*SubscriptBox[\(m\), \(S\)]\) [GeV]","\!\(\*SuperscriptBox[\(\[Theta]\), \(2\)]\)"}, Frame-> True, FrameStyle->Directive[Black, 25],PlotPoints->100,PlotLegends->Placed[BarLegend[{Automatic,{Log10[2.3],Log10[NevMaxOverall]}},LegendMarkerSize->340,LegendLabel->Placed["\!\(\*SubscriptBox[\(Log\), \(10\)]\)[\!\(\*SubscriptBox[\(N\), \(ev\)]\)]",Bottom],LabelStyle->{FontSize->22},Method->{FrameStyle->Black,AxesStyle->None,TicksStyle->Black}],Right],PlotLabel->Style[Row[{ExperimentFolder,", Br(h\[Rule]SS) = ",BrhToSSval}],20,Black](*,FrameTicks->{{Automatic,Automatic},{TicksPlotx,None}}*)]*)
(*(*Exporting. "AllowRasterization"->False option reduces the size of the output. Without this option, the file may be very large, depending on the value of PlotPoints*)*)
(*(*Export[FileNameJoin[{NotebookDirectory[],"NeventsDensityPlotExample.pdf"}],plot,"AllowRasterization"->False]*)*)


(* ::Section:: *)
(*Importing excluded region*)


(* ::Input:: *)
(*importformat["txt"]=importformat["dat"]="Table";*)
(*importformat["m"]=importformat["mx"]="MX";*)
(*importformat["xls"]="XLS";*)
(*dir=FileNameJoin[{NotebookDirectory[],"contours",LLPdirName}];*)
(*If[DirectoryQ[dir],*)
(*filenames=FileNames[LLPdirName<>"-excluded*",dir,Infinity];*)
(*ExcludedRegions[LLPdirName]=Import[#,importformat[FileExtension[#]]]&/@FileNames[LLPdirName<>"-excluded*",dir,Infinity];*)
(*];*)
(*If[!DirectoryQ[dir],*)
(*ExcludedRegions[LLPdirName]={{{10.,10.}}};*)
(*]*)


(* ::Section:: *)
(*Sensitivity*)


(* ::Input:: *)
(*SensitivityBlock[Nev_,BrhToSSval_,Npot_,SelectedProduction_]:=Block[{},*)
(*NevTot[mLLP_,\[Theta]2_]=Sum[NevInt[mLLP,\[Theta]2,BrhToSSval,prod],{prod,SelectedProduction}];*)
(*RegSens=RegionPlot[Npot/NpotDefault NevTot[10^mLLP,10^\[Theta]2]>=Nev,{mLLP,Log10[mminmaxOverall[[1]]],Log10[mminmaxOverall[[2]]]},{\[Theta]2,Log10[couplingminmaxOverall[[1]]],Log10[couplingminmaxOverall[[2]]]},PlotPoints->100];*)
(*(*Sens={10^#[[1]],10^#[[2]]}&/@Partition[Flatten[Cases[Normal@RegSens,Line[x_]\[RuleDelayed]x,Infinity]],2];*)*)
(*SensTemp=Cases[Normal@RegSens,Line[x_]:>x,Infinity];*)
(*Sens=Table[{10^#[[1]],10^#[[2]]}&/@SensTemp[[i]],{i,1,Length[SensTemp],1}];*)
(*Export[FileNameJoin[{directory["Sensitivity-LLP-exp"],ToString@StringForm["Sensitivity_``_at_``_BrhToSS=``_Nev=``_Npot=``.xls",Sequence@@{LLPdirName,ExperimentFolder,BrhToSSval//ToString,Nev//ToString,Npot//CForm//ToString}]}],Sens];*)
(*Sens*)
(*]*)
(*productionlist=Join[{"All"},ProductionChannelsList];*)
(*DynamicModule[{input0=0.,input1=NpotDefault,input2=2.3,choice={"All"},list,phrase},*)
(*DialogInput[Column[{Style[ExperimentFolder,Bold],TextCell["Enter Br(h->SS):"],InputField[Dynamic[input0],Expression],TextCell["Enter the number of proton collisions:"],InputField[Dynamic[input1],Expression],TextCell["Enter the value of N_ev,min for which the sensitivity will be computed:"],InputField[Dynamic[input2],Expression],Row[{"Select the production channels to be used for the sensitivity calculation:"}],Pane[TogglerBar[Dynamic[choice],productionlist,Appearance->"Vertical"->{Automatic,1}],ImageSize->{Automatic,Automatic},Scrollbars->{False,True}],Button["Submit",DialogReturn[{BrhToSSval,NpotVal,NevMinVal,SelectedProduction}={input0,input1,input2,choice}//N],ImageSize->Automatic]}]]];*)
(*If[MemberQ[SelectedProduction,"All"],SelectedProduction=ProductionChannelsList;]*)
(*{{"Br(h->SS)","\!\(\*SubscriptBox[\(N\), \(PoT\)]\) for computation","\!\(\*SubscriptBox[\(N\), \(ev, min\)]\)","Selected production modes"},{BrhToSSval,NpotVal,NevMinVal,SelectedProduction}}//TableForm*)
(*sens=SensitivityBlock[NevMinVal,BrhToSSval,NpotVal,SelectedProduction];*)
(*Show[ListLogLogPlot[Cases[ExcludedRegions[LLPdirName],_?MatrixQ,All],Joined->{True,True,True,True},Frame-> True,FrameLabel->{"\!\(\*SubscriptBox[\(m\), \(S\)]\) [GeV]" , "\!\(\*SuperscriptBox[\(\[Theta]\), \(2\)]\)"},FrameStyle->Directive[Black, 23],PlotStyle->{{Thick,Gray}},Filling->{1->{True,Directive[Gray,Opacity[0.3]]},2->{True,Directive[Gray,Opacity[0.3]]},3->{True,Directive[Gray,Opacity[0.3]]},4->{True,Directive[Gray,Opacity[0.3]]}},ImageSize->Large,PlotRange->{{1.01mminmaxOverall[[1]],1.1mminmaxOverall[[2]]},{0.3*Min[Flatten[Sens]],couplingminmaxOverall[[2]]}},PlotLabel->Style[Row[{"\!\(\*SubscriptBox[\(N\), \(events\)]\) \[GreaterEqual] ",NevMinVal}],18,Black]],*)
(*ListLogLogPlot[Cases[sens,_?MatrixQ,All],Joined->{True,True,True,True},PlotStyle->Flatten[{ConstantArray[{Thick,Blue},If[MatrixQ[sens],1,Length@sens]]},1],ImageSize->Large,PlotRange->{{1.01mminmaxOverall[[1]],1.1mminmaxOverall[[2]]},{0.3*Min[Flatten[Sens]],0.99couplingminmaxOverall[[2]]}},PlotLabel->Style[Row[{"\!\(\*SubscriptBox[\(N\), \(events\)]\) \[GreaterEqual] ",NevMinVal}],18,Black],PlotLegends->Placed[Style[#,15]&/@{ExperimentFolder},{0.2,0.15}]],Graphics[{Text[Style["Excluded",24,Black],Scaled[{0.7,0.95}]]}]]*)


(* ::Title::Closed:: *)
(*Deleting generated cells*)


(* ::Input:: *)
(*FrontEndTokenExecute["DeleteGeneratedCells"];*)
(*FrontEndTokenExecute["SelectAll"];*)
(*FrontEndTokenExecute["SelectionCloseAllGroups"];*)
